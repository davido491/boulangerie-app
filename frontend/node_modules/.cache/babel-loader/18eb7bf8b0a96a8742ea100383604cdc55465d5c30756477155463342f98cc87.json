{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport axios from 'axios';\nconst useProductList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [nameFilter, setNameFilter] = useState('');\n  const [maxPriceFilter, setMaxPriceFilter] = useState('');\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [deletingProductId, setDeletingProductId] = useState(null);\n  const fetchProducts = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get('http://localhost:50787/products');\n      setProducts(response.data);\n    } catch (err) {\n      setError('Erreur lors du chargement des produits');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchProducts();\n  }, [fetchProducts]);\n  const handleProductAdded = useCallback(newProduct => {\n    setProducts(prevProducts => [...prevProducts, newProduct]);\n  }, []);\n  const handleDeleteProduct = useCallback(async id => {\n    setDeletingProductId(id);\n    try {\n      await axios.delete(`http://localhost:50787/products/${id}`);\n      setProducts(prevProducts => prevProducts.filter(product => product.id !== id));\n    } catch (err) {\n      setError('Erreur lors de la suppression du produit');\n    } finally {\n      setDeletingProductId(null);\n    }\n  }, []);\n  const handleUpdateQuantity = useCallback(async (id, newQuantity) => {\n    try {\n      await axios.patch(`http://localhost:50787/products/${id}`, {\n        stock: newQuantity\n      });\n      fetchProducts(); // Rafraîchir la liste des produits après la mise à jour\n    } catch (error) {\n      setError('Erreur lors de la mise à jour de la quantité');\n      console.error('Erreur:', error);\n    }\n  }, [fetchProducts]);\n  const handleMaxPriceChange = useCallback(e => {\n    setMaxPriceFilter(e.target.value);\n  }, []);\n  const filteredAndSortedProducts = useMemo(() => {\n    return products.filter(product => product.name.toLowerCase().includes(nameFilter.toLowerCase()) && (maxPriceFilter === '' || product.price <= parseFloat(maxPriceFilter))).sort((a, b) => sortOrder === 'asc' ? a.price - b.price : b.price - a.price);\n  }, [products, nameFilter, maxPriceFilter, sortOrder]);\n  return {\n    loading,\n    error,\n    nameFilter,\n    maxPriceFilter,\n    sortOrder,\n    filteredAndSortedProducts,\n    deletingProductId,\n    setNameFilter,\n    handleMaxPriceChange,\n    setSortOrder,\n    handleProductAdded,\n    handleDeleteProduct,\n    handleUpdateQuantity,\n    fetchProducts\n  };\n};\n_s(useProductList, \"ASiv8SpsSskEjVbIly4D+Gt20ds=\");\nexport default useProductList;","map":{"version":3,"names":["useState","useEffect","useCallback","useMemo","axios","useProductList","_s","products","setProducts","loading","setLoading","error","setError","nameFilter","setNameFilter","maxPriceFilter","setMaxPriceFilter","sortOrder","setSortOrder","deletingProductId","setDeletingProductId","fetchProducts","response","get","data","err","handleProductAdded","newProduct","prevProducts","handleDeleteProduct","id","delete","filter","product","handleUpdateQuantity","newQuantity","patch","stock","console","handleMaxPriceChange","e","target","value","filteredAndSortedProducts","name","toLowerCase","includes","price","parseFloat","sort","a","b"],"sources":["C:/Users/sebas/boulangerie-app/frontend/src/hooks/useProductList.js"],"sourcesContent":["import { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useProductList = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [nameFilter, setNameFilter] = useState('');\r\n  const [maxPriceFilter, setMaxPriceFilter] = useState('');\r\n  const [sortOrder, setSortOrder] = useState('asc');\r\n  const [deletingProductId, setDeletingProductId] = useState(null);\r\n\r\n  const fetchProducts = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get('http://localhost:50787/products');\r\n      setProducts(response.data);\r\n    } catch (err) {\r\n      setError('Erreur lors du chargement des produits');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, [fetchProducts]);\r\n\r\n  const handleProductAdded = useCallback((newProduct) => {\r\n    setProducts((prevProducts) => [...prevProducts, newProduct]);\r\n  }, []);\r\n\r\n  const handleDeleteProduct = useCallback(async (id) => {\r\n    setDeletingProductId(id);\r\n    try {\r\n      await axios.delete(`http://localhost:50787/products/${id}`);\r\n      setProducts((prevProducts) => prevProducts.filter(product => product.id !== id));\r\n    } catch (err) {\r\n      setError('Erreur lors de la suppression du produit');\r\n    } finally {\r\n      setDeletingProductId(null);\r\n    }\r\n  }, []);\r\n\r\n  const handleUpdateQuantity = useCallback(async (id, newQuantity) => {\r\n    try {\r\n      await axios.patch(`http://localhost:50787/products/${id}`, { stock: newQuantity });\r\n      fetchProducts(); // Rafraîchir la liste des produits après la mise à jour\r\n    } catch (error) {\r\n      setError('Erreur lors de la mise à jour de la quantité');\r\n      console.error('Erreur:', error);\r\n    }\r\n  }, [fetchProducts]);\r\n\r\n  const handleMaxPriceChange = useCallback((e) => {\r\n    setMaxPriceFilter(e.target.value);\r\n  }, []);\r\n\r\n  const filteredAndSortedProducts = useMemo(() => {\r\n    return products\r\n      .filter(product => product.name.toLowerCase().includes(nameFilter.toLowerCase()) && \r\n                         (maxPriceFilter === '' || product.price <= parseFloat(maxPriceFilter)))\r\n      .sort((a, b) => (sortOrder === 'asc' ? a.price - b.price : b.price - a.price));\r\n  }, [products, nameFilter, maxPriceFilter, sortOrder]);\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    nameFilter,\r\n    maxPriceFilter,\r\n    sortOrder,\r\n    filteredAndSortedProducts,\r\n    deletingProductId,\r\n    setNameFilter,\r\n    handleMaxPriceChange,\r\n    setSortOrder,\r\n    handleProductAdded,\r\n    handleDeleteProduct,\r\n    handleUpdateQuantity,\r\n    fetchProducts\r\n  };\r\n};\r\n\r\nexport default useProductList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}