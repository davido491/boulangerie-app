{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sebas\\\\boulangerie-app\\\\frontend\\\\src\\\\components\\\\ProductForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport axios from 'axios';\nimport '../styles/ProductForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductForm({\n  onProductAdded,\n  onStockUpdated\n}) {\n  _s();\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [stock, setStock] = useState('');\n  const [costPrice, setCostPrice] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [stockQuantity, setStockQuantity] = useState(0);\n  const resetForm = useCallback(() => {\n    setName('');\n    setPrice('');\n    setStock('');\n    setCostPrice('');\n    setError('');\n    setSuccess(false);\n  }, []);\n  const handleSubmit = useCallback(async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess(false);\n    setIsLoading(true);\n    const trimmedName = name.trim();\n    const parsedPrice = parseFloat(price);\n    const parsedStock = parseInt(stock, 10);\n    const parsedCostPrice = parseFloat(costPrice);\n    if (!trimmedName || isNaN(parsedPrice) || isNaN(parsedStock) || parsedPrice < 0 || parsedStock < 0 || isNaN(parsedCostPrice) || parsedCostPrice < 0) {\n      setError('Veuillez remplir tous les champs correctement. Le prix, le stock et le prix de revient doivent être des nombres positifs.');\n      setIsLoading(false);\n      return;\n    }\n    const productData = {\n      name: trimmedName,\n      price: parsedPrice,\n      stock: parsedStock,\n      costPrice: parsedCostPrice\n    };\n    console.log('URL de l\\'API:', 'http://localhost:5000/products');\n    console.log('Données du produit envoyées:', productData);\n    try {\n      const response = await axios.post('http://localhost:50687/products', productData);\n      console.log('Réponse du serveur:', response.data);\n      onProductAdded(response.data);\n      setSuccess(true);\n      resetForm();\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Erreur lors de l\\'ajout du produit:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setError(`Erreur lors de l'ajout du produit: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [name, price, stock, costPrice, onProductAdded, resetForm]);\n  const handleStockUpdate = useCallback(async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess(false);\n    setIsLoading(true);\n    const productId = e.target.dataset.productId;\n    const newStockQuantity = parseInt(e.target.value, 10);\n    if (isNaN(newStockQuantity) || newStockQuantity < 0) {\n      setError('Veuillez entrer une quantité de stock valide.');\n      setIsLoading(false);\n      return;\n    }\n    try {\n      const response = await axios.patch(`http://localhost:50687/products/${productId}/stock`, {\n        stock: newStockQuantity\n      });\n      console.log('Réponse du serveur:', response.data);\n      onStockUpdated(response.data);\n      setSuccess(true);\n    } catch (error) {\n      var _error$response3, _error$response4, _error$response4$data;\n      console.error('Erreur lors de la mise à jour du stock:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      setError(`Erreur lors de la mise à jour du stock: ${((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [onStockUpdated]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"product-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ajouter un Produit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: \"Le produit a \\xE9t\\xE9 ajout\\xE9 avec succ\\xE8s !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Nom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true,\n        className: name.trim() ? '' : 'invalid'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: \"Prix (\\u20AC)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"price\",\n        type: \"number\",\n        value: price,\n        onChange: e => setPrice(e.target.value),\n        min: \"0\",\n        step: \"0.01\",\n        required: true,\n        className: !isNaN(parseFloat(price)) && parseFloat(price) >= 0 ? '' : 'invalid'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"stock\",\n        children: \"Stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"stock\",\n        type: \"number\",\n        value: stock,\n        onChange: e => setStock(e.target.value),\n        min: \"0\",\n        required: true,\n        className: !isNaN(parseInt(stock, 10)) && parseInt(stock, 10) >= 0 ? '' : 'invalid'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"costPrice\",\n        children: \"Prix de revient (\\u20AC)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"costPrice\",\n        type: \"number\",\n        value: costPrice,\n        onChange: e => setCostPrice(e.target.value),\n        min: \"0\",\n        step: \"0.01\",\n        required: true,\n        className: !isNaN(parseFloat(costPrice)) && parseFloat(costPrice) >= 0 ? '' : 'invalid'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: isLoading,\n      children: isLoading ? 'Ajout en cours...' : 'Ajouter'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Consulter et modifier le stock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: stockQuantity,\n              onChange: e => setStockQuantity(e.target.value),\n              min: \"0\",\n              required: true,\n              className: !isNaN(parseInt(stockQuantity, 10)) && parseInt(stockQuantity, 10) >= 0 ? '' : 'invalid'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleStockUpdate,\n              \"data-product-id\": product.id,\n              children: \"Mettre \\xE0 jour le stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductForm, \"tZn8UvVUePUTLCGt0FBt8WTjrJc=\");\n_c = ProductForm;\nexport default ProductForm;\nvar _c;\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"names":["React","useState","useCallback","axios","jsxDEV","_jsxDEV","ProductForm","onProductAdded","onStockUpdated","_s","name","setName","price","setPrice","stock","setStock","costPrice","setCostPrice","error","setError","success","setSuccess","isLoading","setIsLoading","stockQuantity","setStockQuantity","resetForm","handleSubmit","e","preventDefault","trimmedName","trim","parsedPrice","parseFloat","parsedStock","parseInt","parsedCostPrice","isNaN","productData","console","log","response","post","data","_error$response","_error$response2","_error$response2$data","message","handleStockUpdate","productId","target","dataset","newStockQuantity","value","patch","_error$response3","_error$response4","_error$response4$data","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","onChange","required","min","step","disabled","products","map","product","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sebas/boulangerie-app/frontend/src/components/ProductForm.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/ProductForm.css';\r\n\r\nfunction ProductForm({ onProductAdded, onStockUpdated }) {\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [stock, setStock] = useState('');\r\n  const [costPrice, setCostPrice] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [stockQuantity, setStockQuantity] = useState(0);\r\n\r\n  const resetForm = useCallback(() => {\r\n    setName('');\r\n    setPrice('');\r\n    setStock('');\r\n    setCostPrice('');\r\n    setError('');\r\n    setSuccess(false);\r\n  }, []);\r\n\r\n  const handleSubmit = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess(false);\r\n    setIsLoading(true);\r\n\r\n    const trimmedName = name.trim();\r\n    const parsedPrice = parseFloat(price);\r\n    const parsedStock = parseInt(stock, 10);\r\n    const parsedCostPrice = parseFloat(costPrice);\r\n\r\n    if (!trimmedName || isNaN(parsedPrice) || isNaN(parsedStock) || parsedPrice < 0 || parsedStock < 0 || isNaN(parsedCostPrice) || parsedCostPrice < 0) {\r\n      setError('Veuillez remplir tous les champs correctement. Le prix, le stock et le prix de revient doivent être des nombres positifs.');\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    const productData = {\r\n      name: trimmedName,\r\n      price: parsedPrice,\r\n      stock: parsedStock,\r\n      costPrice: parsedCostPrice,\r\n    };\r\n\r\n    console.log('URL de l\\'API:', 'http://localhost:5000/products');\r\n    console.log('Données du produit envoyées:', productData);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:50687/products', productData);\r\n\r\n      console.log('Réponse du serveur:', response.data);\r\n      onProductAdded(response.data);\r\n      setSuccess(true);\r\n      resetForm();\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'ajout du produit:', error.response?.data || error.message);\r\n      setError(`Erreur lors de l'ajout du produit: ${error.response?.data?.message || error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [name, price, stock, costPrice, onProductAdded, resetForm]);\r\n\r\n  const handleStockUpdate = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess(false);\r\n    setIsLoading(true);\r\n\r\n    const productId = e.target.dataset.productId;\r\n    const newStockQuantity = parseInt(e.target.value, 10);\r\n\r\n    if (isNaN(newStockQuantity) || newStockQuantity < 0) {\r\n      setError('Veuillez entrer une quantité de stock valide.');\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.patch(`http://localhost:50687/products/${productId}/stock`, { stock: newStockQuantity });\r\n\r\n      console.log('Réponse du serveur:', response.data);\r\n      onStockUpdated(response.data);\r\n      setSuccess(true);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la mise à jour du stock:', error.response?.data || error.message);\r\n      setError(`Erreur lors de la mise à jour du stock: ${error.response?.data?.message || error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [onStockUpdated]);\r\n\r\n  return (\r\n    <form className=\"product-form\" onSubmit={handleSubmit}>\r\n      <h2>Ajouter un Produit</h2>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {success && <p className=\"success-message\">Le produit a été ajouté avec succès !</p>}\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"name\">Nom</label>\r\n        <input\r\n          id=\"name\"\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n          className={name.trim() ? '' : 'invalid'}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"price\">Prix (€)</label>\r\n        <input\r\n          id=\"price\"\r\n          type=\"number\"\r\n          value={price}\r\n          onChange={(e) => setPrice(e.target.value)}\r\n          min=\"0\"\r\n          step=\"0.01\"\r\n          required\r\n          className={!isNaN(parseFloat(price)) && parseFloat(price) >= 0 ? '' : 'invalid'}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"stock\">Stock</label>\r\n        <input\r\n          id=\"stock\"\r\n          type=\"number\"\r\n          value={stock}\r\n          onChange={(e) => setStock(e.target.value)}\r\n          min=\"0\"\r\n          required\r\n          className={!isNaN(parseInt(stock, 10)) && parseInt(stock, 10) >= 0 ? '' : 'invalid'}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"costPrice\">Prix de revient (€)</label>\r\n        <input\r\n          id=\"costPrice\"\r\n          type=\"number\"\r\n          value={costPrice}\r\n          onChange={(e) => setCostPrice(e.target.value)}\r\n          min=\"0\"\r\n          step=\"0.01\"\r\n          required\r\n          className={!isNaN(parseFloat(costPrice)) && parseFloat(costPrice) >= 0 ? '' : 'invalid'}\r\n        />\r\n      </div>\r\n      <button type=\"submit\" disabled={isLoading}>\r\n        {isLoading ? 'Ajout en cours...' : 'Ajouter'}\r\n      </button>\r\n\r\n      <h2>Consulter et modifier le stock</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Nom</th>\r\n            <th>Stock</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products.map((product) => (\r\n            <tr key={product.id}>\r\n              <td>{product.name}</td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  value={stockQuantity}\r\n                  onChange={(e) => setStockQuantity(e.target.value)}\r\n                  min=\"0\"\r\n                  required\r\n                  className={!isNaN(parseInt(stockQuantity, 10)) && parseInt(stockQuantity, 10) >= 0 ? '' : 'invalid'}\r\n                />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleStockUpdate}\r\n                  data-product-id={product.id}\r\n                >\r\n                  Mettre à jour le stock\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ProductForm;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}