{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.brain = {}));\n})(this, function (exports) {\n  'use strict';\n\n  /**\r\n   * Relu Activation, aka Rectified Linear Unit Activation\r\n   * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\r\n   */\n  function activate$3(weight) {\n    return Math.max(0, weight);\n  }\n  /**\r\n   * Relu derivative\r\n   */\n  function measure$3(weight, delta) {\n    if (weight <= 0) {\n      return 0;\n    }\n    return delta;\n  }\n  var relu$2 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    activate: activate$3,\n    measure: measure$3\n  });\n\n  /**\r\n   * sigmoid activation\r\n   */\n  function activate$2(value) {\n    return 1 / (1 + Math.exp(-value));\n  }\n  /**\r\n   * sigmoid derivative\r\n   */\n  function measure$2(weight, error) {\n    return weight * (1 - weight) * error;\n  }\n  var sigmoid$2 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    activate: activate$2,\n    measure: measure$2\n  });\n\n  /**\r\n   * Hyperbolic tan\r\n   */\n  function activate$1(weight) {\n    return Math.tanh(weight);\n  }\n  /**\r\n   * @description grad for z = tanh(x) is (1 - z^2)\r\n   */\n  function measure$1(weight, error) {\n    return (1 - weight * weight) * error;\n  }\n  var tanh$2 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    activate: activate$1,\n    measure: measure$1\n  });\n\n  /**\r\n   * Leaky Relu Activation, aka Leaky Rectified Linear Unit Activation\r\n   * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\r\n   */\n  function activate(weight) {\n    return weight > 0 ? weight : 0.01 * weight;\n  }\n  /**\r\n   * Leaky Relu derivative\r\n   */\n  function measure(weight, error) {\n    return weight > 0 ? error : 0.01 * error;\n  }\n  var leakyRelu$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    activate: activate,\n    measure: measure\n  });\n  var index$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    relu: relu$2,\n    sigmoid: sigmoid$2,\n    tanh: tanh$2,\n    leakyRelu: leakyRelu$1\n  });\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  function createCommonjsModule(fn, basedir, module) {\n    return module = {\n      path: basedir,\n      exports: {},\n      require: function (path, base) {\n        return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n      }\n    }, fn(module, module.exports), module.exports;\n  }\n  function commonjsRequire() {\n    throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n  }\n  var gpuBrowser = createCommonjsModule(function (module, exports) {\n    /**\n     * gpu.js\n     * http://gpu.rocks/\n     *\n     * GPU Accelerated JavaScript\n     *\n     * @version 2.16.0\n     * @date Wed Nov 16 2022 15:48:37 GMT-0500 (Eastern Standard Time)\n     *\n     * @license MIT\n     * The MIT License\n     *\n     * Copyright (c) 2022 gpu.js Team\n     */\n    (function (f) {\n      {\n        module.exports = f();\n      }\n    })(function () {\n      return function () {\n        function r(e, n, t) {\n          function o(i, f) {\n            if (!n[i]) {\n              if (!e[i]) {\n                var c = \"function\" == typeof commonjsRequire && commonjsRequire;\n                if (!f && c) return c(i, !0);\n                if (u) return u(i, !0);\n                var a = new Error(\"Cannot find module '\" + i + \"'\");\n                throw a.code = \"MODULE_NOT_FOUND\", a;\n              }\n              var p = n[i] = {\n                exports: {}\n              };\n              e[i][0].call(p.exports, function (r) {\n                var n = e[i][1][r];\n                return o(n || r);\n              }, p, p.exports, r, e, n, t);\n            }\n            return n[i].exports;\n          }\n          for (var u = \"function\" == typeof commonjsRequire && commonjsRequire, i = 0; i < t.length; i++) o(t[i]);\n          return o;\n        }\n        return r;\n      }()({\n        1: [function (require, module, exports) {\n          (function (global, factory) {\n            typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : (global = global || self, factory(global.acorn = {}));\n          })(this, function (exports) {\n            var reservedWords = {\n              3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n              5: \"class enum extends super const export import\",\n              6: \"enum\",\n              strict: \"implements interface let package private protected public static yield\",\n              strictBind: \"eval arguments\"\n            };\n            var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n            var keywords = {\n              5: ecma5AndLessKeywords,\n              \"5module\": ecma5AndLessKeywords + \" export import\",\n              6: ecma5AndLessKeywords + \" const class extends export import super\"\n            };\n            var keywordRelationalOperator = /^in(stanceof)?$/;\n            var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n            var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n            var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n            var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n            nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n            var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 477, 28, 11, 0, 9, 21, 155, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 12, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 0, 33, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 0, 161, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 270, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 754, 9486, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541];\n            var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 525, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 4, 9, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 232, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 792487, 239];\n            function isInAstralSet(code, set) {\n              var pos = 0x10000;\n              for (var i = 0; i < set.length; i += 2) {\n                pos += set[i];\n                if (pos > code) {\n                  return false;\n                }\n                pos += set[i + 1];\n                if (pos >= code) {\n                  return true;\n                }\n              }\n            }\n            function isIdentifierStart(code, astral) {\n              if (code < 65) {\n                return code === 36;\n              }\n              if (code < 91) {\n                return true;\n              }\n              if (code < 97) {\n                return code === 95;\n              }\n              if (code < 123) {\n                return true;\n              }\n              if (code <= 0xffff) {\n                return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n              }\n              if (astral === false) {\n                return false;\n              }\n              return isInAstralSet(code, astralIdentifierStartCodes);\n            }\n            function isIdentifierChar(code, astral) {\n              if (code < 48) {\n                return code === 36;\n              }\n              if (code < 58) {\n                return true;\n              }\n              if (code < 65) {\n                return false;\n              }\n              if (code < 91) {\n                return true;\n              }\n              if (code < 97) {\n                return code === 95;\n              }\n              if (code < 123) {\n                return true;\n              }\n              if (code <= 0xffff) {\n                return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n              }\n              if (astral === false) {\n                return false;\n              }\n              return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n            }\n            var TokenType = function TokenType(label, conf) {\n              if (conf === void 0) conf = {};\n              this.label = label;\n              this.keyword = conf.keyword;\n              this.beforeExpr = !!conf.beforeExpr;\n              this.startsExpr = !!conf.startsExpr;\n              this.isLoop = !!conf.isLoop;\n              this.isAssign = !!conf.isAssign;\n              this.prefix = !!conf.prefix;\n              this.postfix = !!conf.postfix;\n              this.binop = conf.binop || null;\n              this.updateContext = null;\n            };\n            function binop(name, prec) {\n              return new TokenType(name, {\n                beforeExpr: true,\n                binop: prec\n              });\n            }\n            var beforeExpr = {\n                beforeExpr: true\n              },\n              startsExpr = {\n                startsExpr: true\n              };\n            var keywords$1 = {};\n            function kw(name, options) {\n              if (options === void 0) options = {};\n              options.keyword = name;\n              return keywords$1[name] = new TokenType(name, options);\n            }\n            var types = {\n              num: new TokenType(\"num\", startsExpr),\n              regexp: new TokenType(\"regexp\", startsExpr),\n              string: new TokenType(\"string\", startsExpr),\n              name: new TokenType(\"name\", startsExpr),\n              eof: new TokenType(\"eof\"),\n              bracketL: new TokenType(\"[\", {\n                beforeExpr: true,\n                startsExpr: true\n              }),\n              bracketR: new TokenType(\"]\"),\n              braceL: new TokenType(\"{\", {\n                beforeExpr: true,\n                startsExpr: true\n              }),\n              braceR: new TokenType(\"}\"),\n              parenL: new TokenType(\"(\", {\n                beforeExpr: true,\n                startsExpr: true\n              }),\n              parenR: new TokenType(\")\"),\n              comma: new TokenType(\",\", beforeExpr),\n              semi: new TokenType(\";\", beforeExpr),\n              colon: new TokenType(\":\", beforeExpr),\n              dot: new TokenType(\".\"),\n              question: new TokenType(\"?\", beforeExpr),\n              arrow: new TokenType(\"=>\", beforeExpr),\n              template: new TokenType(\"template\"),\n              invalidTemplate: new TokenType(\"invalidTemplate\"),\n              ellipsis: new TokenType(\"...\", beforeExpr),\n              backQuote: new TokenType(\"`\", startsExpr),\n              dollarBraceL: new TokenType(\"${\", {\n                beforeExpr: true,\n                startsExpr: true\n              }),\n              eq: new TokenType(\"=\", {\n                beforeExpr: true,\n                isAssign: true\n              }),\n              assign: new TokenType(\"_=\", {\n                beforeExpr: true,\n                isAssign: true\n              }),\n              incDec: new TokenType(\"++/--\", {\n                prefix: true,\n                postfix: true,\n                startsExpr: true\n              }),\n              prefix: new TokenType(\"!/~\", {\n                beforeExpr: true,\n                prefix: true,\n                startsExpr: true\n              }),\n              logicalOR: binop(\"||\", 1),\n              logicalAND: binop(\"&&\", 2),\n              bitwiseOR: binop(\"|\", 3),\n              bitwiseXOR: binop(\"^\", 4),\n              bitwiseAND: binop(\"&\", 5),\n              equality: binop(\"==/!=/===/!==\", 6),\n              relational: binop(\"</>/<=/>=\", 7),\n              bitShift: binop(\"<</>>/>>>\", 8),\n              plusMin: new TokenType(\"+/-\", {\n                beforeExpr: true,\n                binop: 9,\n                prefix: true,\n                startsExpr: true\n              }),\n              modulo: binop(\"%\", 10),\n              star: binop(\"*\", 10),\n              slash: binop(\"/\", 10),\n              starstar: new TokenType(\"**\", {\n                beforeExpr: true\n              }),\n              _break: kw(\"break\"),\n              _case: kw(\"case\", beforeExpr),\n              _catch: kw(\"catch\"),\n              _continue: kw(\"continue\"),\n              _debugger: kw(\"debugger\"),\n              _default: kw(\"default\", beforeExpr),\n              _do: kw(\"do\", {\n                isLoop: true,\n                beforeExpr: true\n              }),\n              _else: kw(\"else\", beforeExpr),\n              _finally: kw(\"finally\"),\n              _for: kw(\"for\", {\n                isLoop: true\n              }),\n              _function: kw(\"function\", startsExpr),\n              _if: kw(\"if\"),\n              _return: kw(\"return\", beforeExpr),\n              _switch: kw(\"switch\"),\n              _throw: kw(\"throw\", beforeExpr),\n              _try: kw(\"try\"),\n              _var: kw(\"var\"),\n              _const: kw(\"const\"),\n              _while: kw(\"while\", {\n                isLoop: true\n              }),\n              _with: kw(\"with\"),\n              _new: kw(\"new\", {\n                beforeExpr: true,\n                startsExpr: true\n              }),\n              _this: kw(\"this\", startsExpr),\n              _super: kw(\"super\", startsExpr),\n              _class: kw(\"class\", startsExpr),\n              _extends: kw(\"extends\", beforeExpr),\n              _export: kw(\"export\"),\n              _import: kw(\"import\", startsExpr),\n              _null: kw(\"null\", startsExpr),\n              _true: kw(\"true\", startsExpr),\n              _false: kw(\"false\", startsExpr),\n              _in: kw(\"in\", {\n                beforeExpr: true,\n                binop: 7\n              }),\n              _instanceof: kw(\"instanceof\", {\n                beforeExpr: true,\n                binop: 7\n              }),\n              _typeof: kw(\"typeof\", {\n                beforeExpr: true,\n                prefix: true,\n                startsExpr: true\n              }),\n              _void: kw(\"void\", {\n                beforeExpr: true,\n                prefix: true,\n                startsExpr: true\n              }),\n              _delete: kw(\"delete\", {\n                beforeExpr: true,\n                prefix: true,\n                startsExpr: true\n              })\n            };\n            var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n            var lineBreakG = new RegExp(lineBreak.source, \"g\");\n            function isNewLine(code, ecma2019String) {\n              return code === 10 || code === 13 || !ecma2019String && (code === 0x2028 || code === 0x2029);\n            }\n            var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n            var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n            var ref = Object.prototype;\n            var hasOwnProperty = ref.hasOwnProperty;\n            var toString = ref.toString;\n            function has(obj, propName) {\n              return hasOwnProperty.call(obj, propName);\n            }\n            var isArray = Array.isArray || function (obj) {\n              return toString.call(obj) === \"[object Array]\";\n            };\n            function wordsRegexp(words) {\n              return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\");\n            }\n            var Position = function Position(line, col) {\n              this.line = line;\n              this.column = col;\n            };\n            Position.prototype.offset = function offset(n) {\n              return new Position(this.line, this.column + n);\n            };\n            var SourceLocation = function SourceLocation(p, start, end) {\n              this.start = start;\n              this.end = end;\n              if (p.sourceFile !== null) {\n                this.source = p.sourceFile;\n              }\n            };\n            function getLineInfo(input, offset) {\n              for (var line = 1, cur = 0;;) {\n                lineBreakG.lastIndex = cur;\n                var match = lineBreakG.exec(input);\n                if (match && match.index < offset) {\n                  ++line;\n                  cur = match.index + match[0].length;\n                } else {\n                  return new Position(line, offset - cur);\n                }\n              }\n            }\n            var defaultOptions = {\n              ecmaVersion: 10,\n              sourceType: \"script\",\n              onInsertedSemicolon: null,\n              onTrailingComma: null,\n              allowReserved: null,\n              allowReturnOutsideFunction: false,\n              allowImportExportEverywhere: false,\n              allowAwaitOutsideFunction: false,\n              allowHashBang: false,\n              locations: false,\n              onToken: null,\n              onComment: null,\n              ranges: false,\n              program: null,\n              sourceFile: null,\n              directSourceFile: null,\n              preserveParens: false\n            };\n            function getOptions(opts) {\n              var options = {};\n              for (var opt in defaultOptions) {\n                options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt];\n              }\n              if (options.ecmaVersion >= 2015) {\n                options.ecmaVersion -= 2009;\n              }\n              if (options.allowReserved == null) {\n                options.allowReserved = options.ecmaVersion < 5;\n              }\n              if (isArray(options.onToken)) {\n                var tokens = options.onToken;\n                options.onToken = function (token) {\n                  return tokens.push(token);\n                };\n              }\n              if (isArray(options.onComment)) {\n                options.onComment = pushComment(options, options.onComment);\n              }\n              return options;\n            }\n            function pushComment(options, array) {\n              return function (block, text, start, end, startLoc, endLoc) {\n                var comment = {\n                  type: block ? \"Block\" : \"Line\",\n                  value: text,\n                  start: start,\n                  end: end\n                };\n                if (options.locations) {\n                  comment.loc = new SourceLocation(this, startLoc, endLoc);\n                }\n                if (options.ranges) {\n                  comment.range = [start, end];\n                }\n                array.push(comment);\n              };\n            }\n            var SCOPE_TOP = 1,\n              SCOPE_FUNCTION = 2,\n              SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION,\n              SCOPE_ASYNC = 4,\n              SCOPE_GENERATOR = 8,\n              SCOPE_ARROW = 16,\n              SCOPE_SIMPLE_CATCH = 32,\n              SCOPE_SUPER = 64,\n              SCOPE_DIRECT_SUPER = 128;\n            function functionFlags(async, generator) {\n              return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0);\n            }\n            var BIND_NONE = 0,\n              BIND_VAR = 1,\n              BIND_LEXICAL = 2,\n              BIND_FUNCTION = 3,\n              BIND_SIMPLE_CATCH = 4,\n              BIND_OUTSIDE = 5;\n            var Parser = function Parser(options, input, startPos) {\n              this.options = options = getOptions(options);\n              this.sourceFile = options.sourceFile;\n              this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n              var reserved = \"\";\n              if (options.allowReserved !== true) {\n                for (var v = options.ecmaVersion;; v--) {\n                  if (reserved = reservedWords[v]) {\n                    break;\n                  }\n                }\n                if (options.sourceType === \"module\") {\n                  reserved += \" await\";\n                }\n              }\n              this.reservedWords = wordsRegexp(reserved);\n              var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n              this.reservedWordsStrict = wordsRegexp(reservedStrict);\n              this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n              this.input = String(input);\n              this.containsEsc = false;\n              if (startPos) {\n                this.pos = startPos;\n                this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n                this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n              } else {\n                this.pos = this.lineStart = 0;\n                this.curLine = 1;\n              }\n              this.type = types.eof;\n              this.value = null;\n              this.start = this.end = this.pos;\n              this.startLoc = this.endLoc = this.curPosition();\n              this.lastTokEndLoc = this.lastTokStartLoc = null;\n              this.lastTokStart = this.lastTokEnd = this.pos;\n              this.context = this.initialContext();\n              this.exprAllowed = true;\n              this.inModule = options.sourceType === \"module\";\n              this.strict = this.inModule || this.strictDirective(this.pos);\n              this.potentialArrowAt = -1;\n              this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n              this.labels = [];\n              this.undefinedExports = {};\n              if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\") {\n                this.skipLineComment(2);\n              }\n              this.scopeStack = [];\n              this.enterScope(SCOPE_TOP);\n              this.regexpState = null;\n            };\n            var prototypeAccessors = {\n              inFunction: {\n                configurable: true\n              },\n              inGenerator: {\n                configurable: true\n              },\n              inAsync: {\n                configurable: true\n              },\n              allowSuper: {\n                configurable: true\n              },\n              allowDirectSuper: {\n                configurable: true\n              },\n              treatFunctionsAsVar: {\n                configurable: true\n              }\n            };\n            Parser.prototype.parse = function parse() {\n              var node = this.options.program || this.startNode();\n              this.nextToken();\n              return this.parseTopLevel(node);\n            };\n            prototypeAccessors.inFunction.get = function () {\n              return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n            };\n            prototypeAccessors.inGenerator.get = function () {\n              return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0;\n            };\n            prototypeAccessors.inAsync.get = function () {\n              return (this.currentVarScope().flags & SCOPE_ASYNC) > 0;\n            };\n            prototypeAccessors.allowSuper.get = function () {\n              return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n            };\n            prototypeAccessors.allowDirectSuper.get = function () {\n              return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n            };\n            prototypeAccessors.treatFunctionsAsVar.get = function () {\n              return this.treatFunctionsAsVarInScope(this.currentScope());\n            };\n            Parser.prototype.inNonArrowFunction = function inNonArrowFunction() {\n              return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n            };\n            Parser.extend = function extend() {\n              var plugins = [],\n                len = arguments.length;\n              while (len--) plugins[len] = arguments[len];\n              var cls = this;\n              for (var i = 0; i < plugins.length; i++) {\n                cls = plugins[i](cls);\n              }\n              return cls;\n            };\n            Parser.parse = function parse(input, options) {\n              return new this(options, input).parse();\n            };\n            Parser.parseExpressionAt = function parseExpressionAt(input, pos, options) {\n              var parser = new this(options, input, pos);\n              parser.nextToken();\n              return parser.parseExpression();\n            };\n            Parser.tokenizer = function tokenizer(input, options) {\n              return new this(options, input);\n            };\n            Object.defineProperties(Parser.prototype, prototypeAccessors);\n            var pp = Parser.prototype;\n            var literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\")/;\n            pp.strictDirective = function (start) {\n              for (;;) {\n                skipWhiteSpace.lastIndex = start;\n                start += skipWhiteSpace.exec(this.input)[0].length;\n                var match = literal.exec(this.input.slice(start));\n                if (!match) {\n                  return false;\n                }\n                if ((match[1] || match[2]) === \"use strict\") {\n                  return true;\n                }\n                start += match[0].length;\n                skipWhiteSpace.lastIndex = start;\n                start += skipWhiteSpace.exec(this.input)[0].length;\n                if (this.input[start] === \";\") {\n                  start++;\n                }\n              }\n            };\n            pp.eat = function (type) {\n              if (this.type === type) {\n                this.next();\n                return true;\n              } else {\n                return false;\n              }\n            };\n            pp.isContextual = function (name) {\n              return this.type === types.name && this.value === name && !this.containsEsc;\n            };\n            pp.eatContextual = function (name) {\n              if (!this.isContextual(name)) {\n                return false;\n              }\n              this.next();\n              return true;\n            };\n            pp.expectContextual = function (name) {\n              if (!this.eatContextual(name)) {\n                this.unexpected();\n              }\n            };\n            pp.canInsertSemicolon = function () {\n              return this.type === types.eof || this.type === types.braceR || lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n            };\n            pp.insertSemicolon = function () {\n              if (this.canInsertSemicolon()) {\n                if (this.options.onInsertedSemicolon) {\n                  this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc);\n                }\n                return true;\n              }\n            };\n            pp.semicolon = function () {\n              if (!this.eat(types.semi) && !this.insertSemicolon()) {\n                this.unexpected();\n              }\n            };\n            pp.afterTrailingComma = function (tokType, notNext) {\n              if (this.type === tokType) {\n                if (this.options.onTrailingComma) {\n                  this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc);\n                }\n                if (!notNext) {\n                  this.next();\n                }\n                return true;\n              }\n            };\n            pp.expect = function (type) {\n              this.eat(type) || this.unexpected();\n            };\n            pp.unexpected = function (pos) {\n              this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n            };\n            function DestructuringErrors() {\n              this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;\n            }\n            pp.checkPatternErrors = function (refDestructuringErrors, isAssign) {\n              if (!refDestructuringErrors) {\n                return;\n              }\n              if (refDestructuringErrors.trailingComma > -1) {\n                this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\");\n              }\n              var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n              if (parens > -1) {\n                this.raiseRecoverable(parens, \"Parenthesized pattern\");\n              }\n            };\n            pp.checkExpressionErrors = function (refDestructuringErrors, andThrow) {\n              if (!refDestructuringErrors) {\n                return false;\n              }\n              var shorthandAssign = refDestructuringErrors.shorthandAssign;\n              var doubleProto = refDestructuringErrors.doubleProto;\n              if (!andThrow) {\n                return shorthandAssign >= 0 || doubleProto >= 0;\n              }\n              if (shorthandAssign >= 0) {\n                this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\");\n              }\n              if (doubleProto >= 0) {\n                this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\");\n              }\n            };\n            pp.checkYieldAwaitInDefaultParams = function () {\n              if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos)) {\n                this.raise(this.yieldPos, \"Yield expression cannot be a default value\");\n              }\n              if (this.awaitPos) {\n                this.raise(this.awaitPos, \"Await expression cannot be a default value\");\n              }\n            };\n            pp.isSimpleAssignTarget = function (expr) {\n              if (expr.type === \"ParenthesizedExpression\") {\n                return this.isSimpleAssignTarget(expr.expression);\n              }\n              return expr.type === \"Identifier\" || expr.type === \"MemberExpression\";\n            };\n            var pp$1 = Parser.prototype;\n            pp$1.parseTopLevel = function (node) {\n              var exports = {};\n              if (!node.body) {\n                node.body = [];\n              }\n              while (this.type !== types.eof) {\n                var stmt = this.parseStatement(null, true, exports);\n                node.body.push(stmt);\n              }\n              if (this.inModule) {\n                for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1) {\n                  var name = list[i];\n                  this.raiseRecoverable(this.undefinedExports[name].start, \"Export '\" + name + \"' is not defined\");\n                }\n              }\n              this.adaptDirectivePrologue(node.body);\n              this.next();\n              node.sourceType = this.options.sourceType;\n              return this.finishNode(node, \"Program\");\n            };\n            var loopLabel = {\n                kind: \"loop\"\n              },\n              switchLabel = {\n                kind: \"switch\"\n              };\n            pp$1.isLet = function (context) {\n              if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) {\n                return false;\n              }\n              skipWhiteSpace.lastIndex = this.pos;\n              var skip = skipWhiteSpace.exec(this.input);\n              var next = this.pos + skip[0].length,\n                nextCh = this.input.charCodeAt(next);\n              if (nextCh === 91) {\n                return true;\n              }\n              if (context) {\n                return false;\n              }\n              if (nextCh === 123) {\n                return true;\n              }\n              if (isIdentifierStart(nextCh, true)) {\n                var pos = next + 1;\n                while (isIdentifierChar(this.input.charCodeAt(pos), true)) {\n                  ++pos;\n                }\n                var ident = this.input.slice(next, pos);\n                if (!keywordRelationalOperator.test(ident)) {\n                  return true;\n                }\n              }\n              return false;\n            };\n            pp$1.isAsyncFunction = function () {\n              if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\")) {\n                return false;\n              }\n              skipWhiteSpace.lastIndex = this.pos;\n              var skip = skipWhiteSpace.exec(this.input);\n              var next = this.pos + skip[0].length;\n              return !lineBreak.test(this.input.slice(this.pos, next)) && this.input.slice(next, next + 8) === \"function\" && (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)));\n            };\n            pp$1.parseStatement = function (context, topLevel, exports) {\n              var starttype = this.type,\n                node = this.startNode(),\n                kind;\n              if (this.isLet(context)) {\n                starttype = types._var;\n                kind = \"let\";\n              }\n              switch (starttype) {\n                case types._break:\n                case types._continue:\n                  return this.parseBreakContinueStatement(node, starttype.keyword);\n                case types._debugger:\n                  return this.parseDebuggerStatement(node);\n                case types._do:\n                  return this.parseDoStatement(node);\n                case types._for:\n                  return this.parseForStatement(node);\n                case types._function:\n                  if (context && (this.strict || context !== \"if\" && context !== \"label\") && this.options.ecmaVersion >= 6) {\n                    this.unexpected();\n                  }\n                  return this.parseFunctionStatement(node, false, !context);\n                case types._class:\n                  if (context) {\n                    this.unexpected();\n                  }\n                  return this.parseClass(node, true);\n                case types._if:\n                  return this.parseIfStatement(node);\n                case types._return:\n                  return this.parseReturnStatement(node);\n                case types._switch:\n                  return this.parseSwitchStatement(node);\n                case types._throw:\n                  return this.parseThrowStatement(node);\n                case types._try:\n                  return this.parseTryStatement(node);\n                case types._const:\n                case types._var:\n                  kind = kind || this.value;\n                  if (context && kind !== \"var\") {\n                    this.unexpected();\n                  }\n                  return this.parseVarStatement(node, kind);\n                case types._while:\n                  return this.parseWhileStatement(node);\n                case types._with:\n                  return this.parseWithStatement(node);\n                case types.braceL:\n                  return this.parseBlock(true, node);\n                case types.semi:\n                  return this.parseEmptyStatement(node);\n                case types._export:\n                case types._import:\n                  if (this.options.ecmaVersion > 10 && starttype === types._import) {\n                    skipWhiteSpace.lastIndex = this.pos;\n                    var skip = skipWhiteSpace.exec(this.input);\n                    var next = this.pos + skip[0].length,\n                      nextCh = this.input.charCodeAt(next);\n                    if (nextCh === 40) {\n                      return this.parseExpressionStatement(node, this.parseExpression());\n                    }\n                  }\n                  if (!this.options.allowImportExportEverywhere) {\n                    if (!topLevel) {\n                      this.raise(this.start, \"'import' and 'export' may only appear at the top level\");\n                    }\n                    if (!this.inModule) {\n                      this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\");\n                    }\n                  }\n                  return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports);\n                default:\n                  if (this.isAsyncFunction()) {\n                    if (context) {\n                      this.unexpected();\n                    }\n                    this.next();\n                    return this.parseFunctionStatement(node, true, !context);\n                  }\n                  var maybeName = this.value,\n                    expr = this.parseExpression();\n                  if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n                    return this.parseLabeledStatement(node, maybeName, expr, context);\n                  } else {\n                    return this.parseExpressionStatement(node, expr);\n                  }\n              }\n            };\n            pp$1.parseBreakContinueStatement = function (node, keyword) {\n              var isBreak = keyword === \"break\";\n              this.next();\n              if (this.eat(types.semi) || this.insertSemicolon()) {\n                node.label = null;\n              } else if (this.type !== types.name) {\n                this.unexpected();\n              } else {\n                node.label = this.parseIdent();\n                this.semicolon();\n              }\n              var i = 0;\n              for (; i < this.labels.length; ++i) {\n                var lab = this.labels[i];\n                if (node.label == null || lab.name === node.label.name) {\n                  if (lab.kind != null && (isBreak || lab.kind === \"loop\")) {\n                    break;\n                  }\n                  if (node.label && isBreak) {\n                    break;\n                  }\n                }\n              }\n              if (i === this.labels.length) {\n                this.raise(node.start, \"Unsyntactic \" + keyword);\n              }\n              return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n            };\n            pp$1.parseDebuggerStatement = function (node) {\n              this.next();\n              this.semicolon();\n              return this.finishNode(node, \"DebuggerStatement\");\n            };\n            pp$1.parseDoStatement = function (node) {\n              this.next();\n              this.labels.push(loopLabel);\n              node.body = this.parseStatement(\"do\");\n              this.labels.pop();\n              this.expect(types._while);\n              node.test = this.parseParenExpression();\n              if (this.options.ecmaVersion >= 6) {\n                this.eat(types.semi);\n              } else {\n                this.semicolon();\n              }\n              return this.finishNode(node, \"DoWhileStatement\");\n            };\n            pp$1.parseForStatement = function (node) {\n              this.next();\n              var awaitAt = this.options.ecmaVersion >= 9 && (this.inAsync || !this.inFunction && this.options.allowAwaitOutsideFunction) && this.eatContextual(\"await\") ? this.lastTokStart : -1;\n              this.labels.push(loopLabel);\n              this.enterScope(0);\n              this.expect(types.parenL);\n              if (this.type === types.semi) {\n                if (awaitAt > -1) {\n                  this.unexpected(awaitAt);\n                }\n                return this.parseFor(node, null);\n              }\n              var isLet = this.isLet();\n              if (this.type === types._var || this.type === types._const || isLet) {\n                var init$1 = this.startNode(),\n                  kind = isLet ? \"let\" : this.value;\n                this.next();\n                this.parseVar(init$1, true, kind);\n                this.finishNode(init$1, \"VariableDeclaration\");\n                if ((this.type === types._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\")) && init$1.declarations.length === 1) {\n                  if (this.options.ecmaVersion >= 9) {\n                    if (this.type === types._in) {\n                      if (awaitAt > -1) {\n                        this.unexpected(awaitAt);\n                      }\n                    } else {\n                      node.await = awaitAt > -1;\n                    }\n                  }\n                  return this.parseForIn(node, init$1);\n                }\n                if (awaitAt > -1) {\n                  this.unexpected(awaitAt);\n                }\n                return this.parseFor(node, init$1);\n              }\n              var refDestructuringErrors = new DestructuringErrors();\n              var init = this.parseExpression(true, refDestructuringErrors);\n              if (this.type === types._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\")) {\n                if (this.options.ecmaVersion >= 9) {\n                  if (this.type === types._in) {\n                    if (awaitAt > -1) {\n                      this.unexpected(awaitAt);\n                    }\n                  } else {\n                    node.await = awaitAt > -1;\n                  }\n                }\n                this.toAssignable(init, false, refDestructuringErrors);\n                this.checkLVal(init);\n                return this.parseForIn(node, init);\n              } else {\n                this.checkExpressionErrors(refDestructuringErrors, true);\n              }\n              if (awaitAt > -1) {\n                this.unexpected(awaitAt);\n              }\n              return this.parseFor(node, init);\n            };\n            pp$1.parseFunctionStatement = function (node, isAsync, declarationPosition) {\n              this.next();\n              return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync);\n            };\n            pp$1.parseIfStatement = function (node) {\n              this.next();\n              node.test = this.parseParenExpression();\n              node.consequent = this.parseStatement(\"if\");\n              node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n              return this.finishNode(node, \"IfStatement\");\n            };\n            pp$1.parseReturnStatement = function (node) {\n              if (!this.inFunction && !this.options.allowReturnOutsideFunction) {\n                this.raise(this.start, \"'return' outside of function\");\n              }\n              this.next();\n              if (this.eat(types.semi) || this.insertSemicolon()) {\n                node.argument = null;\n              } else {\n                node.argument = this.parseExpression();\n                this.semicolon();\n              }\n              return this.finishNode(node, \"ReturnStatement\");\n            };\n            pp$1.parseSwitchStatement = function (node) {\n              this.next();\n              node.discriminant = this.parseParenExpression();\n              node.cases = [];\n              this.expect(types.braceL);\n              this.labels.push(switchLabel);\n              this.enterScope(0);\n              var cur;\n              for (var sawDefault = false; this.type !== types.braceR;) {\n                if (this.type === types._case || this.type === types._default) {\n                  var isCase = this.type === types._case;\n                  if (cur) {\n                    this.finishNode(cur, \"SwitchCase\");\n                  }\n                  node.cases.push(cur = this.startNode());\n                  cur.consequent = [];\n                  this.next();\n                  if (isCase) {\n                    cur.test = this.parseExpression();\n                  } else {\n                    if (sawDefault) {\n                      this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\");\n                    }\n                    sawDefault = true;\n                    cur.test = null;\n                  }\n                  this.expect(types.colon);\n                } else {\n                  if (!cur) {\n                    this.unexpected();\n                  }\n                  cur.consequent.push(this.parseStatement(null));\n                }\n              }\n              this.exitScope();\n              if (cur) {\n                this.finishNode(cur, \"SwitchCase\");\n              }\n              this.next();\n              this.labels.pop();\n              return this.finishNode(node, \"SwitchStatement\");\n            };\n            pp$1.parseThrowStatement = function (node) {\n              this.next();\n              if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) {\n                this.raise(this.lastTokEnd, \"Illegal newline after throw\");\n              }\n              node.argument = this.parseExpression();\n              this.semicolon();\n              return this.finishNode(node, \"ThrowStatement\");\n            };\n            var empty = [];\n            pp$1.parseTryStatement = function (node) {\n              this.next();\n              node.block = this.parseBlock();\n              node.handler = null;\n              if (this.type === types._catch) {\n                var clause = this.startNode();\n                this.next();\n                if (this.eat(types.parenL)) {\n                  clause.param = this.parseBindingAtom();\n                  var simple = clause.param.type === \"Identifier\";\n                  this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n                  this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n                  this.expect(types.parenR);\n                } else {\n                  if (this.options.ecmaVersion < 10) {\n                    this.unexpected();\n                  }\n                  clause.param = null;\n                  this.enterScope(0);\n                }\n                clause.body = this.parseBlock(false);\n                this.exitScope();\n                node.handler = this.finishNode(clause, \"CatchClause\");\n              }\n              node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n              if (!node.handler && !node.finalizer) {\n                this.raise(node.start, \"Missing catch or finally clause\");\n              }\n              return this.finishNode(node, \"TryStatement\");\n            };\n            pp$1.parseVarStatement = function (node, kind) {\n              this.next();\n              this.parseVar(node, false, kind);\n              this.semicolon();\n              return this.finishNode(node, \"VariableDeclaration\");\n            };\n            pp$1.parseWhileStatement = function (node) {\n              this.next();\n              node.test = this.parseParenExpression();\n              this.labels.push(loopLabel);\n              node.body = this.parseStatement(\"while\");\n              this.labels.pop();\n              return this.finishNode(node, \"WhileStatement\");\n            };\n            pp$1.parseWithStatement = function (node) {\n              if (this.strict) {\n                this.raise(this.start, \"'with' in strict mode\");\n              }\n              this.next();\n              node.object = this.parseParenExpression();\n              node.body = this.parseStatement(\"with\");\n              return this.finishNode(node, \"WithStatement\");\n            };\n            pp$1.parseEmptyStatement = function (node) {\n              this.next();\n              return this.finishNode(node, \"EmptyStatement\");\n            };\n            pp$1.parseLabeledStatement = function (node, maybeName, expr, context) {\n              for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1) {\n                var label = list[i$1];\n                if (label.name === maybeName) {\n                  this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n                }\n              }\n              var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n              for (var i = this.labels.length - 1; i >= 0; i--) {\n                var label$1 = this.labels[i];\n                if (label$1.statementStart === node.start) {\n                  label$1.statementStart = this.start;\n                  label$1.kind = kind;\n                } else {\n                  break;\n                }\n              }\n              this.labels.push({\n                name: maybeName,\n                kind: kind,\n                statementStart: this.start\n              });\n              node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n              this.labels.pop();\n              node.label = expr;\n              return this.finishNode(node, \"LabeledStatement\");\n            };\n            pp$1.parseExpressionStatement = function (node, expr) {\n              node.expression = expr;\n              this.semicolon();\n              return this.finishNode(node, \"ExpressionStatement\");\n            };\n            pp$1.parseBlock = function (createNewLexicalScope, node) {\n              if (createNewLexicalScope === void 0) createNewLexicalScope = true;\n              if (node === void 0) node = this.startNode();\n              node.body = [];\n              this.expect(types.braceL);\n              if (createNewLexicalScope) {\n                this.enterScope(0);\n              }\n              while (!this.eat(types.braceR)) {\n                var stmt = this.parseStatement(null);\n                node.body.push(stmt);\n              }\n              if (createNewLexicalScope) {\n                this.exitScope();\n              }\n              return this.finishNode(node, \"BlockStatement\");\n            };\n            pp$1.parseFor = function (node, init) {\n              node.init = init;\n              this.expect(types.semi);\n              node.test = this.type === types.semi ? null : this.parseExpression();\n              this.expect(types.semi);\n              node.update = this.type === types.parenR ? null : this.parseExpression();\n              this.expect(types.parenR);\n              node.body = this.parseStatement(\"for\");\n              this.exitScope();\n              this.labels.pop();\n              return this.finishNode(node, \"ForStatement\");\n            };\n            pp$1.parseForIn = function (node, init) {\n              var isForIn = this.type === types._in;\n              this.next();\n              if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.options.ecmaVersion < 8 || this.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n                this.raise(init.start, (isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\");\n              } else if (init.type === \"AssignmentPattern\") {\n                this.raise(init.start, \"Invalid left-hand side in for-loop\");\n              }\n              node.left = init;\n              node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n              this.expect(types.parenR);\n              node.body = this.parseStatement(\"for\");\n              this.exitScope();\n              this.labels.pop();\n              return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n            };\n            pp$1.parseVar = function (node, isFor, kind) {\n              node.declarations = [];\n              node.kind = kind;\n              for (;;) {\n                var decl = this.startNode();\n                this.parseVarId(decl, kind);\n                if (this.eat(types.eq)) {\n                  decl.init = this.parseMaybeAssign(isFor);\n                } else if (kind === \"const\" && !(this.type === types._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n                  this.unexpected();\n                } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types._in || this.isContextual(\"of\")))) {\n                  this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n                } else {\n                  decl.init = null;\n                }\n                node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n                if (!this.eat(types.comma)) {\n                  break;\n                }\n              }\n              return node;\n            };\n            pp$1.parseVarId = function (decl, kind) {\n              decl.id = this.parseBindingAtom();\n              this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n            };\n            var FUNC_STATEMENT = 1,\n              FUNC_HANGING_STATEMENT = 2,\n              FUNC_NULLABLE_ID = 4;\n            pp$1.parseFunction = function (node, statement, allowExpressionBody, isAsync) {\n              this.initFunction(node);\n              if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n                if (this.type === types.star && statement & FUNC_HANGING_STATEMENT) {\n                  this.unexpected();\n                }\n                node.generator = this.eat(types.star);\n              }\n              if (this.options.ecmaVersion >= 8) {\n                node.async = !!isAsync;\n              }\n              if (statement & FUNC_STATEMENT) {\n                node.id = statement & FUNC_NULLABLE_ID && this.type !== types.name ? null : this.parseIdent();\n                if (node.id && !(statement & FUNC_HANGING_STATEMENT)) {\n                  this.checkLVal(node.id, this.strict || node.generator || node.async ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION);\n                }\n              }\n              var oldYieldPos = this.yieldPos,\n                oldAwaitPos = this.awaitPos,\n                oldAwaitIdentPos = this.awaitIdentPos;\n              this.yieldPos = 0;\n              this.awaitPos = 0;\n              this.awaitIdentPos = 0;\n              this.enterScope(functionFlags(node.async, node.generator));\n              if (!(statement & FUNC_STATEMENT)) {\n                node.id = this.type === types.name ? this.parseIdent() : null;\n              }\n              this.parseFunctionParams(node);\n              this.parseFunctionBody(node, allowExpressionBody, false);\n              this.yieldPos = oldYieldPos;\n              this.awaitPos = oldAwaitPos;\n              this.awaitIdentPos = oldAwaitIdentPos;\n              return this.finishNode(node, statement & FUNC_STATEMENT ? \"FunctionDeclaration\" : \"FunctionExpression\");\n            };\n            pp$1.parseFunctionParams = function (node) {\n              this.expect(types.parenL);\n              node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n              this.checkYieldAwaitInDefaultParams();\n            };\n            pp$1.parseClass = function (node, isStatement) {\n              this.next();\n              var oldStrict = this.strict;\n              this.strict = true;\n              this.parseClassId(node, isStatement);\n              this.parseClassSuper(node);\n              var classBody = this.startNode();\n              var hadConstructor = false;\n              classBody.body = [];\n              this.expect(types.braceL);\n              while (!this.eat(types.braceR)) {\n                var element = this.parseClassElement(node.superClass !== null);\n                if (element) {\n                  classBody.body.push(element);\n                  if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n                    if (hadConstructor) {\n                      this.raise(element.start, \"Duplicate constructor in the same class\");\n                    }\n                    hadConstructor = true;\n                  }\n                }\n              }\n              node.body = this.finishNode(classBody, \"ClassBody\");\n              this.strict = oldStrict;\n              return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n            };\n            pp$1.parseClassElement = function (constructorAllowsSuper) {\n              var this$1 = this;\n              if (this.eat(types.semi)) {\n                return null;\n              }\n              var method = this.startNode();\n              var tryContextual = function (k, noLineBreak) {\n                if (noLineBreak === void 0) noLineBreak = false;\n                var start = this$1.start,\n                  startLoc = this$1.startLoc;\n                if (!this$1.eatContextual(k)) {\n                  return false;\n                }\n                if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) {\n                  return true;\n                }\n                if (method.key) {\n                  this$1.unexpected();\n                }\n                method.computed = false;\n                method.key = this$1.startNodeAt(start, startLoc);\n                method.key.name = k;\n                this$1.finishNode(method.key, \"Identifier\");\n                return false;\n              };\n              method.kind = \"method\";\n              method.static = tryContextual(\"static\");\n              var isGenerator = this.eat(types.star);\n              var isAsync = false;\n              if (!isGenerator) {\n                if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n                  isAsync = true;\n                  isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n                } else if (tryContextual(\"get\")) {\n                  method.kind = \"get\";\n                } else if (tryContextual(\"set\")) {\n                  method.kind = \"set\";\n                }\n              }\n              if (!method.key) {\n                this.parsePropertyName(method);\n              }\n              var key = method.key;\n              var allowsDirectSuper = false;\n              if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" || key.type === \"Literal\" && key.value === \"constructor\")) {\n                if (method.kind !== \"method\") {\n                  this.raise(key.start, \"Constructor can't have get/set modifier\");\n                }\n                if (isGenerator) {\n                  this.raise(key.start, \"Constructor can't be a generator\");\n                }\n                if (isAsync) {\n                  this.raise(key.start, \"Constructor can't be an async method\");\n                }\n                method.kind = \"constructor\";\n                allowsDirectSuper = constructorAllowsSuper;\n              } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n                this.raise(key.start, \"Classes may not have a static property named prototype\");\n              }\n              this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);\n              if (method.kind === \"get\" && method.value.params.length !== 0) {\n                this.raiseRecoverable(method.value.start, \"getter should have no params\");\n              }\n              if (method.kind === \"set\" && method.value.params.length !== 1) {\n                this.raiseRecoverable(method.value.start, \"setter should have exactly one param\");\n              }\n              if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\") {\n                this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\");\n              }\n              return method;\n            };\n            pp$1.parseClassMethod = function (method, isGenerator, isAsync, allowsDirectSuper) {\n              method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n              return this.finishNode(method, \"MethodDefinition\");\n            };\n            pp$1.parseClassId = function (node, isStatement) {\n              if (this.type === types.name) {\n                node.id = this.parseIdent();\n                if (isStatement) {\n                  this.checkLVal(node.id, BIND_LEXICAL, false);\n                }\n              } else {\n                if (isStatement === true) {\n                  this.unexpected();\n                }\n                node.id = null;\n              }\n            };\n            pp$1.parseClassSuper = function (node) {\n              node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n            };\n            pp$1.parseExport = function (node, exports) {\n              this.next();\n              if (this.eat(types.star)) {\n                this.expectContextual(\"from\");\n                if (this.type !== types.string) {\n                  this.unexpected();\n                }\n                node.source = this.parseExprAtom();\n                this.semicolon();\n                return this.finishNode(node, \"ExportAllDeclaration\");\n              }\n              if (this.eat(types._default)) {\n                this.checkExport(exports, \"default\", this.lastTokStart);\n                var isAsync;\n                if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n                  var fNode = this.startNode();\n                  this.next();\n                  if (isAsync) {\n                    this.next();\n                  }\n                  node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n                } else if (this.type === types._class) {\n                  var cNode = this.startNode();\n                  node.declaration = this.parseClass(cNode, \"nullableID\");\n                } else {\n                  node.declaration = this.parseMaybeAssign();\n                  this.semicolon();\n                }\n                return this.finishNode(node, \"ExportDefaultDeclaration\");\n              }\n              if (this.shouldParseExportStatement()) {\n                node.declaration = this.parseStatement(null);\n                if (node.declaration.type === \"VariableDeclaration\") {\n                  this.checkVariableExport(exports, node.declaration.declarations);\n                } else {\n                  this.checkExport(exports, node.declaration.id.name, node.declaration.id.start);\n                }\n                node.specifiers = [];\n                node.source = null;\n              } else {\n                node.declaration = null;\n                node.specifiers = this.parseExportSpecifiers(exports);\n                if (this.eatContextual(\"from\")) {\n                  if (this.type !== types.string) {\n                    this.unexpected();\n                  }\n                  node.source = this.parseExprAtom();\n                } else {\n                  for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n                    var spec = list[i];\n                    this.checkUnreserved(spec.local);\n                    this.checkLocalExport(spec.local);\n                  }\n                  node.source = null;\n                }\n                this.semicolon();\n              }\n              return this.finishNode(node, \"ExportNamedDeclaration\");\n            };\n            pp$1.checkExport = function (exports, name, pos) {\n              if (!exports) {\n                return;\n              }\n              if (has(exports, name)) {\n                this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\");\n              }\n              exports[name] = true;\n            };\n            pp$1.checkPatternExport = function (exports, pat) {\n              var type = pat.type;\n              if (type === \"Identifier\") {\n                this.checkExport(exports, pat.name, pat.start);\n              } else if (type === \"ObjectPattern\") {\n                for (var i = 0, list = pat.properties; i < list.length; i += 1) {\n                  var prop = list[i];\n                  this.checkPatternExport(exports, prop);\n                }\n              } else if (type === \"ArrayPattern\") {\n                for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n                  var elt = list$1[i$1];\n                  if (elt) {\n                    this.checkPatternExport(exports, elt);\n                  }\n                }\n              } else if (type === \"Property\") {\n                this.checkPatternExport(exports, pat.value);\n              } else if (type === \"AssignmentPattern\") {\n                this.checkPatternExport(exports, pat.left);\n              } else if (type === \"RestElement\") {\n                this.checkPatternExport(exports, pat.argument);\n              } else if (type === \"ParenthesizedExpression\") {\n                this.checkPatternExport(exports, pat.expression);\n              }\n            };\n            pp$1.checkVariableExport = function (exports, decls) {\n              if (!exports) {\n                return;\n              }\n              for (var i = 0, list = decls; i < list.length; i += 1) {\n                var decl = list[i];\n                this.checkPatternExport(exports, decl.id);\n              }\n            };\n            pp$1.shouldParseExportStatement = function () {\n              return this.type.keyword === \"var\" || this.type.keyword === \"const\" || this.type.keyword === \"class\" || this.type.keyword === \"function\" || this.isLet() || this.isAsyncFunction();\n            };\n            pp$1.parseExportSpecifiers = function (exports) {\n              var nodes = [],\n                first = true;\n              this.expect(types.braceL);\n              while (!this.eat(types.braceR)) {\n                if (!first) {\n                  this.expect(types.comma);\n                  if (this.afterTrailingComma(types.braceR)) {\n                    break;\n                  }\n                } else {\n                  first = false;\n                }\n                var node = this.startNode();\n                node.local = this.parseIdent(true);\n                node.exported = this.eatContextual(\"as\") ? this.parseIdent(true) : node.local;\n                this.checkExport(exports, node.exported.name, node.exported.start);\n                nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n              }\n              return nodes;\n            };\n            pp$1.parseImport = function (node) {\n              this.next();\n              if (this.type === types.string) {\n                node.specifiers = empty;\n                node.source = this.parseExprAtom();\n              } else {\n                node.specifiers = this.parseImportSpecifiers();\n                this.expectContextual(\"from\");\n                node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n              }\n              this.semicolon();\n              return this.finishNode(node, \"ImportDeclaration\");\n            };\n            pp$1.parseImportSpecifiers = function () {\n              var nodes = [],\n                first = true;\n              if (this.type === types.name) {\n                var node = this.startNode();\n                node.local = this.parseIdent();\n                this.checkLVal(node.local, BIND_LEXICAL);\n                nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n                if (!this.eat(types.comma)) {\n                  return nodes;\n                }\n              }\n              if (this.type === types.star) {\n                var node$1 = this.startNode();\n                this.next();\n                this.expectContextual(\"as\");\n                node$1.local = this.parseIdent();\n                this.checkLVal(node$1.local, BIND_LEXICAL);\n                nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n                return nodes;\n              }\n              this.expect(types.braceL);\n              while (!this.eat(types.braceR)) {\n                if (!first) {\n                  this.expect(types.comma);\n                  if (this.afterTrailingComma(types.braceR)) {\n                    break;\n                  }\n                } else {\n                  first = false;\n                }\n                var node$2 = this.startNode();\n                node$2.imported = this.parseIdent(true);\n                if (this.eatContextual(\"as\")) {\n                  node$2.local = this.parseIdent();\n                } else {\n                  this.checkUnreserved(node$2.imported);\n                  node$2.local = node$2.imported;\n                }\n                this.checkLVal(node$2.local, BIND_LEXICAL);\n                nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n              }\n              return nodes;\n            };\n            pp$1.adaptDirectivePrologue = function (statements) {\n              for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n                statements[i].directive = statements[i].expression.raw.slice(1, -1);\n              }\n            };\n            pp$1.isDirectiveCandidate = function (statement) {\n              return statement.type === \"ExpressionStatement\" && statement.expression.type === \"Literal\" && typeof statement.expression.value === \"string\" && (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\");\n            };\n            var pp$2 = Parser.prototype;\n            pp$2.toAssignable = function (node, isBinding, refDestructuringErrors) {\n              if (this.options.ecmaVersion >= 6 && node) {\n                switch (node.type) {\n                  case \"Identifier\":\n                    if (this.inAsync && node.name === \"await\") {\n                      this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\");\n                    }\n                    break;\n                  case \"ObjectPattern\":\n                  case \"ArrayPattern\":\n                  case \"RestElement\":\n                    break;\n                  case \"ObjectExpression\":\n                    node.type = \"ObjectPattern\";\n                    if (refDestructuringErrors) {\n                      this.checkPatternErrors(refDestructuringErrors, true);\n                    }\n                    for (var i = 0, list = node.properties; i < list.length; i += 1) {\n                      var prop = list[i];\n                      this.toAssignable(prop, isBinding);\n                      if (prop.type === \"RestElement\" && (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")) {\n                        this.raise(prop.argument.start, \"Unexpected token\");\n                      }\n                    }\n                    break;\n                  case \"Property\":\n                    if (node.kind !== \"init\") {\n                      this.raise(node.key.start, \"Object pattern can't contain getter or setter\");\n                    }\n                    this.toAssignable(node.value, isBinding);\n                    break;\n                  case \"ArrayExpression\":\n                    node.type = \"ArrayPattern\";\n                    if (refDestructuringErrors) {\n                      this.checkPatternErrors(refDestructuringErrors, true);\n                    }\n                    this.toAssignableList(node.elements, isBinding);\n                    break;\n                  case \"SpreadElement\":\n                    node.type = \"RestElement\";\n                    this.toAssignable(node.argument, isBinding);\n                    if (node.argument.type === \"AssignmentPattern\") {\n                      this.raise(node.argument.start, \"Rest elements cannot have a default value\");\n                    }\n                    break;\n                  case \"AssignmentExpression\":\n                    if (node.operator !== \"=\") {\n                      this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\");\n                    }\n                    node.type = \"AssignmentPattern\";\n                    delete node.operator;\n                    this.toAssignable(node.left, isBinding);\n                  case \"AssignmentPattern\":\n                    break;\n                  case \"ParenthesizedExpression\":\n                    this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n                    break;\n                  case \"MemberExpression\":\n                    if (!isBinding) {\n                      break;\n                    }\n                  default:\n                    this.raise(node.start, \"Assigning to rvalue\");\n                }\n              } else if (refDestructuringErrors) {\n                this.checkPatternErrors(refDestructuringErrors, true);\n              }\n              return node;\n            };\n            pp$2.toAssignableList = function (exprList, isBinding) {\n              var end = exprList.length;\n              for (var i = 0; i < end; i++) {\n                var elt = exprList[i];\n                if (elt) {\n                  this.toAssignable(elt, isBinding);\n                }\n              }\n              if (end) {\n                var last = exprList[end - 1];\n                if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\") {\n                  this.unexpected(last.argument.start);\n                }\n              }\n              return exprList;\n            };\n            pp$2.parseSpread = function (refDestructuringErrors) {\n              var node = this.startNode();\n              this.next();\n              node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n              return this.finishNode(node, \"SpreadElement\");\n            };\n            pp$2.parseRestBinding = function () {\n              var node = this.startNode();\n              this.next();\n              if (this.options.ecmaVersion === 6 && this.type !== types.name) {\n                this.unexpected();\n              }\n              node.argument = this.parseBindingAtom();\n              return this.finishNode(node, \"RestElement\");\n            };\n            pp$2.parseBindingAtom = function () {\n              if (this.options.ecmaVersion >= 6) {\n                switch (this.type) {\n                  case types.bracketL:\n                    var node = this.startNode();\n                    this.next();\n                    node.elements = this.parseBindingList(types.bracketR, true, true);\n                    return this.finishNode(node, \"ArrayPattern\");\n                  case types.braceL:\n                    return this.parseObj(true);\n                }\n              }\n              return this.parseIdent();\n            };\n            pp$2.parseBindingList = function (close, allowEmpty, allowTrailingComma) {\n              var elts = [],\n                first = true;\n              while (!this.eat(close)) {\n                if (first) {\n                  first = false;\n                } else {\n                  this.expect(types.comma);\n                }\n                if (allowEmpty && this.type === types.comma) {\n                  elts.push(null);\n                } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n                  break;\n                } else if (this.type === types.ellipsis) {\n                  var rest = this.parseRestBinding();\n                  this.parseBindingListItem(rest);\n                  elts.push(rest);\n                  if (this.type === types.comma) {\n                    this.raise(this.start, \"Comma is not permitted after the rest element\");\n                  }\n                  this.expect(close);\n                  break;\n                } else {\n                  var elem = this.parseMaybeDefault(this.start, this.startLoc);\n                  this.parseBindingListItem(elem);\n                  elts.push(elem);\n                }\n              }\n              return elts;\n            };\n            pp$2.parseBindingListItem = function (param) {\n              return param;\n            };\n            pp$2.parseMaybeDefault = function (startPos, startLoc, left) {\n              left = left || this.parseBindingAtom();\n              if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) {\n                return left;\n              }\n              var node = this.startNodeAt(startPos, startLoc);\n              node.left = left;\n              node.right = this.parseMaybeAssign();\n              return this.finishNode(node, \"AssignmentPattern\");\n            };\n            pp$2.checkLVal = function (expr, bindingType, checkClashes) {\n              if (bindingType === void 0) bindingType = BIND_NONE;\n              switch (expr.type) {\n                case \"Identifier\":\n                  if (bindingType === BIND_LEXICAL && expr.name === \"let\") {\n                    this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\");\n                  }\n                  if (this.strict && this.reservedWordsStrictBind.test(expr.name)) {\n                    this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\");\n                  }\n                  if (checkClashes) {\n                    if (has(checkClashes, expr.name)) {\n                      this.raiseRecoverable(expr.start, \"Argument name clash\");\n                    }\n                    checkClashes[expr.name] = true;\n                  }\n                  if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) {\n                    this.declareName(expr.name, bindingType, expr.start);\n                  }\n                  break;\n                case \"MemberExpression\":\n                  if (bindingType) {\n                    this.raiseRecoverable(expr.start, \"Binding member expression\");\n                  }\n                  break;\n                case \"ObjectPattern\":\n                  for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n                    var prop = list[i];\n                    this.checkLVal(prop, bindingType, checkClashes);\n                  }\n                  break;\n                case \"Property\":\n                  this.checkLVal(expr.value, bindingType, checkClashes);\n                  break;\n                case \"ArrayPattern\":\n                  for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n                    var elem = list$1[i$1];\n                    if (elem) {\n                      this.checkLVal(elem, bindingType, checkClashes);\n                    }\n                  }\n                  break;\n                case \"AssignmentPattern\":\n                  this.checkLVal(expr.left, bindingType, checkClashes);\n                  break;\n                case \"RestElement\":\n                  this.checkLVal(expr.argument, bindingType, checkClashes);\n                  break;\n                case \"ParenthesizedExpression\":\n                  this.checkLVal(expr.expression, bindingType, checkClashes);\n                  break;\n                default:\n                  this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n              }\n            };\n            var pp$3 = Parser.prototype;\n            pp$3.checkPropClash = function (prop, propHash, refDestructuringErrors) {\n              if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\") {\n                return;\n              }\n              if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand)) {\n                return;\n              }\n              var key = prop.key;\n              var name;\n              switch (key.type) {\n                case \"Identifier\":\n                  name = key.name;\n                  break;\n                case \"Literal\":\n                  name = String(key.value);\n                  break;\n                default:\n                  return;\n              }\n              var kind = prop.kind;\n              if (this.options.ecmaVersion >= 6) {\n                if (name === \"__proto__\" && kind === \"init\") {\n                  if (propHash.proto) {\n                    if (refDestructuringErrors) {\n                      if (refDestructuringErrors.doubleProto < 0) {\n                        refDestructuringErrors.doubleProto = key.start;\n                      }\n                    } else {\n                      this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n                    }\n                  }\n                  propHash.proto = true;\n                }\n                return;\n              }\n              name = \"$\" + name;\n              var other = propHash[name];\n              if (other) {\n                var redefinition;\n                if (kind === \"init\") {\n                  redefinition = this.strict && other.init || other.get || other.set;\n                } else {\n                  redefinition = other.init || other[kind];\n                }\n                if (redefinition) {\n                  this.raiseRecoverable(key.start, \"Redefinition of property\");\n                }\n              } else {\n                other = propHash[name] = {\n                  init: false,\n                  get: false,\n                  set: false\n                };\n              }\n              other[kind] = true;\n            };\n            pp$3.parseExpression = function (noIn, refDestructuringErrors) {\n              var startPos = this.start,\n                startLoc = this.startLoc;\n              var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n              if (this.type === types.comma) {\n                var node = this.startNodeAt(startPos, startLoc);\n                node.expressions = [expr];\n                while (this.eat(types.comma)) {\n                  node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors));\n                }\n                return this.finishNode(node, \"SequenceExpression\");\n              }\n              return expr;\n            };\n            pp$3.parseMaybeAssign = function (noIn, refDestructuringErrors, afterLeftParse) {\n              if (this.isContextual(\"yield\")) {\n                if (this.inGenerator) {\n                  return this.parseYield(noIn);\n                } else {\n                  this.exprAllowed = false;\n                }\n              }\n              var ownDestructuringErrors = false,\n                oldParenAssign = -1,\n                oldTrailingComma = -1;\n              if (refDestructuringErrors) {\n                oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n                oldTrailingComma = refDestructuringErrors.trailingComma;\n                refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n              } else {\n                refDestructuringErrors = new DestructuringErrors();\n                ownDestructuringErrors = true;\n              }\n              var startPos = this.start,\n                startLoc = this.startLoc;\n              if (this.type === types.parenL || this.type === types.name) {\n                this.potentialArrowAt = this.start;\n              }\n              var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n              if (afterLeftParse) {\n                left = afterLeftParse.call(this, left, startPos, startLoc);\n              }\n              if (this.type.isAssign) {\n                var node = this.startNodeAt(startPos, startLoc);\n                node.operator = this.value;\n                node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n                if (!ownDestructuringErrors) {\n                  refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n                }\n                if (refDestructuringErrors.shorthandAssign >= node.left.start) {\n                  refDestructuringErrors.shorthandAssign = -1;\n                }\n                this.checkLVal(left);\n                this.next();\n                node.right = this.parseMaybeAssign(noIn);\n                return this.finishNode(node, \"AssignmentExpression\");\n              } else {\n                if (ownDestructuringErrors) {\n                  this.checkExpressionErrors(refDestructuringErrors, true);\n                }\n              }\n              if (oldParenAssign > -1) {\n                refDestructuringErrors.parenthesizedAssign = oldParenAssign;\n              }\n              if (oldTrailingComma > -1) {\n                refDestructuringErrors.trailingComma = oldTrailingComma;\n              }\n              return left;\n            };\n            pp$3.parseMaybeConditional = function (noIn, refDestructuringErrors) {\n              var startPos = this.start,\n                startLoc = this.startLoc;\n              var expr = this.parseExprOps(noIn, refDestructuringErrors);\n              if (this.checkExpressionErrors(refDestructuringErrors)) {\n                return expr;\n              }\n              if (this.eat(types.question)) {\n                var node = this.startNodeAt(startPos, startLoc);\n                node.test = expr;\n                node.consequent = this.parseMaybeAssign();\n                this.expect(types.colon);\n                node.alternate = this.parseMaybeAssign(noIn);\n                return this.finishNode(node, \"ConditionalExpression\");\n              }\n              return expr;\n            };\n            pp$3.parseExprOps = function (noIn, refDestructuringErrors) {\n              var startPos = this.start,\n                startLoc = this.startLoc;\n              var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n              if (this.checkExpressionErrors(refDestructuringErrors)) {\n                return expr;\n              }\n              return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn);\n            };\n            pp$3.parseExprOp = function (left, leftStartPos, leftStartLoc, minPrec, noIn) {\n              var prec = this.type.binop;\n              if (prec != null && (!noIn || this.type !== types._in)) {\n                if (prec > minPrec) {\n                  var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n                  var op = this.value;\n                  this.next();\n                  var startPos = this.start,\n                    startLoc = this.startLoc;\n                  var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n                  var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n                  return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn);\n                }\n              }\n              return left;\n            };\n            pp$3.buildBinary = function (startPos, startLoc, left, right, op, logical) {\n              var node = this.startNodeAt(startPos, startLoc);\n              node.left = left;\n              node.operator = op;\n              node.right = right;\n              return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\");\n            };\n            pp$3.parseMaybeUnary = function (refDestructuringErrors, sawUnary) {\n              var startPos = this.start,\n                startLoc = this.startLoc,\n                expr;\n              if (this.isContextual(\"await\") && (this.inAsync || !this.inFunction && this.options.allowAwaitOutsideFunction)) {\n                expr = this.parseAwait();\n                sawUnary = true;\n              } else if (this.type.prefix) {\n                var node = this.startNode(),\n                  update = this.type === types.incDec;\n                node.operator = this.value;\n                node.prefix = true;\n                this.next();\n                node.argument = this.parseMaybeUnary(null, true);\n                this.checkExpressionErrors(refDestructuringErrors, true);\n                if (update) {\n                  this.checkLVal(node.argument);\n                } else if (this.strict && node.operator === \"delete\" && node.argument.type === \"Identifier\") {\n                  this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\");\n                } else {\n                  sawUnary = true;\n                }\n                expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n              } else {\n                expr = this.parseExprSubscripts(refDestructuringErrors);\n                if (this.checkExpressionErrors(refDestructuringErrors)) {\n                  return expr;\n                }\n                while (this.type.postfix && !this.canInsertSemicolon()) {\n                  var node$1 = this.startNodeAt(startPos, startLoc);\n                  node$1.operator = this.value;\n                  node$1.prefix = false;\n                  node$1.argument = expr;\n                  this.checkLVal(expr);\n                  this.next();\n                  expr = this.finishNode(node$1, \"UpdateExpression\");\n                }\n              }\n              if (!sawUnary && this.eat(types.starstar)) {\n                return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false);\n              } else {\n                return expr;\n              }\n            };\n            pp$3.parseExprSubscripts = function (refDestructuringErrors) {\n              var startPos = this.start,\n                startLoc = this.startLoc;\n              var expr = this.parseExprAtom(refDestructuringErrors);\n              if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\") {\n                return expr;\n              }\n              var result = this.parseSubscripts(expr, startPos, startLoc);\n              if (refDestructuringErrors && result.type === \"MemberExpression\") {\n                if (refDestructuringErrors.parenthesizedAssign >= result.start) {\n                  refDestructuringErrors.parenthesizedAssign = -1;\n                }\n                if (refDestructuringErrors.parenthesizedBind >= result.start) {\n                  refDestructuringErrors.parenthesizedBind = -1;\n                }\n              }\n              return result;\n            };\n            pp$3.parseSubscripts = function (base, startPos, startLoc, noCalls) {\n              var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" && this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n              while (true) {\n                var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow);\n                if (element === base || element.type === \"ArrowFunctionExpression\") {\n                  return element;\n                }\n                base = element;\n              }\n            };\n            pp$3.parseSubscript = function (base, startPos, startLoc, noCalls, maybeAsyncArrow) {\n              var computed = this.eat(types.bracketL);\n              if (computed || this.eat(types.dot)) {\n                var node = this.startNodeAt(startPos, startLoc);\n                node.object = base;\n                node.property = computed ? this.parseExpression() : this.parseIdent(this.options.allowReserved !== \"never\");\n                node.computed = !!computed;\n                if (computed) {\n                  this.expect(types.bracketR);\n                }\n                base = this.finishNode(node, \"MemberExpression\");\n              } else if (!noCalls && this.eat(types.parenL)) {\n                var refDestructuringErrors = new DestructuringErrors(),\n                  oldYieldPos = this.yieldPos,\n                  oldAwaitPos = this.awaitPos,\n                  oldAwaitIdentPos = this.awaitIdentPos;\n                this.yieldPos = 0;\n                this.awaitPos = 0;\n                this.awaitIdentPos = 0;\n                var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n                if (maybeAsyncArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n                  this.checkPatternErrors(refDestructuringErrors, false);\n                  this.checkYieldAwaitInDefaultParams();\n                  if (this.awaitIdentPos > 0) {\n                    this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\");\n                  }\n                  this.yieldPos = oldYieldPos;\n                  this.awaitPos = oldAwaitPos;\n                  this.awaitIdentPos = oldAwaitIdentPos;\n                  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true);\n                }\n                this.checkExpressionErrors(refDestructuringErrors, true);\n                this.yieldPos = oldYieldPos || this.yieldPos;\n                this.awaitPos = oldAwaitPos || this.awaitPos;\n                this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n                var node$1 = this.startNodeAt(startPos, startLoc);\n                node$1.callee = base;\n                node$1.arguments = exprList;\n                base = this.finishNode(node$1, \"CallExpression\");\n              } else if (this.type === types.backQuote) {\n                var node$2 = this.startNodeAt(startPos, startLoc);\n                node$2.tag = base;\n                node$2.quasi = this.parseTemplate({\n                  isTagged: true\n                });\n                base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n              }\n              return base;\n            };\n            pp$3.parseExprAtom = function (refDestructuringErrors) {\n              if (this.type === types.slash) {\n                this.readRegexp();\n              }\n              var node,\n                canBeArrow = this.potentialArrowAt === this.start;\n              switch (this.type) {\n                case types._super:\n                  if (!this.allowSuper) {\n                    this.raise(this.start, \"'super' keyword outside a method\");\n                  }\n                  node = this.startNode();\n                  this.next();\n                  if (this.type === types.parenL && !this.allowDirectSuper) {\n                    this.raise(node.start, \"super() call outside constructor of a subclass\");\n                  }\n                  if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL) {\n                    this.unexpected();\n                  }\n                  return this.finishNode(node, \"Super\");\n                case types._this:\n                  node = this.startNode();\n                  this.next();\n                  return this.finishNode(node, \"ThisExpression\");\n                case types.name:\n                  var startPos = this.start,\n                    startLoc = this.startLoc,\n                    containsEsc = this.containsEsc;\n                  var id = this.parseIdent(false);\n                  if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function)) {\n                    return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true);\n                  }\n                  if (canBeArrow && !this.canInsertSemicolon()) {\n                    if (this.eat(types.arrow)) {\n                      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false);\n                    }\n                    if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n                      id = this.parseIdent(false);\n                      if (this.canInsertSemicolon() || !this.eat(types.arrow)) {\n                        this.unexpected();\n                      }\n                      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true);\n                    }\n                  }\n                  return id;\n                case types.regexp:\n                  var value = this.value;\n                  node = this.parseLiteral(value.value);\n                  node.regex = {\n                    pattern: value.pattern,\n                    flags: value.flags\n                  };\n                  return node;\n                case types.num:\n                case types.string:\n                  return this.parseLiteral(this.value);\n                case types._null:\n                case types._true:\n                case types._false:\n                  node = this.startNode();\n                  node.value = this.type === types._null ? null : this.type === types._true;\n                  node.raw = this.type.keyword;\n                  this.next();\n                  return this.finishNode(node, \"Literal\");\n                case types.parenL:\n                  var start = this.start,\n                    expr = this.parseParenAndDistinguishExpression(canBeArrow);\n                  if (refDestructuringErrors) {\n                    if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr)) {\n                      refDestructuringErrors.parenthesizedAssign = start;\n                    }\n                    if (refDestructuringErrors.parenthesizedBind < 0) {\n                      refDestructuringErrors.parenthesizedBind = start;\n                    }\n                  }\n                  return expr;\n                case types.bracketL:\n                  node = this.startNode();\n                  this.next();\n                  node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n                  return this.finishNode(node, \"ArrayExpression\");\n                case types.braceL:\n                  return this.parseObj(false, refDestructuringErrors);\n                case types._function:\n                  node = this.startNode();\n                  this.next();\n                  return this.parseFunction(node, 0);\n                case types._class:\n                  return this.parseClass(this.startNode(), false);\n                case types._new:\n                  return this.parseNew();\n                case types.backQuote:\n                  return this.parseTemplate();\n                case types._import:\n                  if (this.options.ecmaVersion >= 11) {\n                    return this.parseExprImport();\n                  } else {\n                    return this.unexpected();\n                  }\n                default:\n                  this.unexpected();\n              }\n            };\n            pp$3.parseExprImport = function () {\n              var node = this.startNode();\n              this.next();\n              switch (this.type) {\n                case types.parenL:\n                  return this.parseDynamicImport(node);\n                default:\n                  this.unexpected();\n              }\n            };\n            pp$3.parseDynamicImport = function (node) {\n              this.next();\n              node.source = this.parseMaybeAssign();\n              if (!this.eat(types.parenR)) {\n                var errorPos = this.start;\n                if (this.eat(types.comma) && this.eat(types.parenR)) {\n                  this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n                } else {\n                  this.unexpected(errorPos);\n                }\n              }\n              return this.finishNode(node, \"ImportExpression\");\n            };\n            pp$3.parseLiteral = function (value) {\n              var node = this.startNode();\n              node.value = value;\n              node.raw = this.input.slice(this.start, this.end);\n              if (node.raw.charCodeAt(node.raw.length - 1) === 110) {\n                node.bigint = node.raw.slice(0, -1);\n              }\n              this.next();\n              return this.finishNode(node, \"Literal\");\n            };\n            pp$3.parseParenExpression = function () {\n              this.expect(types.parenL);\n              var val = this.parseExpression();\n              this.expect(types.parenR);\n              return val;\n            };\n            pp$3.parseParenAndDistinguishExpression = function (canBeArrow) {\n              var startPos = this.start,\n                startLoc = this.startLoc,\n                val,\n                allowTrailingComma = this.options.ecmaVersion >= 8;\n              if (this.options.ecmaVersion >= 6) {\n                this.next();\n                var innerStartPos = this.start,\n                  innerStartLoc = this.startLoc;\n                var exprList = [],\n                  first = true,\n                  lastIsComma = false;\n                var refDestructuringErrors = new DestructuringErrors(),\n                  oldYieldPos = this.yieldPos,\n                  oldAwaitPos = this.awaitPos,\n                  spreadStart;\n                this.yieldPos = 0;\n                this.awaitPos = 0;\n                while (this.type !== types.parenR) {\n                  first ? first = false : this.expect(types.comma);\n                  if (allowTrailingComma && this.afterTrailingComma(types.parenR, true)) {\n                    lastIsComma = true;\n                    break;\n                  } else if (this.type === types.ellipsis) {\n                    spreadStart = this.start;\n                    exprList.push(this.parseParenItem(this.parseRestBinding()));\n                    if (this.type === types.comma) {\n                      this.raise(this.start, \"Comma is not permitted after the rest element\");\n                    }\n                    break;\n                  } else {\n                    exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n                  }\n                }\n                var innerEndPos = this.start,\n                  innerEndLoc = this.startLoc;\n                this.expect(types.parenR);\n                if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n                  this.checkPatternErrors(refDestructuringErrors, false);\n                  this.checkYieldAwaitInDefaultParams();\n                  this.yieldPos = oldYieldPos;\n                  this.awaitPos = oldAwaitPos;\n                  return this.parseParenArrowList(startPos, startLoc, exprList);\n                }\n                if (!exprList.length || lastIsComma) {\n                  this.unexpected(this.lastTokStart);\n                }\n                if (spreadStart) {\n                  this.unexpected(spreadStart);\n                }\n                this.checkExpressionErrors(refDestructuringErrors, true);\n                this.yieldPos = oldYieldPos || this.yieldPos;\n                this.awaitPos = oldAwaitPos || this.awaitPos;\n                if (exprList.length > 1) {\n                  val = this.startNodeAt(innerStartPos, innerStartLoc);\n                  val.expressions = exprList;\n                  this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n                } else {\n                  val = exprList[0];\n                }\n              } else {\n                val = this.parseParenExpression();\n              }\n              if (this.options.preserveParens) {\n                var par = this.startNodeAt(startPos, startLoc);\n                par.expression = val;\n                return this.finishNode(par, \"ParenthesizedExpression\");\n              } else {\n                return val;\n              }\n            };\n            pp$3.parseParenItem = function (item) {\n              return item;\n            };\n            pp$3.parseParenArrowList = function (startPos, startLoc, exprList) {\n              return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList);\n            };\n            var empty$1 = [];\n            pp$3.parseNew = function () {\n              if (this.containsEsc) {\n                this.raiseRecoverable(this.start, \"Escape sequence in keyword new\");\n              }\n              var node = this.startNode();\n              var meta = this.parseIdent(true);\n              if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n                node.meta = meta;\n                var containsEsc = this.containsEsc;\n                node.property = this.parseIdent(true);\n                if (node.property.name !== \"target\" || containsEsc) {\n                  this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\");\n                }\n                if (!this.inNonArrowFunction()) {\n                  this.raiseRecoverable(node.start, \"new.target can only be used in functions\");\n                }\n                return this.finishNode(node, \"MetaProperty\");\n              }\n              var startPos = this.start,\n                startLoc = this.startLoc,\n                isImport = this.type === types._import;\n              node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n              if (isImport && node.callee.type === \"ImportExpression\") {\n                this.raise(startPos, \"Cannot use new with import()\");\n              }\n              if (this.eat(types.parenL)) {\n                node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false);\n              } else {\n                node.arguments = empty$1;\n              }\n              return this.finishNode(node, \"NewExpression\");\n            };\n            pp$3.parseTemplateElement = function (ref) {\n              var isTagged = ref.isTagged;\n              var elem = this.startNode();\n              if (this.type === types.invalidTemplate) {\n                if (!isTagged) {\n                  this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n                }\n                elem.value = {\n                  raw: this.value,\n                  cooked: null\n                };\n              } else {\n                elem.value = {\n                  raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n                  cooked: this.value\n                };\n              }\n              this.next();\n              elem.tail = this.type === types.backQuote;\n              return this.finishNode(elem, \"TemplateElement\");\n            };\n            pp$3.parseTemplate = function (ref) {\n              if (ref === void 0) ref = {};\n              var isTagged = ref.isTagged;\n              if (isTagged === void 0) isTagged = false;\n              var node = this.startNode();\n              this.next();\n              node.expressions = [];\n              var curElt = this.parseTemplateElement({\n                isTagged: isTagged\n              });\n              node.quasis = [curElt];\n              while (!curElt.tail) {\n                if (this.type === types.eof) {\n                  this.raise(this.pos, \"Unterminated template literal\");\n                }\n                this.expect(types.dollarBraceL);\n                node.expressions.push(this.parseExpression());\n                this.expect(types.braceR);\n                node.quasis.push(curElt = this.parseTemplateElement({\n                  isTagged: isTagged\n                }));\n              }\n              this.next();\n              return this.finishNode(node, \"TemplateLiteral\");\n            };\n            pp$3.isAsyncProp = function (prop) {\n              return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" && (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === types.star) && !lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n            };\n            pp$3.parseObj = function (isPattern, refDestructuringErrors) {\n              var node = this.startNode(),\n                first = true,\n                propHash = {};\n              node.properties = [];\n              this.next();\n              while (!this.eat(types.braceR)) {\n                if (!first) {\n                  this.expect(types.comma);\n                  if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types.braceR)) {\n                    break;\n                  }\n                } else {\n                  first = false;\n                }\n                var prop = this.parseProperty(isPattern, refDestructuringErrors);\n                if (!isPattern) {\n                  this.checkPropClash(prop, propHash, refDestructuringErrors);\n                }\n                node.properties.push(prop);\n              }\n              return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\");\n            };\n            pp$3.parseProperty = function (isPattern, refDestructuringErrors) {\n              var prop = this.startNode(),\n                isGenerator,\n                isAsync,\n                startPos,\n                startLoc;\n              if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n                if (isPattern) {\n                  prop.argument = this.parseIdent(false);\n                  if (this.type === types.comma) {\n                    this.raise(this.start, \"Comma is not permitted after the rest element\");\n                  }\n                  return this.finishNode(prop, \"RestElement\");\n                }\n                if (this.type === types.parenL && refDestructuringErrors) {\n                  if (refDestructuringErrors.parenthesizedAssign < 0) {\n                    refDestructuringErrors.parenthesizedAssign = this.start;\n                  }\n                  if (refDestructuringErrors.parenthesizedBind < 0) {\n                    refDestructuringErrors.parenthesizedBind = this.start;\n                  }\n                }\n                prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n                if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n                  refDestructuringErrors.trailingComma = this.start;\n                }\n                return this.finishNode(prop, \"SpreadElement\");\n              }\n              if (this.options.ecmaVersion >= 6) {\n                prop.method = false;\n                prop.shorthand = false;\n                if (isPattern || refDestructuringErrors) {\n                  startPos = this.start;\n                  startLoc = this.startLoc;\n                }\n                if (!isPattern) {\n                  isGenerator = this.eat(types.star);\n                }\n              }\n              var containsEsc = this.containsEsc;\n              this.parsePropertyName(prop);\n              if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n                isAsync = true;\n                isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n                this.parsePropertyName(prop, refDestructuringErrors);\n              } else {\n                isAsync = false;\n              }\n              this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n              return this.finishNode(prop, \"Property\");\n            };\n            pp$3.parsePropertyValue = function (prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n              if ((isGenerator || isAsync) && this.type === types.colon) {\n                this.unexpected();\n              }\n              if (this.eat(types.colon)) {\n                prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n                prop.kind = \"init\";\n              } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n                if (isPattern) {\n                  this.unexpected();\n                }\n                prop.kind = \"init\";\n                prop.method = true;\n                prop.value = this.parseMethod(isGenerator, isAsync);\n              } else if (!isPattern && !containsEsc && this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" && (prop.key.name === \"get\" || prop.key.name === \"set\") && this.type !== types.comma && this.type !== types.braceR) {\n                if (isGenerator || isAsync) {\n                  this.unexpected();\n                }\n                prop.kind = prop.key.name;\n                this.parsePropertyName(prop);\n                prop.value = this.parseMethod(false);\n                var paramCount = prop.kind === \"get\" ? 0 : 1;\n                if (prop.value.params.length !== paramCount) {\n                  var start = prop.value.start;\n                  if (prop.kind === \"get\") {\n                    this.raiseRecoverable(start, \"getter should have no params\");\n                  } else {\n                    this.raiseRecoverable(start, \"setter should have exactly one param\");\n                  }\n                } else {\n                  if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\") {\n                    this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\");\n                  }\n                }\n              } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n                if (isGenerator || isAsync) {\n                  this.unexpected();\n                }\n                this.checkUnreserved(prop.key);\n                if (prop.key.name === \"await\" && !this.awaitIdentPos) {\n                  this.awaitIdentPos = startPos;\n                }\n                prop.kind = \"init\";\n                if (isPattern) {\n                  prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n                } else if (this.type === types.eq && refDestructuringErrors) {\n                  if (refDestructuringErrors.shorthandAssign < 0) {\n                    refDestructuringErrors.shorthandAssign = this.start;\n                  }\n                  prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n                } else {\n                  prop.value = prop.key;\n                }\n                prop.shorthand = true;\n              } else {\n                this.unexpected();\n              }\n            };\n            pp$3.parsePropertyName = function (prop) {\n              if (this.options.ecmaVersion >= 6) {\n                if (this.eat(types.bracketL)) {\n                  prop.computed = true;\n                  prop.key = this.parseMaybeAssign();\n                  this.expect(types.bracketR);\n                  return prop.key;\n                } else {\n                  prop.computed = false;\n                }\n              }\n              return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\");\n            };\n            pp$3.initFunction = function (node) {\n              node.id = null;\n              if (this.options.ecmaVersion >= 6) {\n                node.generator = node.expression = false;\n              }\n              if (this.options.ecmaVersion >= 8) {\n                node.async = false;\n              }\n            };\n            pp$3.parseMethod = function (isGenerator, isAsync, allowDirectSuper) {\n              var node = this.startNode(),\n                oldYieldPos = this.yieldPos,\n                oldAwaitPos = this.awaitPos,\n                oldAwaitIdentPos = this.awaitIdentPos;\n              this.initFunction(node);\n              if (this.options.ecmaVersion >= 6) {\n                node.generator = isGenerator;\n              }\n              if (this.options.ecmaVersion >= 8) {\n                node.async = !!isAsync;\n              }\n              this.yieldPos = 0;\n              this.awaitPos = 0;\n              this.awaitIdentPos = 0;\n              this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n              this.expect(types.parenL);\n              node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n              this.checkYieldAwaitInDefaultParams();\n              this.parseFunctionBody(node, false, true);\n              this.yieldPos = oldYieldPos;\n              this.awaitPos = oldAwaitPos;\n              this.awaitIdentPos = oldAwaitIdentPos;\n              return this.finishNode(node, \"FunctionExpression\");\n            };\n            pp$3.parseArrowExpression = function (node, params, isAsync) {\n              var oldYieldPos = this.yieldPos,\n                oldAwaitPos = this.awaitPos,\n                oldAwaitIdentPos = this.awaitIdentPos;\n              this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n              this.initFunction(node);\n              if (this.options.ecmaVersion >= 8) {\n                node.async = !!isAsync;\n              }\n              this.yieldPos = 0;\n              this.awaitPos = 0;\n              this.awaitIdentPos = 0;\n              node.params = this.toAssignableList(params, true);\n              this.parseFunctionBody(node, true, false);\n              this.yieldPos = oldYieldPos;\n              this.awaitPos = oldAwaitPos;\n              this.awaitIdentPos = oldAwaitIdentPos;\n              return this.finishNode(node, \"ArrowFunctionExpression\");\n            };\n            pp$3.parseFunctionBody = function (node, isArrowFunction, isMethod) {\n              var isExpression = isArrowFunction && this.type !== types.braceL;\n              var oldStrict = this.strict,\n                useStrict = false;\n              if (isExpression) {\n                node.body = this.parseMaybeAssign();\n                node.expression = true;\n                this.checkParams(node, false);\n              } else {\n                var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n                if (!oldStrict || nonSimple) {\n                  useStrict = this.strictDirective(this.end);\n                  if (useStrict && nonSimple) {\n                    this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\");\n                  }\n                }\n                var oldLabels = this.labels;\n                this.labels = [];\n                if (useStrict) {\n                  this.strict = true;\n                }\n                this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n                node.body = this.parseBlock(false);\n                node.expression = false;\n                this.adaptDirectivePrologue(node.body.body);\n                this.labels = oldLabels;\n              }\n              this.exitScope();\n              if (this.strict && node.id) {\n                this.checkLVal(node.id, BIND_OUTSIDE);\n              }\n              this.strict = oldStrict;\n            };\n            pp$3.isSimpleParamList = function (params) {\n              for (var i = 0, list = params; i < list.length; i += 1) {\n                var param = list[i];\n                if (param.type !== \"Identifier\") {\n                  return false;\n                }\n              }\n              return true;\n            };\n            pp$3.checkParams = function (node, allowDuplicates) {\n              var nameHash = {};\n              for (var i = 0, list = node.params; i < list.length; i += 1) {\n                var param = list[i];\n                this.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n              }\n            };\n            pp$3.parseExprList = function (close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n              var elts = [],\n                first = true;\n              while (!this.eat(close)) {\n                if (!first) {\n                  this.expect(types.comma);\n                  if (allowTrailingComma && this.afterTrailingComma(close)) {\n                    break;\n                  }\n                } else {\n                  first = false;\n                }\n                var elt = void 0;\n                if (allowEmpty && this.type === types.comma) {\n                  elt = null;\n                } else if (this.type === types.ellipsis) {\n                  elt = this.parseSpread(refDestructuringErrors);\n                  if (refDestructuringErrors && this.type === types.comma && refDestructuringErrors.trailingComma < 0) {\n                    refDestructuringErrors.trailingComma = this.start;\n                  }\n                } else {\n                  elt = this.parseMaybeAssign(false, refDestructuringErrors);\n                }\n                elts.push(elt);\n              }\n              return elts;\n            };\n            pp$3.checkUnreserved = function (ref) {\n              var start = ref.start;\n              var end = ref.end;\n              var name = ref.name;\n              if (this.inGenerator && name === \"yield\") {\n                this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\");\n              }\n              if (this.inAsync && name === \"await\") {\n                this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\");\n              }\n              if (this.keywords.test(name)) {\n                this.raise(start, \"Unexpected keyword '\" + name + \"'\");\n              }\n              if (this.options.ecmaVersion < 6 && this.input.slice(start, end).indexOf(\"\\\\\") !== -1) {\n                return;\n              }\n              var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n              if (re.test(name)) {\n                if (!this.inAsync && name === \"await\") {\n                  this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\");\n                }\n                this.raiseRecoverable(start, \"The keyword '\" + name + \"' is reserved\");\n              }\n            };\n            pp$3.parseIdent = function (liberal, isBinding) {\n              var node = this.startNode();\n              if (this.type === types.name) {\n                node.name = this.value;\n              } else if (this.type.keyword) {\n                node.name = this.type.keyword;\n                if ((node.name === \"class\" || node.name === \"function\") && (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n                  this.context.pop();\n                }\n              } else {\n                this.unexpected();\n              }\n              this.next(!!liberal);\n              this.finishNode(node, \"Identifier\");\n              if (!liberal) {\n                this.checkUnreserved(node);\n                if (node.name === \"await\" && !this.awaitIdentPos) {\n                  this.awaitIdentPos = node.start;\n                }\n              }\n              return node;\n            };\n            pp$3.parseYield = function (noIn) {\n              if (!this.yieldPos) {\n                this.yieldPos = this.start;\n              }\n              var node = this.startNode();\n              this.next();\n              if (this.type === types.semi || this.canInsertSemicolon() || this.type !== types.star && !this.type.startsExpr) {\n                node.delegate = false;\n                node.argument = null;\n              } else {\n                node.delegate = this.eat(types.star);\n                node.argument = this.parseMaybeAssign(noIn);\n              }\n              return this.finishNode(node, \"YieldExpression\");\n            };\n            pp$3.parseAwait = function () {\n              if (!this.awaitPos) {\n                this.awaitPos = this.start;\n              }\n              var node = this.startNode();\n              this.next();\n              node.argument = this.parseMaybeUnary(null, false);\n              return this.finishNode(node, \"AwaitExpression\");\n            };\n            var pp$4 = Parser.prototype;\n            pp$4.raise = function (pos, message) {\n              var loc = getLineInfo(this.input, pos);\n              message += \" (\" + loc.line + \":\" + loc.column + \")\";\n              var err = new SyntaxError(message);\n              err.pos = pos;\n              err.loc = loc;\n              err.raisedAt = this.pos;\n              throw err;\n            };\n            pp$4.raiseRecoverable = pp$4.raise;\n            pp$4.curPosition = function () {\n              if (this.options.locations) {\n                return new Position(this.curLine, this.pos - this.lineStart);\n              }\n            };\n            var pp$5 = Parser.prototype;\n            var Scope = function Scope(flags) {\n              this.flags = flags;\n              this.var = [];\n              this.lexical = [];\n              this.functions = [];\n            };\n            pp$5.enterScope = function (flags) {\n              this.scopeStack.push(new Scope(flags));\n            };\n            pp$5.exitScope = function () {\n              this.scopeStack.pop();\n            };\n            pp$5.treatFunctionsAsVarInScope = function (scope) {\n              return scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_TOP;\n            };\n            pp$5.declareName = function (name, bindingType, pos) {\n              var redeclared = false;\n              if (bindingType === BIND_LEXICAL) {\n                var scope = this.currentScope();\n                redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n                scope.lexical.push(name);\n                if (this.inModule && scope.flags & SCOPE_TOP) {\n                  delete this.undefinedExports[name];\n                }\n              } else if (bindingType === BIND_SIMPLE_CATCH) {\n                var scope$1 = this.currentScope();\n                scope$1.lexical.push(name);\n              } else if (bindingType === BIND_FUNCTION) {\n                var scope$2 = this.currentScope();\n                if (this.treatFunctionsAsVar) {\n                  redeclared = scope$2.lexical.indexOf(name) > -1;\n                } else {\n                  redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1;\n                }\n                scope$2.functions.push(name);\n              } else {\n                for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n                  var scope$3 = this.scopeStack[i];\n                  if (scope$3.lexical.indexOf(name) > -1 && !(scope$3.flags & SCOPE_SIMPLE_CATCH && scope$3.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n                    redeclared = true;\n                    break;\n                  }\n                  scope$3.var.push(name);\n                  if (this.inModule && scope$3.flags & SCOPE_TOP) {\n                    delete this.undefinedExports[name];\n                  }\n                  if (scope$3.flags & SCOPE_VAR) {\n                    break;\n                  }\n                }\n              }\n              if (redeclared) {\n                this.raiseRecoverable(pos, \"Identifier '\" + name + \"' has already been declared\");\n              }\n            };\n            pp$5.checkLocalExport = function (id) {\n              if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1) {\n                this.undefinedExports[id.name] = id;\n              }\n            };\n            pp$5.currentScope = function () {\n              return this.scopeStack[this.scopeStack.length - 1];\n            };\n            pp$5.currentVarScope = function () {\n              for (var i = this.scopeStack.length - 1;; i--) {\n                var scope = this.scopeStack[i];\n                if (scope.flags & SCOPE_VAR) {\n                  return scope;\n                }\n              }\n            };\n            pp$5.currentThisScope = function () {\n              for (var i = this.scopeStack.length - 1;; i--) {\n                var scope = this.scopeStack[i];\n                if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) {\n                  return scope;\n                }\n              }\n            };\n            var Node = function Node(parser, pos, loc) {\n              this.type = \"\";\n              this.start = pos;\n              this.end = 0;\n              if (parser.options.locations) {\n                this.loc = new SourceLocation(parser, loc);\n              }\n              if (parser.options.directSourceFile) {\n                this.sourceFile = parser.options.directSourceFile;\n              }\n              if (parser.options.ranges) {\n                this.range = [pos, 0];\n              }\n            };\n            var pp$6 = Parser.prototype;\n            pp$6.startNode = function () {\n              return new Node(this, this.start, this.startLoc);\n            };\n            pp$6.startNodeAt = function (pos, loc) {\n              return new Node(this, pos, loc);\n            };\n            function finishNodeAt(node, type, pos, loc) {\n              node.type = type;\n              node.end = pos;\n              if (this.options.locations) {\n                node.loc.end = loc;\n              }\n              if (this.options.ranges) {\n                node.range[1] = pos;\n              }\n              return node;\n            }\n            pp$6.finishNode = function (node, type) {\n              return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc);\n            };\n            pp$6.finishNodeAt = function (node, type, pos, loc) {\n              return finishNodeAt.call(this, node, type, pos, loc);\n            };\n            var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n              this.token = token;\n              this.isExpr = !!isExpr;\n              this.preserveSpace = !!preserveSpace;\n              this.override = override;\n              this.generator = !!generator;\n            };\n            var types$1 = {\n              b_stat: new TokContext(\"{\", false),\n              b_expr: new TokContext(\"{\", true),\n              b_tmpl: new TokContext(\"${\", false),\n              p_stat: new TokContext(\"(\", false),\n              p_expr: new TokContext(\"(\", true),\n              q_tmpl: new TokContext(\"`\", true, true, function (p) {\n                return p.tryReadTemplateToken();\n              }),\n              f_stat: new TokContext(\"function\", false),\n              f_expr: new TokContext(\"function\", true),\n              f_expr_gen: new TokContext(\"function\", true, false, null, true),\n              f_gen: new TokContext(\"function\", false, false, null, true)\n            };\n            var pp$7 = Parser.prototype;\n            pp$7.initialContext = function () {\n              return [types$1.b_stat];\n            };\n            pp$7.braceIsBlock = function (prevType) {\n              var parent = this.curContext();\n              if (parent === types$1.f_expr || parent === types$1.f_stat) {\n                return true;\n              }\n              if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr)) {\n                return !parent.isExpr;\n              }\n              if (prevType === types._return || prevType === types.name && this.exprAllowed) {\n                return lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n              }\n              if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n                return true;\n              }\n              if (prevType === types.braceL) {\n                return parent === types$1.b_stat;\n              }\n              if (prevType === types._var || prevType === types._const || prevType === types.name) {\n                return false;\n              }\n              return !this.exprAllowed;\n            };\n            pp$7.inGeneratorContext = function () {\n              for (var i = this.context.length - 1; i >= 1; i--) {\n                var context = this.context[i];\n                if (context.token === \"function\") {\n                  return context.generator;\n                }\n              }\n              return false;\n            };\n            pp$7.updateContext = function (prevType) {\n              var update,\n                type = this.type;\n              if (type.keyword && prevType === types.dot) {\n                this.exprAllowed = false;\n              } else if (update = type.updateContext) {\n                update.call(this, prevType);\n              } else {\n                this.exprAllowed = type.beforeExpr;\n              }\n            };\n            types.parenR.updateContext = types.braceR.updateContext = function () {\n              if (this.context.length === 1) {\n                this.exprAllowed = true;\n                return;\n              }\n              var out = this.context.pop();\n              if (out === types$1.b_stat && this.curContext().token === \"function\") {\n                out = this.context.pop();\n              }\n              this.exprAllowed = !out.isExpr;\n            };\n            types.braceL.updateContext = function (prevType) {\n              this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n              this.exprAllowed = true;\n            };\n            types.dollarBraceL.updateContext = function () {\n              this.context.push(types$1.b_tmpl);\n              this.exprAllowed = true;\n            };\n            types.parenL.updateContext = function (prevType) {\n              var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n              this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n              this.exprAllowed = true;\n            };\n            types.incDec.updateContext = function () {};\n            types._function.updateContext = types._class.updateContext = function (prevType) {\n              if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n                this.context.push(types$1.f_expr);\n              } else {\n                this.context.push(types$1.f_stat);\n              }\n              this.exprAllowed = false;\n            };\n            types.backQuote.updateContext = function () {\n              if (this.curContext() === types$1.q_tmpl) {\n                this.context.pop();\n              } else {\n                this.context.push(types$1.q_tmpl);\n              }\n              this.exprAllowed = false;\n            };\n            types.star.updateContext = function (prevType) {\n              if (prevType === types._function) {\n                var index = this.context.length - 1;\n                if (this.context[index] === types$1.f_expr) {\n                  this.context[index] = types$1.f_expr_gen;\n                } else {\n                  this.context[index] = types$1.f_gen;\n                }\n              }\n              this.exprAllowed = true;\n            };\n            types.name.updateContext = function (prevType) {\n              var allowed = false;\n              if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n                if (this.value === \"of\" && !this.exprAllowed || this.value === \"yield\" && this.inGeneratorContext()) {\n                  allowed = true;\n                }\n              }\n              this.exprAllowed = allowed;\n            };\n            var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n            var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n            var ecma11BinaryProperties = ecma10BinaryProperties;\n            var unicodeBinaryProperties = {\n              9: ecma9BinaryProperties,\n              10: ecma10BinaryProperties,\n              11: ecma11BinaryProperties\n            };\n            var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n            var ecma9ScriptValues = \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n            var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n            var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n            var unicodeScriptValues = {\n              9: ecma9ScriptValues,\n              10: ecma10ScriptValues,\n              11: ecma11ScriptValues\n            };\n            var data = {};\n            function buildUnicodeData(ecmaVersion) {\n              var d = data[ecmaVersion] = {\n                binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n                nonBinary: {\n                  General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n                  Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n                }\n              };\n              d.nonBinary.Script_Extensions = d.nonBinary.Script;\n              d.nonBinary.gc = d.nonBinary.General_Category;\n              d.nonBinary.sc = d.nonBinary.Script;\n              d.nonBinary.scx = d.nonBinary.Script_Extensions;\n            }\n            buildUnicodeData(9);\n            buildUnicodeData(10);\n            buildUnicodeData(11);\n            var pp$8 = Parser.prototype;\n            var RegExpValidationState = function RegExpValidationState(parser) {\n              this.parser = parser;\n              this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n              this.unicodeProperties = data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];\n              this.source = \"\";\n              this.flags = \"\";\n              this.start = 0;\n              this.switchU = false;\n              this.switchN = false;\n              this.pos = 0;\n              this.lastIntValue = 0;\n              this.lastStringValue = \"\";\n              this.lastAssertionIsQuantifiable = false;\n              this.numCapturingParens = 0;\n              this.maxBackReference = 0;\n              this.groupNames = [];\n              this.backReferenceNames = [];\n            };\n            RegExpValidationState.prototype.reset = function reset(start, pattern, flags) {\n              var unicode = flags.indexOf(\"u\") !== -1;\n              this.start = start | 0;\n              this.source = pattern + \"\";\n              this.flags = flags;\n              this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n              this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n            };\n            RegExpValidationState.prototype.raise = function raise(message) {\n              this.parser.raiseRecoverable(this.start, \"Invalid regular expression: /\" + this.source + \"/: \" + message);\n            };\n            RegExpValidationState.prototype.at = function at(i) {\n              var s = this.source;\n              var l = s.length;\n              if (i >= l) {\n                return -1;\n              }\n              var c = s.charCodeAt(i);\n              if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n                return c;\n              }\n              var next = s.charCodeAt(i + 1);\n              return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c;\n            };\n            RegExpValidationState.prototype.nextIndex = function nextIndex(i) {\n              var s = this.source;\n              var l = s.length;\n              if (i >= l) {\n                return l;\n              }\n              var c = s.charCodeAt(i),\n                next;\n              if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l || (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n                return i + 1;\n              }\n              return i + 2;\n            };\n            RegExpValidationState.prototype.current = function current() {\n              return this.at(this.pos);\n            };\n            RegExpValidationState.prototype.lookahead = function lookahead() {\n              return this.at(this.nextIndex(this.pos));\n            };\n            RegExpValidationState.prototype.advance = function advance() {\n              this.pos = this.nextIndex(this.pos);\n            };\n            RegExpValidationState.prototype.eat = function eat(ch) {\n              if (this.current() === ch) {\n                this.advance();\n                return true;\n              }\n              return false;\n            };\n            function codePointToString(ch) {\n              if (ch <= 0xFFFF) {\n                return String.fromCharCode(ch);\n              }\n              ch -= 0x10000;\n              return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00);\n            }\n            pp$8.validateRegExpFlags = function (state) {\n              var validFlags = state.validFlags;\n              var flags = state.flags;\n              for (var i = 0; i < flags.length; i++) {\n                var flag = flags.charAt(i);\n                if (validFlags.indexOf(flag) === -1) {\n                  this.raise(state.start, \"Invalid regular expression flag\");\n                }\n                if (flags.indexOf(flag, i + 1) > -1) {\n                  this.raise(state.start, \"Duplicate regular expression flag\");\n                }\n              }\n            };\n            pp$8.validateRegExpPattern = function (state) {\n              this.regexp_pattern(state);\n              if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n                state.switchN = true;\n                this.regexp_pattern(state);\n              }\n            };\n            pp$8.regexp_pattern = function (state) {\n              state.pos = 0;\n              state.lastIntValue = 0;\n              state.lastStringValue = \"\";\n              state.lastAssertionIsQuantifiable = false;\n              state.numCapturingParens = 0;\n              state.maxBackReference = 0;\n              state.groupNames.length = 0;\n              state.backReferenceNames.length = 0;\n              this.regexp_disjunction(state);\n              if (state.pos !== state.source.length) {\n                if (state.eat(0x29)) {\n                  state.raise(\"Unmatched ')'\");\n                }\n                if (state.eat(0x5D) || state.eat(0x7D)) {\n                  state.raise(\"Lone quantifier brackets\");\n                }\n              }\n              if (state.maxBackReference > state.numCapturingParens) {\n                state.raise(\"Invalid escape\");\n              }\n              for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n                var name = list[i];\n                if (state.groupNames.indexOf(name) === -1) {\n                  state.raise(\"Invalid named capture referenced\");\n                }\n              }\n            };\n            pp$8.regexp_disjunction = function (state) {\n              this.regexp_alternative(state);\n              while (state.eat(0x7C)) {\n                this.regexp_alternative(state);\n              }\n              if (this.regexp_eatQuantifier(state, true)) {\n                state.raise(\"Nothing to repeat\");\n              }\n              if (state.eat(0x7B)) {\n                state.raise(\"Lone quantifier brackets\");\n              }\n            };\n            pp$8.regexp_alternative = function (state) {\n              while (state.pos < state.source.length && this.regexp_eatTerm(state)) {}\n            };\n            pp$8.regexp_eatTerm = function (state) {\n              if (this.regexp_eatAssertion(state)) {\n                if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n                  if (state.switchU) {\n                    state.raise(\"Invalid quantifier\");\n                  }\n                }\n                return true;\n              }\n              if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n                this.regexp_eatQuantifier(state);\n                return true;\n              }\n              return false;\n            };\n            pp$8.regexp_eatAssertion = function (state) {\n              var start = state.pos;\n              state.lastAssertionIsQuantifiable = false;\n              if (state.eat(0x5E) || state.eat(0x24)) {\n                return true;\n              }\n              if (state.eat(0x5C)) {\n                if (state.eat(0x42) || state.eat(0x62)) {\n                  return true;\n                }\n                state.pos = start;\n              }\n              if (state.eat(0x28) && state.eat(0x3F)) {\n                var lookbehind = false;\n                if (this.options.ecmaVersion >= 9) {\n                  lookbehind = state.eat(0x3C);\n                }\n                if (state.eat(0x3D) || state.eat(0x21)) {\n                  this.regexp_disjunction(state);\n                  if (!state.eat(0x29)) {\n                    state.raise(\"Unterminated group\");\n                  }\n                  state.lastAssertionIsQuantifiable = !lookbehind;\n                  return true;\n                }\n              }\n              state.pos = start;\n              return false;\n            };\n            pp$8.regexp_eatQuantifier = function (state, noError) {\n              if (noError === void 0) noError = false;\n              if (this.regexp_eatQuantifierPrefix(state, noError)) {\n                state.eat(0x3F);\n                return true;\n              }\n              return false;\n            };\n            pp$8.regexp_eatQuantifierPrefix = function (state, noError) {\n              return state.eat(0x2A) || state.eat(0x2B) || state.eat(0x3F) || this.regexp_eatBracedQuantifier(state, noError);\n            };\n            pp$8.regexp_eatBracedQuantifier = function (state, noError) {\n              var start = state.pos;\n              if (state.eat(0x7B)) {\n                var min = 0,\n                  max = -1;\n                if (this.regexp_eatDecimalDigits(state)) {\n                  min = state.lastIntValue;\n                  if (state.eat(0x2C) && this.regexp_eatDecimalDigits(state)) {\n                    max = state.lastIntValue;\n                  }\n                  if (state.eat(0x7D)) {\n                    if (max !== -1 && max < min && !noError) {\n                      state.raise(\"numbers out of order in {} quantifier\");\n                    }\n                    return true;\n                  }\n                }\n                if (state.switchU && !noError) {\n                  state.raise(\"Incomplete quantifier\");\n                }\n                state.pos = start;\n              }\n              return false;\n            };\n            pp$8.regexp_eatAtom = function (state) {\n              return this.regexp_eatPatternCharacters(state) || state.eat(0x2E) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state);\n            };\n            pp$8.regexp_eatReverseSolidusAtomEscape = function (state) {\n              var start = state.pos;\n              if (state.eat(0x5C)) {\n                if (this.regexp_eatAtomEscape(state)) {\n                  return true;\n                }\n                state.pos = start;\n              }\n              return false;\n            };\n            pp$8.regexp_eatUncapturingGroup = function (state) {\n              var start = state.pos;\n              if (state.eat(0x28)) {\n                if (state.eat(0x3F) && state.eat(0x3A)) {\n                  this.regexp_disjunction(state);\n                  if (state.eat(0x29)) {\n                    return true;\n                  }\n                  state.raise(\"Unterminated group\");\n                }\n                state.pos = start;\n              }\n              return false;\n            };\n            pp$8.regexp_eatCapturingGroup = function (state) {\n              if (state.eat(0x28)) {\n                if (this.options.ecmaVersion >= 9) {\n                  this.regexp_groupSpecifier(state);\n                } else if (state.current() === 0x3F) {\n                  state.raise(\"Invalid group\");\n                }\n                this.regexp_disjunction(state);\n                if (state.eat(0x29)) {\n                  state.numCapturingParens += 1;\n                  return true;\n                }\n                state.raise(\"Unterminated group\");\n              }\n              return false;\n            };\n            pp$8.regexp_eatExtendedAtom = function (state) {\n              return state.eat(0x2E) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state) || this.regexp_eatInvalidBracedQuantifier(state) || this.regexp_eatExtendedPatternCharacter(state);\n            };\n            pp$8.regexp_eatInvalidBracedQuantifier = function (state) {\n              if (this.regexp_eatBracedQuantifier(state, true)) {\n                state.raise(\"Nothing to repeat\");\n              }\n              return false;\n            };\n            pp$8.regexp_eatSyntaxCharacter = function (state) {\n              var ch = state.current();\n              if (isSyntaxCharacter(ch)) {\n                state.lastIntValue = ch;\n                state.advance();\n                return true;\n              }\n              return false;\n            };\n            function isSyntaxCharacter(ch) {\n              return ch === 0x24 || ch >= 0x28 && ch <= 0x2B || ch === 0x2E || ch === 0x3F || ch >= 0x5B && ch <= 0x5E || ch >= 0x7B && ch <= 0x7D;\n            }\n            pp$8.regexp_eatPatternCharacters = function (state) {\n              var start = state.pos;\n              var ch = 0;\n              while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n                state.advance();\n              }\n              return state.pos !== start;\n            };\n            pp$8.regexp_eatExtendedPatternCharacter = function (state) {\n              var ch = state.current();\n              if (ch !== -1 && ch !== 0x24 && !(ch >= 0x28 && ch <= 0x2B) && ch !== 0x2E && ch !== 0x3F && ch !== 0x5B && ch !== 0x5E && ch !== 0x7C) {\n                state.advance();\n                return true;\n              }\n              return false;\n            };\n            pp$8.regexp_groupSpecifier = function (state) {\n              if (state.eat(0x3F)) {\n                if (this.regexp_eatGroupName(state)) {\n                  if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n                    state.raise(\"Duplicate capture group name\");\n                  }\n                  state.groupNames.push(state.lastStringValue);\n                  return;\n                }\n                state.raise(\"Invalid group\");\n              }\n            };\n            pp$8.regexp_eatGroupName = function (state) {\n              state.lastStringValue = \"\";\n              if (state.eat(0x3C)) {\n                if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E)) {\n                  return true;\n                }\n                state.raise(\"Invalid capture group name\");\n              }\n              return false;\n            };\n            pp$8.regexp_eatRegExpIdentifierName = function (state) {\n              state.lastStringValue = \"\";\n              if (this.regexp_eatRegExpIdentifierStart(state)) {\n                state.lastStringValue += codePointToString(state.lastIntValue);\n                while (this.regexp_eatRegExpIdentifierPart(state)) {\n                  state.lastStringValue += codePointToString(state.lastIntValue);\n                }\n                return true;\n              }\n              return false;\n            };\n            pp$8.regexp_eatRegExpIdentifierStart = function (state) {\n              var start = state.pos;\n              var ch = state.current();\n              state.advance();\n              if (ch === 0x5C && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n                ch = state.lastIntValue;\n              }\n              if (isRegExpIdentifierStart(ch)) {\n                state.lastIntValue = ch;\n                return true;\n              }\n              state.pos = start;\n              return false;\n            };\n            function isRegExpIdentifierStart(ch) {\n              return isIdentifierStart(ch, true) || ch === 0x24 || ch === 0x5F;\n            }\n            pp$8.regexp_eatRegExpIdentifierPart = function (state) {\n              var start = state.pos;\n              var ch = state.current();\n              state.advance();\n              if (ch === 0x5C && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n                ch = state.lastIntValue;\n              }\n              if (isRegExpIdentifierPart(ch)) {\n                state.lastIntValue = ch;\n                return true;\n              }\n              state.pos = start;\n              return false;\n            };\n            function isRegExpIdentifierPart(ch) {\n              return isIdentifierChar(ch, true) || ch === 0x24 || ch === 0x5F || ch === 0x200C || ch === 0x200D;\n            }\n            pp$8.regexp_eatAtomEscape = function (state) {\n              if (this.regexp_eatBackReference(state) || this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state) || state.switchN && this.regexp_eatKGroupName(state)) {\n                return true;\n              }\n              if (state.switchU) {\n                if (state.current() === 0x63) {\n                  state.raise(\"Invalid unicode escape\");\n                }\n                state.raise(\"Invalid escape\");\n              }\n              return false;\n            };\n            pp$8.regexp_eatBackReference = function (state) {\n              var start = state.pos;\n              if (this.regexp_eatDecimalEscape(state)) {\n                var n = state.lastIntValue;\n                if (state.switchU) {\n                  if (n > state.maxBackReference) {\n                    state.maxBackReference = n;\n                  }\n                  return true;\n                }\n                if (n <= state.numCapturingParens) {\n                  return true;\n                }\n                state.pos = start;\n              }\n              return false;\n            };\n            pp$8.regexp_eatKGroupName = function (state) {\n              if (state.eat(0x6B)) {\n                if (this.regexp_eatGroupName(state)) {\n                  state.backReferenceNames.push(state.lastStringValue);\n                  return true;\n                }\n                state.raise(\"Invalid named reference\");\n              }\n              return false;\n            };\n            pp$8.regexp_eatCharacterEscape = function (state) {\n              return this.regexp_eatControlEscape(state) || this.regexp_eatCControlLetter(state) || this.regexp_eatZero(state) || this.regexp_eatHexEscapeSequence(state) || this.regexp_eatRegExpUnicodeEscapeSequence(state) || !state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state) || this.regexp_eatIdentityEscape(state);\n            };\n            pp$8.regexp_eatCControlLetter = function (state) {\n              var start = state.pos;\n              if (state.eat(0x63)) {\n                if (this.regexp_eatControlLetter(state)) {\n                  return true;\n                }\n                state.pos = start;\n              }\n              return false;\n            };\n            pp$8.regexp_eatZero = function (state) {\n              if (state.current() === 0x30 && !isDecimalDigit(state.lookahead())) {\n                state.lastIntValue = 0;\n                state.advance();\n                return true;\n              }\n              return false;\n            };\n            pp$8.regexp_eatControlEscape = function (state) {\n              var ch = state.current();\n              if (ch === 0x74) {\n                state.lastIntValue = 0x09;\n                state.advance();\n                return true;\n              }\n              if (ch === 0x6E) {\n                state.lastIntValue = 0x0A;\n                state.advance();\n                return true;\n              }\n              if (ch === 0x76) {\n                state.lastIntValue = 0x0B;\n                state.advance();\n                return true;\n              }\n              if (ch === 0x66) {\n                state.lastIntValue = 0x0C;\n                state.advance();\n                return true;\n              }\n              if (ch === 0x72) {\n                state.lastIntValue = 0x0D;\n                state.advance();\n                return true;\n              }\n              return false;\n            };\n            pp$8.regexp_eatControlLetter = function (state) {\n              var ch = state.current();\n              if (isControlLetter(ch)) {\n                state.lastIntValue = ch % 0x20;\n                state.advance();\n                return true;\n              }\n              return false;\n            };\n            function isControlLetter(ch) {\n              return ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A;\n            }\n            pp$8.regexp_eatRegExpUnicodeEscapeSequence = function (state) {\n              var start = state.pos;\n              if (state.eat(0x75)) {\n                if (this.regexp_eatFixedHexDigits(state, 4)) {\n                  var lead = state.lastIntValue;\n                  if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n                    var leadSurrogateEnd = state.pos;\n                    if (state.eat(0x5C) && state.eat(0x75) && this.regexp_eatFixedHexDigits(state, 4)) {\n                      var trail = state.lastIntValue;\n                      if (trail >= 0xDC00 && trail <= 0xDFFF) {\n                        state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n                        return true;\n                      }\n                    }\n                    state.pos = leadSurrogateEnd;\n                    state.lastIntValue = lead;\n                  }\n                  return true;\n                }\n                if (state.switchU && state.eat(0x7B) && this.regexp_eatHexDigits(state) && state.eat(0x7D) && isValidUnicode(state.lastIntValue)) {\n                  return true;\n                }\n                if (state.switchU) {\n                  state.raise(\"Invalid unicode escape\");\n                }\n                state.pos = start;\n              }\n              return false;\n            };\n            function isValidUnicode(ch) {\n              return ch >= 0 && ch <= 0x10FFFF;\n            }\n            pp$8.regexp_eatIdentityEscape = function (state) {\n              if (state.switchU) {\n                if (this.regexp_eatSyntaxCharacter(state)) {\n                  return true;\n                }\n                if (state.eat(0x2F)) {\n                  state.lastIntValue = 0x2F;\n                  return true;\n                }\n                return false;\n              }\n              var ch = state.current();\n              if (ch !== 0x63 && (!state.switchN || ch !== 0x6B)) {\n                state.lastIntValue = ch;\n                state.advance();\n                return true;\n              }\n              return false;\n            };\n            pp$8.regexp_eatDecimalEscape = function (state) {\n              state.lastIntValue = 0;\n              var ch = state.current();\n              if (ch >= 0x31 && ch <= 0x39) {\n                do {\n                  state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30);\n                  state.advance();\n                } while ((ch = state.current()) >= 0x30 && ch <= 0x39);\n                return true;\n              }\n              return false;\n            };\n            pp$8.regexp_eatCharacterClassEscape = function (state) {\n              var ch = state.current();\n              if (isCharacterClassEscape(ch)) {\n                state.lastIntValue = -1;\n                state.advance();\n                return true;\n              }\n              if (state.switchU && this.options.ecmaVersion >= 9 && (ch === 0x50 || ch === 0x70)) {\n                state.lastIntValue = -1;\n                state.advance();\n                if (state.eat(0x7B) && this.regexp_eatUnicodePropertyValueExpression(state) && state.eat(0x7D)) {\n                  return true;\n                }\n                state.raise(\"Invalid property name\");\n              }\n              return false;\n            };\n            function isCharacterClassEscape(ch) {\n              return ch === 0x64 || ch === 0x44 || ch === 0x73 || ch === 0x53 || ch === 0x77 || ch === 0x57;\n            }\n            pp$8.regexp_eatUnicodePropertyValueExpression = function (state) {\n              var start = state.pos;\n              if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D)) {\n                var name = state.lastStringValue;\n                if (this.regexp_eatUnicodePropertyValue(state)) {\n                  var value = state.lastStringValue;\n                  this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n                  return true;\n                }\n              }\n              state.pos = start;\n              if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n                var nameOrValue = state.lastStringValue;\n                this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n                return true;\n              }\n              return false;\n            };\n            pp$8.regexp_validateUnicodePropertyNameAndValue = function (state, name, value) {\n              if (!has(state.unicodeProperties.nonBinary, name)) {\n                state.raise(\"Invalid property name\");\n              }\n              if (!state.unicodeProperties.nonBinary[name].test(value)) {\n                state.raise(\"Invalid property value\");\n              }\n            };\n            pp$8.regexp_validateUnicodePropertyNameOrValue = function (state, nameOrValue) {\n              if (!state.unicodeProperties.binary.test(nameOrValue)) {\n                state.raise(\"Invalid property name\");\n              }\n            };\n            pp$8.regexp_eatUnicodePropertyName = function (state) {\n              var ch = 0;\n              state.lastStringValue = \"\";\n              while (isUnicodePropertyNameCharacter(ch = state.current())) {\n                state.lastStringValue += codePointToString(ch);\n                state.advance();\n              }\n              return state.lastStringValue !== \"\";\n            };\n            function isUnicodePropertyNameCharacter(ch) {\n              return isControlLetter(ch) || ch === 0x5F;\n            }\n            pp$8.regexp_eatUnicodePropertyValue = function (state) {\n              var ch = 0;\n              state.lastStringValue = \"\";\n              while (isUnicodePropertyValueCharacter(ch = state.current())) {\n                state.lastStringValue += codePointToString(ch);\n                state.advance();\n              }\n              return state.lastStringValue !== \"\";\n            };\n            function isUnicodePropertyValueCharacter(ch) {\n              return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch);\n            }\n            pp$8.regexp_eatLoneUnicodePropertyNameOrValue = function (state) {\n              return this.regexp_eatUnicodePropertyValue(state);\n            };\n            pp$8.regexp_eatCharacterClass = function (state) {\n              if (state.eat(0x5B)) {\n                state.eat(0x5E);\n                this.regexp_classRanges(state);\n                if (state.eat(0x5D)) {\n                  return true;\n                }\n                state.raise(\"Unterminated character class\");\n              }\n              return false;\n            };\n            pp$8.regexp_classRanges = function (state) {\n              while (this.regexp_eatClassAtom(state)) {\n                var left = state.lastIntValue;\n                if (state.eat(0x2D) && this.regexp_eatClassAtom(state)) {\n                  var right = state.lastIntValue;\n                  if (state.switchU && (left === -1 || right === -1)) {\n                    state.raise(\"Invalid character class\");\n                  }\n                  if (left !== -1 && right !== -1 && left > right) {\n                    state.raise(\"Range out of order in character class\");\n                  }\n                }\n              }\n            };\n            pp$8.regexp_eatClassAtom = function (state) {\n              var start = state.pos;\n              if (state.eat(0x5C)) {\n                if (this.regexp_eatClassEscape(state)) {\n                  return true;\n                }\n                if (state.switchU) {\n                  var ch$1 = state.current();\n                  if (ch$1 === 0x63 || isOctalDigit(ch$1)) {\n                    state.raise(\"Invalid class escape\");\n                  }\n                  state.raise(\"Invalid escape\");\n                }\n                state.pos = start;\n              }\n              var ch = state.current();\n              if (ch !== 0x5D) {\n                state.lastIntValue = ch;\n                state.advance();\n                return true;\n              }\n              return false;\n            };\n            pp$8.regexp_eatClassEscape = function (state) {\n              var start = state.pos;\n              if (state.eat(0x62)) {\n                state.lastIntValue = 0x08;\n                return true;\n              }\n              if (state.switchU && state.eat(0x2D)) {\n                state.lastIntValue = 0x2D;\n                return true;\n              }\n              if (!state.switchU && state.eat(0x63)) {\n                if (this.regexp_eatClassControlLetter(state)) {\n                  return true;\n                }\n                state.pos = start;\n              }\n              return this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state);\n            };\n            pp$8.regexp_eatClassControlLetter = function (state) {\n              var ch = state.current();\n              if (isDecimalDigit(ch) || ch === 0x5F) {\n                state.lastIntValue = ch % 0x20;\n                state.advance();\n                return true;\n              }\n              return false;\n            };\n            pp$8.regexp_eatHexEscapeSequence = function (state) {\n              var start = state.pos;\n              if (state.eat(0x78)) {\n                if (this.regexp_eatFixedHexDigits(state, 2)) {\n                  return true;\n                }\n                if (state.switchU) {\n                  state.raise(\"Invalid escape\");\n                }\n                state.pos = start;\n              }\n              return false;\n            };\n            pp$8.regexp_eatDecimalDigits = function (state) {\n              var start = state.pos;\n              var ch = 0;\n              state.lastIntValue = 0;\n              while (isDecimalDigit(ch = state.current())) {\n                state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30);\n                state.advance();\n              }\n              return state.pos !== start;\n            };\n            function isDecimalDigit(ch) {\n              return ch >= 0x30 && ch <= 0x39;\n            }\n            pp$8.regexp_eatHexDigits = function (state) {\n              var start = state.pos;\n              var ch = 0;\n              state.lastIntValue = 0;\n              while (isHexDigit(ch = state.current())) {\n                state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n                state.advance();\n              }\n              return state.pos !== start;\n            };\n            function isHexDigit(ch) {\n              return ch >= 0x30 && ch <= 0x39 || ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66;\n            }\n            function hexToInt(ch) {\n              if (ch >= 0x41 && ch <= 0x46) {\n                return 10 + (ch - 0x41);\n              }\n              if (ch >= 0x61 && ch <= 0x66) {\n                return 10 + (ch - 0x61);\n              }\n              return ch - 0x30;\n            }\n            pp$8.regexp_eatLegacyOctalEscapeSequence = function (state) {\n              if (this.regexp_eatOctalDigit(state)) {\n                var n1 = state.lastIntValue;\n                if (this.regexp_eatOctalDigit(state)) {\n                  var n2 = state.lastIntValue;\n                  if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n                    state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n                  } else {\n                    state.lastIntValue = n1 * 8 + n2;\n                  }\n                } else {\n                  state.lastIntValue = n1;\n                }\n                return true;\n              }\n              return false;\n            };\n            pp$8.regexp_eatOctalDigit = function (state) {\n              var ch = state.current();\n              if (isOctalDigit(ch)) {\n                state.lastIntValue = ch - 0x30;\n                state.advance();\n                return true;\n              }\n              state.lastIntValue = 0;\n              return false;\n            };\n            function isOctalDigit(ch) {\n              return ch >= 0x30 && ch <= 0x37;\n            }\n            pp$8.regexp_eatFixedHexDigits = function (state, length) {\n              var start = state.pos;\n              state.lastIntValue = 0;\n              for (var i = 0; i < length; ++i) {\n                var ch = state.current();\n                if (!isHexDigit(ch)) {\n                  state.pos = start;\n                  return false;\n                }\n                state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n                state.advance();\n              }\n              return true;\n            };\n            var Token = function Token(p) {\n              this.type = p.type;\n              this.value = p.value;\n              this.start = p.start;\n              this.end = p.end;\n              if (p.options.locations) {\n                this.loc = new SourceLocation(p, p.startLoc, p.endLoc);\n              }\n              if (p.options.ranges) {\n                this.range = [p.start, p.end];\n              }\n            };\n            var pp$9 = Parser.prototype;\n            pp$9.next = function (ignoreEscapeSequenceInKeyword) {\n              if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc) {\n                this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword);\n              }\n              if (this.options.onToken) {\n                this.options.onToken(new Token(this));\n              }\n              this.lastTokEnd = this.end;\n              this.lastTokStart = this.start;\n              this.lastTokEndLoc = this.endLoc;\n              this.lastTokStartLoc = this.startLoc;\n              this.nextToken();\n            };\n            pp$9.getToken = function () {\n              this.next();\n              return new Token(this);\n            };\n            if (typeof Symbol !== \"undefined\") {\n              pp$9[Symbol.iterator] = function () {\n                var this$1 = this;\n                return {\n                  next: function () {\n                    var token = this$1.getToken();\n                    return {\n                      done: token.type === types.eof,\n                      value: token\n                    };\n                  }\n                };\n              };\n            }\n            pp$9.curContext = function () {\n              return this.context[this.context.length - 1];\n            };\n            pp$9.nextToken = function () {\n              var curContext = this.curContext();\n              if (!curContext || !curContext.preserveSpace) {\n                this.skipSpace();\n              }\n              this.start = this.pos;\n              if (this.options.locations) {\n                this.startLoc = this.curPosition();\n              }\n              if (this.pos >= this.input.length) {\n                return this.finishToken(types.eof);\n              }\n              if (curContext.override) {\n                return curContext.override(this);\n              } else {\n                this.readToken(this.fullCharCodeAtPos());\n              }\n            };\n            pp$9.readToken = function (code) {\n              if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92) {\n                return this.readWord();\n              }\n              return this.getTokenFromCode(code);\n            };\n            pp$9.fullCharCodeAtPos = function () {\n              var code = this.input.charCodeAt(this.pos);\n              if (code <= 0xd7ff || code >= 0xe000) {\n                return code;\n              }\n              var next = this.input.charCodeAt(this.pos + 1);\n              return (code << 10) + next - 0x35fdc00;\n            };\n            pp$9.skipBlockComment = function () {\n              var startLoc = this.options.onComment && this.curPosition();\n              var start = this.pos,\n                end = this.input.indexOf(\"*/\", this.pos += 2);\n              if (end === -1) {\n                this.raise(this.pos - 2, \"Unterminated comment\");\n              }\n              this.pos = end + 2;\n              if (this.options.locations) {\n                lineBreakG.lastIndex = start;\n                var match;\n                while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n                  ++this.curLine;\n                  this.lineStart = match.index + match[0].length;\n                }\n              }\n              if (this.options.onComment) {\n                this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos, startLoc, this.curPosition());\n              }\n            };\n            pp$9.skipLineComment = function (startSkip) {\n              var start = this.pos;\n              var startLoc = this.options.onComment && this.curPosition();\n              var ch = this.input.charCodeAt(this.pos += startSkip);\n              while (this.pos < this.input.length && !isNewLine(ch)) {\n                ch = this.input.charCodeAt(++this.pos);\n              }\n              if (this.options.onComment) {\n                this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos, startLoc, this.curPosition());\n              }\n            };\n            pp$9.skipSpace = function () {\n              loop: while (this.pos < this.input.length) {\n                var ch = this.input.charCodeAt(this.pos);\n                switch (ch) {\n                  case 32:\n                  case 160:\n                    ++this.pos;\n                    break;\n                  case 13:\n                    if (this.input.charCodeAt(this.pos + 1) === 10) {\n                      ++this.pos;\n                    }\n                  case 10:\n                  case 8232:\n                  case 8233:\n                    ++this.pos;\n                    if (this.options.locations) {\n                      ++this.curLine;\n                      this.lineStart = this.pos;\n                    }\n                    break;\n                  case 47:\n                    switch (this.input.charCodeAt(this.pos + 1)) {\n                      case 42:\n                        this.skipBlockComment();\n                        break;\n                      case 47:\n                        this.skipLineComment(2);\n                        break;\n                      default:\n                        break loop;\n                    }\n                    break;\n                  default:\n                    if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n                      ++this.pos;\n                    } else {\n                      break loop;\n                    }\n                }\n              }\n            };\n            pp$9.finishToken = function (type, val) {\n              this.end = this.pos;\n              if (this.options.locations) {\n                this.endLoc = this.curPosition();\n              }\n              var prevType = this.type;\n              this.type = type;\n              this.value = val;\n              this.updateContext(prevType);\n            };\n            pp$9.readToken_dot = function () {\n              var next = this.input.charCodeAt(this.pos + 1);\n              if (next >= 48 && next <= 57) {\n                return this.readNumber(true);\n              }\n              var next2 = this.input.charCodeAt(this.pos + 2);\n              if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) {\n                this.pos += 3;\n                return this.finishToken(types.ellipsis);\n              } else {\n                ++this.pos;\n                return this.finishToken(types.dot);\n              }\n            };\n            pp$9.readToken_slash = function () {\n              var next = this.input.charCodeAt(this.pos + 1);\n              if (this.exprAllowed) {\n                ++this.pos;\n                return this.readRegexp();\n              }\n              if (next === 61) {\n                return this.finishOp(types.assign, 2);\n              }\n              return this.finishOp(types.slash, 1);\n            };\n            pp$9.readToken_mult_modulo_exp = function (code) {\n              var next = this.input.charCodeAt(this.pos + 1);\n              var size = 1;\n              var tokentype = code === 42 ? types.star : types.modulo;\n              if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n                ++size;\n                tokentype = types.starstar;\n                next = this.input.charCodeAt(this.pos + 2);\n              }\n              if (next === 61) {\n                return this.finishOp(types.assign, size + 1);\n              }\n              return this.finishOp(tokentype, size);\n            };\n            pp$9.readToken_pipe_amp = function (code) {\n              var next = this.input.charCodeAt(this.pos + 1);\n              if (next === code) {\n                return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n              }\n              if (next === 61) {\n                return this.finishOp(types.assign, 2);\n              }\n              return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n            };\n            pp$9.readToken_caret = function () {\n              var next = this.input.charCodeAt(this.pos + 1);\n              if (next === 61) {\n                return this.finishOp(types.assign, 2);\n              }\n              return this.finishOp(types.bitwiseXOR, 1);\n            };\n            pp$9.readToken_plus_min = function (code) {\n              var next = this.input.charCodeAt(this.pos + 1);\n              if (next === code) {\n                if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 && (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n                  this.skipLineComment(3);\n                  this.skipSpace();\n                  return this.nextToken();\n                }\n                return this.finishOp(types.incDec, 2);\n              }\n              if (next === 61) {\n                return this.finishOp(types.assign, 2);\n              }\n              return this.finishOp(types.plusMin, 1);\n            };\n            pp$9.readToken_lt_gt = function (code) {\n              var next = this.input.charCodeAt(this.pos + 1);\n              var size = 1;\n              if (next === code) {\n                size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n                if (this.input.charCodeAt(this.pos + size) === 61) {\n                  return this.finishOp(types.assign, size + 1);\n                }\n                return this.finishOp(types.bitShift, size);\n              }\n              if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 && this.input.charCodeAt(this.pos + 3) === 45) {\n                this.skipLineComment(4);\n                this.skipSpace();\n                return this.nextToken();\n              }\n              if (next === 61) {\n                size = 2;\n              }\n              return this.finishOp(types.relational, size);\n            };\n            pp$9.readToken_eq_excl = function (code) {\n              var next = this.input.charCodeAt(this.pos + 1);\n              if (next === 61) {\n                return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2);\n              }\n              if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) {\n                this.pos += 2;\n                return this.finishToken(types.arrow);\n              }\n              return this.finishOp(code === 61 ? types.eq : types.prefix, 1);\n            };\n            pp$9.getTokenFromCode = function (code) {\n              switch (code) {\n                case 46:\n                  return this.readToken_dot();\n                case 40:\n                  ++this.pos;\n                  return this.finishToken(types.parenL);\n                case 41:\n                  ++this.pos;\n                  return this.finishToken(types.parenR);\n                case 59:\n                  ++this.pos;\n                  return this.finishToken(types.semi);\n                case 44:\n                  ++this.pos;\n                  return this.finishToken(types.comma);\n                case 91:\n                  ++this.pos;\n                  return this.finishToken(types.bracketL);\n                case 93:\n                  ++this.pos;\n                  return this.finishToken(types.bracketR);\n                case 123:\n                  ++this.pos;\n                  return this.finishToken(types.braceL);\n                case 125:\n                  ++this.pos;\n                  return this.finishToken(types.braceR);\n                case 58:\n                  ++this.pos;\n                  return this.finishToken(types.colon);\n                case 63:\n                  ++this.pos;\n                  return this.finishToken(types.question);\n                case 96:\n                  if (this.options.ecmaVersion < 6) {\n                    break;\n                  }\n                  ++this.pos;\n                  return this.finishToken(types.backQuote);\n                case 48:\n                  var next = this.input.charCodeAt(this.pos + 1);\n                  if (next === 120 || next === 88) {\n                    return this.readRadixNumber(16);\n                  }\n                  if (this.options.ecmaVersion >= 6) {\n                    if (next === 111 || next === 79) {\n                      return this.readRadixNumber(8);\n                    }\n                    if (next === 98 || next === 66) {\n                      return this.readRadixNumber(2);\n                    }\n                  }\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                  return this.readNumber(false);\n                case 34:\n                case 39:\n                  return this.readString(code);\n                case 47:\n                  return this.readToken_slash();\n                case 37:\n                case 42:\n                  return this.readToken_mult_modulo_exp(code);\n                case 124:\n                case 38:\n                  return this.readToken_pipe_amp(code);\n                case 94:\n                  return this.readToken_caret();\n                case 43:\n                case 45:\n                  return this.readToken_plus_min(code);\n                case 60:\n                case 62:\n                  return this.readToken_lt_gt(code);\n                case 61:\n                case 33:\n                  return this.readToken_eq_excl(code);\n                case 126:\n                  return this.finishOp(types.prefix, 1);\n              }\n              this.raise(this.pos, \"Unexpected character '\" + codePointToString$1(code) + \"'\");\n            };\n            pp$9.finishOp = function (type, size) {\n              var str = this.input.slice(this.pos, this.pos + size);\n              this.pos += size;\n              return this.finishToken(type, str);\n            };\n            pp$9.readRegexp = function () {\n              var escaped,\n                inClass,\n                start = this.pos;\n              for (;;) {\n                if (this.pos >= this.input.length) {\n                  this.raise(start, \"Unterminated regular expression\");\n                }\n                var ch = this.input.charAt(this.pos);\n                if (lineBreak.test(ch)) {\n                  this.raise(start, \"Unterminated regular expression\");\n                }\n                if (!escaped) {\n                  if (ch === \"[\") {\n                    inClass = true;\n                  } else if (ch === \"]\" && inClass) {\n                    inClass = false;\n                  } else if (ch === \"/\" && !inClass) {\n                    break;\n                  }\n                  escaped = ch === \"\\\\\";\n                } else {\n                  escaped = false;\n                }\n                ++this.pos;\n              }\n              var pattern = this.input.slice(start, this.pos);\n              ++this.pos;\n              var flagsStart = this.pos;\n              var flags = this.readWord1();\n              if (this.containsEsc) {\n                this.unexpected(flagsStart);\n              }\n              var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n              state.reset(start, pattern, flags);\n              this.validateRegExpFlags(state);\n              this.validateRegExpPattern(state);\n              var value = null;\n              try {\n                value = new RegExp(pattern, flags);\n              } catch (e) {}\n              return this.finishToken(types.regexp, {\n                pattern: pattern,\n                flags: flags,\n                value: value\n              });\n            };\n            pp$9.readInt = function (radix, len) {\n              var start = this.pos,\n                total = 0;\n              for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n                var code = this.input.charCodeAt(this.pos),\n                  val = void 0;\n                if (code >= 97) {\n                  val = code - 97 + 10;\n                } else if (code >= 65) {\n                  val = code - 65 + 10;\n                } else if (code >= 48 && code <= 57) {\n                  val = code - 48;\n                } else {\n                  val = Infinity;\n                }\n                if (val >= radix) {\n                  break;\n                }\n                ++this.pos;\n                total = total * radix + val;\n              }\n              if (this.pos === start || len != null && this.pos - start !== len) {\n                return null;\n              }\n              return total;\n            };\n            pp$9.readRadixNumber = function (radix) {\n              var start = this.pos;\n              this.pos += 2;\n              var val = this.readInt(radix);\n              if (val == null) {\n                this.raise(this.start + 2, \"Expected number in radix \" + radix);\n              }\n              if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n                val = typeof BigInt !== \"undefined\" ? BigInt(this.input.slice(start, this.pos)) : null;\n                ++this.pos;\n              } else if (isIdentifierStart(this.fullCharCodeAtPos())) {\n                this.raise(this.pos, \"Identifier directly after number\");\n              }\n              return this.finishToken(types.num, val);\n            };\n            pp$9.readNumber = function (startsWithDot) {\n              var start = this.pos;\n              if (!startsWithDot && this.readInt(10) === null) {\n                this.raise(start, \"Invalid number\");\n              }\n              var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n              if (octal && this.strict) {\n                this.raise(start, \"Invalid number\");\n              }\n              var next = this.input.charCodeAt(this.pos);\n              if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n                var str$1 = this.input.slice(start, this.pos);\n                var val$1 = typeof BigInt !== \"undefined\" ? BigInt(str$1) : null;\n                ++this.pos;\n                if (isIdentifierStart(this.fullCharCodeAtPos())) {\n                  this.raise(this.pos, \"Identifier directly after number\");\n                }\n                return this.finishToken(types.num, val$1);\n              }\n              if (octal && /[89]/.test(this.input.slice(start, this.pos))) {\n                octal = false;\n              }\n              if (next === 46 && !octal) {\n                ++this.pos;\n                this.readInt(10);\n                next = this.input.charCodeAt(this.pos);\n              }\n              if ((next === 69 || next === 101) && !octal) {\n                next = this.input.charCodeAt(++this.pos);\n                if (next === 43 || next === 45) {\n                  ++this.pos;\n                }\n                if (this.readInt(10) === null) {\n                  this.raise(start, \"Invalid number\");\n                }\n              }\n              if (isIdentifierStart(this.fullCharCodeAtPos())) {\n                this.raise(this.pos, \"Identifier directly after number\");\n              }\n              var str = this.input.slice(start, this.pos);\n              var val = octal ? parseInt(str, 8) : parseFloat(str);\n              return this.finishToken(types.num, val);\n            };\n            pp$9.readCodePoint = function () {\n              var ch = this.input.charCodeAt(this.pos),\n                code;\n              if (ch === 123) {\n                if (this.options.ecmaVersion < 6) {\n                  this.unexpected();\n                }\n                var codePos = ++this.pos;\n                code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n                ++this.pos;\n                if (code > 0x10FFFF) {\n                  this.invalidStringToken(codePos, \"Code point out of bounds\");\n                }\n              } else {\n                code = this.readHexChar(4);\n              }\n              return code;\n            };\n            function codePointToString$1(code) {\n              if (code <= 0xFFFF) {\n                return String.fromCharCode(code);\n              }\n              code -= 0x10000;\n              return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00);\n            }\n            pp$9.readString = function (quote) {\n              var out = \"\",\n                chunkStart = ++this.pos;\n              for (;;) {\n                if (this.pos >= this.input.length) {\n                  this.raise(this.start, \"Unterminated string constant\");\n                }\n                var ch = this.input.charCodeAt(this.pos);\n                if (ch === quote) {\n                  break;\n                }\n                if (ch === 92) {\n                  out += this.input.slice(chunkStart, this.pos);\n                  out += this.readEscapedChar(false);\n                  chunkStart = this.pos;\n                } else {\n                  if (isNewLine(ch, this.options.ecmaVersion >= 10)) {\n                    this.raise(this.start, \"Unterminated string constant\");\n                  }\n                  ++this.pos;\n                }\n              }\n              out += this.input.slice(chunkStart, this.pos++);\n              return this.finishToken(types.string, out);\n            };\n            var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n            pp$9.tryReadTemplateToken = function () {\n              this.inTemplateElement = true;\n              try {\n                this.readTmplToken();\n              } catch (err) {\n                if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n                  this.readInvalidTemplateToken();\n                } else {\n                  throw err;\n                }\n              }\n              this.inTemplateElement = false;\n            };\n            pp$9.invalidStringToken = function (position, message) {\n              if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n                throw INVALID_TEMPLATE_ESCAPE_ERROR;\n              } else {\n                this.raise(position, message);\n              }\n            };\n            pp$9.readTmplToken = function () {\n              var out = \"\",\n                chunkStart = this.pos;\n              for (;;) {\n                if (this.pos >= this.input.length) {\n                  this.raise(this.start, \"Unterminated template\");\n                }\n                var ch = this.input.charCodeAt(this.pos);\n                if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) {\n                  if (this.pos === this.start && (this.type === types.template || this.type === types.invalidTemplate)) {\n                    if (ch === 36) {\n                      this.pos += 2;\n                      return this.finishToken(types.dollarBraceL);\n                    } else {\n                      ++this.pos;\n                      return this.finishToken(types.backQuote);\n                    }\n                  }\n                  out += this.input.slice(chunkStart, this.pos);\n                  return this.finishToken(types.template, out);\n                }\n                if (ch === 92) {\n                  out += this.input.slice(chunkStart, this.pos);\n                  out += this.readEscapedChar(true);\n                  chunkStart = this.pos;\n                } else if (isNewLine(ch)) {\n                  out += this.input.slice(chunkStart, this.pos);\n                  ++this.pos;\n                  switch (ch) {\n                    case 13:\n                      if (this.input.charCodeAt(this.pos) === 10) {\n                        ++this.pos;\n                      }\n                    case 10:\n                      out += \"\\n\";\n                      break;\n                    default:\n                      out += String.fromCharCode(ch);\n                      break;\n                  }\n                  if (this.options.locations) {\n                    ++this.curLine;\n                    this.lineStart = this.pos;\n                  }\n                  chunkStart = this.pos;\n                } else {\n                  ++this.pos;\n                }\n              }\n            };\n            pp$9.readInvalidTemplateToken = function () {\n              for (; this.pos < this.input.length; this.pos++) {\n                switch (this.input[this.pos]) {\n                  case \"\\\\\":\n                    ++this.pos;\n                    break;\n                  case \"$\":\n                    if (this.input[this.pos + 1] !== \"{\") {\n                      break;\n                    }\n                  case \"`\":\n                    return this.finishToken(types.invalidTemplate, this.input.slice(this.start, this.pos));\n                }\n              }\n              this.raise(this.start, \"Unterminated template\");\n            };\n            pp$9.readEscapedChar = function (inTemplate) {\n              var ch = this.input.charCodeAt(++this.pos);\n              ++this.pos;\n              switch (ch) {\n                case 110:\n                  return \"\\n\";\n                case 114:\n                  return \"\\r\";\n                case 120:\n                  return String.fromCharCode(this.readHexChar(2));\n                case 117:\n                  return codePointToString$1(this.readCodePoint());\n                case 116:\n                  return \"\\t\";\n                case 98:\n                  return \"\\b\";\n                case 118:\n                  return \"\\u000b\";\n                case 102:\n                  return \"\\f\";\n                case 13:\n                  if (this.input.charCodeAt(this.pos) === 10) {\n                    ++this.pos;\n                  }\n                case 10:\n                  if (this.options.locations) {\n                    this.lineStart = this.pos;\n                    ++this.curLine;\n                  }\n                  return \"\";\n                case 56:\n                case 57:\n                  if (inTemplate) {\n                    var codePos = this.pos - 1;\n                    this.invalidStringToken(codePos, \"Invalid escape sequence in template string\");\n                    return null;\n                  }\n                default:\n                  if (ch >= 48 && ch <= 55) {\n                    var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n                    var octal = parseInt(octalStr, 8);\n                    if (octal > 255) {\n                      octalStr = octalStr.slice(0, -1);\n                      octal = parseInt(octalStr, 8);\n                    }\n                    this.pos += octalStr.length - 1;\n                    ch = this.input.charCodeAt(this.pos);\n                    if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n                      this.invalidStringToken(this.pos - 1 - octalStr.length, inTemplate ? \"Octal literal in template string\" : \"Octal literal in strict mode\");\n                    }\n                    return String.fromCharCode(octal);\n                  }\n                  if (isNewLine(ch)) {\n                    return \"\";\n                  }\n                  return String.fromCharCode(ch);\n              }\n            };\n            pp$9.readHexChar = function (len) {\n              var codePos = this.pos;\n              var n = this.readInt(16, len);\n              if (n === null) {\n                this.invalidStringToken(codePos, \"Bad character escape sequence\");\n              }\n              return n;\n            };\n            pp$9.readWord1 = function () {\n              this.containsEsc = false;\n              var word = \"\",\n                first = true,\n                chunkStart = this.pos;\n              var astral = this.options.ecmaVersion >= 6;\n              while (this.pos < this.input.length) {\n                var ch = this.fullCharCodeAtPos();\n                if (isIdentifierChar(ch, astral)) {\n                  this.pos += ch <= 0xffff ? 1 : 2;\n                } else if (ch === 92) {\n                  this.containsEsc = true;\n                  word += this.input.slice(chunkStart, this.pos);\n                  var escStart = this.pos;\n                  if (this.input.charCodeAt(++this.pos) !== 117) {\n                    this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\");\n                  }\n                  ++this.pos;\n                  var esc = this.readCodePoint();\n                  if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral)) {\n                    this.invalidStringToken(escStart, \"Invalid Unicode escape\");\n                  }\n                  word += codePointToString$1(esc);\n                  chunkStart = this.pos;\n                } else {\n                  break;\n                }\n                first = false;\n              }\n              return word + this.input.slice(chunkStart, this.pos);\n            };\n            pp$9.readWord = function () {\n              var word = this.readWord1();\n              var type = types.name;\n              if (this.keywords.test(word)) {\n                type = keywords$1[word];\n              }\n              return this.finishToken(type, word);\n            };\n            var version = \"7.1.0\";\n            Parser.acorn = {\n              Parser: Parser,\n              version: version,\n              defaultOptions: defaultOptions,\n              Position: Position,\n              SourceLocation: SourceLocation,\n              getLineInfo: getLineInfo,\n              Node: Node,\n              TokenType: TokenType,\n              tokTypes: types,\n              keywordTypes: keywords$1,\n              TokContext: TokContext,\n              tokContexts: types$1,\n              isIdentifierChar: isIdentifierChar,\n              isIdentifierStart: isIdentifierStart,\n              Token: Token,\n              isNewLine: isNewLine,\n              lineBreak: lineBreak,\n              lineBreakG: lineBreakG,\n              nonASCIIwhitespace: nonASCIIwhitespace\n            };\n            function parse(input, options) {\n              return Parser.parse(input, options);\n            }\n            function parseExpressionAt(input, pos, options) {\n              return Parser.parseExpressionAt(input, pos, options);\n            }\n            function tokenizer(input, options) {\n              return Parser.tokenizer(input, options);\n            }\n            exports.Node = Node;\n            exports.Parser = Parser;\n            exports.Position = Position;\n            exports.SourceLocation = SourceLocation;\n            exports.TokContext = TokContext;\n            exports.Token = Token;\n            exports.TokenType = TokenType;\n            exports.defaultOptions = defaultOptions;\n            exports.getLineInfo = getLineInfo;\n            exports.isIdentifierChar = isIdentifierChar;\n            exports.isIdentifierStart = isIdentifierStart;\n            exports.isNewLine = isNewLine;\n            exports.keywordTypes = keywords$1;\n            exports.lineBreak = lineBreak;\n            exports.lineBreakG = lineBreakG;\n            exports.nonASCIIwhitespace = nonASCIIwhitespace;\n            exports.parse = parse;\n            exports.parseExpressionAt = parseExpressionAt;\n            exports.tokContexts = types$1;\n            exports.tokTypes = types;\n            exports.tokenizer = tokenizer;\n            exports.version = version;\n            Object.defineProperty(exports, '__esModule', {\n              value: true\n            });\n          });\n        }, {}],\n        2: [function (require, module, exports) {}, {}],\n        3: [function (require, module, exports) {\n          function glWiretap(gl, options = {}) {\n            const {\n              contextName = 'gl',\n              throwGetError,\n              useTrackablePrimitives,\n              readPixelsFile,\n              recording = [],\n              variables = {},\n              onReadPixels,\n              onUnrecognizedArgumentLookup\n            } = options;\n            const proxy = new Proxy(gl, {\n              get: listen\n            });\n            const contextVariables = [];\n            const entityNames = {};\n            let imageCount = 0;\n            let indent = '';\n            let readPixelsVariableName;\n            return proxy;\n            function listen(obj, property) {\n              switch (property) {\n                case 'addComment':\n                  return addComment;\n                case 'checkThrowError':\n                  return checkThrowError;\n                case 'getReadPixelsVariableName':\n                  return readPixelsVariableName;\n                case 'insertVariable':\n                  return insertVariable;\n                case 'reset':\n                  return reset;\n                case 'setIndent':\n                  return setIndent;\n                case 'toString':\n                  return toString;\n                case 'getContextVariableName':\n                  return getContextVariableName;\n              }\n              if (typeof gl[property] === 'function') {\n                return function () {\n                  switch (property) {\n                    case 'getError':\n                      if (throwGetError) {\n                        recording.push(`${indent}if (${contextName}.getError() !== ${contextName}.NONE) throw new Error('error');`);\n                      } else {\n                        recording.push(`${indent}${contextName}.getError();`);\n                      }\n                      return gl.getError();\n                    case 'getExtension':\n                      {\n                        const variableName = `${contextName}Variables${contextVariables.length}`;\n                        recording.push(`${indent}const ${variableName} = ${contextName}.getExtension('${arguments[0]}');`);\n                        const extension = gl.getExtension(arguments[0]);\n                        if (extension && typeof extension === 'object') {\n                          const tappedExtension = glExtensionWiretap(extension, {\n                            getEntity,\n                            useTrackablePrimitives,\n                            recording,\n                            contextName: variableName,\n                            contextVariables,\n                            variables,\n                            indent,\n                            onUnrecognizedArgumentLookup\n                          });\n                          contextVariables.push(tappedExtension);\n                          return tappedExtension;\n                        } else {\n                          contextVariables.push(null);\n                        }\n                        return extension;\n                      }\n                    case 'readPixels':\n                      const i = contextVariables.indexOf(arguments[6]);\n                      let targetVariableName;\n                      if (i === -1) {\n                        const variableName = getVariableName(arguments[6]);\n                        if (variableName) {\n                          targetVariableName = variableName;\n                          recording.push(`${indent}${variableName}`);\n                        } else {\n                          targetVariableName = `${contextName}Variable${contextVariables.length}`;\n                          contextVariables.push(arguments[6]);\n                          recording.push(`${indent}const ${targetVariableName} = new ${arguments[6].constructor.name}(${arguments[6].length});`);\n                        }\n                      } else {\n                        targetVariableName = `${contextName}Variable${i}`;\n                      }\n                      readPixelsVariableName = targetVariableName;\n                      const argumentAsStrings = [arguments[0], arguments[1], arguments[2], arguments[3], getEntity(arguments[4]), getEntity(arguments[5]), targetVariableName];\n                      recording.push(`${indent}${contextName}.readPixels(${argumentAsStrings.join(', ')});`);\n                      if (readPixelsFile) {\n                        writePPM(arguments[2], arguments[3]);\n                      }\n                      if (onReadPixels) {\n                        onReadPixels(targetVariableName, argumentAsStrings);\n                      }\n                      return gl.readPixels.apply(gl, arguments);\n                    case 'drawBuffers':\n                      recording.push(`${indent}${contextName}.drawBuffers([${argumentsToString(arguments[0], {\n                        contextName,\n                        contextVariables,\n                        getEntity,\n                        addVariable,\n                        variables,\n                        onUnrecognizedArgumentLookup\n                      })}]);`);\n                      return gl.drawBuffers(arguments[0]);\n                  }\n                  let result = gl[property].apply(gl, arguments);\n                  switch (typeof result) {\n                    case 'undefined':\n                      recording.push(`${indent}${methodCallToString(property, arguments)};`);\n                      return;\n                    case 'number':\n                    case 'boolean':\n                      if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n                        recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n                        contextVariables.push(result = trackablePrimitive(result));\n                        break;\n                      }\n                    default:\n                      if (result === null) {\n                        recording.push(`${methodCallToString(property, arguments)};`);\n                      } else {\n                        recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n                      }\n                      contextVariables.push(result);\n                  }\n                  return result;\n                };\n              }\n              entityNames[gl[property]] = property;\n              return gl[property];\n            }\n            function toString() {\n              return recording.join('\\n');\n            }\n            function reset() {\n              while (recording.length > 0) {\n                recording.pop();\n              }\n            }\n            function insertVariable(name, value) {\n              variables[name] = value;\n            }\n            function getEntity(value) {\n              const name = entityNames[value];\n              if (name) {\n                return contextName + '.' + name;\n              }\n              return value;\n            }\n            function setIndent(spaces) {\n              indent = ' '.repeat(spaces);\n            }\n            function addVariable(value, source) {\n              const variableName = `${contextName}Variable${contextVariables.length}`;\n              recording.push(`${indent}const ${variableName} = ${source};`);\n              contextVariables.push(value);\n              return variableName;\n            }\n            function writePPM(width, height) {\n              const sourceVariable = `${contextName}Variable${contextVariables.length}`;\n              const imageVariable = `imageDatum${imageCount}`;\n              recording.push(`${indent}let ${imageVariable} = [\"P3\\\\n# ${readPixelsFile}.ppm\\\\n\", ${width}, ' ', ${height}, \"\\\\n255\\\\n\"].join(\"\");`);\n              recording.push(`${indent}for (let i = 0; i < ${imageVariable}.length; i += 4) {`);\n              recording.push(`${indent}  ${imageVariable} += ${sourceVariable}[i] + ' ' + ${sourceVariable}[i + 1] + ' ' + ${sourceVariable}[i + 2] + ' ';`);\n              recording.push(`${indent}}`);\n              recording.push(`${indent}if (typeof require !== \"undefined\") {`);\n              recording.push(`${indent}  require('fs').writeFileSync('./${readPixelsFile}.ppm', ${imageVariable});`);\n              recording.push(`${indent}}`);\n              imageCount++;\n            }\n            function addComment(value) {\n              recording.push(`${indent}// ${value}`);\n            }\n            function checkThrowError() {\n              recording.push(`${indent}(() => {\n${indent}const error = ${contextName}.getError();\n${indent}if (error !== ${contextName}.NONE) {\n${indent}  const names = Object.getOwnPropertyNames(gl);\n${indent}  for (let i = 0; i < names.length; i++) {\n${indent}    const name = names[i];\n${indent}    if (${contextName}[name] === error) {\n${indent}      throw new Error('${contextName} threw ' + name);\n${indent}    }\n${indent}  }\n${indent}}\n${indent}})();`);\n            }\n            function methodCallToString(method, args) {\n              return `${contextName}.${method}(${argumentsToString(args, {\n                contextName,\n                contextVariables,\n                getEntity,\n                addVariable,\n                variables,\n                onUnrecognizedArgumentLookup\n              })})`;\n            }\n            function getVariableName(value) {\n              if (variables) {\n                for (const name in variables) {\n                  if (variables[name] === value) {\n                    return name;\n                  }\n                }\n              }\n              return null;\n            }\n            function getContextVariableName(value) {\n              const i = contextVariables.indexOf(value);\n              if (i !== -1) {\n                return `${contextName}Variable${i}`;\n              }\n              return null;\n            }\n          }\n          function glExtensionWiretap(extension, options) {\n            const proxy = new Proxy(extension, {\n              get: listen\n            });\n            const extensionEntityNames = {};\n            const {\n              contextName,\n              contextVariables,\n              getEntity,\n              useTrackablePrimitives,\n              recording,\n              variables,\n              indent,\n              onUnrecognizedArgumentLookup\n            } = options;\n            return proxy;\n            function listen(obj, property) {\n              if (typeof obj[property] === 'function') {\n                return function () {\n                  switch (property) {\n                    case 'drawBuffersWEBGL':\n                      recording.push(`${indent}${contextName}.drawBuffersWEBGL([${argumentsToString(arguments[0], {\n                        contextName,\n                        contextVariables,\n                        getEntity: getExtensionEntity,\n                        addVariable,\n                        variables,\n                        onUnrecognizedArgumentLookup\n                      })}]);`);\n                      return extension.drawBuffersWEBGL(arguments[0]);\n                  }\n                  let result = extension[property].apply(extension, arguments);\n                  switch (typeof result) {\n                    case 'undefined':\n                      recording.push(`${indent}${methodCallToString(property, arguments)};`);\n                      return;\n                    case 'number':\n                    case 'boolean':\n                      if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n                        recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n                        contextVariables.push(result = trackablePrimitive(result));\n                      } else {\n                        recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n                        contextVariables.push(result);\n                      }\n                      break;\n                    default:\n                      if (result === null) {\n                        recording.push(`${methodCallToString(property, arguments)};`);\n                      } else {\n                        recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n                      }\n                      contextVariables.push(result);\n                  }\n                  return result;\n                };\n              }\n              extensionEntityNames[extension[property]] = property;\n              return extension[property];\n            }\n            function getExtensionEntity(value) {\n              if (extensionEntityNames.hasOwnProperty(value)) {\n                return `${contextName}.${extensionEntityNames[value]}`;\n              }\n              return getEntity(value);\n            }\n            function methodCallToString(method, args) {\n              return `${contextName}.${method}(${argumentsToString(args, {\n                contextName,\n                contextVariables,\n                getEntity: getExtensionEntity,\n                addVariable,\n                variables,\n                onUnrecognizedArgumentLookup\n              })})`;\n            }\n            function addVariable(value, source) {\n              const variableName = `${contextName}Variable${contextVariables.length}`;\n              contextVariables.push(value);\n              recording.push(`${indent}const ${variableName} = ${source};`);\n              return variableName;\n            }\n          }\n          function argumentsToString(args, options) {\n            const {\n              variables,\n              onUnrecognizedArgumentLookup\n            } = options;\n            return Array.from(args).map(arg => {\n              const variableName = getVariableName(arg);\n              if (variableName) {\n                return variableName;\n              }\n              return argumentToString(arg, options);\n            }).join(', ');\n            function getVariableName(value) {\n              if (variables) {\n                for (const name in variables) {\n                  if (!variables.hasOwnProperty(name)) continue;\n                  if (variables[name] === value) {\n                    return name;\n                  }\n                }\n              }\n              if (onUnrecognizedArgumentLookup) {\n                return onUnrecognizedArgumentLookup(value);\n              }\n              return null;\n            }\n          }\n          function argumentToString(arg, options) {\n            const {\n              contextName,\n              contextVariables,\n              getEntity,\n              addVariable,\n              onUnrecognizedArgumentLookup\n            } = options;\n            if (typeof arg === 'undefined') {\n              return 'undefined';\n            }\n            if (arg === null) {\n              return 'null';\n            }\n            const i = contextVariables.indexOf(arg);\n            if (i > -1) {\n              return `${contextName}Variable${i}`;\n            }\n            switch (arg.constructor.name) {\n              case 'String':\n                const hasLines = /\\n/.test(arg);\n                const hasSingleQuotes = /'/.test(arg);\n                const hasDoubleQuotes = /\"/.test(arg);\n                if (hasLines) {\n                  return '`' + arg + '`';\n                } else if (hasSingleQuotes && !hasDoubleQuotes) {\n                  return '\"' + arg + '\"';\n                } else if (!hasSingleQuotes && hasDoubleQuotes) {\n                  return \"'\" + arg + \"'\";\n                } else {\n                  return '\\'' + arg + '\\'';\n                }\n              case 'Number':\n                return getEntity(arg);\n              case 'Boolean':\n                return getEntity(arg);\n              case 'Array':\n                return addVariable(arg, `new ${arg.constructor.name}([${Array.from(arg).join(',')}])`);\n              case 'Float32Array':\n              case 'Uint8Array':\n              case 'Uint16Array':\n              case 'Int32Array':\n                return addVariable(arg, `new ${arg.constructor.name}(${JSON.stringify(Array.from(arg))})`);\n              default:\n                if (onUnrecognizedArgumentLookup) {\n                  const instantiationString = onUnrecognizedArgumentLookup(arg);\n                  if (instantiationString) {\n                    return instantiationString;\n                  }\n                }\n                throw new Error(`unrecognized argument type ${arg.constructor.name}`);\n            }\n          }\n          function trackablePrimitive(value) {\n            return new value.constructor(value);\n          }\n          if (typeof module !== 'undefined') {\n            module.exports = {\n              glWiretap,\n              glExtensionWiretap\n            };\n          }\n          if (typeof window !== 'undefined') {\n            glWiretap.glExtensionWiretap = glExtensionWiretap;\n            window.glWiretap = glWiretap;\n          }\n        }, {}],\n        4: [function (require, module, exports) {\n          function setupArguments(args) {\n            const newArguments = new Array(args.length);\n            for (let i = 0; i < args.length; i++) {\n              const arg = args[i];\n              if (arg.toArray) {\n                newArguments[i] = arg.toArray();\n              } else {\n                newArguments[i] = arg;\n              }\n            }\n            return newArguments;\n          }\n          function mock1D() {\n            const args = setupArguments(arguments);\n            const row = new Float32Array(this.output.x);\n            for (let x = 0; x < this.output.x; x++) {\n              this.thread.x = x;\n              this.thread.y = 0;\n              this.thread.z = 0;\n              row[x] = this._fn.apply(this, args);\n            }\n            return row;\n          }\n          function mock2D() {\n            const args = setupArguments(arguments);\n            const matrix = new Array(this.output.y);\n            for (let y = 0; y < this.output.y; y++) {\n              const row = new Float32Array(this.output.x);\n              for (let x = 0; x < this.output.x; x++) {\n                this.thread.x = x;\n                this.thread.y = y;\n                this.thread.z = 0;\n                row[x] = this._fn.apply(this, args);\n              }\n              matrix[y] = row;\n            }\n            return matrix;\n          }\n          function mock2DGraphical() {\n            const args = setupArguments(arguments);\n            for (let y = 0; y < this.output.y; y++) {\n              for (let x = 0; x < this.output.x; x++) {\n                this.thread.x = x;\n                this.thread.y = y;\n                this.thread.z = 0;\n                this._fn.apply(this, args);\n              }\n            }\n          }\n          function mock3D() {\n            const args = setupArguments(arguments);\n            const cube = new Array(this.output.z);\n            for (let z = 0; z < this.output.z; z++) {\n              const matrix = new Array(this.output.y);\n              for (let y = 0; y < this.output.y; y++) {\n                const row = new Float32Array(this.output.x);\n                for (let x = 0; x < this.output.x; x++) {\n                  this.thread.x = x;\n                  this.thread.y = y;\n                  this.thread.z = z;\n                  row[x] = this._fn.apply(this, args);\n                }\n                matrix[y] = row;\n              }\n              cube[z] = matrix;\n            }\n            return cube;\n          }\n          function apiDecorate(kernel) {\n            kernel.setOutput = output => {\n              kernel.output = setupOutput(output);\n              if (kernel.graphical) {\n                setupGraphical(kernel);\n              }\n            };\n            kernel.toJSON = () => {\n              throw new Error('Not usable with gpuMock');\n            };\n            kernel.setConstants = flag => {\n              kernel.constants = flag;\n              return kernel;\n            };\n            kernel.setGraphical = flag => {\n              kernel.graphical = flag;\n              return kernel;\n            };\n            kernel.setCanvas = flag => {\n              kernel.canvas = flag;\n              return kernel;\n            };\n            kernel.setContext = flag => {\n              kernel.context = flag;\n              return kernel;\n            };\n            kernel.destroy = () => {};\n            kernel.validateSettings = () => {};\n            if (kernel.graphical && kernel.output) {\n              setupGraphical(kernel);\n            }\n            kernel.exec = function () {\n              return new Promise((resolve, reject) => {\n                try {\n                  resolve(kernel.apply(kernel, arguments));\n                } catch (e) {\n                  reject(e);\n                }\n              });\n            };\n            kernel.getPixels = flip => {\n              const {\n                x,\n                y\n              } = kernel.output;\n              return flip ? flipPixels(kernel._imageData.data, x, y) : kernel._imageData.data.slice(0);\n            };\n            kernel.color = function (r, g, b, a) {\n              if (typeof a === 'undefined') {\n                a = 1;\n              }\n              r = Math.floor(r * 255);\n              g = Math.floor(g * 255);\n              b = Math.floor(b * 255);\n              a = Math.floor(a * 255);\n              const width = kernel.output.x;\n              const height = kernel.output.y;\n              const x = kernel.thread.x;\n              const y = height - kernel.thread.y - 1;\n              const index = x + y * width;\n              kernel._colorData[index * 4 + 0] = r;\n              kernel._colorData[index * 4 + 1] = g;\n              kernel._colorData[index * 4 + 2] = b;\n              kernel._colorData[index * 4 + 3] = a;\n            };\n            const mockMethod = () => kernel;\n            const methods = ['setWarnVarUsage', 'setArgumentTypes', 'setTactic', 'setOptimizeFloatMemory', 'setDebug', 'setLoopMaxIterations', 'setConstantTypes', 'setFunctions', 'setNativeFunctions', 'setInjectedNative', 'setPipeline', 'setPrecision', 'setOutputToTexture', 'setImmutable', 'setStrictIntegers', 'setDynamicOutput', 'setHardcodeConstants', 'setDynamicArguments', 'setUseLegacyEncoder', 'setWarnVarUsage', 'addSubKernel'];\n            for (let i = 0; i < methods.length; i++) {\n              kernel[methods[i]] = mockMethod;\n            }\n            return kernel;\n          }\n          function setupGraphical(kernel) {\n            const {\n              x,\n              y\n            } = kernel.output;\n            if (kernel.context && kernel.context.createImageData) {\n              const data = new Uint8ClampedArray(x * y * 4);\n              kernel._imageData = kernel.context.createImageData(x, y);\n              kernel._colorData = data;\n            } else {\n              const data = new Uint8ClampedArray(x * y * 4);\n              kernel._imageData = {\n                data\n              };\n              kernel._colorData = data;\n            }\n          }\n          function setupOutput(output) {\n            let result = null;\n            if (output.length) {\n              if (output.length === 3) {\n                const [x, y, z] = output;\n                result = {\n                  x,\n                  y,\n                  z\n                };\n              } else if (output.length === 2) {\n                const [x, y] = output;\n                result = {\n                  x,\n                  y\n                };\n              } else {\n                const [x] = output;\n                result = {\n                  x\n                };\n              }\n            } else {\n              result = output;\n            }\n            return result;\n          }\n          function gpuMock(fn, settings = {}) {\n            const output = settings.output ? setupOutput(settings.output) : null;\n            function kernel() {\n              if (kernel.output.z) {\n                return mock3D.apply(kernel, arguments);\n              } else if (kernel.output.y) {\n                if (kernel.graphical) {\n                  return mock2DGraphical.apply(kernel, arguments);\n                }\n                return mock2D.apply(kernel, arguments);\n              } else {\n                return mock1D.apply(kernel, arguments);\n              }\n            }\n            kernel._fn = fn;\n            kernel.constants = settings.constants || null;\n            kernel.context = settings.context || null;\n            kernel.canvas = settings.canvas || null;\n            kernel.graphical = settings.graphical || false;\n            kernel._imageData = null;\n            kernel._colorData = null;\n            kernel.output = output;\n            kernel.thread = {\n              x: 0,\n              y: 0,\n              z: 0\n            };\n            return apiDecorate(kernel);\n          }\n          function flipPixels(pixels, width, height) {\n            const halfHeight = height / 2 | 0;\n            const bytesPerRow = width * 4;\n            const temp = new Uint8ClampedArray(width * 4);\n            const result = pixels.slice(0);\n            for (let y = 0; y < halfHeight; ++y) {\n              const topOffset = y * bytesPerRow;\n              const bottomOffset = (height - y - 1) * bytesPerRow;\n              temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n              result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n              result.set(temp, bottomOffset);\n            }\n            return result;\n          }\n          module.exports = {\n            gpuMock\n          };\n        }, {}],\n        5: [function (require, module, exports) {\n          const {\n            utils\n          } = require('./utils');\n          function alias(name, source) {\n            const fnString = source.toString();\n            return new Function(`return function ${name} (${utils.getArgumentNamesFromString(fnString).join(', ')}) {\n  ${utils.getFunctionBodyFromString(fnString)}\n}`)();\n          }\n          module.exports = {\n            alias\n          };\n        }, {\n          \"./utils\": 114\n        }],\n        6: [function (require, module, exports) {\n          const {\n            FunctionNode\n          } = require('../function-node');\n          class CPUFunctionNode extends FunctionNode {\n            astFunction(ast, retArr) {\n              if (!this.isRootKernel) {\n                retArr.push('function');\n                retArr.push(' ');\n                retArr.push(this.name);\n                retArr.push('(');\n                for (let i = 0; i < this.argumentNames.length; ++i) {\n                  const argumentName = this.argumentNames[i];\n                  if (i > 0) {\n                    retArr.push(', ');\n                  }\n                  retArr.push('user_');\n                  retArr.push(argumentName);\n                }\n                retArr.push(') {\\n');\n              }\n              for (let i = 0; i < ast.body.body.length; ++i) {\n                this.astGeneric(ast.body.body[i], retArr);\n                retArr.push('\\n');\n              }\n              if (!this.isRootKernel) {\n                retArr.push('}\\n');\n              }\n              return retArr;\n            }\n            astReturnStatement(ast, retArr) {\n              const type = this.returnType || this.getType(ast.argument);\n              if (!this.returnType) {\n                this.returnType = type;\n              }\n              if (this.isRootKernel) {\n                retArr.push(this.leadingReturnStatement);\n                this.astGeneric(ast.argument, retArr);\n                retArr.push(';\\n');\n                retArr.push(this.followingReturnStatement);\n                retArr.push('continue;\\n');\n              } else if (this.isSubKernel) {\n                retArr.push(`subKernelResult_${this.name} = `);\n                this.astGeneric(ast.argument, retArr);\n                retArr.push(';');\n                retArr.push(`return subKernelResult_${this.name};`);\n              } else {\n                retArr.push('return ');\n                this.astGeneric(ast.argument, retArr);\n                retArr.push(';');\n              }\n              return retArr;\n            }\n            astLiteral(ast, retArr) {\n              if (isNaN(ast.value)) {\n                throw this.astErrorOutput('Non-numeric literal not supported : ' + ast.value, ast);\n              }\n              retArr.push(ast.value);\n              return retArr;\n            }\n            astBinaryExpression(ast, retArr) {\n              retArr.push('(');\n              this.astGeneric(ast.left, retArr);\n              retArr.push(ast.operator);\n              this.astGeneric(ast.right, retArr);\n              retArr.push(')');\n              return retArr;\n            }\n            astIdentifierExpression(idtNode, retArr) {\n              if (idtNode.type !== 'Identifier') {\n                throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n              }\n              switch (idtNode.name) {\n                case 'Infinity':\n                  retArr.push('Infinity');\n                  break;\n                default:\n                  if (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n                    retArr.push('constants_' + idtNode.name);\n                  } else {\n                    retArr.push('user_' + idtNode.name);\n                  }\n              }\n              return retArr;\n            }\n            astForStatement(forNode, retArr) {\n              if (forNode.type !== 'ForStatement') {\n                throw this.astErrorOutput('Invalid for statement', forNode);\n              }\n              const initArr = [];\n              const testArr = [];\n              const updateArr = [];\n              const bodyArr = [];\n              let isSafe = null;\n              if (forNode.init) {\n                this.pushState('in-for-loop-init');\n                this.astGeneric(forNode.init, initArr);\n                for (let i = 0; i < initArr.length; i++) {\n                  if (initArr[i].includes && initArr[i].includes(',')) {\n                    isSafe = false;\n                  }\n                }\n                this.popState('in-for-loop-init');\n              } else {\n                isSafe = false;\n              }\n              if (forNode.test) {\n                this.astGeneric(forNode.test, testArr);\n              } else {\n                isSafe = false;\n              }\n              if (forNode.update) {\n                this.astGeneric(forNode.update, updateArr);\n              } else {\n                isSafe = false;\n              }\n              if (forNode.body) {\n                this.pushState('loop-body');\n                this.astGeneric(forNode.body, bodyArr);\n                this.popState('loop-body');\n              }\n              if (isSafe === null) {\n                isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n              }\n              if (isSafe) {\n                retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\n                retArr.push(bodyArr.join(''));\n                retArr.push('}\\n');\n              } else {\n                const iVariableName = this.getInternalVariableName('safeI');\n                if (initArr.length > 0) {\n                  retArr.push(initArr.join(''), ';\\n');\n                }\n                retArr.push(`for (let ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n                if (testArr.length > 0) {\n                  retArr.push(`if (!${testArr.join('')}) break;\\n`);\n                }\n                retArr.push(bodyArr.join(''));\n                retArr.push(`\\n${updateArr.join('')};`);\n                retArr.push('}\\n');\n              }\n              return retArr;\n            }\n            astWhileStatement(whileNode, retArr) {\n              if (whileNode.type !== 'WhileStatement') {\n                throw this.astErrorOutput('Invalid while statement', whileNode);\n              }\n              retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n              retArr.push('if (');\n              this.astGeneric(whileNode.test, retArr);\n              retArr.push(') {\\n');\n              this.astGeneric(whileNode.body, retArr);\n              retArr.push('} else {\\n');\n              retArr.push('break;\\n');\n              retArr.push('}\\n');\n              retArr.push('}\\n');\n              return retArr;\n            }\n            astDoWhileStatement(doWhileNode, retArr) {\n              if (doWhileNode.type !== 'DoWhileStatement') {\n                throw this.astErrorOutput('Invalid while statement', doWhileNode);\n              }\n              retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n              this.astGeneric(doWhileNode.body, retArr);\n              retArr.push('if (!');\n              this.astGeneric(doWhileNode.test, retArr);\n              retArr.push(') {\\n');\n              retArr.push('break;\\n');\n              retArr.push('}\\n');\n              retArr.push('}\\n');\n              return retArr;\n            }\n            astAssignmentExpression(assNode, retArr) {\n              const declaration = this.getDeclaration(assNode.left);\n              if (declaration && !declaration.assignable) {\n                throw this.astErrorOutput(`Variable ${assNode.left.name} is not assignable here`, assNode);\n              }\n              this.astGeneric(assNode.left, retArr);\n              retArr.push(assNode.operator);\n              this.astGeneric(assNode.right, retArr);\n              return retArr;\n            }\n            astBlockStatement(bNode, retArr) {\n              if (this.isState('loop-body')) {\n                this.pushState('block-body');\n                for (let i = 0; i < bNode.body.length; i++) {\n                  this.astGeneric(bNode.body[i], retArr);\n                }\n                this.popState('block-body');\n              } else {\n                retArr.push('{\\n');\n                for (let i = 0; i < bNode.body.length; i++) {\n                  this.astGeneric(bNode.body[i], retArr);\n                }\n                retArr.push('}\\n');\n              }\n              return retArr;\n            }\n            astVariableDeclaration(varDecNode, retArr) {\n              retArr.push(`${varDecNode.kind} `);\n              const {\n                declarations\n              } = varDecNode;\n              for (let i = 0; i < declarations.length; i++) {\n                if (i > 0) {\n                  retArr.push(',');\n                }\n                const declaration = declarations[i];\n                const info = this.getDeclaration(declaration.id);\n                if (!info.valueType) {\n                  info.valueType = this.getType(declaration.init);\n                }\n                this.astGeneric(declaration, retArr);\n              }\n              if (!this.isState('in-for-loop-init')) {\n                retArr.push(';');\n              }\n              return retArr;\n            }\n            astIfStatement(ifNode, retArr) {\n              retArr.push('if (');\n              this.astGeneric(ifNode.test, retArr);\n              retArr.push(')');\n              if (ifNode.consequent.type === 'BlockStatement') {\n                this.astGeneric(ifNode.consequent, retArr);\n              } else {\n                retArr.push(' {\\n');\n                this.astGeneric(ifNode.consequent, retArr);\n                retArr.push('\\n}\\n');\n              }\n              if (ifNode.alternate) {\n                retArr.push('else ');\n                if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n                  this.astGeneric(ifNode.alternate, retArr);\n                } else {\n                  retArr.push(' {\\n');\n                  this.astGeneric(ifNode.alternate, retArr);\n                  retArr.push('\\n}\\n');\n                }\n              }\n              return retArr;\n            }\n            astSwitchStatement(ast, retArr) {\n              const {\n                discriminant,\n                cases\n              } = ast;\n              retArr.push('switch (');\n              this.astGeneric(discriminant, retArr);\n              retArr.push(') {\\n');\n              for (let i = 0; i < cases.length; i++) {\n                if (cases[i].test === null) {\n                  retArr.push('default:\\n');\n                  this.astGeneric(cases[i].consequent, retArr);\n                  if (cases[i].consequent && cases[i].consequent.length > 0) {\n                    retArr.push('break;\\n');\n                  }\n                  continue;\n                }\n                retArr.push('case ');\n                this.astGeneric(cases[i].test, retArr);\n                retArr.push(':\\n');\n                if (cases[i].consequent && cases[i].consequent.length > 0) {\n                  this.astGeneric(cases[i].consequent, retArr);\n                  retArr.push('break;\\n');\n                }\n              }\n              retArr.push('\\n}');\n            }\n            astThisExpression(tNode, retArr) {\n              retArr.push('_this');\n              return retArr;\n            }\n            astMemberExpression(mNode, retArr) {\n              const {\n                signature,\n                type,\n                property,\n                xProperty,\n                yProperty,\n                zProperty,\n                name,\n                origin\n              } = this.getMemberExpressionDetails(mNode);\n              switch (signature) {\n                case 'this.thread.value':\n                  retArr.push(`_this.thread.${name}`);\n                  return retArr;\n                case 'this.output.value':\n                  switch (name) {\n                    case 'x':\n                      retArr.push('outputX');\n                      break;\n                    case 'y':\n                      retArr.push('outputY');\n                      break;\n                    case 'z':\n                      retArr.push('outputZ');\n                      break;\n                    default:\n                      throw this.astErrorOutput('Unexpected expression', mNode);\n                  }\n                  return retArr;\n                case 'value':\n                  throw this.astErrorOutput('Unexpected expression', mNode);\n                case 'value[]':\n                case 'value[][]':\n                case 'value[][][]':\n                case 'value.value':\n                  if (origin === 'Math') {\n                    retArr.push(Math[name]);\n                    return retArr;\n                  }\n                  switch (property) {\n                    case 'r':\n                      retArr.push(`user_${name}[0]`);\n                      return retArr;\n                    case 'g':\n                      retArr.push(`user_${name}[1]`);\n                      return retArr;\n                    case 'b':\n                      retArr.push(`user_${name}[2]`);\n                      return retArr;\n                    case 'a':\n                      retArr.push(`user_${name}[3]`);\n                      return retArr;\n                  }\n                  break;\n                case 'this.constants.value':\n                case 'this.constants.value[]':\n                case 'this.constants.value[][]':\n                case 'this.constants.value[][][]':\n                  break;\n                case 'fn()[]':\n                  this.astGeneric(mNode.object, retArr);\n                  retArr.push('[');\n                  this.astGeneric(mNode.property, retArr);\n                  retArr.push(']');\n                  return retArr;\n                case 'fn()[][]':\n                  this.astGeneric(mNode.object.object, retArr);\n                  retArr.push('[');\n                  this.astGeneric(mNode.object.property, retArr);\n                  retArr.push(']');\n                  retArr.push('[');\n                  this.astGeneric(mNode.property, retArr);\n                  retArr.push(']');\n                  return retArr;\n                default:\n                  throw this.astErrorOutput('Unexpected expression', mNode);\n              }\n              if (!mNode.computed) {\n                switch (type) {\n                  case 'Number':\n                  case 'Integer':\n                  case 'Float':\n                  case 'Boolean':\n                    retArr.push(`${origin}_${name}`);\n                    return retArr;\n                }\n              }\n              const markupName = `${origin}_${name}`;\n              switch (type) {\n                case 'Array(2)':\n                case 'Array(3)':\n                case 'Array(4)':\n                case 'Matrix(2)':\n                case 'Matrix(3)':\n                case 'Matrix(4)':\n                case 'HTMLImageArray':\n                case 'ArrayTexture(1)':\n                case 'ArrayTexture(2)':\n                case 'ArrayTexture(3)':\n                case 'ArrayTexture(4)':\n                case 'HTMLImage':\n                default:\n                  let size;\n                  let isInput;\n                  if (origin === 'constants') {\n                    const constant = this.constants[name];\n                    isInput = this.constantTypes[name] === 'Input';\n                    size = isInput ? constant.size : null;\n                  } else {\n                    isInput = this.isInput(name);\n                    size = isInput ? this.argumentSizes[this.argumentNames.indexOf(name)] : null;\n                  }\n                  retArr.push(`${markupName}`);\n                  if (zProperty && yProperty) {\n                    if (isInput) {\n                      retArr.push('[(');\n                      this.astGeneric(zProperty, retArr);\n                      retArr.push(`*${this.dynamicArguments ? '(outputY * outputX)' : size[1] * size[0]})+(`);\n                      this.astGeneric(yProperty, retArr);\n                      retArr.push(`*${this.dynamicArguments ? 'outputX' : size[0]})+`);\n                      this.astGeneric(xProperty, retArr);\n                      retArr.push(']');\n                    } else {\n                      retArr.push('[');\n                      this.astGeneric(zProperty, retArr);\n                      retArr.push(']');\n                      retArr.push('[');\n                      this.astGeneric(yProperty, retArr);\n                      retArr.push(']');\n                      retArr.push('[');\n                      this.astGeneric(xProperty, retArr);\n                      retArr.push(']');\n                    }\n                  } else if (yProperty) {\n                    if (isInput) {\n                      retArr.push('[(');\n                      this.astGeneric(yProperty, retArr);\n                      retArr.push(`*${this.dynamicArguments ? 'outputX' : size[0]})+`);\n                      this.astGeneric(xProperty, retArr);\n                      retArr.push(']');\n                    } else {\n                      retArr.push('[');\n                      this.astGeneric(yProperty, retArr);\n                      retArr.push(']');\n                      retArr.push('[');\n                      this.astGeneric(xProperty, retArr);\n                      retArr.push(']');\n                    }\n                  } else if (typeof xProperty !== 'undefined') {\n                    retArr.push('[');\n                    this.astGeneric(xProperty, retArr);\n                    retArr.push(']');\n                  }\n              }\n              return retArr;\n            }\n            astCallExpression(ast, retArr) {\n              if (ast.type !== 'CallExpression') {\n                throw this.astErrorOutput('Unknown CallExpression', ast);\n              }\n              let functionName = this.astMemberExpressionUnroll(ast.callee);\n              if (this.calledFunctions.indexOf(functionName) < 0) {\n                this.calledFunctions.push(functionName);\n              }\n              this.isAstMathFunction(ast);\n              if (this.onFunctionCall) {\n                this.onFunctionCall(this.name, functionName, ast.arguments);\n              }\n              retArr.push(functionName);\n              retArr.push('(');\n              const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n              for (let i = 0; i < ast.arguments.length; ++i) {\n                const argument = ast.arguments[i];\n                let argumentType = this.getType(argument);\n                if (!targetTypes[i]) {\n                  this.triggerImplyArgumentType(functionName, i, argumentType, this);\n                }\n                if (i > 0) {\n                  retArr.push(', ');\n                }\n                this.astGeneric(argument, retArr);\n              }\n              retArr.push(')');\n              return retArr;\n            }\n            astArrayExpression(arrNode, retArr) {\n              const returnType = this.getType(arrNode);\n              const arrLen = arrNode.elements.length;\n              const elements = [];\n              for (let i = 0; i < arrLen; ++i) {\n                const element = [];\n                this.astGeneric(arrNode.elements[i], element);\n                elements.push(element.join(''));\n              }\n              switch (returnType) {\n                case 'Matrix(2)':\n                case 'Matrix(3)':\n                case 'Matrix(4)':\n                  retArr.push(`[${elements.join(', ')}]`);\n                  break;\n                default:\n                  retArr.push(`new Float32Array([${elements.join(', ')}])`);\n              }\n              return retArr;\n            }\n            astDebuggerStatement(arrNode, retArr) {\n              retArr.push('debugger;');\n              return retArr;\n            }\n          }\n          module.exports = {\n            CPUFunctionNode\n          };\n        }, {\n          \"../function-node\": 10\n        }],\n        7: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../utils');\n          function constantsToString(constants, types) {\n            const results = [];\n            for (const name in types) {\n              if (!types.hasOwnProperty(name)) continue;\n              const type = types[name];\n              const constant = constants[name];\n              switch (type) {\n                case 'Number':\n                case 'Integer':\n                case 'Float':\n                case 'Boolean':\n                  results.push(`${name}:${constant}`);\n                  break;\n                case 'Array(2)':\n                case 'Array(3)':\n                case 'Array(4)':\n                case 'Matrix(2)':\n                case 'Matrix(3)':\n                case 'Matrix(4)':\n                  results.push(`${name}:new ${constant.constructor.name}(${JSON.stringify(Array.from(constant))})`);\n                  break;\n              }\n            }\n            return `{ ${results.join()} }`;\n          }\n          function cpuKernelString(cpuKernel, name) {\n            const header = [];\n            const thisProperties = [];\n            const beforeReturn = [];\n            const useFunctionKeyword = !/^function/.test(cpuKernel.color.toString());\n            header.push('  const { context, canvas, constants: incomingConstants } = settings;', `  const output = new Int32Array(${JSON.stringify(Array.from(cpuKernel.output))});`, `  const _constantTypes = ${JSON.stringify(cpuKernel.constantTypes)};`, `  const _constants = ${constantsToString(cpuKernel.constants, cpuKernel.constantTypes)};`);\n            thisProperties.push('    constants: _constants,', '    context,', '    output,', '    thread: {x: 0, y: 0, z: 0},');\n            if (cpuKernel.graphical) {\n              header.push(`  const _imageData = context.createImageData(${cpuKernel.output[0]}, ${cpuKernel.output[1]});`);\n              header.push(`  const _colorData = new Uint8ClampedArray(${cpuKernel.output[0]} * ${cpuKernel.output[1]} * 4);`);\n              const colorFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.color.toString(), {\n                thisLookup: propertyName => {\n                  switch (propertyName) {\n                    case '_colorData':\n                      return '_colorData';\n                    case '_imageData':\n                      return '_imageData';\n                    case 'output':\n                      return 'output';\n                    case 'thread':\n                      return 'this.thread';\n                  }\n                  return JSON.stringify(cpuKernel[propertyName]);\n                },\n                findDependency: (object, name) => {\n                  return null;\n                }\n              });\n              const getPixelsFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.getPixels.toString(), {\n                thisLookup: propertyName => {\n                  switch (propertyName) {\n                    case '_colorData':\n                      return '_colorData';\n                    case '_imageData':\n                      return '_imageData';\n                    case 'output':\n                      return 'output';\n                    case 'thread':\n                      return 'this.thread';\n                  }\n                  return JSON.stringify(cpuKernel[propertyName]);\n                },\n                findDependency: () => {\n                  return null;\n                }\n              });\n              thisProperties.push('    _imageData,', '    _colorData,', `    color: ${colorFn},`);\n              beforeReturn.push(`  kernel.getPixels = ${getPixelsFn};`);\n            }\n            const constantTypes = [];\n            const constantKeys = Object.keys(cpuKernel.constantTypes);\n            for (let i = 0; i < constantKeys.length; i++) {\n              constantTypes.push(cpuKernel.constantTypes[constantKeys]);\n            }\n            if (cpuKernel.argumentTypes.indexOf('HTMLImageArray') !== -1 || constantTypes.indexOf('HTMLImageArray') !== -1) {\n              const flattenedImageTo3DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo3DArray.toString(), {\n                doNotDefine: ['canvas'],\n                findDependency: (object, name) => {\n                  if (object === 'this') {\n                    return (useFunctionKeyword ? 'function ' : '') + cpuKernel[name].toString();\n                  }\n                  return null;\n                },\n                thisLookup: propertyName => {\n                  switch (propertyName) {\n                    case 'canvas':\n                      return;\n                    case 'context':\n                      return 'context';\n                  }\n                }\n              });\n              beforeReturn.push(flattenedImageTo3DArray);\n              thisProperties.push(`    _mediaTo2DArray,`);\n              thisProperties.push(`    _imageTo3DArray,`);\n            } else if (cpuKernel.argumentTypes.indexOf('HTMLImage') !== -1 || constantTypes.indexOf('HTMLImage') !== -1) {\n              const flattenedImageTo2DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._mediaTo2DArray.toString(), {\n                findDependency: (object, name) => {\n                  return null;\n                },\n                thisLookup: propertyName => {\n                  switch (propertyName) {\n                    case 'canvas':\n                      return 'settings.canvas';\n                    case 'context':\n                      return 'settings.context';\n                  }\n                  throw new Error('unhandled thisLookup');\n                }\n              });\n              beforeReturn.push(flattenedImageTo2DArray);\n              thisProperties.push(`    _mediaTo2DArray,`);\n            }\n            return `function(settings) {\n${header.join('\\n')}\n  for (const p in _constantTypes) {\n    if (!_constantTypes.hasOwnProperty(p)) continue;\n    const type = _constantTypes[p];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        if (incomingConstants.hasOwnProperty(p)) {\n          console.warn('constant ' + p + ' of type ' + type + ' cannot be resigned');\n        }\n        continue;\n    }\n    if (!incomingConstants.hasOwnProperty(p)) {\n      throw new Error('constant ' + p + ' not found');\n    }\n    _constants[p] = incomingConstants[p];\n  }\n  const kernel = (function() {\n${cpuKernel._kernelString}\n  })\n    .apply({ ${thisProperties.join('\\n')} });\n  ${beforeReturn.join('\\n')}\n  return kernel;\n}`;\n          }\n          module.exports = {\n            cpuKernelString\n          };\n        }, {\n          \"../../utils\": 114\n        }],\n        8: [function (require, module, exports) {\n          const {\n            Kernel\n          } = require('../kernel');\n          const {\n            FunctionBuilder\n          } = require('../function-builder');\n          const {\n            CPUFunctionNode\n          } = require('./function-node');\n          const {\n            utils\n          } = require('../../utils');\n          const {\n            cpuKernelString\n          } = require('./kernel-string');\n          class CPUKernel extends Kernel {\n            static getFeatures() {\n              return this.features;\n            }\n            static get features() {\n              return Object.freeze({\n                kernelMap: true,\n                isIntegerDivisionAccurate: true\n              });\n            }\n            static get isSupported() {\n              return true;\n            }\n            static isContextMatch(context) {\n              return false;\n            }\n            static get mode() {\n              return 'cpu';\n            }\n            static nativeFunctionArguments() {\n              return null;\n            }\n            static nativeFunctionReturnType() {\n              throw new Error(`Looking up native function return type not supported on ${this.name}`);\n            }\n            static combineKernels(combinedKernel) {\n              return combinedKernel;\n            }\n            static getSignature(kernel, argumentTypes) {\n              return 'cpu' + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n            }\n            constructor(source, settings) {\n              super(source, settings);\n              this.mergeSettings(source.settings || settings);\n              this._imageData = null;\n              this._colorData = null;\n              this._kernelString = null;\n              this._prependedString = [];\n              this.thread = {\n                x: 0,\n                y: 0,\n                z: 0\n              };\n              this.translatedSources = null;\n            }\n            initCanvas() {\n              if (typeof document !== 'undefined') {\n                return document.createElement('canvas');\n              } else if (typeof OffscreenCanvas !== 'undefined') {\n                return new OffscreenCanvas(0, 0);\n              }\n            }\n            initContext() {\n              if (!this.canvas) return null;\n              return this.canvas.getContext('2d');\n            }\n            initPlugins(settings) {\n              return [];\n            }\n            validateSettings(args) {\n              if (!this.output || this.output.length === 0) {\n                if (args.length !== 1) {\n                  throw new Error('Auto output only supported for kernels with only one input');\n                }\n                const argType = utils.getVariableType(args[0], this.strictIntegers);\n                if (argType === 'Array') {\n                  this.output = utils.getDimensions(argType);\n                } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n                  this.output = args[0].output;\n                } else {\n                  throw new Error('Auto output not supported for input type: ' + argType);\n                }\n              }\n              if (this.graphical) {\n                if (this.output.length !== 2) {\n                  throw new Error('Output must have 2 dimensions on graphical mode');\n                }\n              }\n              this.checkOutput();\n            }\n            translateSource() {\n              this.leadingReturnStatement = this.output.length > 1 ? 'resultX[x] = ' : 'result[x] = ';\n              if (this.subKernels) {\n                const followingReturnStatement = [];\n                for (let i = 0; i < this.subKernels.length; i++) {\n                  const {\n                    name\n                  } = this.subKernels[i];\n                  followingReturnStatement.push(this.output.length > 1 ? `resultX_${name}[x] = subKernelResult_${name};\\n` : `result_${name}[x] = subKernelResult_${name};\\n`);\n                }\n                this.followingReturnStatement = followingReturnStatement.join('');\n              }\n              const functionBuilder = FunctionBuilder.fromKernel(this, CPUFunctionNode);\n              this.translatedSources = functionBuilder.getPrototypes('kernel');\n              if (!this.graphical && !this.returnType) {\n                this.returnType = functionBuilder.getKernelResultType();\n              }\n            }\n            build() {\n              if (this.built) return;\n              this.setupConstants();\n              this.setupArguments(arguments);\n              this.validateSettings(arguments);\n              this.translateSource();\n              if (this.graphical) {\n                const {\n                  canvas,\n                  output\n                } = this;\n                if (!canvas) {\n                  throw new Error('no canvas available for using graphical output');\n                }\n                const width = output[0];\n                const height = output[1] || 1;\n                canvas.width = width;\n                canvas.height = height;\n                this._imageData = this.context.createImageData(width, height);\n                this._colorData = new Uint8ClampedArray(width * height * 4);\n              }\n              const kernelString = this.getKernelString();\n              this.kernelString = kernelString;\n              if (this.debug) {\n                console.log('Function output:');\n                console.log(kernelString);\n              }\n              try {\n                this.run = new Function([], kernelString).bind(this)();\n              } catch (e) {\n                console.error('An error occurred compiling the javascript: ', e);\n              }\n              this.buildSignature(arguments);\n              this.built = true;\n            }\n            color(r, g, b, a) {\n              if (typeof a === 'undefined') {\n                a = 1;\n              }\n              r = Math.floor(r * 255);\n              g = Math.floor(g * 255);\n              b = Math.floor(b * 255);\n              a = Math.floor(a * 255);\n              const width = this.output[0];\n              const height = this.output[1];\n              const x = this.thread.x;\n              const y = height - this.thread.y - 1;\n              const index = x + y * width;\n              this._colorData[index * 4 + 0] = r;\n              this._colorData[index * 4 + 1] = g;\n              this._colorData[index * 4 + 2] = b;\n              this._colorData[index * 4 + 3] = a;\n            }\n            getKernelString() {\n              if (this._kernelString !== null) return this._kernelString;\n              let kernelThreadString = null;\n              let {\n                translatedSources\n              } = this;\n              if (translatedSources.length > 1) {\n                translatedSources = translatedSources.filter(fn => {\n                  if (/^function/.test(fn)) return fn;\n                  kernelThreadString = fn;\n                  return false;\n                });\n              } else {\n                kernelThreadString = translatedSources.shift();\n              }\n              return this._kernelString = `  const LOOP_MAX = ${this._getLoopMaxString()};\n  ${this.injectedNative || ''}\n  const _this = this;\n  ${this._resultKernelHeader()}\n  ${this._processConstants()}\n  return (${this.argumentNames.map(argumentName => 'user_' + argumentName).join(', ')}) => {\n    ${this._prependedString.join('')}\n    ${this._earlyThrows()}\n    ${this._processArguments()}\n    ${this.graphical ? this._graphicalKernelBody(kernelThreadString) : this._resultKernelBody(kernelThreadString)}\n    ${translatedSources.length > 0 ? translatedSources.join('\\n') : ''}\n  };`;\n            }\n            toString() {\n              return cpuKernelString(this);\n            }\n            _getLoopMaxString() {\n              return this.loopMaxIterations ? ` ${parseInt(this.loopMaxIterations)};` : ' 1000;';\n            }\n            _processConstants() {\n              if (!this.constants) return '';\n              const result = [];\n              for (let p in this.constants) {\n                const type = this.constantTypes[p];\n                switch (type) {\n                  case 'HTMLCanvas':\n                  case 'OffscreenCanvas':\n                  case 'HTMLImage':\n                  case 'ImageBitmap':\n                  case 'ImageData':\n                  case 'HTMLVideo':\n                    result.push(`    const constants_${p} = this._mediaTo2DArray(this.constants.${p});\\n`);\n                    break;\n                  case 'HTMLImageArray':\n                    result.push(`    const constants_${p} = this._imageTo3DArray(this.constants.${p});\\n`);\n                    break;\n                  case 'Input':\n                    result.push(`    const constants_${p} = this.constants.${p}.value;\\n`);\n                    break;\n                  default:\n                    result.push(`    const constants_${p} = this.constants.${p};\\n`);\n                }\n              }\n              return result.join('');\n            }\n            _earlyThrows() {\n              if (this.graphical) return '';\n              if (this.immutable) return '';\n              if (!this.pipeline) return '';\n              const arrayArguments = [];\n              for (let i = 0; i < this.argumentTypes.length; i++) {\n                if (this.argumentTypes[i] === 'Array') {\n                  arrayArguments.push(this.argumentNames[i]);\n                }\n              }\n              if (arrayArguments.length === 0) return '';\n              const checks = [];\n              for (let i = 0; i < arrayArguments.length; i++) {\n                const argumentName = arrayArguments[i];\n                const checkSubKernels = this._mapSubKernels(subKernel => `user_${argumentName} === result_${subKernel.name}`).join(' || ');\n                checks.push(`user_${argumentName} === result${checkSubKernels ? ` || ${checkSubKernels}` : ''}`);\n              }\n              return `if (${checks.join(' || ')}) throw new Error('Source and destination arrays are the same.  Use immutable = true');`;\n            }\n            _processArguments() {\n              const result = [];\n              for (let i = 0; i < this.argumentTypes.length; i++) {\n                const variableName = `user_${this.argumentNames[i]}`;\n                switch (this.argumentTypes[i]) {\n                  case 'HTMLCanvas':\n                  case 'OffscreenCanvas':\n                  case 'HTMLImage':\n                  case 'ImageBitmap':\n                  case 'ImageData':\n                  case 'HTMLVideo':\n                    result.push(`    ${variableName} = this._mediaTo2DArray(${variableName});\\n`);\n                    break;\n                  case 'HTMLImageArray':\n                    result.push(`    ${variableName} = this._imageTo3DArray(${variableName});\\n`);\n                    break;\n                  case 'Input':\n                    result.push(`    ${variableName} = ${variableName}.value;\\n`);\n                    break;\n                  case 'ArrayTexture(1)':\n                  case 'ArrayTexture(2)':\n                  case 'ArrayTexture(3)':\n                  case 'ArrayTexture(4)':\n                  case 'NumberTexture':\n                  case 'MemoryOptimizedNumberTexture':\n                    result.push(`\n    if (${variableName}.toArray) {\n      if (!_this.textureCache) {\n        _this.textureCache = [];\n        _this.arrayCache = [];\n      }\n      const textureIndex = _this.textureCache.indexOf(${variableName});\n      if (textureIndex !== -1) {\n        ${variableName} = _this.arrayCache[textureIndex];\n      } else {\n        _this.textureCache.push(${variableName});\n        ${variableName} = ${variableName}.toArray();\n        _this.arrayCache.push(${variableName});\n      }\n    }`);\n                    break;\n                }\n              }\n              return result.join('');\n            }\n            _mediaTo2DArray(media) {\n              const canvas = this.canvas;\n              const width = media.width > 0 ? media.width : media.videoWidth;\n              const height = media.height > 0 ? media.height : media.videoHeight;\n              if (canvas.width < width) {\n                canvas.width = width;\n              }\n              if (canvas.height < height) {\n                canvas.height = height;\n              }\n              const ctx = this.context;\n              let pixelsData;\n              if (media.constructor === ImageData) {\n                pixelsData = media.data;\n              } else {\n                ctx.drawImage(media, 0, 0, width, height);\n                pixelsData = ctx.getImageData(0, 0, width, height).data;\n              }\n              const imageArray = new Array(height);\n              let index = 0;\n              for (let y = height - 1; y >= 0; y--) {\n                const row = imageArray[y] = new Array(width);\n                for (let x = 0; x < width; x++) {\n                  const pixel = new Float32Array(4);\n                  pixel[0] = pixelsData[index++] / 255;\n                  pixel[1] = pixelsData[index++] / 255;\n                  pixel[2] = pixelsData[index++] / 255;\n                  pixel[3] = pixelsData[index++] / 255;\n                  row[x] = pixel;\n                }\n              }\n              return imageArray;\n            }\n            getPixels(flip) {\n              const [width, height] = this.output;\n              return flip ? utils.flipPixels(this._imageData.data, width, height) : this._imageData.data.slice(0);\n            }\n            _imageTo3DArray(images) {\n              const imagesArray = new Array(images.length);\n              for (let i = 0; i < images.length; i++) {\n                imagesArray[i] = this._mediaTo2DArray(images[i]);\n              }\n              return imagesArray;\n            }\n            _resultKernelHeader() {\n              if (this.graphical) return '';\n              if (this.immutable) return '';\n              if (!this.pipeline) return '';\n              switch (this.output.length) {\n                case 1:\n                  return this._mutableKernel1DResults();\n                case 2:\n                  return this._mutableKernel2DResults();\n                case 3:\n                  return this._mutableKernel3DResults();\n              }\n            }\n            _resultKernelBody(kernelString) {\n              switch (this.output.length) {\n                case 1:\n                  return (!this.immutable && this.pipeline ? this._resultMutableKernel1DLoop(kernelString) : this._resultImmutableKernel1DLoop(kernelString)) + this._kernelOutput();\n                case 2:\n                  return (!this.immutable && this.pipeline ? this._resultMutableKernel2DLoop(kernelString) : this._resultImmutableKernel2DLoop(kernelString)) + this._kernelOutput();\n                case 3:\n                  return (!this.immutable && this.pipeline ? this._resultMutableKernel3DLoop(kernelString) : this._resultImmutableKernel3DLoop(kernelString)) + this._kernelOutput();\n                default:\n                  throw new Error('unsupported size kernel');\n              }\n            }\n            _graphicalKernelBody(kernelThreadString) {\n              switch (this.output.length) {\n                case 2:\n                  return this._graphicalKernel2DLoop(kernelThreadString) + this._graphicalOutput();\n                default:\n                  throw new Error('unsupported size kernel');\n              }\n            }\n            _graphicalOutput() {\n              return `\n    this._imageData.data.set(this._colorData);\n    this.context.putImageData(this._imageData, 0, 0);\n    return;`;\n            }\n            _getKernelResultTypeConstructorString() {\n              switch (this.returnType) {\n                case 'LiteralInteger':\n                case 'Number':\n                case 'Integer':\n                case 'Float':\n                  return 'Float32Array';\n                case 'Array(2)':\n                case 'Array(3)':\n                case 'Array(4)':\n                  return 'Array';\n                default:\n                  if (this.graphical) {\n                    return 'Float32Array';\n                  }\n                  throw new Error(`unhandled returnType ${this.returnType}`);\n              }\n            }\n            _resultImmutableKernel1DLoop(kernelString) {\n              const constructorString = this._getKernelResultTypeConstructorString();\n              return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${this._mapSubKernels(subKernel => `const result_${subKernel.name} = new ${constructorString}(outputX);\\n`).join('    ')}\n    ${this._mapSubKernels(subKernel => `let subKernelResult_${subKernel.name};\\n`).join('    ')}\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${kernelString}\n    }`;\n            }\n            _mutableKernel1DResults() {\n              const constructorString = this._getKernelResultTypeConstructorString();\n              return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${this._mapSubKernels(subKernel => `const result_${subKernel.name} = new ${constructorString}(outputX);\\n`).join('    ')}\n    ${this._mapSubKernels(subKernel => `let subKernelResult_${subKernel.name};\\n`).join('    ')}`;\n            }\n            _resultMutableKernel1DLoop(kernelString) {\n              return `  const outputX = _this.output[0];\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${kernelString}\n    }`;\n            }\n            _resultImmutableKernel2DLoop(kernelString) {\n              const constructorString = this._getKernelResultTypeConstructorString();\n              return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${this._mapSubKernels(subKernel => `const result_${subKernel.name} = new Array(outputY);\\n`).join('    ')}\n    ${this._mapSubKernels(subKernel => `let subKernelResult_${subKernel.name};\\n`).join('    ')}\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${this._mapSubKernels(subKernel => `const resultX_${subKernel.name} = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('')}\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${kernelString}\n      }\n    }`;\n            }\n            _mutableKernel2DResults() {\n              const constructorString = this._getKernelResultTypeConstructorString();\n              return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${this._mapSubKernels(subKernel => `const result_${subKernel.name} = new Array(outputY);\\n`).join('    ')}\n    ${this._mapSubKernels(subKernel => `let subKernelResult_${subKernel.name};\\n`).join('    ')}\n    for (let y = 0; y < outputY; y++) {\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${this._mapSubKernels(subKernel => `const resultX_${subKernel.name} = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('')}\n    }`;\n            }\n            _resultMutableKernel2DLoop(kernelString) {\n              const constructorString = this._getKernelResultTypeConstructorString();\n              return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y];\n      ${this._mapSubKernels(subKernel => `const resultX_${subKernel.name} = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('')}\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${kernelString}\n      }\n    }`;\n            }\n            _graphicalKernel2DLoop(kernelString) {\n              return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${kernelString}\n      }\n    }`;\n            }\n            _resultImmutableKernel3DLoop(kernelString) {\n              const constructorString = this._getKernelResultTypeConstructorString();\n              return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${this._mapSubKernels(subKernel => `const result_${subKernel.name} = new Array(outputZ);\\n`).join('    ')}\n    ${this._mapSubKernels(subKernel => `let subKernelResult_${subKernel.name};\\n`).join('    ')}\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z] = new Array(outputY);\n      ${this._mapSubKernels(subKernel => `const resultY_${subKernel.name} = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ')}\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${this._mapSubKernels(subKernel => `const resultX_${subKernel.name} = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ')}\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${kernelString}\n        }\n      }\n    }`;\n            }\n            _mutableKernel3DResults() {\n              const constructorString = this._getKernelResultTypeConstructorString();\n              return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${this._mapSubKernels(subKernel => `const result_${subKernel.name} = new Array(outputZ);\\n`).join('    ')}\n    ${this._mapSubKernels(subKernel => `let subKernelResult_${subKernel.name};\\n`).join('    ')}\n    for (let z = 0; z < outputZ; z++) {\n      const resultY = result[z] = new Array(outputY);\n      ${this._mapSubKernels(subKernel => `const resultY_${subKernel.name} = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ')}\n      for (let y = 0; y < outputY; y++) {\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${this._mapSubKernels(subKernel => `const resultX_${subKernel.name} = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ')}\n      }\n    }`;\n            }\n            _resultMutableKernel3DLoop(kernelString) {\n              return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z];\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y];\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${kernelString}\n        }\n      }\n    }`;\n            }\n            _kernelOutput() {\n              if (!this.subKernels) {\n                return '\\n    return result;';\n              }\n              return `\\n    return {\n      result: result,\n      ${this.subKernels.map(subKernel => `${subKernel.property}: result_${subKernel.name}`).join(',\\n      ')}\n    };`;\n            }\n            _mapSubKernels(fn) {\n              return this.subKernels === null ? [''] : this.subKernels.map(fn);\n            }\n            destroy(removeCanvasReference) {\n              if (removeCanvasReference) {\n                delete this.canvas;\n              }\n            }\n            static destroyContext(context) {}\n            toJSON() {\n              const json = super.toJSON();\n              json.functionNodes = FunctionBuilder.fromKernel(this, CPUFunctionNode).toJSON();\n              return json;\n            }\n            setOutput(output) {\n              super.setOutput(output);\n              const [width, height] = this.output;\n              if (this.graphical) {\n                this._imageData = this.context.createImageData(width, height);\n                this._colorData = new Uint8ClampedArray(width * height * 4);\n              }\n            }\n            prependString(value) {\n              if (this._kernelString) throw new Error('Kernel already built');\n              this._prependedString.push(value);\n            }\n            hasPrependString(value) {\n              return this._prependedString.indexOf(value) > -1;\n            }\n          }\n          module.exports = {\n            CPUKernel\n          };\n        }, {\n          \"../../utils\": 114,\n          \"../function-builder\": 9,\n          \"../kernel\": 36,\n          \"./function-node\": 6,\n          \"./kernel-string\": 7\n        }],\n        9: [function (require, module, exports) {\n          class FunctionBuilder {\n            static fromKernel(kernel, FunctionNode, extraNodeOptions) {\n              const {\n                kernelArguments,\n                kernelConstants,\n                argumentNames,\n                argumentSizes,\n                argumentBitRatios,\n                constants,\n                constantBitRatios,\n                debug,\n                loopMaxIterations,\n                nativeFunctions,\n                output,\n                optimizeFloatMemory,\n                precision,\n                plugins,\n                source,\n                subKernels,\n                functions,\n                leadingReturnStatement,\n                followingReturnStatement,\n                dynamicArguments,\n                dynamicOutput\n              } = kernel;\n              const argumentTypes = new Array(kernelArguments.length);\n              const constantTypes = {};\n              for (let i = 0; i < kernelArguments.length; i++) {\n                argumentTypes[i] = kernelArguments[i].type;\n              }\n              for (let i = 0; i < kernelConstants.length; i++) {\n                const kernelConstant = kernelConstants[i];\n                constantTypes[kernelConstant.name] = kernelConstant.type;\n              }\n              const needsArgumentType = (functionName, index) => {\n                return functionBuilder.needsArgumentType(functionName, index);\n              };\n              const assignArgumentType = (functionName, index, type) => {\n                functionBuilder.assignArgumentType(functionName, index, type);\n              };\n              const lookupReturnType = (functionName, ast, requestingNode) => {\n                return functionBuilder.lookupReturnType(functionName, ast, requestingNode);\n              };\n              const lookupFunctionArgumentTypes = functionName => {\n                return functionBuilder.lookupFunctionArgumentTypes(functionName);\n              };\n              const lookupFunctionArgumentName = (functionName, argumentIndex) => {\n                return functionBuilder.lookupFunctionArgumentName(functionName, argumentIndex);\n              };\n              const lookupFunctionArgumentBitRatio = (functionName, argumentName) => {\n                return functionBuilder.lookupFunctionArgumentBitRatio(functionName, argumentName);\n              };\n              const triggerImplyArgumentType = (functionName, i, argumentType, requestingNode) => {\n                functionBuilder.assignArgumentType(functionName, i, argumentType, requestingNode);\n              };\n              const triggerImplyArgumentBitRatio = (functionName, argumentName, calleeFunctionName, argumentIndex) => {\n                functionBuilder.assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex);\n              };\n              const onFunctionCall = (functionName, calleeFunctionName, args) => {\n                functionBuilder.trackFunctionCall(functionName, calleeFunctionName, args);\n              };\n              const onNestedFunction = (ast, source) => {\n                const argumentNames = [];\n                for (let i = 0; i < ast.params.length; i++) {\n                  argumentNames.push(ast.params[i].name);\n                }\n                const nestedFunction = new FunctionNode(source, Object.assign({}, nodeOptions, {\n                  returnType: null,\n                  ast,\n                  name: ast.id.name,\n                  argumentNames,\n                  lookupReturnType,\n                  lookupFunctionArgumentTypes,\n                  lookupFunctionArgumentName,\n                  lookupFunctionArgumentBitRatio,\n                  needsArgumentType,\n                  assignArgumentType,\n                  triggerImplyArgumentType,\n                  triggerImplyArgumentBitRatio,\n                  onFunctionCall\n                }));\n                nestedFunction.traceFunctionAST(ast);\n                functionBuilder.addFunctionNode(nestedFunction);\n              };\n              const nodeOptions = Object.assign({\n                isRootKernel: false,\n                onNestedFunction,\n                lookupReturnType,\n                lookupFunctionArgumentTypes,\n                lookupFunctionArgumentName,\n                lookupFunctionArgumentBitRatio,\n                needsArgumentType,\n                assignArgumentType,\n                triggerImplyArgumentType,\n                triggerImplyArgumentBitRatio,\n                onFunctionCall,\n                optimizeFloatMemory,\n                precision,\n                constants,\n                constantTypes,\n                constantBitRatios,\n                debug,\n                loopMaxIterations,\n                output,\n                plugins,\n                dynamicArguments,\n                dynamicOutput\n              }, extraNodeOptions || {});\n              const rootNodeOptions = Object.assign({}, nodeOptions, {\n                isRootKernel: true,\n                name: 'kernel',\n                argumentNames,\n                argumentTypes,\n                argumentSizes,\n                argumentBitRatios,\n                leadingReturnStatement,\n                followingReturnStatement\n              });\n              if (typeof source === 'object' && source.functionNodes) {\n                return new FunctionBuilder().fromJSON(source.functionNodes, FunctionNode);\n              }\n              const rootNode = new FunctionNode(source, rootNodeOptions);\n              let functionNodes = null;\n              if (functions) {\n                functionNodes = functions.map(fn => new FunctionNode(fn.source, {\n                  returnType: fn.returnType,\n                  argumentTypes: fn.argumentTypes,\n                  output,\n                  plugins,\n                  constants,\n                  constantTypes,\n                  constantBitRatios,\n                  optimizeFloatMemory,\n                  precision,\n                  lookupReturnType,\n                  lookupFunctionArgumentTypes,\n                  lookupFunctionArgumentName,\n                  lookupFunctionArgumentBitRatio,\n                  needsArgumentType,\n                  assignArgumentType,\n                  triggerImplyArgumentType,\n                  triggerImplyArgumentBitRatio,\n                  onFunctionCall,\n                  onNestedFunction\n                }));\n              }\n              let subKernelNodes = null;\n              if (subKernels) {\n                subKernelNodes = subKernels.map(subKernel => {\n                  const {\n                    name,\n                    source\n                  } = subKernel;\n                  return new FunctionNode(source, Object.assign({}, nodeOptions, {\n                    name,\n                    isSubKernel: true,\n                    isRootKernel: false\n                  }));\n                });\n              }\n              const functionBuilder = new FunctionBuilder({\n                kernel,\n                rootNode,\n                functionNodes,\n                nativeFunctions,\n                subKernelNodes\n              });\n              return functionBuilder;\n            }\n            constructor(settings) {\n              settings = settings || {};\n              this.kernel = settings.kernel;\n              this.rootNode = settings.rootNode;\n              this.functionNodes = settings.functionNodes || [];\n              this.subKernelNodes = settings.subKernelNodes || [];\n              this.nativeFunctions = settings.nativeFunctions || [];\n              this.functionMap = {};\n              this.nativeFunctionNames = [];\n              this.lookupChain = [];\n              this.functionNodeDependencies = {};\n              this.functionCalls = {};\n              if (this.rootNode) {\n                this.functionMap['kernel'] = this.rootNode;\n              }\n              if (this.functionNodes) {\n                for (let i = 0; i < this.functionNodes.length; i++) {\n                  this.functionMap[this.functionNodes[i].name] = this.functionNodes[i];\n                }\n              }\n              if (this.subKernelNodes) {\n                for (let i = 0; i < this.subKernelNodes.length; i++) {\n                  this.functionMap[this.subKernelNodes[i].name] = this.subKernelNodes[i];\n                }\n              }\n              if (this.nativeFunctions) {\n                for (let i = 0; i < this.nativeFunctions.length; i++) {\n                  const nativeFunction = this.nativeFunctions[i];\n                  this.nativeFunctionNames.push(nativeFunction.name);\n                }\n              }\n            }\n            addFunctionNode(functionNode) {\n              if (!functionNode.name) throw new Error('functionNode.name needs set');\n              this.functionMap[functionNode.name] = functionNode;\n              if (functionNode.isRootKernel) {\n                this.rootNode = functionNode;\n              }\n            }\n            traceFunctionCalls(functionName, retList) {\n              functionName = functionName || 'kernel';\n              retList = retList || [];\n              if (this.nativeFunctionNames.indexOf(functionName) > -1) {\n                const nativeFunctionIndex = retList.indexOf(functionName);\n                if (nativeFunctionIndex === -1) {\n                  retList.push(functionName);\n                } else {\n                  const dependantNativeFunctionName = retList.splice(nativeFunctionIndex, 1)[0];\n                  retList.push(dependantNativeFunctionName);\n                }\n                return retList;\n              }\n              const functionNode = this.functionMap[functionName];\n              if (functionNode) {\n                const functionIndex = retList.indexOf(functionName);\n                if (functionIndex === -1) {\n                  retList.push(functionName);\n                  functionNode.toString();\n                  for (let i = 0; i < functionNode.calledFunctions.length; ++i) {\n                    this.traceFunctionCalls(functionNode.calledFunctions[i], retList);\n                  }\n                } else {\n                  const dependantFunctionName = retList.splice(functionIndex, 1)[0];\n                  retList.push(dependantFunctionName);\n                }\n              }\n              return retList;\n            }\n            getPrototypeString(functionName) {\n              return this.getPrototypes(functionName).join('\\n');\n            }\n            getPrototypes(functionName) {\n              if (this.rootNode) {\n                this.rootNode.toString();\n              }\n              if (functionName) {\n                return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n              }\n              return this.getPrototypesFromFunctionNames(Object.keys(this.functionMap));\n            }\n            getStringFromFunctionNames(functionList) {\n              const ret = [];\n              for (let i = 0; i < functionList.length; ++i) {\n                const node = this.functionMap[functionList[i]];\n                if (node) {\n                  ret.push(this.functionMap[functionList[i]].toString());\n                }\n              }\n              return ret.join('\\n');\n            }\n            getPrototypesFromFunctionNames(functionList) {\n              const ret = [];\n              for (let i = 0; i < functionList.length; ++i) {\n                const functionName = functionList[i];\n                const functionIndex = this.nativeFunctionNames.indexOf(functionName);\n                if (functionIndex > -1) {\n                  ret.push(this.nativeFunctions[functionIndex].source);\n                  continue;\n                }\n                const node = this.functionMap[functionName];\n                if (node) {\n                  ret.push(node.toString());\n                }\n              }\n              return ret;\n            }\n            toJSON() {\n              return this.traceFunctionCalls(this.rootNode.name).reverse().map(name => {\n                const nativeIndex = this.nativeFunctions.indexOf(name);\n                if (nativeIndex > -1) {\n                  return {\n                    name,\n                    source: this.nativeFunctions[nativeIndex].source\n                  };\n                } else if (this.functionMap[name]) {\n                  return this.functionMap[name].toJSON();\n                } else {\n                  throw new Error(`function ${name} not found`);\n                }\n              });\n            }\n            fromJSON(jsonFunctionNodes, FunctionNode) {\n              this.functionMap = {};\n              for (let i = 0; i < jsonFunctionNodes.length; i++) {\n                const jsonFunctionNode = jsonFunctionNodes[i];\n                this.functionMap[jsonFunctionNode.settings.name] = new FunctionNode(jsonFunctionNode.ast, jsonFunctionNode.settings);\n              }\n              return this;\n            }\n            getString(functionName) {\n              if (functionName) {\n                return this.getStringFromFunctionNames(this.traceFunctionCalls(functionName).reverse());\n              }\n              return this.getStringFromFunctionNames(Object.keys(this.functionMap));\n            }\n            lookupReturnType(functionName, ast, requestingNode) {\n              if (ast.type !== 'CallExpression') {\n                throw new Error(`expected ast type of \"CallExpression\", but is ${ast.type}`);\n              }\n              if (this._isNativeFunction(functionName)) {\n                return this._lookupNativeFunctionReturnType(functionName);\n              } else if (this._isFunction(functionName)) {\n                const node = this._getFunction(functionName);\n                if (node.returnType) {\n                  return node.returnType;\n                } else {\n                  for (let i = 0; i < this.lookupChain.length; i++) {\n                    if (this.lookupChain[i].ast === ast) {\n                      if (node.argumentTypes.length === 0 && ast.arguments.length > 0) {\n                        const args = ast.arguments;\n                        for (let j = 0; j < args.length; j++) {\n                          this.lookupChain.push({\n                            name: requestingNode.name,\n                            ast: args[i],\n                            requestingNode\n                          });\n                          node.argumentTypes[j] = requestingNode.getType(args[j]);\n                          this.lookupChain.pop();\n                        }\n                        return node.returnType = node.getType(node.getJsAST());\n                      }\n                      throw new Error('circlical logic detected!');\n                    }\n                  }\n                  this.lookupChain.push({\n                    name: requestingNode.name,\n                    ast,\n                    requestingNode\n                  });\n                  const type = node.getType(node.getJsAST());\n                  this.lookupChain.pop();\n                  return node.returnType = type;\n                }\n              }\n              return null;\n            }\n            _getFunction(functionName) {\n              if (!this._isFunction(functionName)) ;\n              return this.functionMap[functionName];\n            }\n            _isFunction(functionName) {\n              return Boolean(this.functionMap[functionName]);\n            }\n            _getNativeFunction(functionName) {\n              for (let i = 0; i < this.nativeFunctions.length; i++) {\n                if (this.nativeFunctions[i].name === functionName) return this.nativeFunctions[i];\n              }\n              return null;\n            }\n            _isNativeFunction(functionName) {\n              return Boolean(this._getNativeFunction(functionName));\n            }\n            _lookupNativeFunctionReturnType(functionName) {\n              let nativeFunction = this._getNativeFunction(functionName);\n              if (nativeFunction) {\n                return nativeFunction.returnType;\n              }\n              throw new Error(`Native function ${functionName} not found`);\n            }\n            lookupFunctionArgumentTypes(functionName) {\n              if (this._isNativeFunction(functionName)) {\n                return this._getNativeFunction(functionName).argumentTypes;\n              } else if (this._isFunction(functionName)) {\n                return this._getFunction(functionName).argumentTypes;\n              }\n              return null;\n            }\n            lookupFunctionArgumentName(functionName, argumentIndex) {\n              return this._getFunction(functionName).argumentNames[argumentIndex];\n            }\n            lookupFunctionArgumentBitRatio(functionName, argumentName) {\n              if (!this._isFunction(functionName)) {\n                throw new Error('function not found');\n              }\n              if (this.rootNode.name === functionName) {\n                const i = this.rootNode.argumentNames.indexOf(argumentName);\n                if (i !== -1) {\n                  return this.rootNode.argumentBitRatios[i];\n                }\n              }\n              const node = this._getFunction(functionName);\n              const i = node.argumentNames.indexOf(argumentName);\n              if (i === -1) {\n                throw new Error('argument not found');\n              }\n              const bitRatio = node.argumentBitRatios[i];\n              if (typeof bitRatio !== 'number') {\n                throw new Error('argument bit ratio not found');\n              }\n              return bitRatio;\n            }\n            needsArgumentType(functionName, i) {\n              if (!this._isFunction(functionName)) return false;\n              const fnNode = this._getFunction(functionName);\n              return !fnNode.argumentTypes[i];\n            }\n            assignArgumentType(functionName, i, argumentType, requestingNode) {\n              if (!this._isFunction(functionName)) return;\n              const fnNode = this._getFunction(functionName);\n              if (!fnNode.argumentTypes[i]) {\n                fnNode.argumentTypes[i] = argumentType;\n              }\n            }\n            assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex) {\n              const node = this._getFunction(functionName);\n              if (this._isNativeFunction(calleeFunctionName)) return null;\n              const calleeNode = this._getFunction(calleeFunctionName);\n              const i = node.argumentNames.indexOf(argumentName);\n              if (i === -1) {\n                throw new Error(`Argument ${argumentName} not found in arguments from function ${functionName}`);\n              }\n              const bitRatio = node.argumentBitRatios[i];\n              if (typeof bitRatio !== 'number') {\n                throw new Error(`Bit ratio for argument ${argumentName} not found in function ${functionName}`);\n              }\n              if (!calleeNode.argumentBitRatios) {\n                calleeNode.argumentBitRatios = new Array(calleeNode.argumentNames.length);\n              }\n              const calleeBitRatio = calleeNode.argumentBitRatios[i];\n              if (typeof calleeBitRatio === 'number') {\n                if (calleeBitRatio !== bitRatio) {\n                  throw new Error(`Incompatible bit ratio found at function ${functionName} at argument ${argumentName}`);\n                }\n                return calleeBitRatio;\n              }\n              calleeNode.argumentBitRatios[i] = bitRatio;\n              return bitRatio;\n            }\n            trackFunctionCall(functionName, calleeFunctionName, args) {\n              if (!this.functionNodeDependencies[functionName]) {\n                this.functionNodeDependencies[functionName] = new Set();\n                this.functionCalls[functionName] = [];\n              }\n              this.functionNodeDependencies[functionName].add(calleeFunctionName);\n              this.functionCalls[functionName].push(args);\n            }\n            getKernelResultType() {\n              return this.rootNode.returnType || this.rootNode.getType(this.rootNode.ast);\n            }\n            getSubKernelResultType(index) {\n              const subKernelNode = this.subKernelNodes[index];\n              let called = false;\n              for (let functionCallIndex = 0; functionCallIndex < this.rootNode.functionCalls.length; functionCallIndex++) {\n                const functionCall = this.rootNode.functionCalls[functionCallIndex];\n                if (functionCall.ast.callee.name === subKernelNode.name) {\n                  called = true;\n                }\n              }\n              if (!called) {\n                throw new Error(`SubKernel ${subKernelNode.name} never called by kernel`);\n              }\n              return subKernelNode.returnType || subKernelNode.getType(subKernelNode.getJsAST());\n            }\n            getReturnTypes() {\n              const result = {\n                [this.rootNode.name]: this.rootNode.getType(this.rootNode.ast)\n              };\n              const list = this.traceFunctionCalls(this.rootNode.name);\n              for (let i = 0; i < list.length; i++) {\n                const functionName = list[i];\n                const functionNode = this.functionMap[functionName];\n                result[functionName] = functionNode.getType(functionNode.ast);\n              }\n              return result;\n            }\n          }\n          module.exports = {\n            FunctionBuilder\n          };\n        }, {}],\n        10: [function (require, module, exports) {\n          const acorn = require('acorn');\n          const {\n            utils\n          } = require('../utils');\n          const {\n            FunctionTracer\n          } = require('./function-tracer');\n          class FunctionNode {\n            constructor(source, settings) {\n              if (!source && !settings.ast) {\n                throw new Error('source parameter is missing');\n              }\n              settings = settings || {};\n              this.source = source;\n              this.ast = null;\n              this.name = typeof source === 'string' ? settings.isRootKernel ? 'kernel' : settings.name || utils.getFunctionNameFromString(source) : null;\n              this.calledFunctions = [];\n              this.constants = {};\n              this.constantTypes = {};\n              this.constantBitRatios = {};\n              this.isRootKernel = false;\n              this.isSubKernel = false;\n              this.debug = null;\n              this.functions = null;\n              this.identifiers = null;\n              this.contexts = null;\n              this.functionCalls = null;\n              this.states = [];\n              this.needsArgumentType = null;\n              this.assignArgumentType = null;\n              this.lookupReturnType = null;\n              this.lookupFunctionArgumentTypes = null;\n              this.lookupFunctionArgumentBitRatio = null;\n              this.triggerImplyArgumentType = null;\n              this.triggerImplyArgumentBitRatio = null;\n              this.onNestedFunction = null;\n              this.onFunctionCall = null;\n              this.optimizeFloatMemory = null;\n              this.precision = null;\n              this.loopMaxIterations = null;\n              this.argumentNames = typeof this.source === 'string' ? utils.getArgumentNamesFromString(this.source) : null;\n              this.argumentTypes = [];\n              this.argumentSizes = [];\n              this.argumentBitRatios = null;\n              this.returnType = null;\n              this.output = [];\n              this.plugins = null;\n              this.leadingReturnStatement = null;\n              this.followingReturnStatement = null;\n              this.dynamicOutput = null;\n              this.dynamicArguments = null;\n              this.strictTypingChecking = false;\n              this.fixIntegerDivisionAccuracy = null;\n              if (settings) {\n                for (const p in settings) {\n                  if (!settings.hasOwnProperty(p)) continue;\n                  if (!this.hasOwnProperty(p)) continue;\n                  this[p] = settings[p];\n                }\n              }\n              this.literalTypes = {};\n              this.validate();\n              this._string = null;\n              this._internalVariableNames = {};\n            }\n            validate() {\n              if (typeof this.source !== 'string' && !this.ast) {\n                throw new Error('this.source not a string');\n              }\n              if (!this.ast && !utils.isFunctionString(this.source)) {\n                throw new Error('this.source not a function string');\n              }\n              if (!this.name) {\n                throw new Error('this.name could not be set');\n              }\n              if (this.argumentTypes.length > 0 && this.argumentTypes.length !== this.argumentNames.length) {\n                throw new Error(`argumentTypes count of ${this.argumentTypes.length} exceeds ${this.argumentNames.length}`);\n              }\n              if (this.output.length < 1) {\n                throw new Error('this.output is not big enough');\n              }\n            }\n            isIdentifierConstant(name) {\n              if (!this.constants) return false;\n              return this.constants.hasOwnProperty(name);\n            }\n            isInput(argumentName) {\n              return this.argumentTypes[this.argumentNames.indexOf(argumentName)] === 'Input';\n            }\n            pushState(state) {\n              this.states.push(state);\n            }\n            popState(state) {\n              if (this.state !== state) {\n                throw new Error(`Cannot popState ${state} when in ${this.state}`);\n              }\n              this.states.pop();\n            }\n            isState(state) {\n              return this.state === state;\n            }\n            get state() {\n              return this.states[this.states.length - 1];\n            }\n            astMemberExpressionUnroll(ast) {\n              if (ast.type === 'Identifier') {\n                return ast.name;\n              } else if (ast.type === 'ThisExpression') {\n                return 'this';\n              }\n              if (ast.type === 'MemberExpression') {\n                if (ast.object && ast.property) {\n                  if (ast.object.hasOwnProperty('name') && ast.object.name !== 'Math') {\n                    return this.astMemberExpressionUnroll(ast.property);\n                  }\n                  return this.astMemberExpressionUnroll(ast.object) + '.' + this.astMemberExpressionUnroll(ast.property);\n                }\n              }\n              if (ast.hasOwnProperty('expressions')) {\n                const firstExpression = ast.expressions[0];\n                if (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n                  return this.astMemberExpressionUnroll(ast.expressions[1]);\n                }\n              }\n              throw this.astErrorOutput('Unknown astMemberExpressionUnroll', ast);\n            }\n            getJsAST(inParser) {\n              if (this.ast) {\n                return this.ast;\n              }\n              if (typeof this.source === 'object') {\n                this.traceFunctionAST(this.source);\n                return this.ast = this.source;\n              }\n              inParser = inParser || acorn;\n              if (inParser === null) {\n                throw new Error('Missing JS to AST parser');\n              }\n              const ast = Object.freeze(inParser.parse(`const parser_${this.name} = ${this.source};`, {\n                locations: true\n              }));\n              const functionAST = ast.body[0].declarations[0].init;\n              this.traceFunctionAST(functionAST);\n              if (!ast) {\n                throw new Error('Failed to parse JS code');\n              }\n              return this.ast = functionAST;\n            }\n            traceFunctionAST(ast) {\n              const {\n                contexts,\n                declarations,\n                functions,\n                identifiers,\n                functionCalls\n              } = new FunctionTracer(ast);\n              this.contexts = contexts;\n              this.identifiers = identifiers;\n              this.functionCalls = functionCalls;\n              this.functions = functions;\n              for (let i = 0; i < declarations.length; i++) {\n                const declaration = declarations[i];\n                const {\n                  ast,\n                  inForLoopInit,\n                  inForLoopTest\n                } = declaration;\n                const {\n                  init\n                } = ast;\n                const dependencies = this.getDependencies(init);\n                let valueType = null;\n                if (inForLoopInit && inForLoopTest) {\n                  valueType = 'Integer';\n                } else {\n                  if (init) {\n                    const realType = this.getType(init);\n                    switch (realType) {\n                      case 'Integer':\n                      case 'Float':\n                      case 'Number':\n                        if (init.type === 'MemberExpression') {\n                          valueType = realType;\n                        } else {\n                          valueType = 'Number';\n                        }\n                        break;\n                      case 'LiteralInteger':\n                        valueType = 'Number';\n                        break;\n                      default:\n                        valueType = realType;\n                    }\n                  }\n                }\n                declaration.valueType = valueType;\n                declaration.dependencies = dependencies;\n                declaration.isSafe = this.isSafeDependencies(dependencies);\n              }\n              for (let i = 0; i < functions.length; i++) {\n                this.onNestedFunction(functions[i], this.source);\n              }\n            }\n            getDeclaration(ast) {\n              for (let i = 0; i < this.identifiers.length; i++) {\n                const identifier = this.identifiers[i];\n                if (ast === identifier.ast) {\n                  return identifier.declaration;\n                }\n              }\n              return null;\n            }\n            getVariableType(ast) {\n              if (ast.type !== 'Identifier') {\n                throw new Error(`ast of ${ast.type} not \"Identifier\"`);\n              }\n              let type = null;\n              const argumentIndex = this.argumentNames.indexOf(ast.name);\n              if (argumentIndex === -1) {\n                const declaration = this.getDeclaration(ast);\n                if (declaration) {\n                  return declaration.valueType;\n                }\n              } else {\n                const argumentType = this.argumentTypes[argumentIndex];\n                if (argumentType) {\n                  type = argumentType;\n                }\n              }\n              if (!type && this.strictTypingChecking) {\n                throw new Error(`Declaration of ${name} not found`);\n              }\n              return type;\n            }\n            getLookupType(type) {\n              if (!typeLookupMap.hasOwnProperty(type)) {\n                throw new Error(`unknown typeLookupMap ${type}`);\n              }\n              return typeLookupMap[type];\n            }\n            getConstantType(constantName) {\n              if (this.constantTypes[constantName]) {\n                const type = this.constantTypes[constantName];\n                if (type === 'Float') {\n                  return 'Number';\n                } else {\n                  return type;\n                }\n              }\n              throw new Error(`Type for constant \"${constantName}\" not declared`);\n            }\n            toString() {\n              if (this._string) return this._string;\n              return this._string = this.astGeneric(this.getJsAST(), []).join('').trim();\n            }\n            toJSON() {\n              const settings = {\n                source: this.source,\n                name: this.name,\n                constants: this.constants,\n                constantTypes: this.constantTypes,\n                isRootKernel: this.isRootKernel,\n                isSubKernel: this.isSubKernel,\n                debug: this.debug,\n                output: this.output,\n                loopMaxIterations: this.loopMaxIterations,\n                argumentNames: this.argumentNames,\n                argumentTypes: this.argumentTypes,\n                argumentSizes: this.argumentSizes,\n                returnType: this.returnType,\n                leadingReturnStatement: this.leadingReturnStatement,\n                followingReturnStatement: this.followingReturnStatement\n              };\n              return {\n                ast: this.ast,\n                settings\n              };\n            }\n            getType(ast) {\n              if (Array.isArray(ast)) {\n                return this.getType(ast[ast.length - 1]);\n              }\n              switch (ast.type) {\n                case 'BlockStatement':\n                  return this.getType(ast.body);\n                case 'ArrayExpression':\n                  const childType = this.getType(ast.elements[0]);\n                  switch (childType) {\n                    case 'Array(2)':\n                    case 'Array(3)':\n                    case 'Array(4)':\n                      return `Matrix(${ast.elements.length})`;\n                  }\n                  return `Array(${ast.elements.length})`;\n                case 'Literal':\n                  const literalKey = this.astKey(ast);\n                  if (this.literalTypes[literalKey]) {\n                    return this.literalTypes[literalKey];\n                  }\n                  if (Number.isInteger(ast.value)) {\n                    return 'LiteralInteger';\n                  } else if (ast.value === true || ast.value === false) {\n                    return 'Boolean';\n                  } else {\n                    return 'Number';\n                  }\n                case 'AssignmentExpression':\n                  return this.getType(ast.left);\n                case 'CallExpression':\n                  if (this.isAstMathFunction(ast)) {\n                    return 'Number';\n                  }\n                  if (!ast.callee || !ast.callee.name) {\n                    if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[ast.callee.expressions.length - 1].property.name) {\n                      const functionName = ast.callee.expressions[ast.callee.expressions.length - 1].property.name;\n                      this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n                      return this.lookupReturnType(functionName, ast, this);\n                    }\n                    if (this.getVariableSignature(ast.callee, true) === 'this.color') {\n                      return null;\n                    }\n                    if (ast.callee.type === 'MemberExpression' && ast.callee.object && ast.callee.property && ast.callee.property.name && ast.arguments) {\n                      const functionName = ast.callee.property.name;\n                      this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n                      return this.lookupReturnType(functionName, ast, this);\n                    }\n                    throw this.astErrorOutput('Unknown call expression', ast);\n                  }\n                  if (ast.callee && ast.callee.name) {\n                    const functionName = ast.callee.name;\n                    this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n                    return this.lookupReturnType(functionName, ast, this);\n                  }\n                  throw this.astErrorOutput(`Unhandled getType Type \"${ast.type}\"`, ast);\n                case 'LogicalExpression':\n                  return 'Boolean';\n                case 'BinaryExpression':\n                  switch (ast.operator) {\n                    case '%':\n                    case '/':\n                      if (this.fixIntegerDivisionAccuracy) {\n                        return 'Number';\n                      } else {\n                        break;\n                      }\n                    case '>':\n                    case '<':\n                      return 'Boolean';\n                    case '&':\n                    case '|':\n                    case '^':\n                    case '<<':\n                    case '>>':\n                    case '>>>':\n                      return 'Integer';\n                  }\n                  const type = this.getType(ast.left);\n                  if (this.isState('skip-literal-correction')) return type;\n                  if (type === 'LiteralInteger') {\n                    const rightType = this.getType(ast.right);\n                    if (rightType === 'LiteralInteger') {\n                      if (ast.left.value % 1 === 0) {\n                        return 'Integer';\n                      } else {\n                        return 'Float';\n                      }\n                    }\n                    return rightType;\n                  }\n                  return typeLookupMap[type] || type;\n                case 'UpdateExpression':\n                  return this.getType(ast.argument);\n                case 'UnaryExpression':\n                  if (ast.operator === '~') {\n                    return 'Integer';\n                  }\n                  return this.getType(ast.argument);\n                case 'VariableDeclaration':\n                  {\n                    const declarations = ast.declarations;\n                    let lastType;\n                    for (let i = 0; i < declarations.length; i++) {\n                      const declaration = declarations[i];\n                      lastType = this.getType(declaration);\n                    }\n                    if (!lastType) {\n                      throw this.astErrorOutput(`Unable to find type for declaration`, ast);\n                    }\n                    return lastType;\n                  }\n                case 'VariableDeclarator':\n                  const declaration = this.getDeclaration(ast.id);\n                  if (!declaration) {\n                    throw this.astErrorOutput(`Unable to find declarator`, ast);\n                  }\n                  if (!declaration.valueType) {\n                    throw this.astErrorOutput(`Unable to find declarator valueType`, ast);\n                  }\n                  return declaration.valueType;\n                case 'Identifier':\n                  if (ast.name === 'Infinity') {\n                    return 'Number';\n                  }\n                  if (this.isAstVariable(ast)) {\n                    const signature = this.getVariableSignature(ast);\n                    if (signature === 'value') {\n                      return this.getCheckVariableType(ast);\n                    }\n                  }\n                  const origin = this.findIdentifierOrigin(ast);\n                  if (origin && origin.init) {\n                    return this.getType(origin.init);\n                  }\n                  return null;\n                case 'ReturnStatement':\n                  return this.getType(ast.argument);\n                case 'MemberExpression':\n                  if (this.isAstMathFunction(ast)) {\n                    switch (ast.property.name) {\n                      case 'ceil':\n                        return 'Integer';\n                      case 'floor':\n                        return 'Integer';\n                      case 'round':\n                        return 'Integer';\n                    }\n                    return 'Number';\n                  }\n                  if (this.isAstVariable(ast)) {\n                    const variableSignature = this.getVariableSignature(ast);\n                    switch (variableSignature) {\n                      case 'value[]':\n                        return this.getLookupType(this.getCheckVariableType(ast.object));\n                      case 'value[][]':\n                        return this.getLookupType(this.getCheckVariableType(ast.object.object));\n                      case 'value[][][]':\n                        return this.getLookupType(this.getCheckVariableType(ast.object.object.object));\n                      case 'value[][][][]':\n                        return this.getLookupType(this.getCheckVariableType(ast.object.object.object.object));\n                      case 'value.thread.value':\n                      case 'this.thread.value':\n                        return 'Integer';\n                      case 'this.output.value':\n                        return this.dynamicOutput ? 'Integer' : 'LiteralInteger';\n                      case 'this.constants.value':\n                        return this.getConstantType(ast.property.name);\n                      case 'this.constants.value[]':\n                        return this.getLookupType(this.getConstantType(ast.object.property.name));\n                      case 'this.constants.value[][]':\n                        return this.getLookupType(this.getConstantType(ast.object.object.property.name));\n                      case 'this.constants.value[][][]':\n                        return this.getLookupType(this.getConstantType(ast.object.object.object.property.name));\n                      case 'this.constants.value[][][][]':\n                        return this.getLookupType(this.getConstantType(ast.object.object.object.object.property.name));\n                      case 'fn()[]':\n                      case 'fn()[][]':\n                      case 'fn()[][][]':\n                        return this.getLookupType(this.getType(ast.object));\n                      case 'value.value':\n                        if (this.isAstMathVariable(ast)) {\n                          return 'Number';\n                        }\n                        switch (ast.property.name) {\n                          case 'r':\n                          case 'g':\n                          case 'b':\n                          case 'a':\n                            return this.getLookupType(this.getCheckVariableType(ast.object));\n                        }\n                      case '[][]':\n                        return 'Number';\n                    }\n                    throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n                  }\n                  throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n                case 'ConditionalExpression':\n                  return this.getType(ast.consequent);\n                case 'FunctionDeclaration':\n                case 'FunctionExpression':\n                  const lastReturn = this.findLastReturn(ast.body);\n                  if (lastReturn) {\n                    return this.getType(lastReturn);\n                  }\n                  return null;\n                case 'IfStatement':\n                  return this.getType(ast.consequent);\n                case 'SequenceExpression':\n                  return this.getType(ast.expressions[ast.expressions.length - 1]);\n                default:\n                  throw this.astErrorOutput(`Unhandled getType Type \"${ast.type}\"`, ast);\n              }\n            }\n            getCheckVariableType(ast) {\n              const type = this.getVariableType(ast);\n              if (!type) {\n                throw this.astErrorOutput(`${ast.type} is not defined`, ast);\n              }\n              return type;\n            }\n            inferArgumentTypesIfNeeded(functionName, args) {\n              for (let i = 0; i < args.length; i++) {\n                if (!this.needsArgumentType(functionName, i)) continue;\n                const type = this.getType(args[i]);\n                if (!type) {\n                  throw this.astErrorOutput(`Unable to infer argument ${i}`, args[i]);\n                }\n                this.assignArgumentType(functionName, i, type);\n              }\n            }\n            isAstMathVariable(ast) {\n              const mathProperties = ['E', 'PI', 'SQRT2', 'SQRT1_2', 'LN2', 'LN10', 'LOG2E', 'LOG10E'];\n              return ast.type === 'MemberExpression' && ast.object && ast.object.type === 'Identifier' && ast.object.name === 'Math' && ast.property && ast.property.type === 'Identifier' && mathProperties.indexOf(ast.property.name) > -1;\n            }\n            isAstMathFunction(ast) {\n              const mathFunctions = ['abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atan2', 'atanh', 'cbrt', 'ceil', 'clz32', 'cos', 'cosh', 'expm1', 'exp', 'floor', 'fround', 'imul', 'log', 'log2', 'log10', 'log1p', 'max', 'min', 'pow', 'random', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'];\n              return ast.type === 'CallExpression' && ast.callee && ast.callee.type === 'MemberExpression' && ast.callee.object && ast.callee.object.type === 'Identifier' && ast.callee.object.name === 'Math' && ast.callee.property && ast.callee.property.type === 'Identifier' && mathFunctions.indexOf(ast.callee.property.name) > -1;\n            }\n            isAstVariable(ast) {\n              return ast.type === 'Identifier' || ast.type === 'MemberExpression';\n            }\n            isSafe(ast) {\n              return this.isSafeDependencies(this.getDependencies(ast));\n            }\n            isSafeDependencies(dependencies) {\n              return dependencies && dependencies.every ? dependencies.every(dependency => dependency.isSafe) : true;\n            }\n            getDependencies(ast, dependencies, isNotSafe) {\n              if (!dependencies) {\n                dependencies = [];\n              }\n              if (!ast) return null;\n              if (Array.isArray(ast)) {\n                for (let i = 0; i < ast.length; i++) {\n                  this.getDependencies(ast[i], dependencies, isNotSafe);\n                }\n                return dependencies;\n              }\n              switch (ast.type) {\n                case 'AssignmentExpression':\n                  this.getDependencies(ast.left, dependencies, isNotSafe);\n                  this.getDependencies(ast.right, dependencies, isNotSafe);\n                  return dependencies;\n                case 'ConditionalExpression':\n                  this.getDependencies(ast.test, dependencies, isNotSafe);\n                  this.getDependencies(ast.alternate, dependencies, isNotSafe);\n                  this.getDependencies(ast.consequent, dependencies, isNotSafe);\n                  return dependencies;\n                case 'Literal':\n                  dependencies.push({\n                    origin: 'literal',\n                    value: ast.value,\n                    isSafe: isNotSafe === true ? false : ast.value > -Infinity && ast.value < Infinity && !isNaN(ast.value)\n                  });\n                  break;\n                case 'VariableDeclarator':\n                  return this.getDependencies(ast.init, dependencies, isNotSafe);\n                case 'Identifier':\n                  const declaration = this.getDeclaration(ast);\n                  if (declaration) {\n                    dependencies.push({\n                      name: ast.name,\n                      origin: 'declaration',\n                      isSafe: isNotSafe ? false : this.isSafeDependencies(declaration.dependencies)\n                    });\n                  } else if (this.argumentNames.indexOf(ast.name) > -1) {\n                    dependencies.push({\n                      name: ast.name,\n                      origin: 'argument',\n                      isSafe: false\n                    });\n                  } else if (this.strictTypingChecking) {\n                    throw new Error(`Cannot find identifier origin \"${ast.name}\"`);\n                  }\n                  break;\n                case 'FunctionDeclaration':\n                  return this.getDependencies(ast.body.body[ast.body.body.length - 1], dependencies, isNotSafe);\n                case 'ReturnStatement':\n                  return this.getDependencies(ast.argument, dependencies);\n                case 'BinaryExpression':\n                case 'LogicalExpression':\n                  isNotSafe = ast.operator === '/' || ast.operator === '*';\n                  this.getDependencies(ast.left, dependencies, isNotSafe);\n                  this.getDependencies(ast.right, dependencies, isNotSafe);\n                  return dependencies;\n                case 'UnaryExpression':\n                case 'UpdateExpression':\n                  return this.getDependencies(ast.argument, dependencies, isNotSafe);\n                case 'VariableDeclaration':\n                  return this.getDependencies(ast.declarations, dependencies, isNotSafe);\n                case 'ArrayExpression':\n                  dependencies.push({\n                    origin: 'declaration',\n                    isSafe: true\n                  });\n                  return dependencies;\n                case 'CallExpression':\n                  dependencies.push({\n                    origin: 'function',\n                    isSafe: true\n                  });\n                  return dependencies;\n                case 'MemberExpression':\n                  const details = this.getMemberExpressionDetails(ast);\n                  switch (details.signature) {\n                    case 'value[]':\n                      this.getDependencies(ast.object, dependencies, isNotSafe);\n                      break;\n                    case 'value[][]':\n                      this.getDependencies(ast.object.object, dependencies, isNotSafe);\n                      break;\n                    case 'value[][][]':\n                      this.getDependencies(ast.object.object.object, dependencies, isNotSafe);\n                      break;\n                    case 'this.output.value':\n                      if (this.dynamicOutput) {\n                        dependencies.push({\n                          name: details.name,\n                          origin: 'output',\n                          isSafe: false\n                        });\n                      }\n                      break;\n                  }\n                  if (details) {\n                    if (details.property) {\n                      this.getDependencies(details.property, dependencies, isNotSafe);\n                    }\n                    if (details.xProperty) {\n                      this.getDependencies(details.xProperty, dependencies, isNotSafe);\n                    }\n                    if (details.yProperty) {\n                      this.getDependencies(details.yProperty, dependencies, isNotSafe);\n                    }\n                    if (details.zProperty) {\n                      this.getDependencies(details.zProperty, dependencies, isNotSafe);\n                    }\n                    return dependencies;\n                  }\n                case 'SequenceExpression':\n                  return this.getDependencies(ast.expressions, dependencies, isNotSafe);\n                default:\n                  throw this.astErrorOutput(`Unhandled type ${ast.type} in getDependencies`, ast);\n              }\n              return dependencies;\n            }\n            getVariableSignature(ast, returnRawValue) {\n              if (!this.isAstVariable(ast)) {\n                throw new Error(`ast of type \"${ast.type}\" is not a variable signature`);\n              }\n              if (ast.type === 'Identifier') {\n                return 'value';\n              }\n              const signature = [];\n              while (true) {\n                if (!ast) break;\n                if (ast.computed) {\n                  signature.push('[]');\n                } else if (ast.type === 'ThisExpression') {\n                  signature.unshift('this');\n                } else if (ast.property && ast.property.name) {\n                  if (ast.property.name === 'x' || ast.property.name === 'y' || ast.property.name === 'z') {\n                    signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n                  } else if (ast.property.name === 'constants' || ast.property.name === 'thread' || ast.property.name === 'output') {\n                    signature.unshift('.' + ast.property.name);\n                  } else {\n                    signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n                  }\n                } else if (ast.name) {\n                  signature.unshift(returnRawValue ? ast.name : 'value');\n                } else if (ast.callee && ast.callee.name) {\n                  signature.unshift(returnRawValue ? ast.callee.name + '()' : 'fn()');\n                } else if (ast.elements) {\n                  signature.unshift('[]');\n                } else {\n                  signature.unshift('unknown');\n                }\n                ast = ast.object;\n              }\n              const signatureString = signature.join('');\n              if (returnRawValue) {\n                return signatureString;\n              }\n              const allowedExpressions = ['value', 'value[]', 'value[][]', 'value[][][]', 'value[][][][]', 'value.value', 'value.thread.value', 'this.thread.value', 'this.output.value', 'this.constants.value', 'this.constants.value[]', 'this.constants.value[][]', 'this.constants.value[][][]', 'this.constants.value[][][][]', 'fn()[]', 'fn()[][]', 'fn()[][][]', '[][]'];\n              if (allowedExpressions.indexOf(signatureString) > -1) {\n                return signatureString;\n              }\n              return null;\n            }\n            build() {\n              return this.toString().length > 0;\n            }\n            astGeneric(ast, retArr) {\n              if (ast === null) {\n                throw this.astErrorOutput('NULL ast', ast);\n              } else {\n                if (Array.isArray(ast)) {\n                  for (let i = 0; i < ast.length; i++) {\n                    this.astGeneric(ast[i], retArr);\n                  }\n                  return retArr;\n                }\n                switch (ast.type) {\n                  case 'FunctionDeclaration':\n                    return this.astFunctionDeclaration(ast, retArr);\n                  case 'FunctionExpression':\n                    return this.astFunctionExpression(ast, retArr);\n                  case 'ReturnStatement':\n                    return this.astReturnStatement(ast, retArr);\n                  case 'Literal':\n                    return this.astLiteral(ast, retArr);\n                  case 'BinaryExpression':\n                    return this.astBinaryExpression(ast, retArr);\n                  case 'Identifier':\n                    return this.astIdentifierExpression(ast, retArr);\n                  case 'AssignmentExpression':\n                    return this.astAssignmentExpression(ast, retArr);\n                  case 'ExpressionStatement':\n                    return this.astExpressionStatement(ast, retArr);\n                  case 'EmptyStatement':\n                    return this.astEmptyStatement(ast, retArr);\n                  case 'BlockStatement':\n                    return this.astBlockStatement(ast, retArr);\n                  case 'IfStatement':\n                    return this.astIfStatement(ast, retArr);\n                  case 'SwitchStatement':\n                    return this.astSwitchStatement(ast, retArr);\n                  case 'BreakStatement':\n                    return this.astBreakStatement(ast, retArr);\n                  case 'ContinueStatement':\n                    return this.astContinueStatement(ast, retArr);\n                  case 'ForStatement':\n                    return this.astForStatement(ast, retArr);\n                  case 'WhileStatement':\n                    return this.astWhileStatement(ast, retArr);\n                  case 'DoWhileStatement':\n                    return this.astDoWhileStatement(ast, retArr);\n                  case 'VariableDeclaration':\n                    return this.astVariableDeclaration(ast, retArr);\n                  case 'VariableDeclarator':\n                    return this.astVariableDeclarator(ast, retArr);\n                  case 'ThisExpression':\n                    return this.astThisExpression(ast, retArr);\n                  case 'SequenceExpression':\n                    return this.astSequenceExpression(ast, retArr);\n                  case 'UnaryExpression':\n                    return this.astUnaryExpression(ast, retArr);\n                  case 'UpdateExpression':\n                    return this.astUpdateExpression(ast, retArr);\n                  case 'LogicalExpression':\n                    return this.astLogicalExpression(ast, retArr);\n                  case 'MemberExpression':\n                    return this.astMemberExpression(ast, retArr);\n                  case 'CallExpression':\n                    return this.astCallExpression(ast, retArr);\n                  case 'ArrayExpression':\n                    return this.astArrayExpression(ast, retArr);\n                  case 'DebuggerStatement':\n                    return this.astDebuggerStatement(ast, retArr);\n                  case 'ConditionalExpression':\n                    return this.astConditionalExpression(ast, retArr);\n                }\n                throw this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\n              }\n            }\n            astErrorOutput(error, ast) {\n              if (typeof this.source !== 'string') {\n                return new Error(error);\n              }\n              const debugString = utils.getAstString(this.source, ast);\n              const leadingSource = this.source.substr(ast.start);\n              const splitLines = leadingSource.split(/\\n/);\n              const lineBefore = splitLines.length > 0 ? splitLines[splitLines.length - 1] : 0;\n              return new Error(`${error} on line ${splitLines.length}, position ${lineBefore.length}:\\n ${debugString}`);\n            }\n            astDebuggerStatement(arrNode, retArr) {\n              return retArr;\n            }\n            astConditionalExpression(ast, retArr) {\n              if (ast.type !== 'ConditionalExpression') {\n                throw this.astErrorOutput('Not a conditional expression', ast);\n              }\n              retArr.push('(');\n              this.astGeneric(ast.test, retArr);\n              retArr.push('?');\n              this.astGeneric(ast.consequent, retArr);\n              retArr.push(':');\n              this.astGeneric(ast.alternate, retArr);\n              retArr.push(')');\n              return retArr;\n            }\n            astFunction(ast, retArr) {\n              throw new Error(`\"astFunction\" not defined on ${this.constructor.name}`);\n            }\n            astFunctionDeclaration(ast, retArr) {\n              if (this.isChildFunction(ast)) {\n                return retArr;\n              }\n              return this.astFunction(ast, retArr);\n            }\n            astFunctionExpression(ast, retArr) {\n              if (this.isChildFunction(ast)) {\n                return retArr;\n              }\n              return this.astFunction(ast, retArr);\n            }\n            isChildFunction(ast) {\n              for (let i = 0; i < this.functions.length; i++) {\n                if (this.functions[i] === ast) {\n                  return true;\n                }\n              }\n              return false;\n            }\n            astReturnStatement(ast, retArr) {\n              return retArr;\n            }\n            astLiteral(ast, retArr) {\n              this.literalTypes[this.astKey(ast)] = 'Number';\n              return retArr;\n            }\n            astBinaryExpression(ast, retArr) {\n              return retArr;\n            }\n            astIdentifierExpression(ast, retArr) {\n              return retArr;\n            }\n            astAssignmentExpression(ast, retArr) {\n              return retArr;\n            }\n            astExpressionStatement(esNode, retArr) {\n              this.astGeneric(esNode.expression, retArr);\n              retArr.push(';');\n              return retArr;\n            }\n            astEmptyStatement(eNode, retArr) {\n              return retArr;\n            }\n            astBlockStatement(ast, retArr) {\n              return retArr;\n            }\n            astIfStatement(ast, retArr) {\n              return retArr;\n            }\n            astSwitchStatement(ast, retArr) {\n              return retArr;\n            }\n            astBreakStatement(brNode, retArr) {\n              retArr.push('break;');\n              return retArr;\n            }\n            astContinueStatement(crNode, retArr) {\n              retArr.push('continue;\\n');\n              return retArr;\n            }\n            astForStatement(ast, retArr) {\n              return retArr;\n            }\n            astWhileStatement(ast, retArr) {\n              return retArr;\n            }\n            astDoWhileStatement(ast, retArr) {\n              return retArr;\n            }\n            astVariableDeclarator(iVarDecNode, retArr) {\n              this.astGeneric(iVarDecNode.id, retArr);\n              if (iVarDecNode.init !== null) {\n                retArr.push('=');\n                this.astGeneric(iVarDecNode.init, retArr);\n              }\n              return retArr;\n            }\n            astThisExpression(ast, retArr) {\n              return retArr;\n            }\n            astSequenceExpression(sNode, retArr) {\n              const {\n                expressions\n              } = sNode;\n              const sequenceResult = [];\n              for (let i = 0; i < expressions.length; i++) {\n                const expression = expressions[i];\n                const expressionResult = [];\n                this.astGeneric(expression, expressionResult);\n                sequenceResult.push(expressionResult.join(''));\n              }\n              if (sequenceResult.length > 1) {\n                retArr.push('(', sequenceResult.join(','), ')');\n              } else {\n                retArr.push(sequenceResult[0]);\n              }\n              return retArr;\n            }\n            astUnaryExpression(uNode, retArr) {\n              const unaryResult = this.checkAndUpconvertBitwiseUnary(uNode, retArr);\n              if (unaryResult) {\n                return retArr;\n              }\n              if (uNode.prefix) {\n                retArr.push(uNode.operator);\n                this.astGeneric(uNode.argument, retArr);\n              } else {\n                this.astGeneric(uNode.argument, retArr);\n                retArr.push(uNode.operator);\n              }\n              return retArr;\n            }\n            checkAndUpconvertBitwiseUnary(uNode, retArr) {}\n            astUpdateExpression(uNode, retArr) {\n              if (uNode.prefix) {\n                retArr.push(uNode.operator);\n                this.astGeneric(uNode.argument, retArr);\n              } else {\n                this.astGeneric(uNode.argument, retArr);\n                retArr.push(uNode.operator);\n              }\n              return retArr;\n            }\n            astLogicalExpression(logNode, retArr) {\n              retArr.push('(');\n              this.astGeneric(logNode.left, retArr);\n              retArr.push(logNode.operator);\n              this.astGeneric(logNode.right, retArr);\n              retArr.push(')');\n              return retArr;\n            }\n            astMemberExpression(ast, retArr) {\n              return retArr;\n            }\n            astCallExpression(ast, retArr) {\n              return retArr;\n            }\n            astArrayExpression(ast, retArr) {\n              return retArr;\n            }\n            getMemberExpressionDetails(ast) {\n              if (ast.type !== 'MemberExpression') {\n                throw this.astErrorOutput(`Expression ${ast.type} not a MemberExpression`, ast);\n              }\n              let name = null;\n              let type = null;\n              const variableSignature = this.getVariableSignature(ast);\n              switch (variableSignature) {\n                case 'value':\n                  return null;\n                case 'value.thread.value':\n                case 'this.thread.value':\n                case 'this.output.value':\n                  return {\n                    signature: variableSignature,\n                    type: 'Integer',\n                    name: ast.property.name\n                  };\n                case 'value[]':\n                  if (typeof ast.object.name !== 'string') {\n                    throw this.astErrorOutput('Unexpected expression', ast);\n                  }\n                  name = ast.object.name;\n                  return {\n                    name,\n                    origin: 'user',\n                    signature: variableSignature,\n                    type: this.getVariableType(ast.object),\n                    xProperty: ast.property\n                  };\n                case 'value[][]':\n                  if (typeof ast.object.object.name !== 'string') {\n                    throw this.astErrorOutput('Unexpected expression', ast);\n                  }\n                  name = ast.object.object.name;\n                  return {\n                    name,\n                    origin: 'user',\n                    signature: variableSignature,\n                    type: this.getVariableType(ast.object.object),\n                    yProperty: ast.object.property,\n                    xProperty: ast.property\n                  };\n                case 'value[][][]':\n                  if (typeof ast.object.object.object.name !== 'string') {\n                    throw this.astErrorOutput('Unexpected expression', ast);\n                  }\n                  name = ast.object.object.object.name;\n                  return {\n                    name,\n                    origin: 'user',\n                    signature: variableSignature,\n                    type: this.getVariableType(ast.object.object.object),\n                    zProperty: ast.object.object.property,\n                    yProperty: ast.object.property,\n                    xProperty: ast.property\n                  };\n                case 'value[][][][]':\n                  if (typeof ast.object.object.object.object.name !== 'string') {\n                    throw this.astErrorOutput('Unexpected expression', ast);\n                  }\n                  name = ast.object.object.object.object.name;\n                  return {\n                    name,\n                    origin: 'user',\n                    signature: variableSignature,\n                    type: this.getVariableType(ast.object.object.object.object),\n                    zProperty: ast.object.object.property,\n                    yProperty: ast.object.property,\n                    xProperty: ast.property\n                  };\n                case 'value.value':\n                  if (typeof ast.property.name !== 'string') {\n                    throw this.astErrorOutput('Unexpected expression', ast);\n                  }\n                  if (this.isAstMathVariable(ast)) {\n                    name = ast.property.name;\n                    return {\n                      name,\n                      origin: 'Math',\n                      type: 'Number',\n                      signature: variableSignature\n                    };\n                  }\n                  switch (ast.property.name) {\n                    case 'r':\n                    case 'g':\n                    case 'b':\n                    case 'a':\n                      name = ast.object.name;\n                      return {\n                        name,\n                        property: ast.property.name,\n                        origin: 'user',\n                        signature: variableSignature,\n                        type: 'Number'\n                      };\n                    default:\n                      throw this.astErrorOutput('Unexpected expression', ast);\n                  }\n                case 'this.constants.value':\n                  if (typeof ast.property.name !== 'string') {\n                    throw this.astErrorOutput('Unexpected expression', ast);\n                  }\n                  name = ast.property.name;\n                  type = this.getConstantType(name);\n                  if (!type) {\n                    throw this.astErrorOutput('Constant has no type', ast);\n                  }\n                  return {\n                    name,\n                    type,\n                    origin: 'constants',\n                    signature: variableSignature\n                  };\n                case 'this.constants.value[]':\n                  if (typeof ast.object.property.name !== 'string') {\n                    throw this.astErrorOutput('Unexpected expression', ast);\n                  }\n                  name = ast.object.property.name;\n                  type = this.getConstantType(name);\n                  if (!type) {\n                    throw this.astErrorOutput('Constant has no type', ast);\n                  }\n                  return {\n                    name,\n                    type,\n                    origin: 'constants',\n                    signature: variableSignature,\n                    xProperty: ast.property\n                  };\n                case 'this.constants.value[][]':\n                  {\n                    if (typeof ast.object.object.property.name !== 'string') {\n                      throw this.astErrorOutput('Unexpected expression', ast);\n                    }\n                    name = ast.object.object.property.name;\n                    type = this.getConstantType(name);\n                    if (!type) {\n                      throw this.astErrorOutput('Constant has no type', ast);\n                    }\n                    return {\n                      name,\n                      type,\n                      origin: 'constants',\n                      signature: variableSignature,\n                      yProperty: ast.object.property,\n                      xProperty: ast.property\n                    };\n                  }\n                case 'this.constants.value[][][]':\n                  {\n                    if (typeof ast.object.object.object.property.name !== 'string') {\n                      throw this.astErrorOutput('Unexpected expression', ast);\n                    }\n                    name = ast.object.object.object.property.name;\n                    type = this.getConstantType(name);\n                    if (!type) {\n                      throw this.astErrorOutput('Constant has no type', ast);\n                    }\n                    return {\n                      name,\n                      type,\n                      origin: 'constants',\n                      signature: variableSignature,\n                      zProperty: ast.object.object.property,\n                      yProperty: ast.object.property,\n                      xProperty: ast.property\n                    };\n                  }\n                case 'fn()[]':\n                case 'fn()[][]':\n                case '[][]':\n                  return {\n                    signature: variableSignature,\n                    property: ast.property\n                  };\n                default:\n                  throw this.astErrorOutput('Unexpected expression', ast);\n              }\n            }\n            findIdentifierOrigin(astToFind) {\n              const stack = [this.ast];\n              while (stack.length > 0) {\n                const atNode = stack[0];\n                if (atNode.type === 'VariableDeclarator' && atNode.id && atNode.id.name && atNode.id.name === astToFind.name) {\n                  return atNode;\n                }\n                stack.shift();\n                if (atNode.argument) {\n                  stack.push(atNode.argument);\n                } else if (atNode.body) {\n                  stack.push(atNode.body);\n                } else if (atNode.declarations) {\n                  stack.push(atNode.declarations);\n                } else if (Array.isArray(atNode)) {\n                  for (let i = 0; i < atNode.length; i++) {\n                    stack.push(atNode[i]);\n                  }\n                }\n              }\n              return null;\n            }\n            findLastReturn(ast) {\n              const stack = [ast || this.ast];\n              while (stack.length > 0) {\n                const atNode = stack.pop();\n                if (atNode.type === 'ReturnStatement') {\n                  return atNode;\n                }\n                if (atNode.type === 'FunctionDeclaration') {\n                  continue;\n                }\n                if (atNode.argument) {\n                  stack.push(atNode.argument);\n                } else if (atNode.body) {\n                  stack.push(atNode.body);\n                } else if (atNode.declarations) {\n                  stack.push(atNode.declarations);\n                } else if (Array.isArray(atNode)) {\n                  for (let i = 0; i < atNode.length; i++) {\n                    stack.push(atNode[i]);\n                  }\n                } else if (atNode.consequent) {\n                  stack.push(atNode.consequent);\n                } else if (atNode.cases) {\n                  stack.push(atNode.cases);\n                }\n              }\n              return null;\n            }\n            getInternalVariableName(name) {\n              if (!this._internalVariableNames.hasOwnProperty(name)) {\n                this._internalVariableNames[name] = 0;\n              }\n              this._internalVariableNames[name]++;\n              if (this._internalVariableNames[name] === 1) {\n                return name;\n              }\n              return name + this._internalVariableNames[name];\n            }\n            astKey(ast, separator = ',') {\n              if (!ast.start || !ast.end) throw new Error('AST start and end needed');\n              return `${ast.start}${separator}${ast.end}`;\n            }\n          }\n          const typeLookupMap = {\n            'Number': 'Number',\n            'Float': 'Float',\n            'Integer': 'Integer',\n            'Array': 'Number',\n            'Array(2)': 'Number',\n            'Array(3)': 'Number',\n            'Array(4)': 'Number',\n            'Matrix(2)': 'Number',\n            'Matrix(3)': 'Number',\n            'Matrix(4)': 'Number',\n            'Array2D': 'Number',\n            'Array3D': 'Number',\n            'Input': 'Number',\n            'HTMLCanvas': 'Array(4)',\n            'OffscreenCanvas': 'Array(4)',\n            'HTMLImage': 'Array(4)',\n            'ImageBitmap': 'Array(4)',\n            'ImageData': 'Array(4)',\n            'HTMLVideo': 'Array(4)',\n            'HTMLImageArray': 'Array(4)',\n            'NumberTexture': 'Number',\n            'MemoryOptimizedNumberTexture': 'Number',\n            'Array1D(2)': 'Array(2)',\n            'Array1D(3)': 'Array(3)',\n            'Array1D(4)': 'Array(4)',\n            'Array2D(2)': 'Array(2)',\n            'Array2D(3)': 'Array(3)',\n            'Array2D(4)': 'Array(4)',\n            'Array3D(2)': 'Array(2)',\n            'Array3D(3)': 'Array(3)',\n            'Array3D(4)': 'Array(4)',\n            'ArrayTexture(1)': 'Number',\n            'ArrayTexture(2)': 'Array(2)',\n            'ArrayTexture(3)': 'Array(3)',\n            'ArrayTexture(4)': 'Array(4)'\n          };\n          module.exports = {\n            FunctionNode\n          };\n        }, {\n          \"../utils\": 114,\n          \"./function-tracer\": 11,\n          \"acorn\": 1\n        }],\n        11: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../utils');\n          function last(array) {\n            return array.length > 0 ? array[array.length - 1] : null;\n          }\n          const states = {\n            trackIdentifiers: 'trackIdentifiers',\n            memberExpression: 'memberExpression',\n            inForLoopInit: 'inForLoopInit'\n          };\n          class FunctionTracer {\n            constructor(ast) {\n              this.runningContexts = [];\n              this.functionContexts = [];\n              this.contexts = [];\n              this.functionCalls = [];\n              this.declarations = [];\n              this.identifiers = [];\n              this.functions = [];\n              this.returnStatements = [];\n              this.trackedIdentifiers = null;\n              this.states = [];\n              this.newFunctionContext();\n              this.scan(ast);\n            }\n            isState(state) {\n              return this.states[this.states.length - 1] === state;\n            }\n            hasState(state) {\n              return this.states.indexOf(state) > -1;\n            }\n            pushState(state) {\n              this.states.push(state);\n            }\n            popState(state) {\n              if (this.isState(state)) {\n                this.states.pop();\n              } else {\n                throw new Error(`Cannot pop the non-active state \"${state}\"`);\n              }\n            }\n            get currentFunctionContext() {\n              return last(this.functionContexts);\n            }\n            get currentContext() {\n              return last(this.runningContexts);\n            }\n            newFunctionContext() {\n              const newContext = {\n                '@contextType': 'function'\n              };\n              this.contexts.push(newContext);\n              this.functionContexts.push(newContext);\n            }\n            newContext(run) {\n              const newContext = Object.assign({\n                '@contextType': 'const/let'\n              }, this.currentContext);\n              this.contexts.push(newContext);\n              this.runningContexts.push(newContext);\n              run();\n              const {\n                currentFunctionContext\n              } = this;\n              for (const p in currentFunctionContext) {\n                if (!currentFunctionContext.hasOwnProperty(p) || newContext.hasOwnProperty(p)) continue;\n                newContext[p] = currentFunctionContext[p];\n              }\n              this.runningContexts.pop();\n              return newContext;\n            }\n            useFunctionContext(run) {\n              const functionContext = last(this.functionContexts);\n              this.runningContexts.push(functionContext);\n              run();\n              this.runningContexts.pop();\n            }\n            getIdentifiers(run) {\n              const trackedIdentifiers = this.trackedIdentifiers = [];\n              this.pushState(states.trackIdentifiers);\n              run();\n              this.trackedIdentifiers = null;\n              this.popState(states.trackIdentifiers);\n              return trackedIdentifiers;\n            }\n            getDeclaration(name) {\n              const {\n                currentContext,\n                currentFunctionContext,\n                runningContexts\n              } = this;\n              const declaration = currentContext[name] || currentFunctionContext[name] || null;\n              if (!declaration && currentContext === currentFunctionContext && runningContexts.length > 0) {\n                const previousRunningContext = runningContexts[runningContexts.length - 2];\n                if (previousRunningContext[name]) {\n                  return previousRunningContext[name];\n                }\n              }\n              return declaration;\n            }\n            scan(ast) {\n              if (!ast) return;\n              if (Array.isArray(ast)) {\n                for (let i = 0; i < ast.length; i++) {\n                  this.scan(ast[i]);\n                }\n                return;\n              }\n              switch (ast.type) {\n                case 'Program':\n                  this.useFunctionContext(() => {\n                    this.scan(ast.body);\n                  });\n                  break;\n                case 'BlockStatement':\n                  this.newContext(() => {\n                    this.scan(ast.body);\n                  });\n                  break;\n                case 'AssignmentExpression':\n                case 'LogicalExpression':\n                  this.scan(ast.left);\n                  this.scan(ast.right);\n                  break;\n                case 'BinaryExpression':\n                  this.scan(ast.left);\n                  this.scan(ast.right);\n                  break;\n                case 'UpdateExpression':\n                  if (ast.operator === '++') {\n                    const declaration = this.getDeclaration(ast.argument.name);\n                    if (declaration) {\n                      declaration.suggestedType = 'Integer';\n                    }\n                  }\n                  this.scan(ast.argument);\n                  break;\n                case 'UnaryExpression':\n                  this.scan(ast.argument);\n                  break;\n                case 'VariableDeclaration':\n                  if (ast.kind === 'var') {\n                    this.useFunctionContext(() => {\n                      ast.declarations = utils.normalizeDeclarations(ast);\n                      this.scan(ast.declarations);\n                    });\n                  } else {\n                    ast.declarations = utils.normalizeDeclarations(ast);\n                    this.scan(ast.declarations);\n                  }\n                  break;\n                case 'VariableDeclarator':\n                  {\n                    const {\n                      currentContext\n                    } = this;\n                    const inForLoopInit = this.hasState(states.inForLoopInit);\n                    const declaration = {\n                      ast: ast,\n                      context: currentContext,\n                      name: ast.id.name,\n                      origin: 'declaration',\n                      inForLoopInit,\n                      inForLoopTest: null,\n                      assignable: currentContext === this.currentFunctionContext || !inForLoopInit && !currentContext.hasOwnProperty(ast.id.name),\n                      suggestedType: null,\n                      valueType: null,\n                      dependencies: null,\n                      isSafe: null\n                    };\n                    if (!currentContext[ast.id.name]) {\n                      currentContext[ast.id.name] = declaration;\n                    }\n                    this.declarations.push(declaration);\n                    this.scan(ast.id);\n                    this.scan(ast.init);\n                    break;\n                  }\n                case 'FunctionExpression':\n                case 'FunctionDeclaration':\n                  if (this.runningContexts.length === 0) {\n                    this.scan(ast.body);\n                  } else {\n                    this.functions.push(ast);\n                  }\n                  break;\n                case 'IfStatement':\n                  this.scan(ast.test);\n                  this.scan(ast.consequent);\n                  if (ast.alternate) this.scan(ast.alternate);\n                  break;\n                case 'ForStatement':\n                  {\n                    let testIdentifiers;\n                    const context = this.newContext(() => {\n                      this.pushState(states.inForLoopInit);\n                      this.scan(ast.init);\n                      this.popState(states.inForLoopInit);\n                      testIdentifiers = this.getIdentifiers(() => {\n                        this.scan(ast.test);\n                      });\n                      this.scan(ast.update);\n                      this.newContext(() => {\n                        this.scan(ast.body);\n                      });\n                    });\n                    if (testIdentifiers) {\n                      for (const p in context) {\n                        if (p === '@contextType') continue;\n                        if (testIdentifiers.indexOf(p) > -1) {\n                          context[p].inForLoopTest = true;\n                        }\n                      }\n                    }\n                    break;\n                  }\n                case 'DoWhileStatement':\n                case 'WhileStatement':\n                  this.newContext(() => {\n                    this.scan(ast.body);\n                    this.scan(ast.test);\n                  });\n                  break;\n                case 'Identifier':\n                  {\n                    if (this.isState(states.trackIdentifiers)) {\n                      this.trackedIdentifiers.push(ast.name);\n                    }\n                    this.identifiers.push({\n                      context: this.currentContext,\n                      declaration: this.getDeclaration(ast.name),\n                      ast\n                    });\n                    break;\n                  }\n                case 'ReturnStatement':\n                  this.returnStatements.push(ast);\n                  this.scan(ast.argument);\n                  break;\n                case 'MemberExpression':\n                  this.pushState(states.memberExpression);\n                  this.scan(ast.object);\n                  this.scan(ast.property);\n                  this.popState(states.memberExpression);\n                  break;\n                case 'ExpressionStatement':\n                  this.scan(ast.expression);\n                  break;\n                case 'SequenceExpression':\n                  this.scan(ast.expressions);\n                  break;\n                case 'CallExpression':\n                  this.functionCalls.push({\n                    context: this.currentContext,\n                    ast\n                  });\n                  this.scan(ast.arguments);\n                  break;\n                case 'ArrayExpression':\n                  this.scan(ast.elements);\n                  break;\n                case 'ConditionalExpression':\n                  this.scan(ast.test);\n                  this.scan(ast.alternate);\n                  this.scan(ast.consequent);\n                  break;\n                case 'SwitchStatement':\n                  this.scan(ast.discriminant);\n                  this.scan(ast.cases);\n                  break;\n                case 'SwitchCase':\n                  this.scan(ast.test);\n                  this.scan(ast.consequent);\n                  break;\n                case 'ThisExpression':\n                case 'Literal':\n                case 'DebuggerStatement':\n                case 'EmptyStatement':\n                case 'BreakStatement':\n                case 'ContinueStatement':\n                  break;\n                default:\n                  throw new Error(`unhandled type \"${ast.type}\"`);\n              }\n            }\n          }\n          module.exports = {\n            FunctionTracer\n          };\n        }, {\n          \"../utils\": 114\n        }],\n        12: [function (require, module, exports) {\n          const {\n            glWiretap\n          } = require('gl-wiretap');\n          const {\n            utils\n          } = require('../../utils');\n          function toStringWithoutUtils(fn) {\n            return fn.toString().replace('=>', '').replace(/^function /, '').replace(/utils[.]/g, '/*utils.*/');\n          }\n          function glKernelString(Kernel, args, originKernel, setupContextString, destroyContextString) {\n            if (!originKernel.built) {\n              originKernel.build.apply(originKernel, args);\n            }\n            args = args ? Array.from(args).map(arg => {\n              switch (typeof arg) {\n                case 'boolean':\n                  return new Boolean(arg);\n                case 'number':\n                  return new Number(arg);\n                default:\n                  return arg;\n              }\n            }) : null;\n            const postResult = [];\n            const context = glWiretap(originKernel.context, {\n              useTrackablePrimitives: true,\n              onReadPixels: targetName => {\n                if (kernel.subKernels) {\n                  if (!subKernelsResultVariableSetup) {\n                    postResult.push(`    const result = { result: ${getRenderString(targetName, kernel)} };`);\n                    subKernelsResultVariableSetup = true;\n                  } else {\n                    const property = kernel.subKernels[subKernelsResultIndex++].property;\n                    postResult.push(`    result${isNaN(property) ? '.' + property : `[${property}]`} = ${getRenderString(targetName, kernel)};`);\n                  }\n                  if (subKernelsResultIndex === kernel.subKernels.length) {\n                    postResult.push('    return result;');\n                  }\n                  return;\n                }\n                if (targetName) {\n                  postResult.push(`    return ${getRenderString(targetName, kernel)};`);\n                } else {\n                  postResult.push(`    return null;`);\n                }\n              },\n              onUnrecognizedArgumentLookup: argument => {\n                const argumentName = findKernelValue(argument, kernel.kernelArguments, [], context);\n                if (argumentName) {\n                  return argumentName;\n                }\n                const constantName = findKernelValue(argument, kernel.kernelConstants, constants ? Object.keys(constants).map(key => constants[key]) : [], context);\n                if (constantName) {\n                  return constantName;\n                }\n                return null;\n              }\n            });\n            let subKernelsResultVariableSetup = false;\n            let subKernelsResultIndex = 0;\n            const {\n              source,\n              canvas,\n              output,\n              pipeline,\n              graphical,\n              loopMaxIterations,\n              constants,\n              optimizeFloatMemory,\n              precision,\n              fixIntegerDivisionAccuracy,\n              functions,\n              nativeFunctions,\n              subKernels,\n              immutable,\n              argumentTypes,\n              constantTypes,\n              kernelArguments,\n              kernelConstants,\n              tactic\n            } = originKernel;\n            const kernel = new Kernel(source, {\n              canvas,\n              context,\n              checkContext: false,\n              output,\n              pipeline,\n              graphical,\n              loopMaxIterations,\n              constants,\n              optimizeFloatMemory,\n              precision,\n              fixIntegerDivisionAccuracy,\n              functions,\n              nativeFunctions,\n              subKernels,\n              immutable,\n              argumentTypes,\n              constantTypes,\n              tactic\n            });\n            let result = [];\n            context.setIndent(2);\n            kernel.build.apply(kernel, args);\n            result.push(context.toString());\n            context.reset();\n            kernel.kernelArguments.forEach((kernelArgument, i) => {\n              switch (kernelArgument.type) {\n                case 'Integer':\n                case 'Boolean':\n                case 'Number':\n                case 'Float':\n                case 'Array':\n                case 'Array(2)':\n                case 'Array(3)':\n                case 'Array(4)':\n                case 'HTMLCanvas':\n                case 'HTMLImage':\n                case 'HTMLVideo':\n                  context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n                  break;\n                case 'HTMLImageArray':\n                  for (let imageIndex = 0; imageIndex < args[i].length; imageIndex++) {\n                    const arg = args[i];\n                    context.insertVariable(`uploadValue_${kernelArgument.name}[${imageIndex}]`, arg[imageIndex]);\n                  }\n                  break;\n                case 'Input':\n                  context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n                  break;\n                case 'MemoryOptimizedNumberTexture':\n                case 'NumberTexture':\n                case 'Array1D(2)':\n                case 'Array1D(3)':\n                case 'Array1D(4)':\n                case 'Array2D(2)':\n                case 'Array2D(3)':\n                case 'Array2D(4)':\n                case 'Array3D(2)':\n                case 'Array3D(3)':\n                case 'Array3D(4)':\n                case 'ArrayTexture(1)':\n                case 'ArrayTexture(2)':\n                case 'ArrayTexture(3)':\n                case 'ArrayTexture(4)':\n                  context.insertVariable(`uploadValue_${kernelArgument.name}`, args[i].texture);\n                  break;\n                default:\n                  throw new Error(`unhandled kernelArgumentType insertion for glWiretap of type ${kernelArgument.type}`);\n              }\n            });\n            result.push('/** start of injected functions **/');\n            result.push(`function ${toStringWithoutUtils(utils.flattenTo)}`);\n            result.push(`function ${toStringWithoutUtils(utils.flatten2dArrayTo)}`);\n            result.push(`function ${toStringWithoutUtils(utils.flatten3dArrayTo)}`);\n            result.push(`function ${toStringWithoutUtils(utils.flatten4dArrayTo)}`);\n            result.push(`function ${toStringWithoutUtils(utils.isArray)}`);\n            if (kernel.renderOutput !== kernel.renderTexture && kernel.formatValues) {\n              result.push(`  const renderOutput = function ${toStringWithoutUtils(kernel.formatValues)};`);\n            }\n            result.push('/** end of injected functions **/');\n            result.push(`  const innerKernel = function (${kernel.kernelArguments.map(kernelArgument => kernelArgument.varName).join(', ')}) {`);\n            context.setIndent(4);\n            kernel.run.apply(kernel, args);\n            if (kernel.renderKernels) {\n              kernel.renderKernels();\n            } else if (kernel.renderOutput) {\n              kernel.renderOutput();\n            }\n            result.push('    /** start setup uploads for kernel values **/');\n            kernel.kernelArguments.forEach(kernelArgument => {\n              result.push('    ' + kernelArgument.getStringValueHandler().split('\\n').join('\\n    '));\n            });\n            result.push('    /** end setup uploads for kernel values **/');\n            result.push(context.toString());\n            if (kernel.renderOutput === kernel.renderTexture) {\n              context.reset();\n              const framebufferName = context.getContextVariableName(kernel.framebuffer);\n              if (kernel.renderKernels) {\n                const results = kernel.renderKernels();\n                const textureName = context.getContextVariableName(kernel.texture.texture);\n                result.push(`    return {\n      result: {\n        texture: ${textureName},\n        type: '${results.result.type}',\n        toArray: ${getToArrayString(results.result, textureName, framebufferName)}\n      },`);\n                const {\n                  subKernels,\n                  mappedTextures\n                } = kernel;\n                for (let i = 0; i < subKernels.length; i++) {\n                  const texture = mappedTextures[i];\n                  const subKernel = subKernels[i];\n                  const subKernelResult = results[subKernel.property];\n                  const subKernelTextureName = context.getContextVariableName(texture.texture);\n                  result.push(`\n      ${subKernel.property}: {\n        texture: ${subKernelTextureName},\n        type: '${subKernelResult.type}',\n        toArray: ${getToArrayString(subKernelResult, subKernelTextureName, framebufferName)}\n      },`);\n                }\n                result.push(`    };`);\n              } else {\n                const rendered = kernel.renderOutput();\n                const textureName = context.getContextVariableName(kernel.texture.texture);\n                result.push(`    return {\n        texture: ${textureName},\n        type: '${rendered.type}',\n        toArray: ${getToArrayString(rendered, textureName, framebufferName)}\n      };`);\n              }\n            }\n            result.push(`    ${destroyContextString ? '\\n' + destroyContextString + '    ' : ''}`);\n            result.push(postResult.join('\\n'));\n            result.push('  };');\n            if (kernel.graphical) {\n              result.push(getGetPixelsString(kernel));\n              result.push(`  innerKernel.getPixels = getPixels;`);\n            }\n            result.push('  return innerKernel;');\n            let constantsUpload = [];\n            kernelConstants.forEach(kernelConstant => {\n              constantsUpload.push(`${kernelConstant.getStringValueHandler()}`);\n            });\n            return `function kernel(settings) {\n  const { context, constants } = settings;\n  ${constantsUpload.join('')}\n  ${setupContextString ? setupContextString : ''}\n${result.join('\\n')}\n}`;\n          }\n          function getRenderString(targetName, kernel) {\n            const readBackValue = kernel.precision === 'single' ? targetName : `new Float32Array(${targetName}.buffer)`;\n            if (kernel.output[2]) {\n              return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]}, ${kernel.output[2]})`;\n            }\n            if (kernel.output[1]) {\n              return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]})`;\n            }\n            return `renderOutput(${readBackValue}, ${kernel.output[0]})`;\n          }\n          function getGetPixelsString(kernel) {\n            const getPixels = kernel.getPixels.toString();\n            const useFunctionKeyword = !/^function/.test(getPixels);\n            return utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${getPixels}`, {\n              findDependency: (object, name) => {\n                if (object === 'utils') {\n                  return `const ${name} = ${utils[name].toString()};`;\n                }\n                return null;\n              },\n              thisLookup: property => {\n                if (property === 'context') {\n                  return null;\n                }\n                if (kernel.hasOwnProperty(property)) {\n                  return JSON.stringify(kernel[property]);\n                }\n                throw new Error(`unhandled thisLookup ${property}`);\n              }\n            });\n          }\n          function getToArrayString(kernelResult, textureName, framebufferName) {\n            const toArray = kernelResult.toArray.toString();\n            const useFunctionKeyword = !/^function/.test(toArray);\n            const flattenedFunctions = utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${toArray}`, {\n              findDependency: (object, name) => {\n                if (object === 'utils') {\n                  return `const ${name} = ${utils[name].toString()};`;\n                } else if (object === 'this') {\n                  if (name === 'framebuffer') {\n                    return '';\n                  }\n                  return `${useFunctionKeyword ? 'function ' : ''}${kernelResult[name].toString()}`;\n                } else {\n                  throw new Error('unhandled fromObject');\n                }\n              },\n              thisLookup: (property, isDeclaration) => {\n                if (property === 'texture') {\n                  return textureName;\n                }\n                if (property === 'context') {\n                  if (isDeclaration) return null;\n                  return 'gl';\n                }\n                if (kernelResult.hasOwnProperty(property)) {\n                  return JSON.stringify(kernelResult[property]);\n                }\n                throw new Error(`unhandled thisLookup ${property}`);\n              }\n            });\n            return `() => {\n  function framebuffer() { return ${framebufferName}; };\n  ${flattenedFunctions}\n  return toArray();\n  }`;\n          }\n          function findKernelValue(argument, kernelValues, values, context, uploadedValues) {\n            if (argument === null) return null;\n            if (kernelValues === null) return null;\n            switch (typeof argument) {\n              case 'boolean':\n              case 'number':\n                return null;\n            }\n            if (typeof HTMLImageElement !== 'undefined' && argument instanceof HTMLImageElement) {\n              for (let i = 0; i < kernelValues.length; i++) {\n                const kernelValue = kernelValues[i];\n                if (kernelValue.type !== 'HTMLImageArray' && kernelValue) continue;\n                if (kernelValue.uploadValue !== argument) continue;\n                const variableIndex = values[i].indexOf(argument);\n                if (variableIndex === -1) continue;\n                const variableName = `uploadValue_${kernelValue.name}[${variableIndex}]`;\n                context.insertVariable(variableName, argument);\n                return variableName;\n              }\n            }\n            for (let i = 0; i < kernelValues.length; i++) {\n              const kernelValue = kernelValues[i];\n              if (argument !== kernelValue.uploadValue) continue;\n              const variable = `uploadValue_${kernelValue.name}`;\n              context.insertVariable(variable, kernelValue);\n              return variable;\n            }\n            return null;\n          }\n          module.exports = {\n            glKernelString\n          };\n        }, {\n          \"../../utils\": 114,\n          \"gl-wiretap\": 3\n        }],\n        13: [function (require, module, exports) {\n          const {\n            Kernel\n          } = require('../kernel');\n          const {\n            utils\n          } = require('../../utils');\n          const {\n            GLTextureArray2Float\n          } = require('./texture/array-2-float');\n          const {\n            GLTextureArray2Float2D\n          } = require('./texture/array-2-float-2d');\n          const {\n            GLTextureArray2Float3D\n          } = require('./texture/array-2-float-3d');\n          const {\n            GLTextureArray3Float\n          } = require('./texture/array-3-float');\n          const {\n            GLTextureArray3Float2D\n          } = require('./texture/array-3-float-2d');\n          const {\n            GLTextureArray3Float3D\n          } = require('./texture/array-3-float-3d');\n          const {\n            GLTextureArray4Float\n          } = require('./texture/array-4-float');\n          const {\n            GLTextureArray4Float2D\n          } = require('./texture/array-4-float-2d');\n          const {\n            GLTextureArray4Float3D\n          } = require('./texture/array-4-float-3d');\n          const {\n            GLTextureFloat\n          } = require('./texture/float');\n          const {\n            GLTextureFloat2D\n          } = require('./texture/float-2d');\n          const {\n            GLTextureFloat3D\n          } = require('./texture/float-3d');\n          const {\n            GLTextureMemoryOptimized\n          } = require('./texture/memory-optimized');\n          const {\n            GLTextureMemoryOptimized2D\n          } = require('./texture/memory-optimized-2d');\n          const {\n            GLTextureMemoryOptimized3D\n          } = require('./texture/memory-optimized-3d');\n          const {\n            GLTextureUnsigned\n          } = require('./texture/unsigned');\n          const {\n            GLTextureUnsigned2D\n          } = require('./texture/unsigned-2d');\n          const {\n            GLTextureUnsigned3D\n          } = require('./texture/unsigned-3d');\n          const {\n            GLTextureGraphical\n          } = require('./texture/graphical');\n          class GLKernel extends Kernel {\n            static get mode() {\n              return 'gpu';\n            }\n            static getIsFloatRead() {\n              const kernelString = `function kernelFunction() {\n      return 1;\n    }`;\n              const kernel = new this(kernelString, {\n                context: this.testContext,\n                canvas: this.testCanvas,\n                validate: false,\n                output: [1],\n                precision: 'single',\n                returnType: 'Number',\n                tactic: 'speed'\n              });\n              kernel.build();\n              kernel.run();\n              const result = kernel.renderOutput();\n              kernel.destroy(true);\n              return result[0] === 1;\n            }\n            static getIsIntegerDivisionAccurate() {\n              function kernelFunction(v1, v2) {\n                return v1[this.thread.x] / v2[this.thread.x];\n              }\n              const kernel = new this(kernelFunction.toString(), {\n                context: this.testContext,\n                canvas: this.testCanvas,\n                validate: false,\n                output: [2],\n                returnType: 'Number',\n                precision: 'unsigned',\n                tactic: 'speed'\n              });\n              const args = [[6, 6030401], [3, 3991]];\n              kernel.build.apply(kernel, args);\n              kernel.run.apply(kernel, args);\n              const result = kernel.renderOutput();\n              kernel.destroy(true);\n              return result[0] === 2 && result[1] === 1511;\n            }\n            static getIsSpeedTacticSupported() {\n              function kernelFunction(value) {\n                return value[this.thread.x];\n              }\n              const kernel = new this(kernelFunction.toString(), {\n                context: this.testContext,\n                canvas: this.testCanvas,\n                validate: false,\n                output: [4],\n                returnType: 'Number',\n                precision: 'unsigned',\n                tactic: 'speed'\n              });\n              const args = [[0, 1, 2, 3]];\n              kernel.build.apply(kernel, args);\n              kernel.run.apply(kernel, args);\n              const result = kernel.renderOutput();\n              kernel.destroy(true);\n              return Math.round(result[0]) === 0 && Math.round(result[1]) === 1 && Math.round(result[2]) === 2 && Math.round(result[3]) === 3;\n            }\n            static get testCanvas() {\n              throw new Error(`\"testCanvas\" not defined on ${this.name}`);\n            }\n            static get testContext() {\n              throw new Error(`\"testContext\" not defined on ${this.name}`);\n            }\n            static getFeatures() {\n              const gl = this.testContext;\n              const isDrawBuffers = this.getIsDrawBuffers();\n              return Object.freeze({\n                isFloatRead: this.getIsFloatRead(),\n                isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n                isSpeedTacticSupported: this.getIsSpeedTacticSupported(),\n                isTextureFloat: this.getIsTextureFloat(),\n                isDrawBuffers,\n                kernelMap: isDrawBuffers,\n                channelCount: this.getChannelCount(),\n                maxTextureSize: this.getMaxTextureSize(),\n                lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n                lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n                mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n                mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n                highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n                highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT)\n              });\n            }\n            static setupFeatureChecks() {\n              throw new Error(`\"setupFeatureChecks\" not defined on ${this.name}`);\n            }\n            static getSignature(kernel, argumentTypes) {\n              return kernel.getVariablePrecisionString() + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n            }\n            setFixIntegerDivisionAccuracy(fix) {\n              this.fixIntegerDivisionAccuracy = fix;\n              return this;\n            }\n            setPrecision(flag) {\n              this.precision = flag;\n              return this;\n            }\n            setFloatTextures(flag) {\n              utils.warnDeprecated('method', 'setFloatTextures', 'setOptimizeFloatMemory');\n              this.floatTextures = flag;\n              return this;\n            }\n            static nativeFunctionArguments(source) {\n              const argumentTypes = [];\n              const argumentNames = [];\n              const states = [];\n              const isStartingVariableName = /^[a-zA-Z_]/;\n              const isVariableChar = /[a-zA-Z_0-9]/;\n              let i = 0;\n              let argumentName = null;\n              let argumentType = null;\n              while (i < source.length) {\n                const char = source[i];\n                const nextChar = source[i + 1];\n                const state = states.length > 0 ? states[states.length - 1] : null;\n                if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '*') {\n                  states.push('MULTI_LINE_COMMENT');\n                  i += 2;\n                  continue;\n                } else if (state === 'MULTI_LINE_COMMENT' && char === '*' && nextChar === '/') {\n                  states.pop();\n                  i += 2;\n                  continue;\n                } else if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '/') {\n                  states.push('COMMENT');\n                  i += 2;\n                  continue;\n                } else if (state === 'COMMENT' && char === '\\n') {\n                  states.pop();\n                  i++;\n                  continue;\n                } else if (state === null && char === '(') {\n                  states.push('FUNCTION_ARGUMENTS');\n                  i++;\n                  continue;\n                } else if (state === 'FUNCTION_ARGUMENTS') {\n                  if (char === ')') {\n                    states.pop();\n                    break;\n                  }\n                  if (char === 'f' && nextChar === 'l' && source[i + 2] === 'o' && source[i + 3] === 'a' && source[i + 4] === 't' && source[i + 5] === ' ') {\n                    states.push('DECLARE_VARIABLE');\n                    argumentType = 'float';\n                    argumentName = '';\n                    i += 6;\n                    continue;\n                  } else if (char === 'i' && nextChar === 'n' && source[i + 2] === 't' && source[i + 3] === ' ') {\n                    states.push('DECLARE_VARIABLE');\n                    argumentType = 'int';\n                    argumentName = '';\n                    i += 4;\n                    continue;\n                  } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '2' && source[i + 4] === ' ') {\n                    states.push('DECLARE_VARIABLE');\n                    argumentType = 'vec2';\n                    argumentName = '';\n                    i += 5;\n                    continue;\n                  } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '3' && source[i + 4] === ' ') {\n                    states.push('DECLARE_VARIABLE');\n                    argumentType = 'vec3';\n                    argumentName = '';\n                    i += 5;\n                    continue;\n                  } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '4' && source[i + 4] === ' ') {\n                    states.push('DECLARE_VARIABLE');\n                    argumentType = 'vec4';\n                    argumentName = '';\n                    i += 5;\n                    continue;\n                  }\n                } else if (state === 'DECLARE_VARIABLE') {\n                  if (argumentName === '') {\n                    if (char === ' ') {\n                      i++;\n                      continue;\n                    }\n                    if (!isStartingVariableName.test(char)) {\n                      throw new Error('variable name is not expected string');\n                    }\n                  }\n                  argumentName += char;\n                  if (!isVariableChar.test(nextChar)) {\n                    states.pop();\n                    argumentNames.push(argumentName);\n                    argumentTypes.push(typeMap[argumentType]);\n                  }\n                }\n                i++;\n              }\n              if (states.length > 0) {\n                throw new Error('GLSL function was not parsable');\n              }\n              return {\n                argumentNames,\n                argumentTypes\n              };\n            }\n            static nativeFunctionReturnType(source) {\n              return typeMap[source.match(/int|float|vec[2-4]/)[0]];\n            }\n            static combineKernels(combinedKernel, lastKernel) {\n              combinedKernel.apply(null, arguments);\n              const {\n                texSize,\n                context,\n                threadDim\n              } = lastKernel.texSize;\n              let result;\n              if (lastKernel.precision === 'single') {\n                const w = texSize[0];\n                const h = Math.ceil(texSize[1] / 4);\n                result = new Float32Array(w * h * 4 * 4);\n                context.readPixels(0, 0, w, h * 4, context.RGBA, context.FLOAT, result);\n              } else {\n                const bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n                context.readPixels(0, 0, texSize[0], texSize[1], context.RGBA, context.UNSIGNED_BYTE, bytes);\n                result = new Float32Array(bytes.buffer);\n              }\n              result = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n              if (lastKernel.output.length === 1) {\n                return result;\n              } else if (lastKernel.output.length === 2) {\n                return utils.splitArray(result, lastKernel.output[0]);\n              } else if (lastKernel.output.length === 3) {\n                const cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n                return cube.map(function (x) {\n                  return utils.splitArray(x, lastKernel.output[0]);\n                });\n              }\n            }\n            constructor(source, settings) {\n              super(source, settings);\n              this.transferValues = null;\n              this.formatValues = null;\n              this.TextureConstructor = null;\n              this.renderOutput = null;\n              this.renderRawOutput = null;\n              this.texSize = null;\n              this.translatedSource = null;\n              this.compiledFragmentShader = null;\n              this.compiledVertexShader = null;\n              this.switchingKernels = null;\n              this._textureSwitched = null;\n              this._mappedTextureSwitched = null;\n            }\n            checkTextureSize() {\n              const {\n                features\n              } = this.constructor;\n              if (this.texSize[0] > features.maxTextureSize || this.texSize[1] > features.maxTextureSize) {\n                throw new Error(`Texture size [${this.texSize[0]},${this.texSize[1]}] generated by kernel is larger than supported size [${features.maxTextureSize},${features.maxTextureSize}]`);\n              }\n            }\n            translateSource() {\n              throw new Error(`\"translateSource\" not defined on ${this.constructor.name}`);\n            }\n            pickRenderStrategy(args) {\n              if (this.graphical) {\n                this.renderRawOutput = this.readPackedPixelsToUint8Array;\n                this.transferValues = pixels => pixels;\n                this.TextureConstructor = GLTextureGraphical;\n                return null;\n              }\n              if (this.precision === 'unsigned') {\n                this.renderRawOutput = this.readPackedPixelsToUint8Array;\n                this.transferValues = this.readPackedPixelsToFloat32Array;\n                if (this.pipeline) {\n                  this.renderOutput = this.renderTexture;\n                  if (this.subKernels !== null) {\n                    this.renderKernels = this.renderKernelsToTextures;\n                  }\n                  switch (this.returnType) {\n                    case 'LiteralInteger':\n                    case 'Float':\n                    case 'Number':\n                    case 'Integer':\n                      if (this.output[2] > 0) {\n                        this.TextureConstructor = GLTextureUnsigned3D;\n                        return null;\n                      } else if (this.output[1] > 0) {\n                        this.TextureConstructor = GLTextureUnsigned2D;\n                        return null;\n                      } else {\n                        this.TextureConstructor = GLTextureUnsigned;\n                        return null;\n                      }\n                    case 'Array(2)':\n                    case 'Array(3)':\n                    case 'Array(4)':\n                      return this.requestFallback(args);\n                  }\n                } else {\n                  if (this.subKernels !== null) {\n                    this.renderKernels = this.renderKernelsToArrays;\n                  }\n                  switch (this.returnType) {\n                    case 'LiteralInteger':\n                    case 'Float':\n                    case 'Number':\n                    case 'Integer':\n                      this.renderOutput = this.renderValues;\n                      if (this.output[2] > 0) {\n                        this.TextureConstructor = GLTextureUnsigned3D;\n                        this.formatValues = utils.erect3DPackedFloat;\n                        return null;\n                      } else if (this.output[1] > 0) {\n                        this.TextureConstructor = GLTextureUnsigned2D;\n                        this.formatValues = utils.erect2DPackedFloat;\n                        return null;\n                      } else {\n                        this.TextureConstructor = GLTextureUnsigned;\n                        this.formatValues = utils.erectPackedFloat;\n                        return null;\n                      }\n                    case 'Array(2)':\n                    case 'Array(3)':\n                    case 'Array(4)':\n                      return this.requestFallback(args);\n                  }\n                }\n              } else if (this.precision === 'single') {\n                this.renderRawOutput = this.readFloatPixelsToFloat32Array;\n                this.transferValues = this.readFloatPixelsToFloat32Array;\n                if (this.pipeline) {\n                  this.renderOutput = this.renderTexture;\n                  if (this.subKernels !== null) {\n                    this.renderKernels = this.renderKernelsToTextures;\n                  }\n                  switch (this.returnType) {\n                    case 'LiteralInteger':\n                    case 'Float':\n                    case 'Number':\n                    case 'Integer':\n                      {\n                        if (this.optimizeFloatMemory) {\n                          if (this.output[2] > 0) {\n                            this.TextureConstructor = GLTextureMemoryOptimized3D;\n                            return null;\n                          } else if (this.output[1] > 0) {\n                            this.TextureConstructor = GLTextureMemoryOptimized2D;\n                            return null;\n                          } else {\n                            this.TextureConstructor = GLTextureMemoryOptimized;\n                            return null;\n                          }\n                        } else {\n                          if (this.output[2] > 0) {\n                            this.TextureConstructor = GLTextureFloat3D;\n                            return null;\n                          } else if (this.output[1] > 0) {\n                            this.TextureConstructor = GLTextureFloat2D;\n                            return null;\n                          } else {\n                            this.TextureConstructor = GLTextureFloat;\n                            return null;\n                          }\n                        }\n                      }\n                    case 'Array(2)':\n                      {\n                        if (this.output[2] > 0) {\n                          this.TextureConstructor = GLTextureArray2Float3D;\n                          return null;\n                        } else if (this.output[1] > 0) {\n                          this.TextureConstructor = GLTextureArray2Float2D;\n                          return null;\n                        } else {\n                          this.TextureConstructor = GLTextureArray2Float;\n                          return null;\n                        }\n                      }\n                    case 'Array(3)':\n                      {\n                        if (this.output[2] > 0) {\n                          this.TextureConstructor = GLTextureArray3Float3D;\n                          return null;\n                        } else if (this.output[1] > 0) {\n                          this.TextureConstructor = GLTextureArray3Float2D;\n                          return null;\n                        } else {\n                          this.TextureConstructor = GLTextureArray3Float;\n                          return null;\n                        }\n                      }\n                    case 'Array(4)':\n                      {\n                        if (this.output[2] > 0) {\n                          this.TextureConstructor = GLTextureArray4Float3D;\n                          return null;\n                        } else if (this.output[1] > 0) {\n                          this.TextureConstructor = GLTextureArray4Float2D;\n                          return null;\n                        } else {\n                          this.TextureConstructor = GLTextureArray4Float;\n                          return null;\n                        }\n                      }\n                  }\n                }\n                this.renderOutput = this.renderValues;\n                if (this.subKernels !== null) {\n                  this.renderKernels = this.renderKernelsToArrays;\n                }\n                if (this.optimizeFloatMemory) {\n                  switch (this.returnType) {\n                    case 'LiteralInteger':\n                    case 'Float':\n                    case 'Number':\n                    case 'Integer':\n                      {\n                        if (this.output[2] > 0) {\n                          this.TextureConstructor = GLTextureMemoryOptimized3D;\n                          this.formatValues = utils.erectMemoryOptimized3DFloat;\n                          return null;\n                        } else if (this.output[1] > 0) {\n                          this.TextureConstructor = GLTextureMemoryOptimized2D;\n                          this.formatValues = utils.erectMemoryOptimized2DFloat;\n                          return null;\n                        } else {\n                          this.TextureConstructor = GLTextureMemoryOptimized;\n                          this.formatValues = utils.erectMemoryOptimizedFloat;\n                          return null;\n                        }\n                      }\n                    case 'Array(2)':\n                      {\n                        if (this.output[2] > 0) {\n                          this.TextureConstructor = GLTextureArray2Float3D;\n                          this.formatValues = utils.erect3DArray2;\n                          return null;\n                        } else if (this.output[1] > 0) {\n                          this.TextureConstructor = GLTextureArray2Float2D;\n                          this.formatValues = utils.erect2DArray2;\n                          return null;\n                        } else {\n                          this.TextureConstructor = GLTextureArray2Float;\n                          this.formatValues = utils.erectArray2;\n                          return null;\n                        }\n                      }\n                    case 'Array(3)':\n                      {\n                        if (this.output[2] > 0) {\n                          this.TextureConstructor = GLTextureArray3Float3D;\n                          this.formatValues = utils.erect3DArray3;\n                          return null;\n                        } else if (this.output[1] > 0) {\n                          this.TextureConstructor = GLTextureArray3Float2D;\n                          this.formatValues = utils.erect2DArray3;\n                          return null;\n                        } else {\n                          this.TextureConstructor = GLTextureArray3Float;\n                          this.formatValues = utils.erectArray3;\n                          return null;\n                        }\n                      }\n                    case 'Array(4)':\n                      {\n                        if (this.output[2] > 0) {\n                          this.TextureConstructor = GLTextureArray4Float3D;\n                          this.formatValues = utils.erect3DArray4;\n                          return null;\n                        } else if (this.output[1] > 0) {\n                          this.TextureConstructor = GLTextureArray4Float2D;\n                          this.formatValues = utils.erect2DArray4;\n                          return null;\n                        } else {\n                          this.TextureConstructor = GLTextureArray4Float;\n                          this.formatValues = utils.erectArray4;\n                          return null;\n                        }\n                      }\n                  }\n                } else {\n                  switch (this.returnType) {\n                    case 'LiteralInteger':\n                    case 'Float':\n                    case 'Number':\n                    case 'Integer':\n                      {\n                        if (this.output[2] > 0) {\n                          this.TextureConstructor = GLTextureFloat3D;\n                          this.formatValues = utils.erect3DFloat;\n                          return null;\n                        } else if (this.output[1] > 0) {\n                          this.TextureConstructor = GLTextureFloat2D;\n                          this.formatValues = utils.erect2DFloat;\n                          return null;\n                        } else {\n                          this.TextureConstructor = GLTextureFloat;\n                          this.formatValues = utils.erectFloat;\n                          return null;\n                        }\n                      }\n                    case 'Array(2)':\n                      {\n                        if (this.output[2] > 0) {\n                          this.TextureConstructor = GLTextureArray2Float3D;\n                          this.formatValues = utils.erect3DArray2;\n                          return null;\n                        } else if (this.output[1] > 0) {\n                          this.TextureConstructor = GLTextureArray2Float2D;\n                          this.formatValues = utils.erect2DArray2;\n                          return null;\n                        } else {\n                          this.TextureConstructor = GLTextureArray2Float;\n                          this.formatValues = utils.erectArray2;\n                          return null;\n                        }\n                      }\n                    case 'Array(3)':\n                      {\n                        if (this.output[2] > 0) {\n                          this.TextureConstructor = GLTextureArray3Float3D;\n                          this.formatValues = utils.erect3DArray3;\n                          return null;\n                        } else if (this.output[1] > 0) {\n                          this.TextureConstructor = GLTextureArray3Float2D;\n                          this.formatValues = utils.erect2DArray3;\n                          return null;\n                        } else {\n                          this.TextureConstructor = GLTextureArray3Float;\n                          this.formatValues = utils.erectArray3;\n                          return null;\n                        }\n                      }\n                    case 'Array(4)':\n                      {\n                        if (this.output[2] > 0) {\n                          this.TextureConstructor = GLTextureArray4Float3D;\n                          this.formatValues = utils.erect3DArray4;\n                          return null;\n                        } else if (this.output[1] > 0) {\n                          this.TextureConstructor = GLTextureArray4Float2D;\n                          this.formatValues = utils.erect2DArray4;\n                          return null;\n                        } else {\n                          this.TextureConstructor = GLTextureArray4Float;\n                          this.formatValues = utils.erectArray4;\n                          return null;\n                        }\n                      }\n                  }\n                }\n              } else {\n                throw new Error(`unhandled precision of \"${this.precision}\"`);\n              }\n              throw new Error(`unhandled return type \"${this.returnType}\"`);\n            }\n            getKernelString() {\n              throw new Error(`abstract method call`);\n            }\n            getMainResultTexture() {\n              switch (this.returnType) {\n                case 'LiteralInteger':\n                case 'Float':\n                case 'Integer':\n                case 'Number':\n                  return this.getMainResultNumberTexture();\n                case 'Array(2)':\n                  return this.getMainResultArray2Texture();\n                case 'Array(3)':\n                  return this.getMainResultArray3Texture();\n                case 'Array(4)':\n                  return this.getMainResultArray4Texture();\n                default:\n                  throw new Error(`unhandled returnType type ${this.returnType}`);\n              }\n            }\n            getMainResultKernelNumberTexture() {\n              throw new Error(`abstract method call`);\n            }\n            getMainResultSubKernelNumberTexture() {\n              throw new Error(`abstract method call`);\n            }\n            getMainResultKernelArray2Texture() {\n              throw new Error(`abstract method call`);\n            }\n            getMainResultSubKernelArray2Texture() {\n              throw new Error(`abstract method call`);\n            }\n            getMainResultKernelArray3Texture() {\n              throw new Error(`abstract method call`);\n            }\n            getMainResultSubKernelArray3Texture() {\n              throw new Error(`abstract method call`);\n            }\n            getMainResultKernelArray4Texture() {\n              throw new Error(`abstract method call`);\n            }\n            getMainResultSubKernelArray4Texture() {\n              throw new Error(`abstract method call`);\n            }\n            getMainResultGraphical() {\n              throw new Error(`abstract method call`);\n            }\n            getMainResultMemoryOptimizedFloats() {\n              throw new Error(`abstract method call`);\n            }\n            getMainResultPackedPixels() {\n              throw new Error(`abstract method call`);\n            }\n            getMainResultString() {\n              if (this.graphical) {\n                return this.getMainResultGraphical();\n              } else if (this.precision === 'single') {\n                if (this.optimizeFloatMemory) {\n                  return this.getMainResultMemoryOptimizedFloats();\n                }\n                return this.getMainResultTexture();\n              } else {\n                return this.getMainResultPackedPixels();\n              }\n            }\n            getMainResultNumberTexture() {\n              return utils.linesToString(this.getMainResultKernelNumberTexture()) + utils.linesToString(this.getMainResultSubKernelNumberTexture());\n            }\n            getMainResultArray2Texture() {\n              return utils.linesToString(this.getMainResultKernelArray2Texture()) + utils.linesToString(this.getMainResultSubKernelArray2Texture());\n            }\n            getMainResultArray3Texture() {\n              return utils.linesToString(this.getMainResultKernelArray3Texture()) + utils.linesToString(this.getMainResultSubKernelArray3Texture());\n            }\n            getMainResultArray4Texture() {\n              return utils.linesToString(this.getMainResultKernelArray4Texture()) + utils.linesToString(this.getMainResultSubKernelArray4Texture());\n            }\n            getFloatTacticDeclaration() {\n              const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n              return `precision ${variablePrecision} float;\\n`;\n            }\n            getIntTacticDeclaration() {\n              return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic, true)} int;\\n`;\n            }\n            getSampler2DTacticDeclaration() {\n              return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2D;\\n`;\n            }\n            getSampler2DArrayTacticDeclaration() {\n              return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2DArray;\\n`;\n            }\n            renderTexture() {\n              return this.immutable ? this.texture.clone() : this.texture;\n            }\n            readPackedPixelsToUint8Array() {\n              if (this.precision !== 'unsigned') throw new Error('Requires this.precision to be \"unsigned\"');\n              const {\n                texSize,\n                context: gl\n              } = this;\n              const result = new Uint8Array(texSize[0] * texSize[1] * 4);\n              gl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n              return result;\n            }\n            readPackedPixelsToFloat32Array() {\n              return new Float32Array(this.readPackedPixelsToUint8Array().buffer);\n            }\n            readFloatPixelsToFloat32Array() {\n              if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\n              const {\n                texSize,\n                context: gl\n              } = this;\n              const w = texSize[0];\n              const h = texSize[1];\n              const result = new Float32Array(w * h * 4);\n              gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n              return result;\n            }\n            getPixels(flip) {\n              const {\n                context: gl,\n                output\n              } = this;\n              const [width, height] = output;\n              const pixels = new Uint8Array(width * height * 4);\n              gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n              return new Uint8ClampedArray((flip ? pixels : utils.flipPixels(pixels, width, height)).buffer);\n            }\n            renderKernelsToArrays() {\n              const result = {\n                result: this.renderOutput()\n              };\n              for (let i = 0; i < this.subKernels.length; i++) {\n                result[this.subKernels[i].property] = this.mappedTextures[i].toArray();\n              }\n              return result;\n            }\n            renderKernelsToTextures() {\n              const result = {\n                result: this.renderOutput()\n              };\n              if (this.immutable) {\n                for (let i = 0; i < this.subKernels.length; i++) {\n                  result[this.subKernels[i].property] = this.mappedTextures[i].clone();\n                }\n              } else {\n                for (let i = 0; i < this.subKernels.length; i++) {\n                  result[this.subKernels[i].property] = this.mappedTextures[i];\n                }\n              }\n              return result;\n            }\n            resetSwitchingKernels() {\n              const existingValue = this.switchingKernels;\n              this.switchingKernels = null;\n              return existingValue;\n            }\n            setOutput(output) {\n              const newOutput = this.toKernelOutput(output);\n              if (this.program) {\n                if (!this.dynamicOutput) {\n                  throw new Error('Resizing a kernel with dynamicOutput: false is not possible');\n                }\n                const newThreadDim = [newOutput[0], newOutput[1] || 1, newOutput[2] || 1];\n                const newTexSize = utils.getKernelTextureSize({\n                  optimizeFloatMemory: this.optimizeFloatMemory,\n                  precision: this.precision\n                }, newThreadDim);\n                const oldTexSize = this.texSize;\n                if (oldTexSize) {\n                  const oldPrecision = this.getVariablePrecisionString(oldTexSize, this.tactic);\n                  const newPrecision = this.getVariablePrecisionString(newTexSize, this.tactic);\n                  if (oldPrecision !== newPrecision) {\n                    if (this.debug) {\n                      console.warn('Precision requirement changed, asking GPU instance to recompile');\n                    }\n                    this.switchKernels({\n                      type: 'outputPrecisionMismatch',\n                      precision: newPrecision,\n                      needed: output\n                    });\n                    return;\n                  }\n                }\n                this.output = newOutput;\n                this.threadDim = newThreadDim;\n                this.texSize = newTexSize;\n                const {\n                  context: gl\n                } = this;\n                gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n                this.updateMaxTexSize();\n                this.framebuffer.width = this.texSize[0];\n                this.framebuffer.height = this.texSize[1];\n                gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n                this.canvas.width = this.maxTexSize[0];\n                this.canvas.height = this.maxTexSize[1];\n                if (this.texture) {\n                  this.texture.delete();\n                }\n                this.texture = null;\n                this._setupOutputTexture();\n                if (this.mappedTextures && this.mappedTextures.length > 0) {\n                  for (let i = 0; i < this.mappedTextures.length; i++) {\n                    this.mappedTextures[i].delete();\n                  }\n                  this.mappedTextures = null;\n                  this._setupSubOutputTextures();\n                }\n              } else {\n                this.output = newOutput;\n              }\n              return this;\n            }\n            renderValues() {\n              return this.formatValues(this.transferValues(), this.output[0], this.output[1], this.output[2]);\n            }\n            switchKernels(reason) {\n              if (this.switchingKernels) {\n                this.switchingKernels.push(reason);\n              } else {\n                this.switchingKernels = [reason];\n              }\n            }\n            getVariablePrecisionString(textureSize = this.texSize, tactic = this.tactic, isInt = false) {\n              if (!tactic) {\n                if (!this.constructor.features.isSpeedTacticSupported) return 'highp';\n                const low = this.constructor.features[isInt ? 'lowIntPrecision' : 'lowFloatPrecision'];\n                const medium = this.constructor.features[isInt ? 'mediumIntPrecision' : 'mediumFloatPrecision'];\n                const high = this.constructor.features[isInt ? 'highIntPrecision' : 'highFloatPrecision'];\n                const requiredSize = Math.log2(textureSize[0] * textureSize[1]);\n                if (requiredSize <= low.rangeMax) {\n                  return 'lowp';\n                } else if (requiredSize <= medium.rangeMax) {\n                  return 'mediump';\n                } else if (requiredSize <= high.rangeMax) {\n                  return 'highp';\n                } else {\n                  throw new Error(`The required size exceeds that of the ability of your system`);\n                }\n              }\n              switch (tactic) {\n                case 'speed':\n                  return 'lowp';\n                case 'balanced':\n                  return 'mediump';\n                case 'precision':\n                  return 'highp';\n                default:\n                  throw new Error(`Unknown tactic \"${tactic}\" use \"speed\", \"balanced\", \"precision\", or empty for auto`);\n              }\n            }\n            updateTextureArgumentRefs(kernelValue, arg) {\n              if (!this.immutable) return;\n              if (this.texture.texture === arg.texture) {\n                const {\n                  prevArg\n                } = kernelValue;\n                if (prevArg) {\n                  if (prevArg.texture._refs === 1) {\n                    this.texture.delete();\n                    this.texture = prevArg.clone();\n                    this._textureSwitched = true;\n                  }\n                  prevArg.delete();\n                }\n                kernelValue.prevArg = arg.clone();\n              } else if (this.mappedTextures && this.mappedTextures.length > 0) {\n                const {\n                  mappedTextures\n                } = this;\n                for (let i = 0; i < mappedTextures.length; i++) {\n                  const mappedTexture = mappedTextures[i];\n                  if (mappedTexture.texture === arg.texture) {\n                    const {\n                      prevArg\n                    } = kernelValue;\n                    if (prevArg) {\n                      if (prevArg.texture._refs === 1) {\n                        mappedTexture.delete();\n                        mappedTextures[i] = prevArg.clone();\n                        this._mappedTextureSwitched[i] = true;\n                      }\n                      prevArg.delete();\n                    }\n                    kernelValue.prevArg = arg.clone();\n                    return;\n                  }\n                }\n              }\n            }\n            onActivate(previousKernel) {\n              this._textureSwitched = true;\n              this.texture = previousKernel.texture;\n              if (this.mappedTextures) {\n                for (let i = 0; i < this.mappedTextures.length; i++) {\n                  this._mappedTextureSwitched[i] = true;\n                }\n                this.mappedTextures = previousKernel.mappedTextures;\n              }\n            }\n            initCanvas() {}\n          }\n          const typeMap = {\n            int: 'Integer',\n            float: 'Number',\n            vec2: 'Array(2)',\n            vec3: 'Array(3)',\n            vec4: 'Array(4)'\n          };\n          module.exports = {\n            GLKernel\n          };\n        }, {\n          \"../../utils\": 114,\n          \"../kernel\": 36,\n          \"./texture/array-2-float\": 16,\n          \"./texture/array-2-float-2d\": 14,\n          \"./texture/array-2-float-3d\": 15,\n          \"./texture/array-3-float\": 19,\n          \"./texture/array-3-float-2d\": 17,\n          \"./texture/array-3-float-3d\": 18,\n          \"./texture/array-4-float\": 22,\n          \"./texture/array-4-float-2d\": 20,\n          \"./texture/array-4-float-3d\": 21,\n          \"./texture/float\": 25,\n          \"./texture/float-2d\": 23,\n          \"./texture/float-3d\": 24,\n          \"./texture/graphical\": 26,\n          \"./texture/memory-optimized\": 30,\n          \"./texture/memory-optimized-2d\": 28,\n          \"./texture/memory-optimized-3d\": 29,\n          \"./texture/unsigned\": 33,\n          \"./texture/unsigned-2d\": 31,\n          \"./texture/unsigned-3d\": 32\n        }],\n        14: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            GLTextureFloat\n          } = require('./float');\n          class GLTextureArray2Float2D extends GLTextureFloat {\n            constructor(settings) {\n              super(settings);\n              this.type = 'ArrayTexture(2)';\n            }\n            toArray() {\n              return utils.erect2DArray2(this.renderValues(), this.output[0], this.output[1]);\n            }\n          }\n          module.exports = {\n            GLTextureArray2Float2D\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./float\": 25\n        }],\n        15: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            GLTextureFloat\n          } = require('./float');\n          class GLTextureArray2Float3D extends GLTextureFloat {\n            constructor(settings) {\n              super(settings);\n              this.type = 'ArrayTexture(2)';\n            }\n            toArray() {\n              return utils.erect3DArray2(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n            }\n          }\n          module.exports = {\n            GLTextureArray2Float3D\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./float\": 25\n        }],\n        16: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            GLTextureFloat\n          } = require('./float');\n          class GLTextureArray2Float extends GLTextureFloat {\n            constructor(settings) {\n              super(settings);\n              this.type = 'ArrayTexture(2)';\n            }\n            toArray() {\n              return utils.erectArray2(this.renderValues(), this.output[0], this.output[1]);\n            }\n          }\n          module.exports = {\n            GLTextureArray2Float\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./float\": 25\n        }],\n        17: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            GLTextureFloat\n          } = require('./float');\n          class GLTextureArray3Float2D extends GLTextureFloat {\n            constructor(settings) {\n              super(settings);\n              this.type = 'ArrayTexture(3)';\n            }\n            toArray() {\n              return utils.erect2DArray3(this.renderValues(), this.output[0], this.output[1]);\n            }\n          }\n          module.exports = {\n            GLTextureArray3Float2D\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./float\": 25\n        }],\n        18: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            GLTextureFloat\n          } = require('./float');\n          class GLTextureArray3Float3D extends GLTextureFloat {\n            constructor(settings) {\n              super(settings);\n              this.type = 'ArrayTexture(3)';\n            }\n            toArray() {\n              return utils.erect3DArray3(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n            }\n          }\n          module.exports = {\n            GLTextureArray3Float3D\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./float\": 25\n        }],\n        19: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            GLTextureFloat\n          } = require('./float');\n          class GLTextureArray3Float extends GLTextureFloat {\n            constructor(settings) {\n              super(settings);\n              this.type = 'ArrayTexture(3)';\n            }\n            toArray() {\n              return utils.erectArray3(this.renderValues(), this.output[0]);\n            }\n          }\n          module.exports = {\n            GLTextureArray3Float\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./float\": 25\n        }],\n        20: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            GLTextureFloat\n          } = require('./float');\n          class GLTextureArray4Float2D extends GLTextureFloat {\n            constructor(settings) {\n              super(settings);\n              this.type = 'ArrayTexture(4)';\n            }\n            toArray() {\n              return utils.erect2DArray4(this.renderValues(), this.output[0], this.output[1]);\n            }\n          }\n          module.exports = {\n            GLTextureArray4Float2D\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./float\": 25\n        }],\n        21: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            GLTextureFloat\n          } = require('./float');\n          class GLTextureArray4Float3D extends GLTextureFloat {\n            constructor(settings) {\n              super(settings);\n              this.type = 'ArrayTexture(4)';\n            }\n            toArray() {\n              return utils.erect3DArray4(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n            }\n          }\n          module.exports = {\n            GLTextureArray4Float3D\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./float\": 25\n        }],\n        22: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            GLTextureFloat\n          } = require('./float');\n          class GLTextureArray4Float extends GLTextureFloat {\n            constructor(settings) {\n              super(settings);\n              this.type = 'ArrayTexture(4)';\n            }\n            toArray() {\n              return utils.erectArray4(this.renderValues(), this.output[0]);\n            }\n          }\n          module.exports = {\n            GLTextureArray4Float\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./float\": 25\n        }],\n        23: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            GLTextureFloat\n          } = require('./float');\n          class GLTextureFloat2D extends GLTextureFloat {\n            constructor(settings) {\n              super(settings);\n              this.type = 'ArrayTexture(1)';\n            }\n            toArray() {\n              return utils.erect2DFloat(this.renderValues(), this.output[0], this.output[1]);\n            }\n          }\n          module.exports = {\n            GLTextureFloat2D\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./float\": 25\n        }],\n        24: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            GLTextureFloat\n          } = require('./float');\n          class GLTextureFloat3D extends GLTextureFloat {\n            constructor(settings) {\n              super(settings);\n              this.type = 'ArrayTexture(1)';\n            }\n            toArray() {\n              return utils.erect3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n            }\n          }\n          module.exports = {\n            GLTextureFloat3D\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./float\": 25\n        }],\n        25: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            GLTexture\n          } = require('./index');\n          class GLTextureFloat extends GLTexture {\n            get textureType() {\n              return this.context.FLOAT;\n            }\n            constructor(settings) {\n              super(settings);\n              this.type = 'ArrayTexture(1)';\n            }\n            renderRawOutput() {\n              const gl = this.context;\n              const size = this.size;\n              gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n              gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);\n              const result = new Float32Array(size[0] * size[1] * 4);\n              gl.readPixels(0, 0, size[0], size[1], gl.RGBA, gl.FLOAT, result);\n              return result;\n            }\n            renderValues() {\n              if (this._deleted) return null;\n              return this.renderRawOutput();\n            }\n            toArray() {\n              return utils.erectFloat(this.renderValues(), this.output[0]);\n            }\n          }\n          module.exports = {\n            GLTextureFloat\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./index\": 27\n        }],\n        26: [function (require, module, exports) {\n          const {\n            GLTextureUnsigned\n          } = require('./unsigned');\n          class GLTextureGraphical extends GLTextureUnsigned {\n            constructor(settings) {\n              super(settings);\n              this.type = 'ArrayTexture(4)';\n            }\n            toArray() {\n              return this.renderValues();\n            }\n          }\n          module.exports = {\n            GLTextureGraphical\n          };\n        }, {\n          \"./unsigned\": 33\n        }],\n        27: [function (require, module, exports) {\n          const {\n            Texture\n          } = require('../../../texture');\n          class GLTexture extends Texture {\n            get textureType() {\n              throw new Error(`\"textureType\" not implemented on ${this.name}`);\n            }\n            clone() {\n              return new this.constructor(this);\n            }\n            beforeMutate() {\n              if (this.texture._refs > 1) {\n                this.newTexture();\n                return true;\n              }\n              return false;\n            }\n            cloneTexture() {\n              this.texture._refs--;\n              const {\n                context: gl,\n                size,\n                texture,\n                kernel\n              } = this;\n              if (kernel.debug) {\n                console.warn('cloning internal texture');\n              }\n              gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n              selectTexture(gl, texture);\n              gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n              const target = gl.createTexture();\n              selectTexture(gl, target);\n              gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n              gl.copyTexSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 0, 0, size[0], size[1]);\n              target._refs = 1;\n              this.texture = target;\n            }\n            newTexture() {\n              this.texture._refs--;\n              const gl = this.context;\n              const size = this.size;\n              const kernel = this.kernel;\n              if (kernel.debug) {\n                console.warn('new internal texture');\n              }\n              const target = gl.createTexture();\n              selectTexture(gl, target);\n              gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n              target._refs = 1;\n              this.texture = target;\n            }\n            clear() {\n              if (this.texture._refs) {\n                this.texture._refs--;\n                const gl = this.context;\n                const target = this.texture = gl.createTexture();\n                selectTexture(gl, target);\n                const size = this.size;\n                target._refs = 1;\n                gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n              }\n              const {\n                context: gl,\n                texture\n              } = this;\n              gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n              gl.bindTexture(gl.TEXTURE_2D, texture);\n              selectTexture(gl, texture);\n              gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n              gl.clearColor(0, 0, 0, 0);\n              gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n            }\n            delete() {\n              if (this._deleted) return;\n              this._deleted = true;\n              if (this.texture._refs) {\n                this.texture._refs--;\n                if (this.texture._refs) return;\n              }\n              this.context.deleteTexture(this.texture);\n            }\n            framebuffer() {\n              if (!this._framebuffer) {\n                this._framebuffer = this.kernel.getRawValueFramebuffer(this.size[0], this.size[1]);\n              }\n              return this._framebuffer;\n            }\n          }\n          function selectTexture(gl, texture) {\n            gl.activeTexture(gl.TEXTURE15);\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n          }\n          module.exports = {\n            GLTexture\n          };\n        }, {\n          \"../../../texture\": 113\n        }],\n        28: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            GLTextureFloat\n          } = require('./float');\n          class GLTextureMemoryOptimized2D extends GLTextureFloat {\n            constructor(settings) {\n              super(settings);\n              this.type = 'MemoryOptimizedNumberTexture';\n            }\n            toArray() {\n              return utils.erectMemoryOptimized2DFloat(this.renderValues(), this.output[0], this.output[1]);\n            }\n          }\n          module.exports = {\n            GLTextureMemoryOptimized2D\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./float\": 25\n        }],\n        29: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            GLTextureFloat\n          } = require('./float');\n          class GLTextureMemoryOptimized3D extends GLTextureFloat {\n            constructor(settings) {\n              super(settings);\n              this.type = 'MemoryOptimizedNumberTexture';\n            }\n            toArray() {\n              return utils.erectMemoryOptimized3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n            }\n          }\n          module.exports = {\n            GLTextureMemoryOptimized3D\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./float\": 25\n        }],\n        30: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            GLTextureFloat\n          } = require('./float');\n          class GLTextureMemoryOptimized extends GLTextureFloat {\n            constructor(settings) {\n              super(settings);\n              this.type = 'MemoryOptimizedNumberTexture';\n            }\n            toArray() {\n              return utils.erectMemoryOptimizedFloat(this.renderValues(), this.output[0]);\n            }\n          }\n          module.exports = {\n            GLTextureMemoryOptimized\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./float\": 25\n        }],\n        31: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            GLTextureUnsigned\n          } = require('./unsigned');\n          class GLTextureUnsigned2D extends GLTextureUnsigned {\n            constructor(settings) {\n              super(settings);\n              this.type = 'NumberTexture';\n            }\n            toArray() {\n              return utils.erect2DPackedFloat(this.renderValues(), this.output[0], this.output[1]);\n            }\n          }\n          module.exports = {\n            GLTextureUnsigned2D\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./unsigned\": 33\n        }],\n        32: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            GLTextureUnsigned\n          } = require('./unsigned');\n          class GLTextureUnsigned3D extends GLTextureUnsigned {\n            constructor(settings) {\n              super(settings);\n              this.type = 'NumberTexture';\n            }\n            toArray() {\n              return utils.erect3DPackedFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n            }\n          }\n          module.exports = {\n            GLTextureUnsigned3D\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./unsigned\": 33\n        }],\n        33: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            GLTexture\n          } = require('./index');\n          class GLTextureUnsigned extends GLTexture {\n            get textureType() {\n              return this.context.UNSIGNED_BYTE;\n            }\n            constructor(settings) {\n              super(settings);\n              this.type = 'NumberTexture';\n            }\n            renderRawOutput() {\n              const {\n                context: gl\n              } = this;\n              gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n              gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);\n              const result = new Uint8Array(this.size[0] * this.size[1] * 4);\n              gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n              return result;\n            }\n            renderValues() {\n              if (this._deleted) return null;\n              return new Float32Array(this.renderRawOutput().buffer);\n            }\n            toArray() {\n              return utils.erectPackedFloat(this.renderValues(), this.output[0]);\n            }\n          }\n          module.exports = {\n            GLTextureUnsigned\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./index\": 27\n        }],\n        34: [function (require, module, exports) {\n          const getContext = require('gl');\n          const {\n            WebGLKernel\n          } = require('../web-gl/kernel');\n          const {\n            glKernelString\n          } = require('../gl/kernel-string');\n          let isSupported = null;\n          let testCanvas = null;\n          let testContext = null;\n          let testExtensions = null;\n          let features = null;\n          class HeadlessGLKernel extends WebGLKernel {\n            static get isSupported() {\n              if (isSupported !== null) return isSupported;\n              this.setupFeatureChecks();\n              isSupported = testContext !== null;\n              return isSupported;\n            }\n            static setupFeatureChecks() {\n              testCanvas = null;\n              testExtensions = null;\n              if (typeof getContext !== 'function') return;\n              try {\n                testContext = getContext(2, 2, {\n                  preserveDrawingBuffer: true\n                });\n                if (!testContext || !testContext.getExtension) return;\n                testExtensions = {\n                  STACKGL_resize_drawingbuffer: testContext.getExtension('STACKGL_resize_drawingbuffer'),\n                  STACKGL_destroy_context: testContext.getExtension('STACKGL_destroy_context'),\n                  OES_texture_float: testContext.getExtension('OES_texture_float'),\n                  OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n                  OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n                  WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n                  WEBGL_color_buffer_float: testContext.getExtension('WEBGL_color_buffer_float')\n                };\n                features = this.getFeatures();\n              } catch (e) {\n                console.warn(e);\n              }\n            }\n            static isContextMatch(context) {\n              try {\n                return context.getParameter(context.RENDERER) === 'ANGLE';\n              } catch (e) {\n                return false;\n              }\n            }\n            static getIsTextureFloat() {\n              return Boolean(testExtensions.OES_texture_float);\n            }\n            static getIsDrawBuffers() {\n              return Boolean(testExtensions.WEBGL_draw_buffers);\n            }\n            static getChannelCount() {\n              return testExtensions.WEBGL_draw_buffers ? testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) : 1;\n            }\n            static getMaxTextureSize() {\n              return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n            }\n            static get testCanvas() {\n              return testCanvas;\n            }\n            static get testContext() {\n              return testContext;\n            }\n            static get features() {\n              return features;\n            }\n            initCanvas() {\n              return {};\n            }\n            initContext() {\n              return getContext(2, 2, {\n                preserveDrawingBuffer: true\n              });\n            }\n            initExtensions() {\n              this.extensions = {\n                STACKGL_resize_drawingbuffer: this.context.getExtension('STACKGL_resize_drawingbuffer'),\n                STACKGL_destroy_context: this.context.getExtension('STACKGL_destroy_context'),\n                OES_texture_float: this.context.getExtension('OES_texture_float'),\n                OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n                OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n                WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers')\n              };\n            }\n            build() {\n              super.build.apply(this, arguments);\n              if (!this.fallbackRequested) {\n                this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n              }\n            }\n            destroyExtensions() {\n              this.extensions.STACKGL_resize_drawingbuffer = null;\n              this.extensions.STACKGL_destroy_context = null;\n              this.extensions.OES_texture_float = null;\n              this.extensions.OES_texture_float_linear = null;\n              this.extensions.OES_element_index_uint = null;\n              this.extensions.WEBGL_draw_buffers = null;\n            }\n            static destroyContext(context) {\n              const extension = context.getExtension('STACKGL_destroy_context');\n              if (extension && extension.destroy) {\n                extension.destroy();\n              }\n            }\n            toString() {\n              const setupContextString = `const gl = context || require('gl')(1, 1);\\n`;\n              const destroyContextString = `    if (!context) { gl.getExtension('STACKGL_destroy_context').destroy(); }\\n`;\n              return glKernelString(this.constructor, arguments, this, setupContextString, destroyContextString);\n            }\n            setOutput(output) {\n              super.setOutput(output);\n              if (this.graphical && this.extensions.STACKGL_resize_drawingbuffer) {\n                this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n              }\n              return this;\n            }\n          }\n          module.exports = {\n            HeadlessGLKernel\n          };\n        }, {\n          \"../gl/kernel-string\": 12,\n          \"../web-gl/kernel\": 70,\n          \"gl\": 2\n        }],\n        35: [function (require, module, exports) {\n          class KernelValue {\n            constructor(value, settings) {\n              const {\n                name,\n                kernel,\n                context,\n                checkContext,\n                onRequestContextHandle,\n                onUpdateValueMismatch,\n                origin,\n                strictIntegers,\n                type,\n                tactic\n              } = settings;\n              if (!name) {\n                throw new Error('name not set');\n              }\n              if (!type) {\n                throw new Error('type not set');\n              }\n              if (!origin) {\n                throw new Error('origin not set');\n              }\n              if (origin !== 'user' && origin !== 'constants') {\n                throw new Error(`origin must be \"user\" or \"constants\" value is \"${origin}\"`);\n              }\n              if (!onRequestContextHandle) {\n                throw new Error('onRequestContextHandle is not set');\n              }\n              this.name = name;\n              this.origin = origin;\n              this.tactic = tactic;\n              this.varName = origin === 'constants' ? `constants.${name}` : name;\n              this.kernel = kernel;\n              this.strictIntegers = strictIntegers;\n              this.type = value.type || type;\n              this.size = value.size || null;\n              this.index = null;\n              this.context = context;\n              this.checkContext = checkContext !== null && checkContext !== undefined ? checkContext : true;\n              this.contextHandle = null;\n              this.onRequestContextHandle = onRequestContextHandle;\n              this.onUpdateValueMismatch = onUpdateValueMismatch;\n              this.forceUploadEachRun = null;\n            }\n            get id() {\n              return `${this.origin}_${name}`;\n            }\n            getSource() {\n              throw new Error(`\"getSource\" not defined on ${this.constructor.name}`);\n            }\n            updateValue(value) {\n              throw new Error(`\"updateValue\" not defined on ${this.constructor.name}`);\n            }\n          }\n          module.exports = {\n            KernelValue\n          };\n        }, {}],\n        36: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../utils');\n          const {\n            Input\n          } = require('../input');\n          class Kernel {\n            static get isSupported() {\n              throw new Error(`\"isSupported\" not implemented on ${this.name}`);\n            }\n            static isContextMatch(context) {\n              throw new Error(`\"isContextMatch\" not implemented on ${this.name}`);\n            }\n            static getFeatures() {\n              throw new Error(`\"getFeatures\" not implemented on ${this.name}`);\n            }\n            static destroyContext(context) {\n              throw new Error(`\"destroyContext\" called on ${this.name}`);\n            }\n            static nativeFunctionArguments() {\n              throw new Error(`\"nativeFunctionArguments\" called on ${this.name}`);\n            }\n            static nativeFunctionReturnType() {\n              throw new Error(`\"nativeFunctionReturnType\" called on ${this.name}`);\n            }\n            static combineKernels() {\n              throw new Error(`\"combineKernels\" called on ${this.name}`);\n            }\n            constructor(source, settings) {\n              if (typeof source !== 'object') {\n                if (typeof source !== 'string') {\n                  throw new Error('source not a string');\n                }\n                if (!utils.isFunctionString(source)) {\n                  throw new Error('source not a function string');\n                }\n              }\n              this.useLegacyEncoder = false;\n              this.fallbackRequested = false;\n              this.onRequestFallback = null;\n              this.argumentNames = typeof source === 'string' ? utils.getArgumentNamesFromString(source) : null;\n              this.argumentTypes = null;\n              this.argumentSizes = null;\n              this.argumentBitRatios = null;\n              this.kernelArguments = null;\n              this.kernelConstants = null;\n              this.forceUploadKernelConstants = null;\n              this.source = source;\n              this.output = null;\n              this.debug = false;\n              this.graphical = false;\n              this.loopMaxIterations = 0;\n              this.constants = null;\n              this.constantTypes = null;\n              this.constantBitRatios = null;\n              this.dynamicArguments = false;\n              this.dynamicOutput = false;\n              this.canvas = null;\n              this.context = null;\n              this.checkContext = null;\n              this.gpu = null;\n              this.functions = null;\n              this.nativeFunctions = null;\n              this.injectedNative = null;\n              this.subKernels = null;\n              this.validate = true;\n              this.immutable = false;\n              this.pipeline = false;\n              this.precision = null;\n              this.tactic = null;\n              this.plugins = null;\n              this.returnType = null;\n              this.leadingReturnStatement = null;\n              this.followingReturnStatement = null;\n              this.optimizeFloatMemory = null;\n              this.strictIntegers = false;\n              this.fixIntegerDivisionAccuracy = null;\n              this.built = false;\n              this.signature = null;\n            }\n            mergeSettings(settings) {\n              for (let p in settings) {\n                if (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\n                switch (p) {\n                  case 'output':\n                    if (!Array.isArray(settings.output)) {\n                      this.setOutput(settings.output);\n                      continue;\n                    }\n                    break;\n                  case 'functions':\n                    this.functions = [];\n                    for (let i = 0; i < settings.functions.length; i++) {\n                      this.addFunction(settings.functions[i]);\n                    }\n                    continue;\n                  case 'graphical':\n                    if (settings[p] && !settings.hasOwnProperty('precision')) {\n                      this.precision = 'unsigned';\n                    }\n                    this[p] = settings[p];\n                    continue;\n                  case 'nativeFunctions':\n                    if (!settings.nativeFunctions) continue;\n                    this.nativeFunctions = [];\n                    for (let i = 0; i < settings.nativeFunctions.length; i++) {\n                      const s = settings.nativeFunctions[i];\n                      const {\n                        name,\n                        source\n                      } = s;\n                      this.addNativeFunction(name, source, s);\n                    }\n                    continue;\n                }\n                this[p] = settings[p];\n              }\n              if (!this.canvas) this.canvas = this.initCanvas();\n              if (!this.context) this.context = this.initContext();\n              if (!this.plugins) this.plugins = this.initPlugins(settings);\n            }\n            build() {\n              throw new Error(`\"build\" not defined on ${this.constructor.name}`);\n            }\n            run() {\n              throw new Error(`\"run\" not defined on ${this.constructor.name}`);\n            }\n            initCanvas() {\n              throw new Error(`\"initCanvas\" not defined on ${this.constructor.name}`);\n            }\n            initContext() {\n              throw new Error(`\"initContext\" not defined on ${this.constructor.name}`);\n            }\n            initPlugins(settings) {\n              throw new Error(`\"initPlugins\" not defined on ${this.constructor.name}`);\n            }\n            addFunction(source, settings = {}) {\n              if (source.name && source.source && source.argumentTypes && 'returnType' in source) {\n                this.functions.push(source);\n              } else if ('settings' in source && 'source' in source) {\n                this.functions.push(this.functionToIGPUFunction(source.source, source.settings));\n              } else if (typeof source === 'string' || typeof source === 'function') {\n                this.functions.push(this.functionToIGPUFunction(source, settings));\n              } else {\n                throw new Error(`function not properly defined`);\n              }\n              return this;\n            }\n            addNativeFunction(name, source, settings = {}) {\n              const {\n                argumentTypes,\n                argumentNames\n              } = settings.argumentTypes ? splitArgumentTypes(settings.argumentTypes) : this.constructor.nativeFunctionArguments(source) || {};\n              this.nativeFunctions.push({\n                name,\n                source,\n                settings,\n                argumentTypes,\n                argumentNames,\n                returnType: settings.returnType || this.constructor.nativeFunctionReturnType(source)\n              });\n              return this;\n            }\n            setupArguments(args) {\n              this.kernelArguments = [];\n              if (!this.argumentTypes) {\n                if (!this.argumentTypes) {\n                  this.argumentTypes = [];\n                  for (let i = 0; i < args.length; i++) {\n                    const argType = utils.getVariableType(args[i], this.strictIntegers);\n                    const type = argType === 'Integer' ? 'Number' : argType;\n                    this.argumentTypes.push(type);\n                    this.kernelArguments.push({\n                      type\n                    });\n                  }\n                }\n              } else {\n                for (let i = 0; i < this.argumentTypes.length; i++) {\n                  this.kernelArguments.push({\n                    type: this.argumentTypes[i]\n                  });\n                }\n              }\n              this.argumentSizes = new Array(args.length);\n              this.argumentBitRatios = new Int32Array(args.length);\n              for (let i = 0; i < args.length; i++) {\n                const arg = args[i];\n                this.argumentSizes[i] = arg.constructor === Input ? arg.size : null;\n                this.argumentBitRatios[i] = this.getBitRatio(arg);\n              }\n              if (this.argumentNames.length !== args.length) {\n                throw new Error(`arguments are miss-aligned`);\n              }\n            }\n            setupConstants() {\n              this.kernelConstants = [];\n              let needsConstantTypes = this.constantTypes === null;\n              if (needsConstantTypes) {\n                this.constantTypes = {};\n              }\n              this.constantBitRatios = {};\n              if (this.constants) {\n                for (let name in this.constants) {\n                  if (needsConstantTypes) {\n                    const type = utils.getVariableType(this.constants[name], this.strictIntegers);\n                    this.constantTypes[name] = type;\n                    this.kernelConstants.push({\n                      name,\n                      type\n                    });\n                  } else {\n                    this.kernelConstants.push({\n                      name,\n                      type: this.constantTypes[name]\n                    });\n                  }\n                  this.constantBitRatios[name] = this.getBitRatio(this.constants[name]);\n                }\n              }\n            }\n            setOptimizeFloatMemory(flag) {\n              this.optimizeFloatMemory = flag;\n              return this;\n            }\n            toKernelOutput(output) {\n              if (output.hasOwnProperty('x')) {\n                if (output.hasOwnProperty('y')) {\n                  if (output.hasOwnProperty('z')) {\n                    return [output.x, output.y, output.z];\n                  } else {\n                    return [output.x, output.y];\n                  }\n                } else {\n                  return [output.x];\n                }\n              } else {\n                return output;\n              }\n            }\n            setOutput(output) {\n              this.output = this.toKernelOutput(output);\n              return this;\n            }\n            setDebug(flag) {\n              this.debug = flag;\n              return this;\n            }\n            setGraphical(flag) {\n              this.graphical = flag;\n              this.precision = 'unsigned';\n              return this;\n            }\n            setLoopMaxIterations(max) {\n              this.loopMaxIterations = max;\n              return this;\n            }\n            setConstants(constants) {\n              this.constants = constants;\n              return this;\n            }\n            setConstantTypes(constantTypes) {\n              this.constantTypes = constantTypes;\n              return this;\n            }\n            setFunctions(functions) {\n              for (let i = 0; i < functions.length; i++) {\n                this.addFunction(functions[i]);\n              }\n              return this;\n            }\n            setNativeFunctions(nativeFunctions) {\n              for (let i = 0; i < nativeFunctions.length; i++) {\n                const settings = nativeFunctions[i];\n                const {\n                  name,\n                  source\n                } = settings;\n                this.addNativeFunction(name, source, settings);\n              }\n              return this;\n            }\n            setInjectedNative(injectedNative) {\n              this.injectedNative = injectedNative;\n              return this;\n            }\n            setPipeline(flag) {\n              this.pipeline = flag;\n              return this;\n            }\n            setPrecision(flag) {\n              this.precision = flag;\n              return this;\n            }\n            setDimensions(flag) {\n              utils.warnDeprecated('method', 'setDimensions', 'setOutput');\n              this.output = flag;\n              return this;\n            }\n            setOutputToTexture(flag) {\n              utils.warnDeprecated('method', 'setOutputToTexture', 'setPipeline');\n              this.pipeline = flag;\n              return this;\n            }\n            setImmutable(flag) {\n              this.immutable = flag;\n              return this;\n            }\n            setCanvas(canvas) {\n              this.canvas = canvas;\n              return this;\n            }\n            setStrictIntegers(flag) {\n              this.strictIntegers = flag;\n              return this;\n            }\n            setDynamicOutput(flag) {\n              this.dynamicOutput = flag;\n              return this;\n            }\n            setHardcodeConstants(flag) {\n              utils.warnDeprecated('method', 'setHardcodeConstants');\n              this.setDynamicOutput(flag);\n              this.setDynamicArguments(flag);\n              return this;\n            }\n            setDynamicArguments(flag) {\n              this.dynamicArguments = flag;\n              return this;\n            }\n            setUseLegacyEncoder(flag) {\n              this.useLegacyEncoder = flag;\n              return this;\n            }\n            setWarnVarUsage(flag) {\n              utils.warnDeprecated('method', 'setWarnVarUsage');\n              return this;\n            }\n            getCanvas() {\n              utils.warnDeprecated('method', 'getCanvas');\n              return this.canvas;\n            }\n            getWebGl() {\n              utils.warnDeprecated('method', 'getWebGl');\n              return this.context;\n            }\n            setContext(context) {\n              this.context = context;\n              return this;\n            }\n            setArgumentTypes(argumentTypes) {\n              if (Array.isArray(argumentTypes)) {\n                this.argumentTypes = argumentTypes;\n              } else {\n                this.argumentTypes = [];\n                for (const p in argumentTypes) {\n                  if (!argumentTypes.hasOwnProperty(p)) continue;\n                  const argumentIndex = this.argumentNames.indexOf(p);\n                  if (argumentIndex === -1) throw new Error(`unable to find argument ${p}`);\n                  this.argumentTypes[argumentIndex] = argumentTypes[p];\n                }\n              }\n              return this;\n            }\n            setTactic(tactic) {\n              this.tactic = tactic;\n              return this;\n            }\n            requestFallback(args) {\n              if (!this.onRequestFallback) {\n                throw new Error(`\"onRequestFallback\" not defined on ${this.constructor.name}`);\n              }\n              this.fallbackRequested = true;\n              return this.onRequestFallback(args);\n            }\n            validateSettings() {\n              throw new Error(`\"validateSettings\" not defined on ${this.constructor.name}`);\n            }\n            addSubKernel(subKernel) {\n              if (this.subKernels === null) {\n                this.subKernels = [];\n              }\n              if (!subKernel.source) throw new Error('subKernel missing \"source\" property');\n              if (!subKernel.property && isNaN(subKernel.property)) throw new Error('subKernel missing \"property\" property');\n              if (!subKernel.name) throw new Error('subKernel missing \"name\" property');\n              this.subKernels.push(subKernel);\n              return this;\n            }\n            destroy(removeCanvasReferences) {\n              throw new Error(`\"destroy\" called on ${this.constructor.name}`);\n            }\n            getBitRatio(value) {\n              if (this.precision === 'single') {\n                return 4;\n              } else if (Array.isArray(value[0])) {\n                return this.getBitRatio(value[0]);\n              } else if (value.constructor === Input) {\n                return this.getBitRatio(value.value);\n              }\n              switch (value.constructor) {\n                case Uint8ClampedArray:\n                case Uint8Array:\n                case Int8Array:\n                  return 1;\n                case Uint16Array:\n                case Int16Array:\n                  return 2;\n                case Float32Array:\n                case Int32Array:\n                default:\n                  return 4;\n              }\n            }\n            getPixels(flip) {\n              throw new Error(`\"getPixels\" called on ${this.constructor.name}`);\n            }\n            checkOutput() {\n              if (!this.output || !utils.isArray(this.output)) throw new Error('kernel.output not an array');\n              if (this.output.length < 1) throw new Error('kernel.output is empty, needs at least 1 value');\n              for (let i = 0; i < this.output.length; i++) {\n                if (isNaN(this.output[i]) || this.output[i] < 1) {\n                  throw new Error(`${this.constructor.name}.output[${i}] incorrectly defined as \\`${this.output[i]}\\`, needs to be numeric, and greater than 0`);\n                }\n              }\n            }\n            prependString(value) {\n              throw new Error(`\"prependString\" called on ${this.constructor.name}`);\n            }\n            hasPrependString(value) {\n              throw new Error(`\"hasPrependString\" called on ${this.constructor.name}`);\n            }\n            toJSON() {\n              return {\n                settings: {\n                  output: this.output,\n                  pipeline: this.pipeline,\n                  argumentNames: this.argumentNames,\n                  argumentsTypes: this.argumentTypes,\n                  constants: this.constants,\n                  pluginNames: this.plugins ? this.plugins.map(plugin => plugin.name) : null,\n                  returnType: this.returnType\n                }\n              };\n            }\n            buildSignature(args) {\n              const Constructor = this.constructor;\n              this.signature = Constructor.getSignature(this, Constructor.getArgumentTypes(this, args));\n            }\n            static getArgumentTypes(kernel, args) {\n              const argumentTypes = new Array(args.length);\n              for (let i = 0; i < args.length; i++) {\n                const arg = args[i];\n                const type = kernel.argumentTypes[i];\n                if (arg.type) {\n                  argumentTypes[i] = arg.type;\n                } else {\n                  switch (type) {\n                    case 'Number':\n                    case 'Integer':\n                    case 'Float':\n                    case 'ArrayTexture(1)':\n                      argumentTypes[i] = utils.getVariableType(arg);\n                      break;\n                    default:\n                      argumentTypes[i] = type;\n                  }\n                }\n              }\n              return argumentTypes;\n            }\n            static getSignature(kernel, argumentTypes) {\n              throw new Error(`\"getSignature\" not implemented on ${this.name}`);\n            }\n            functionToIGPUFunction(source, settings = {}) {\n              if (typeof source !== 'string' && typeof source !== 'function') throw new Error('source not a string or function');\n              const sourceString = typeof source === 'string' ? source : source.toString();\n              let argumentTypes = [];\n              if (Array.isArray(settings.argumentTypes)) {\n                argumentTypes = settings.argumentTypes;\n              } else if (typeof settings.argumentTypes === 'object') {\n                argumentTypes = utils.getArgumentNamesFromString(sourceString).map(name => settings.argumentTypes[name]) || [];\n              } else {\n                argumentTypes = settings.argumentTypes || [];\n              }\n              return {\n                name: utils.getFunctionNameFromString(sourceString) || null,\n                source: sourceString,\n                argumentTypes,\n                returnType: settings.returnType || null\n              };\n            }\n            onActivate(previousKernel) {}\n          }\n          function splitArgumentTypes(argumentTypesObject) {\n            const argumentNames = Object.keys(argumentTypesObject);\n            const argumentTypes = [];\n            for (let i = 0; i < argumentNames.length; i++) {\n              const argumentName = argumentNames[i];\n              argumentTypes.push(argumentTypesObject[argumentName]);\n            }\n            return {\n              argumentTypes,\n              argumentNames\n            };\n          }\n          module.exports = {\n            Kernel\n          };\n        }, {\n          \"../input\": 110,\n          \"../utils\": 114\n        }],\n        37: [function (require, module, exports) {\n          const fragmentShader = `__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nvarying vec2 vTexCoord;\n\nfloat acosh(float x) {\n  return log(x + sqrt(x * x - 1.0));\n}\n\nfloat sinh(float x) {\n  return (pow(${Math.E}, x) - pow(${Math.E}, -x)) / 2.0;\n}\n\nfloat asinh(float x) {\n  return log(x + sqrt(x * x + 1.0));\n}\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat atanh(float x) {\n  x = (x + 1.0) / (x - 1.0);\n  if (x < 0.0) {\n    return 0.5 * log(-x);\n  }\n  return 0.5 * log(x);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat cosh(float x) {\n  return (pow(${Math.E}, x) + pow(${Math.E}, -x)) / 2.0; \n}\n\nfloat expm1(float x) {\n  return pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat tanh(float x) {\n  float e = exp(2.0 * x);\n  return (e - 1.0) / (e + 1.0);\n}\n\nfloat trunc(float x) {\n  if (x >= 0.0) {\n    return floor(x); \n  } else {\n    return ceil(x);\n  }\n}\n\nvec4 _round(vec4 x) {\n  return floor(x + 0.5);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x / y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(_round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(_round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;\n  if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;\n  return 0.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  if (channel == 0) return texel.r * 255.0;\n  if (channel == 1) return texel.g * 255.0;\n  if (channel == 2) return texel.b * 255.0;\n  if (channel == 3) return texel.a * 255.0;\n  return 0.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return texel.r;\n  if (channel == 1) return texel.g;\n  if (channel == 2) return texel.b;\n  if (channel == 3) return texel.a;\n  return 0.0;\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture2D(tex, st / vec2(texSize));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n  \n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nvoid color(sampler2D image) {\n  actualColor = texture2D(image, vTexCoord);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n          module.exports = {\n            fragmentShader\n          };\n        }, {}],\n        38: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../utils');\n          const {\n            FunctionNode\n          } = require('../function-node');\n          class WebGLFunctionNode extends FunctionNode {\n            constructor(source, settings) {\n              super(source, settings);\n              if (settings && settings.hasOwnProperty('fixIntegerDivisionAccuracy')) {\n                this.fixIntegerDivisionAccuracy = settings.fixIntegerDivisionAccuracy;\n              }\n            }\n            astConditionalExpression(ast, retArr) {\n              if (ast.type !== 'ConditionalExpression') {\n                throw this.astErrorOutput('Not a conditional expression', ast);\n              }\n              const consequentType = this.getType(ast.consequent);\n              const alternateType = this.getType(ast.alternate);\n              if (consequentType === null && alternateType === null) {\n                retArr.push('if (');\n                this.astGeneric(ast.test, retArr);\n                retArr.push(') {');\n                this.astGeneric(ast.consequent, retArr);\n                retArr.push(';');\n                retArr.push('} else {');\n                this.astGeneric(ast.alternate, retArr);\n                retArr.push(';');\n                retArr.push('}');\n                return retArr;\n              }\n              retArr.push('(');\n              this.astGeneric(ast.test, retArr);\n              retArr.push('?');\n              this.astGeneric(ast.consequent, retArr);\n              retArr.push(':');\n              this.astGeneric(ast.alternate, retArr);\n              retArr.push(')');\n              return retArr;\n            }\n            astFunction(ast, retArr) {\n              if (this.isRootKernel) {\n                retArr.push('void');\n              } else {\n                if (!this.returnType) {\n                  const lastReturn = this.findLastReturn();\n                  if (lastReturn) {\n                    this.returnType = this.getType(ast.body);\n                    if (this.returnType === 'LiteralInteger') {\n                      this.returnType = 'Number';\n                    }\n                  }\n                }\n                const {\n                  returnType\n                } = this;\n                if (!returnType) {\n                  retArr.push('void');\n                } else {\n                  const type = typeMap[returnType];\n                  if (!type) {\n                    throw new Error(`unknown type ${returnType}`);\n                  }\n                  retArr.push(type);\n                }\n              }\n              retArr.push(' ');\n              retArr.push(this.name);\n              retArr.push('(');\n              if (!this.isRootKernel) {\n                for (let i = 0; i < this.argumentNames.length; ++i) {\n                  const argumentName = this.argumentNames[i];\n                  if (i > 0) {\n                    retArr.push(', ');\n                  }\n                  let argumentType = this.argumentTypes[this.argumentNames.indexOf(argumentName)];\n                  if (!argumentType) {\n                    throw this.astErrorOutput(`Unknown argument ${argumentName} type`, ast);\n                  }\n                  if (argumentType === 'LiteralInteger') {\n                    this.argumentTypes[i] = argumentType = 'Number';\n                  }\n                  const type = typeMap[argumentType];\n                  if (!type) {\n                    throw this.astErrorOutput('Unexpected expression', ast);\n                  }\n                  const name = utils.sanitizeName(argumentName);\n                  if (type === 'sampler2D' || type === 'sampler2DArray') {\n                    retArr.push(`${type} user_${name},ivec2 user_${name}Size,ivec3 user_${name}Dim`);\n                  } else {\n                    retArr.push(`${type} user_${name}`);\n                  }\n                }\n              }\n              retArr.push(') {\\n');\n              for (let i = 0; i < ast.body.body.length; ++i) {\n                this.astGeneric(ast.body.body[i], retArr);\n                retArr.push('\\n');\n              }\n              retArr.push('}\\n');\n              return retArr;\n            }\n            astReturnStatement(ast, retArr) {\n              if (!ast.argument) throw this.astErrorOutput('Unexpected return statement', ast);\n              this.pushState('skip-literal-correction');\n              const type = this.getType(ast.argument);\n              this.popState('skip-literal-correction');\n              const result = [];\n              if (!this.returnType) {\n                if (type === 'LiteralInteger' || type === 'Integer') {\n                  this.returnType = 'Number';\n                } else {\n                  this.returnType = type;\n                }\n              }\n              switch (this.returnType) {\n                case 'LiteralInteger':\n                case 'Number':\n                case 'Float':\n                  switch (type) {\n                    case 'Integer':\n                      result.push('float(');\n                      this.astGeneric(ast.argument, result);\n                      result.push(')');\n                      break;\n                    case 'LiteralInteger':\n                      this.castLiteralToFloat(ast.argument, result);\n                      if (this.getType(ast) === 'Integer') {\n                        result.unshift('float(');\n                        result.push(')');\n                      }\n                      break;\n                    default:\n                      this.astGeneric(ast.argument, result);\n                  }\n                  break;\n                case 'Integer':\n                  switch (type) {\n                    case 'Float':\n                    case 'Number':\n                      this.castValueToInteger(ast.argument, result);\n                      break;\n                    case 'LiteralInteger':\n                      this.castLiteralToInteger(ast.argument, result);\n                      break;\n                    default:\n                      this.astGeneric(ast.argument, result);\n                  }\n                  break;\n                case 'Array(4)':\n                case 'Array(3)':\n                case 'Array(2)':\n                case 'Matrix(2)':\n                case 'Matrix(3)':\n                case 'Matrix(4)':\n                case 'Input':\n                  this.astGeneric(ast.argument, result);\n                  break;\n                default:\n                  throw this.astErrorOutput(`unhandled return type ${this.returnType}`, ast);\n              }\n              if (this.isRootKernel) {\n                retArr.push(`kernelResult = ${result.join('')};`);\n                retArr.push('return;');\n              } else if (this.isSubKernel) {\n                retArr.push(`subKernelResult_${this.name} = ${result.join('')};`);\n                retArr.push(`return subKernelResult_${this.name};`);\n              } else {\n                retArr.push(`return ${result.join('')};`);\n              }\n              return retArr;\n            }\n            astLiteral(ast, retArr) {\n              if (isNaN(ast.value)) {\n                throw this.astErrorOutput('Non-numeric literal not supported : ' + ast.value, ast);\n              }\n              const key = this.astKey(ast);\n              if (Number.isInteger(ast.value)) {\n                if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n                  this.literalTypes[key] = 'Integer';\n                  retArr.push(`${ast.value}`);\n                } else if (this.isState('casting-to-float') || this.isState('building-float')) {\n                  this.literalTypes[key] = 'Number';\n                  retArr.push(`${ast.value}.0`);\n                } else {\n                  this.literalTypes[key] = 'Number';\n                  retArr.push(`${ast.value}.0`);\n                }\n              } else if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n                this.literalTypes[key] = 'Integer';\n                retArr.push(Math.round(ast.value));\n              } else {\n                this.literalTypes[key] = 'Number';\n                retArr.push(`${ast.value}`);\n              }\n              return retArr;\n            }\n            astBinaryExpression(ast, retArr) {\n              if (this.checkAndUpconvertOperator(ast, retArr)) {\n                return retArr;\n              }\n              if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {\n                retArr.push('divWithIntCheck(');\n                this.pushState('building-float');\n                switch (this.getType(ast.left)) {\n                  case 'Integer':\n                    this.castValueToFloat(ast.left, retArr);\n                    break;\n                  case 'LiteralInteger':\n                    this.castLiteralToFloat(ast.left, retArr);\n                    break;\n                  default:\n                    this.astGeneric(ast.left, retArr);\n                }\n                retArr.push(', ');\n                switch (this.getType(ast.right)) {\n                  case 'Integer':\n                    this.castValueToFloat(ast.right, retArr);\n                    break;\n                  case 'LiteralInteger':\n                    this.castLiteralToFloat(ast.right, retArr);\n                    break;\n                  default:\n                    this.astGeneric(ast.right, retArr);\n                }\n                this.popState('building-float');\n                retArr.push(')');\n                return retArr;\n              }\n              retArr.push('(');\n              const leftType = this.getType(ast.left) || 'Number';\n              const rightType = this.getType(ast.right) || 'Number';\n              if (!leftType || !rightType) {\n                throw this.astErrorOutput(`Unhandled binary expression`, ast);\n              }\n              const key = leftType + ' & ' + rightType;\n              switch (key) {\n                case 'Integer & Integer':\n                  this.pushState('building-integer');\n                  this.astGeneric(ast.left, retArr);\n                  retArr.push(operatorMap[ast.operator] || ast.operator);\n                  this.astGeneric(ast.right, retArr);\n                  this.popState('building-integer');\n                  break;\n                case 'Number & Float':\n                case 'Float & Number':\n                case 'Float & Float':\n                case 'Number & Number':\n                  this.pushState('building-float');\n                  this.astGeneric(ast.left, retArr);\n                  retArr.push(operatorMap[ast.operator] || ast.operator);\n                  this.astGeneric(ast.right, retArr);\n                  this.popState('building-float');\n                  break;\n                case 'LiteralInteger & LiteralInteger':\n                  if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n                    this.pushState('building-integer');\n                    this.astGeneric(ast.left, retArr);\n                    retArr.push(operatorMap[ast.operator] || ast.operator);\n                    this.astGeneric(ast.right, retArr);\n                    this.popState('building-integer');\n                  } else {\n                    this.pushState('building-float');\n                    this.castLiteralToFloat(ast.left, retArr);\n                    retArr.push(operatorMap[ast.operator] || ast.operator);\n                    this.castLiteralToFloat(ast.right, retArr);\n                    this.popState('building-float');\n                  }\n                  break;\n                case 'Integer & Float':\n                case 'Integer & Number':\n                  if (ast.operator === '>' || ast.operator === '<' && ast.right.type === 'Literal') {\n                    if (!Number.isInteger(ast.right.value)) {\n                      this.pushState('building-float');\n                      this.castValueToFloat(ast.left, retArr);\n                      retArr.push(operatorMap[ast.operator] || ast.operator);\n                      this.astGeneric(ast.right, retArr);\n                      this.popState('building-float');\n                      break;\n                    }\n                  }\n                  this.pushState('building-integer');\n                  this.astGeneric(ast.left, retArr);\n                  retArr.push(operatorMap[ast.operator] || ast.operator);\n                  this.pushState('casting-to-integer');\n                  if (ast.right.type === 'Literal') {\n                    const literalResult = [];\n                    this.astGeneric(ast.right, literalResult);\n                    const literalType = this.getType(ast.right);\n                    if (literalType === 'Integer') {\n                      retArr.push(literalResult.join(''));\n                    } else {\n                      throw this.astErrorOutput(`Unhandled binary expression with literal`, ast);\n                    }\n                  } else {\n                    retArr.push('int(');\n                    this.astGeneric(ast.right, retArr);\n                    retArr.push(')');\n                  }\n                  this.popState('casting-to-integer');\n                  this.popState('building-integer');\n                  break;\n                case 'Integer & LiteralInteger':\n                  this.pushState('building-integer');\n                  this.astGeneric(ast.left, retArr);\n                  retArr.push(operatorMap[ast.operator] || ast.operator);\n                  this.castLiteralToInteger(ast.right, retArr);\n                  this.popState('building-integer');\n                  break;\n                case 'Number & Integer':\n                  this.pushState('building-float');\n                  this.astGeneric(ast.left, retArr);\n                  retArr.push(operatorMap[ast.operator] || ast.operator);\n                  this.castValueToFloat(ast.right, retArr);\n                  this.popState('building-float');\n                  break;\n                case 'Float & LiteralInteger':\n                case 'Number & LiteralInteger':\n                  this.pushState('building-float');\n                  this.astGeneric(ast.left, retArr);\n                  retArr.push(operatorMap[ast.operator] || ast.operator);\n                  this.castLiteralToFloat(ast.right, retArr);\n                  this.popState('building-float');\n                  break;\n                case 'LiteralInteger & Float':\n                case 'LiteralInteger & Number':\n                  if (this.isState('casting-to-integer')) {\n                    this.pushState('building-integer');\n                    this.castLiteralToInteger(ast.left, retArr);\n                    retArr.push(operatorMap[ast.operator] || ast.operator);\n                    this.castValueToInteger(ast.right, retArr);\n                    this.popState('building-integer');\n                  } else {\n                    this.pushState('building-float');\n                    this.astGeneric(ast.left, retArr);\n                    retArr.push(operatorMap[ast.operator] || ast.operator);\n                    this.pushState('casting-to-float');\n                    this.astGeneric(ast.right, retArr);\n                    this.popState('casting-to-float');\n                    this.popState('building-float');\n                  }\n                  break;\n                case 'LiteralInteger & Integer':\n                  this.pushState('building-integer');\n                  this.castLiteralToInteger(ast.left, retArr);\n                  retArr.push(operatorMap[ast.operator] || ast.operator);\n                  this.astGeneric(ast.right, retArr);\n                  this.popState('building-integer');\n                  break;\n                case 'Boolean & Boolean':\n                  this.pushState('building-boolean');\n                  this.astGeneric(ast.left, retArr);\n                  retArr.push(operatorMap[ast.operator] || ast.operator);\n                  this.astGeneric(ast.right, retArr);\n                  this.popState('building-boolean');\n                  break;\n                case 'Float & Integer':\n                  this.pushState('building-float');\n                  this.astGeneric(ast.left, retArr);\n                  retArr.push(operatorMap[ast.operator] || ast.operator);\n                  this.castValueToFloat(ast.right, retArr);\n                  this.popState('building-float');\n                  break;\n                default:\n                  throw this.astErrorOutput(`Unhandled binary expression between ${key}`, ast);\n              }\n              retArr.push(')');\n              return retArr;\n            }\n            checkAndUpconvertOperator(ast, retArr) {\n              const bitwiseResult = this.checkAndUpconvertBitwiseOperators(ast, retArr);\n              if (bitwiseResult) {\n                return bitwiseResult;\n              }\n              const upconvertableOperators = {\n                '%': this.fixIntegerDivisionAccuracy ? 'integerCorrectionModulo' : 'modulo',\n                '**': 'pow'\n              };\n              const foundOperator = upconvertableOperators[ast.operator];\n              if (!foundOperator) return null;\n              retArr.push(foundOperator);\n              retArr.push('(');\n              switch (this.getType(ast.left)) {\n                case 'Integer':\n                  this.castValueToFloat(ast.left, retArr);\n                  break;\n                case 'LiteralInteger':\n                  this.castLiteralToFloat(ast.left, retArr);\n                  break;\n                default:\n                  this.astGeneric(ast.left, retArr);\n              }\n              retArr.push(',');\n              switch (this.getType(ast.right)) {\n                case 'Integer':\n                  this.castValueToFloat(ast.right, retArr);\n                  break;\n                case 'LiteralInteger':\n                  this.castLiteralToFloat(ast.right, retArr);\n                  break;\n                default:\n                  this.astGeneric(ast.right, retArr);\n              }\n              retArr.push(')');\n              return retArr;\n            }\n            checkAndUpconvertBitwiseOperators(ast, retArr) {\n              const upconvertableOperators = {\n                '&': 'bitwiseAnd',\n                '|': 'bitwiseOr',\n                '^': 'bitwiseXOR',\n                '<<': 'bitwiseZeroFillLeftShift',\n                '>>': 'bitwiseSignedRightShift',\n                '>>>': 'bitwiseZeroFillRightShift'\n              };\n              const foundOperator = upconvertableOperators[ast.operator];\n              if (!foundOperator) return null;\n              retArr.push(foundOperator);\n              retArr.push('(');\n              const leftType = this.getType(ast.left);\n              switch (leftType) {\n                case 'Number':\n                case 'Float':\n                  this.castValueToInteger(ast.left, retArr);\n                  break;\n                case 'LiteralInteger':\n                  this.castLiteralToInteger(ast.left, retArr);\n                  break;\n                default:\n                  this.astGeneric(ast.left, retArr);\n              }\n              retArr.push(',');\n              const rightType = this.getType(ast.right);\n              switch (rightType) {\n                case 'Number':\n                case 'Float':\n                  this.castValueToInteger(ast.right, retArr);\n                  break;\n                case 'LiteralInteger':\n                  this.castLiteralToInteger(ast.right, retArr);\n                  break;\n                default:\n                  this.astGeneric(ast.right, retArr);\n              }\n              retArr.push(')');\n              return retArr;\n            }\n            checkAndUpconvertBitwiseUnary(ast, retArr) {\n              const upconvertableOperators = {\n                '~': 'bitwiseNot'\n              };\n              const foundOperator = upconvertableOperators[ast.operator];\n              if (!foundOperator) return null;\n              retArr.push(foundOperator);\n              retArr.push('(');\n              switch (this.getType(ast.argument)) {\n                case 'Number':\n                case 'Float':\n                  this.castValueToInteger(ast.argument, retArr);\n                  break;\n                case 'LiteralInteger':\n                  this.castLiteralToInteger(ast.argument, retArr);\n                  break;\n                default:\n                  this.astGeneric(ast.argument, retArr);\n              }\n              retArr.push(')');\n              return retArr;\n            }\n            castLiteralToInteger(ast, retArr) {\n              this.pushState('casting-to-integer');\n              this.astGeneric(ast, retArr);\n              this.popState('casting-to-integer');\n              return retArr;\n            }\n            castLiteralToFloat(ast, retArr) {\n              this.pushState('casting-to-float');\n              this.astGeneric(ast, retArr);\n              this.popState('casting-to-float');\n              return retArr;\n            }\n            castValueToInteger(ast, retArr) {\n              this.pushState('casting-to-integer');\n              retArr.push('int(');\n              this.astGeneric(ast, retArr);\n              retArr.push(')');\n              this.popState('casting-to-integer');\n              return retArr;\n            }\n            castValueToFloat(ast, retArr) {\n              this.pushState('casting-to-float');\n              retArr.push('float(');\n              this.astGeneric(ast, retArr);\n              retArr.push(')');\n              this.popState('casting-to-float');\n              return retArr;\n            }\n            astIdentifierExpression(idtNode, retArr) {\n              if (idtNode.type !== 'Identifier') {\n                throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n              }\n              const type = this.getType(idtNode);\n              const name = utils.sanitizeName(idtNode.name);\n              if (idtNode.name === 'Infinity') {\n                retArr.push('3.402823466e+38');\n              } else if (type === 'Boolean') {\n                if (this.argumentNames.indexOf(name) > -1) {\n                  retArr.push(`bool(user_${name})`);\n                } else {\n                  retArr.push(`user_${name}`);\n                }\n              } else {\n                retArr.push(`user_${name}`);\n              }\n              return retArr;\n            }\n            astForStatement(forNode, retArr) {\n              if (forNode.type !== 'ForStatement') {\n                throw this.astErrorOutput('Invalid for statement', forNode);\n              }\n              const initArr = [];\n              const testArr = [];\n              const updateArr = [];\n              const bodyArr = [];\n              let isSafe = null;\n              if (forNode.init) {\n                const {\n                  declarations\n                } = forNode.init;\n                if (declarations.length > 1) {\n                  isSafe = false;\n                }\n                this.astGeneric(forNode.init, initArr);\n                for (let i = 0; i < declarations.length; i++) {\n                  if (declarations[i].init && declarations[i].init.type !== 'Literal') {\n                    isSafe = false;\n                  }\n                }\n              } else {\n                isSafe = false;\n              }\n              if (forNode.test) {\n                this.astGeneric(forNode.test, testArr);\n              } else {\n                isSafe = false;\n              }\n              if (forNode.update) {\n                this.astGeneric(forNode.update, updateArr);\n              } else {\n                isSafe = false;\n              }\n              if (forNode.body) {\n                this.pushState('loop-body');\n                this.astGeneric(forNode.body, bodyArr);\n                this.popState('loop-body');\n              }\n              if (isSafe === null) {\n                isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n              }\n              if (isSafe) {\n                const initString = initArr.join('');\n                const initNeedsSemiColon = initString[initString.length - 1] !== ';';\n                retArr.push(`for (${initString}${initNeedsSemiColon ? ';' : ''}${testArr.join('')};${updateArr.join('')}){\\n`);\n                retArr.push(bodyArr.join(''));\n                retArr.push('}\\n');\n              } else {\n                const iVariableName = this.getInternalVariableName('safeI');\n                if (initArr.length > 0) {\n                  retArr.push(initArr.join(''), '\\n');\n                }\n                retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n                if (testArr.length > 0) {\n                  retArr.push(`if (!${testArr.join('')}) break;\\n`);\n                }\n                retArr.push(bodyArr.join(''));\n                retArr.push(`\\n${updateArr.join('')};`);\n                retArr.push('}\\n');\n              }\n              return retArr;\n            }\n            astWhileStatement(whileNode, retArr) {\n              if (whileNode.type !== 'WhileStatement') {\n                throw this.astErrorOutput('Invalid while statement', whileNode);\n              }\n              const iVariableName = this.getInternalVariableName('safeI');\n              retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n              retArr.push('if (!');\n              this.astGeneric(whileNode.test, retArr);\n              retArr.push(') break;\\n');\n              this.astGeneric(whileNode.body, retArr);\n              retArr.push('}\\n');\n              return retArr;\n            }\n            astDoWhileStatement(doWhileNode, retArr) {\n              if (doWhileNode.type !== 'DoWhileStatement') {\n                throw this.astErrorOutput('Invalid while statement', doWhileNode);\n              }\n              const iVariableName = this.getInternalVariableName('safeI');\n              retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n              this.astGeneric(doWhileNode.body, retArr);\n              retArr.push('if (!');\n              this.astGeneric(doWhileNode.test, retArr);\n              retArr.push(') break;\\n');\n              retArr.push('}\\n');\n              return retArr;\n            }\n            astAssignmentExpression(assNode, retArr) {\n              if (assNode.operator === '%=') {\n                this.astGeneric(assNode.left, retArr);\n                retArr.push('=');\n                retArr.push('mod(');\n                this.astGeneric(assNode.left, retArr);\n                retArr.push(',');\n                this.astGeneric(assNode.right, retArr);\n                retArr.push(')');\n              } else if (assNode.operator === '**=') {\n                this.astGeneric(assNode.left, retArr);\n                retArr.push('=');\n                retArr.push('pow(');\n                this.astGeneric(assNode.left, retArr);\n                retArr.push(',');\n                this.astGeneric(assNode.right, retArr);\n                retArr.push(')');\n              } else {\n                const leftType = this.getType(assNode.left);\n                const rightType = this.getType(assNode.right);\n                this.astGeneric(assNode.left, retArr);\n                retArr.push(assNode.operator);\n                if (leftType !== 'Integer' && rightType === 'Integer') {\n                  retArr.push('float(');\n                  this.astGeneric(assNode.right, retArr);\n                  retArr.push(')');\n                } else {\n                  this.astGeneric(assNode.right, retArr);\n                }\n                return retArr;\n              }\n            }\n            astBlockStatement(bNode, retArr) {\n              if (this.isState('loop-body')) {\n                this.pushState('block-body');\n                for (let i = 0; i < bNode.body.length; i++) {\n                  this.astGeneric(bNode.body[i], retArr);\n                }\n                this.popState('block-body');\n              } else {\n                retArr.push('{\\n');\n                for (let i = 0; i < bNode.body.length; i++) {\n                  this.astGeneric(bNode.body[i], retArr);\n                }\n                retArr.push('}\\n');\n              }\n              return retArr;\n            }\n            astVariableDeclaration(varDecNode, retArr) {\n              const declarations = varDecNode.declarations;\n              if (!declarations || !declarations[0] || !declarations[0].init) {\n                throw this.astErrorOutput('Unexpected expression', varDecNode);\n              }\n              const result = [];\n              let lastType = null;\n              const declarationSets = [];\n              let declarationSet = [];\n              for (let i = 0; i < declarations.length; i++) {\n                const declaration = declarations[i];\n                const init = declaration.init;\n                const info = this.getDeclaration(declaration.id);\n                const actualType = this.getType(declaration.init);\n                let type = actualType;\n                if (type === 'LiteralInteger') {\n                  if (info.suggestedType === 'Integer') {\n                    type = 'Integer';\n                  } else {\n                    type = 'Number';\n                  }\n                }\n                const markupType = typeMap[type];\n                if (!markupType) {\n                  throw this.astErrorOutput(`Markup type ${type} not handled`, varDecNode);\n                }\n                const declarationResult = [];\n                if (actualType === 'Integer' && type === 'Integer') {\n                  info.valueType = 'Number';\n                  if (i === 0 || lastType === null) {\n                    declarationResult.push('float ');\n                  } else if (type !== lastType) {\n                    throw new Error('Unhandled declaration');\n                  }\n                  lastType = type;\n                  declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);\n                  declarationResult.push('float(');\n                  this.astGeneric(init, declarationResult);\n                  declarationResult.push(')');\n                } else {\n                  info.valueType = type;\n                  if (i === 0 || lastType === null) {\n                    declarationResult.push(`${markupType} `);\n                  } else if (type !== lastType) {\n                    declarationSets.push(declarationSet.join(','));\n                    declarationSet = [];\n                    declarationResult.push(`${markupType} `);\n                  }\n                  lastType = type;\n                  declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);\n                  if (actualType === 'Number' && type === 'Integer') {\n                    if (init.left && init.left.type === 'Literal') {\n                      this.astGeneric(init, declarationResult);\n                    } else {\n                      declarationResult.push('int(');\n                      this.astGeneric(init, declarationResult);\n                      declarationResult.push(')');\n                    }\n                  } else if (actualType === 'LiteralInteger' && type === 'Integer') {\n                    this.castLiteralToInteger(init, declarationResult);\n                  } else {\n                    this.astGeneric(init, declarationResult);\n                  }\n                }\n                declarationSet.push(declarationResult.join(''));\n              }\n              if (declarationSet.length > 0) {\n                declarationSets.push(declarationSet.join(','));\n              }\n              result.push(declarationSets.join(';'));\n              retArr.push(result.join(''));\n              retArr.push(';');\n              return retArr;\n            }\n            astIfStatement(ifNode, retArr) {\n              retArr.push('if (');\n              this.astGeneric(ifNode.test, retArr);\n              retArr.push(')');\n              if (ifNode.consequent.type === 'BlockStatement') {\n                this.astGeneric(ifNode.consequent, retArr);\n              } else {\n                retArr.push(' {\\n');\n                this.astGeneric(ifNode.consequent, retArr);\n                retArr.push('\\n}\\n');\n              }\n              if (ifNode.alternate) {\n                retArr.push('else ');\n                if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n                  this.astGeneric(ifNode.alternate, retArr);\n                } else {\n                  retArr.push(' {\\n');\n                  this.astGeneric(ifNode.alternate, retArr);\n                  retArr.push('\\n}\\n');\n                }\n              }\n              return retArr;\n            }\n            astSwitchStatement(ast, retArr) {\n              if (ast.type !== 'SwitchStatement') {\n                throw this.astErrorOutput('Invalid switch statement', ast);\n              }\n              const {\n                discriminant,\n                cases\n              } = ast;\n              const type = this.getType(discriminant);\n              const varName = `switchDiscriminant${this.astKey(ast, '_')}`;\n              switch (type) {\n                case 'Float':\n                case 'Number':\n                  retArr.push(`float ${varName} = `);\n                  this.astGeneric(discriminant, retArr);\n                  retArr.push(';\\n');\n                  break;\n                case 'Integer':\n                  retArr.push(`int ${varName} = `);\n                  this.astGeneric(discriminant, retArr);\n                  retArr.push(';\\n');\n                  break;\n              }\n              if (cases.length === 1 && !cases[0].test) {\n                this.astGeneric(cases[0].consequent, retArr);\n                return retArr;\n              }\n              let fallingThrough = false;\n              let defaultResult = [];\n              let movingDefaultToEnd = false;\n              let pastFirstIf = false;\n              for (let i = 0; i < cases.length; i++) {\n                if (!cases[i].test) {\n                  if (cases.length > i + 1) {\n                    movingDefaultToEnd = true;\n                    this.astGeneric(cases[i].consequent, defaultResult);\n                    continue;\n                  } else {\n                    retArr.push(' else {\\n');\n                  }\n                } else {\n                  if (i === 0 || !pastFirstIf) {\n                    pastFirstIf = true;\n                    retArr.push(`if (${varName} == `);\n                  } else {\n                    if (fallingThrough) {\n                      retArr.push(`${varName} == `);\n                      fallingThrough = false;\n                    } else {\n                      retArr.push(` else if (${varName} == `);\n                    }\n                  }\n                  if (type === 'Integer') {\n                    const testType = this.getType(cases[i].test);\n                    switch (testType) {\n                      case 'Number':\n                      case 'Float':\n                        this.castValueToInteger(cases[i].test, retArr);\n                        break;\n                      case 'LiteralInteger':\n                        this.castLiteralToInteger(cases[i].test, retArr);\n                        break;\n                    }\n                  } else if (type === 'Float') {\n                    const testType = this.getType(cases[i].test);\n                    switch (testType) {\n                      case 'LiteralInteger':\n                        this.castLiteralToFloat(cases[i].test, retArr);\n                        break;\n                      case 'Integer':\n                        this.castValueToFloat(cases[i].test, retArr);\n                        break;\n                    }\n                  } else {\n                    throw new Error('unhanlded');\n                  }\n                  if (!cases[i].consequent || cases[i].consequent.length === 0) {\n                    fallingThrough = true;\n                    retArr.push(' || ');\n                    continue;\n                  }\n                  retArr.push(`) {\\n`);\n                }\n                this.astGeneric(cases[i].consequent, retArr);\n                retArr.push('\\n}');\n              }\n              if (movingDefaultToEnd) {\n                retArr.push(' else {');\n                retArr.push(defaultResult.join(''));\n                retArr.push('}');\n              }\n              return retArr;\n            }\n            astThisExpression(tNode, retArr) {\n              retArr.push('this');\n              return retArr;\n            }\n            astMemberExpression(mNode, retArr) {\n              const {\n                property,\n                name,\n                signature,\n                origin,\n                type,\n                xProperty,\n                yProperty,\n                zProperty\n              } = this.getMemberExpressionDetails(mNode);\n              switch (signature) {\n                case 'value.thread.value':\n                case 'this.thread.value':\n                  if (name !== 'x' && name !== 'y' && name !== 'z') {\n                    throw this.astErrorOutput('Unexpected expression, expected `this.thread.x`, `this.thread.y`, or `this.thread.z`', mNode);\n                  }\n                  retArr.push(`threadId.${name}`);\n                  return retArr;\n                case 'this.output.value':\n                  if (this.dynamicOutput) {\n                    switch (name) {\n                      case 'x':\n                        if (this.isState('casting-to-float')) {\n                          retArr.push('float(uOutputDim.x)');\n                        } else {\n                          retArr.push('uOutputDim.x');\n                        }\n                        break;\n                      case 'y':\n                        if (this.isState('casting-to-float')) {\n                          retArr.push('float(uOutputDim.y)');\n                        } else {\n                          retArr.push('uOutputDim.y');\n                        }\n                        break;\n                      case 'z':\n                        if (this.isState('casting-to-float')) {\n                          retArr.push('float(uOutputDim.z)');\n                        } else {\n                          retArr.push('uOutputDim.z');\n                        }\n                        break;\n                      default:\n                        throw this.astErrorOutput('Unexpected expression', mNode);\n                    }\n                  } else {\n                    switch (name) {\n                      case 'x':\n                        if (this.isState('casting-to-integer')) {\n                          retArr.push(this.output[0]);\n                        } else {\n                          retArr.push(this.output[0], '.0');\n                        }\n                        break;\n                      case 'y':\n                        if (this.isState('casting-to-integer')) {\n                          retArr.push(this.output[1]);\n                        } else {\n                          retArr.push(this.output[1], '.0');\n                        }\n                        break;\n                      case 'z':\n                        if (this.isState('casting-to-integer')) {\n                          retArr.push(this.output[2]);\n                        } else {\n                          retArr.push(this.output[2], '.0');\n                        }\n                        break;\n                      default:\n                        throw this.astErrorOutput('Unexpected expression', mNode);\n                    }\n                  }\n                  return retArr;\n                case 'value':\n                  throw this.astErrorOutput('Unexpected expression', mNode);\n                case 'value[]':\n                case 'value[][]':\n                case 'value[][][]':\n                case 'value[][][][]':\n                case 'value.value':\n                  if (origin === 'Math') {\n                    retArr.push(Math[name]);\n                    return retArr;\n                  }\n                  const cleanName = utils.sanitizeName(name);\n                  switch (property) {\n                    case 'r':\n                      retArr.push(`user_${cleanName}.r`);\n                      return retArr;\n                    case 'g':\n                      retArr.push(`user_${cleanName}.g`);\n                      return retArr;\n                    case 'b':\n                      retArr.push(`user_${cleanName}.b`);\n                      return retArr;\n                    case 'a':\n                      retArr.push(`user_${cleanName}.a`);\n                      return retArr;\n                  }\n                  break;\n                case 'this.constants.value':\n                  if (typeof xProperty === 'undefined') {\n                    switch (type) {\n                      case 'Array(2)':\n                      case 'Array(3)':\n                      case 'Array(4)':\n                        retArr.push(`constants_${utils.sanitizeName(name)}`);\n                        return retArr;\n                    }\n                  }\n                case 'this.constants.value[]':\n                case 'this.constants.value[][]':\n                case 'this.constants.value[][][]':\n                case 'this.constants.value[][][][]':\n                  break;\n                case 'fn()[]':\n                  this.astCallExpression(mNode.object, retArr);\n                  retArr.push('[');\n                  retArr.push(this.memberExpressionPropertyMarkup(property));\n                  retArr.push(']');\n                  return retArr;\n                case 'fn()[][]':\n                  this.astCallExpression(mNode.object.object, retArr);\n                  retArr.push('[');\n                  retArr.push(this.memberExpressionPropertyMarkup(mNode.object.property));\n                  retArr.push(']');\n                  retArr.push('[');\n                  retArr.push(this.memberExpressionPropertyMarkup(mNode.property));\n                  retArr.push(']');\n                  return retArr;\n                case '[][]':\n                  this.astArrayExpression(mNode.object, retArr);\n                  retArr.push('[');\n                  retArr.push(this.memberExpressionPropertyMarkup(property));\n                  retArr.push(']');\n                  return retArr;\n                default:\n                  throw this.astErrorOutput('Unexpected expression', mNode);\n              }\n              if (mNode.computed === false) {\n                switch (type) {\n                  case 'Number':\n                  case 'Integer':\n                  case 'Float':\n                  case 'Boolean':\n                    retArr.push(`${origin}_${utils.sanitizeName(name)}`);\n                    return retArr;\n                }\n              }\n              const markupName = `${origin}_${utils.sanitizeName(name)}`;\n              switch (type) {\n                case 'Array(2)':\n                case 'Array(3)':\n                case 'Array(4)':\n                  this.astGeneric(mNode.object, retArr);\n                  retArr.push('[');\n                  retArr.push(this.memberExpressionPropertyMarkup(xProperty));\n                  retArr.push(']');\n                  break;\n                case 'HTMLImageArray':\n                  retArr.push(`getImage3D(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n                  this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n                  retArr.push(')');\n                  break;\n                case 'ArrayTexture(1)':\n                  retArr.push(`getFloatFromSampler2D(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n                  this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n                  retArr.push(')');\n                  break;\n                case 'Array1D(2)':\n                case 'Array2D(2)':\n                case 'Array3D(2)':\n                  retArr.push(`getMemoryOptimizedVec2(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n                  this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n                  retArr.push(')');\n                  break;\n                case 'ArrayTexture(2)':\n                  retArr.push(`getVec2FromSampler2D(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n                  this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n                  retArr.push(')');\n                  break;\n                case 'Array1D(3)':\n                case 'Array2D(3)':\n                case 'Array3D(3)':\n                  retArr.push(`getMemoryOptimizedVec3(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n                  this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n                  retArr.push(')');\n                  break;\n                case 'ArrayTexture(3)':\n                  retArr.push(`getVec3FromSampler2D(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n                  this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n                  retArr.push(')');\n                  break;\n                case 'Array1D(4)':\n                case 'Array2D(4)':\n                case 'Array3D(4)':\n                  retArr.push(`getMemoryOptimizedVec4(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n                  this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n                  retArr.push(')');\n                  break;\n                case 'ArrayTexture(4)':\n                case 'HTMLCanvas':\n                case 'OffscreenCanvas':\n                case 'HTMLImage':\n                case 'ImageBitmap':\n                case 'ImageData':\n                case 'HTMLVideo':\n                  retArr.push(`getVec4FromSampler2D(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n                  this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n                  retArr.push(')');\n                  break;\n                case 'NumberTexture':\n                case 'Array':\n                case 'Array2D':\n                case 'Array3D':\n                case 'Array4D':\n                case 'Input':\n                case 'Number':\n                case 'Float':\n                case 'Integer':\n                  if (this.precision === 'single') {\n                    retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n                    this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n                    retArr.push(')');\n                  } else {\n                    const bitRatio = origin === 'user' ? this.lookupFunctionArgumentBitRatio(this.name, name) : this.constantBitRatios[name];\n                    switch (bitRatio) {\n                      case 1:\n                        retArr.push(`get8(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n                        break;\n                      case 2:\n                        retArr.push(`get16(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n                        break;\n                      case 4:\n                      case 0:\n                        retArr.push(`get32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n                        break;\n                      default:\n                        throw new Error(`unhandled bit ratio of ${bitRatio}`);\n                    }\n                    this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n                    retArr.push(')');\n                  }\n                  break;\n                case 'MemoryOptimizedNumberTexture':\n                  retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n                  this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n                  retArr.push(')');\n                  break;\n                case 'Matrix(2)':\n                case 'Matrix(3)':\n                case 'Matrix(4)':\n                  retArr.push(`${markupName}[${this.memberExpressionPropertyMarkup(yProperty)}]`);\n                  if (yProperty) {\n                    retArr.push(`[${this.memberExpressionPropertyMarkup(xProperty)}]`);\n                  }\n                  break;\n                default:\n                  throw new Error(`unhandled member expression \"${type}\"`);\n              }\n              return retArr;\n            }\n            astCallExpression(ast, retArr) {\n              if (!ast.callee) {\n                throw this.astErrorOutput('Unknown CallExpression', ast);\n              }\n              let functionName = null;\n              const isMathFunction = this.isAstMathFunction(ast);\n              if (isMathFunction || ast.callee.object && ast.callee.object.type === 'ThisExpression') {\n                functionName = ast.callee.property.name;\n              } else if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[0].type === 'Literal' && !isNaN(ast.callee.expressions[0].raw)) {\n                functionName = ast.callee.expressions[1].property.name;\n              } else {\n                functionName = ast.callee.name;\n              }\n              if (!functionName) {\n                throw this.astErrorOutput(`Unhandled function, couldn't find name`, ast);\n              }\n              switch (functionName) {\n                case 'pow':\n                  functionName = '_pow';\n                  break;\n                case 'round':\n                  functionName = '_round';\n                  break;\n              }\n              if (this.calledFunctions.indexOf(functionName) < 0) {\n                this.calledFunctions.push(functionName);\n              }\n              if (functionName === 'random' && this.plugins && this.plugins.length > 0) {\n                for (let i = 0; i < this.plugins.length; i++) {\n                  const plugin = this.plugins[i];\n                  if (plugin.functionMatch === 'Math.random()' && plugin.functionReplace) {\n                    retArr.push(plugin.functionReplace);\n                    return retArr;\n                  }\n                }\n              }\n              if (this.onFunctionCall) {\n                this.onFunctionCall(this.name, functionName, ast.arguments);\n              }\n              retArr.push(functionName);\n              retArr.push('(');\n              if (isMathFunction) {\n                for (let i = 0; i < ast.arguments.length; ++i) {\n                  const argument = ast.arguments[i];\n                  const argumentType = this.getType(argument);\n                  if (i > 0) {\n                    retArr.push(', ');\n                  }\n                  switch (argumentType) {\n                    case 'Integer':\n                      this.castValueToFloat(argument, retArr);\n                      break;\n                    default:\n                      this.astGeneric(argument, retArr);\n                      break;\n                  }\n                }\n              } else {\n                const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n                for (let i = 0; i < ast.arguments.length; ++i) {\n                  const argument = ast.arguments[i];\n                  let targetType = targetTypes[i];\n                  if (i > 0) {\n                    retArr.push(', ');\n                  }\n                  const argumentType = this.getType(argument);\n                  if (!targetType) {\n                    this.triggerImplyArgumentType(functionName, i, argumentType, this);\n                    targetType = argumentType;\n                  }\n                  switch (argumentType) {\n                    case 'Boolean':\n                      this.astGeneric(argument, retArr);\n                      continue;\n                    case 'Number':\n                    case 'Float':\n                      if (targetType === 'Integer') {\n                        retArr.push('int(');\n                        this.astGeneric(argument, retArr);\n                        retArr.push(')');\n                        continue;\n                      } else if (targetType === 'Number' || targetType === 'Float') {\n                        this.astGeneric(argument, retArr);\n                        continue;\n                      } else if (targetType === 'LiteralInteger') {\n                        this.castLiteralToFloat(argument, retArr);\n                        continue;\n                      }\n                      break;\n                    case 'Integer':\n                      if (targetType === 'Number' || targetType === 'Float') {\n                        retArr.push('float(');\n                        this.astGeneric(argument, retArr);\n                        retArr.push(')');\n                        continue;\n                      } else if (targetType === 'Integer') {\n                        this.astGeneric(argument, retArr);\n                        continue;\n                      }\n                      break;\n                    case 'LiteralInteger':\n                      if (targetType === 'Integer') {\n                        this.castLiteralToInteger(argument, retArr);\n                        continue;\n                      } else if (targetType === 'Number' || targetType === 'Float') {\n                        this.castLiteralToFloat(argument, retArr);\n                        continue;\n                      } else if (targetType === 'LiteralInteger') {\n                        this.astGeneric(argument, retArr);\n                        continue;\n                      }\n                      break;\n                    case 'Array(2)':\n                    case 'Array(3)':\n                    case 'Array(4)':\n                      if (targetType === argumentType) {\n                        if (argument.type === 'Identifier') {\n                          retArr.push(`user_${utils.sanitizeName(argument.name)}`);\n                        } else if (argument.type === 'ArrayExpression' || argument.type === 'MemberExpression' || argument.type === 'CallExpression') {\n                          this.astGeneric(argument, retArr);\n                        } else {\n                          throw this.astErrorOutput(`Unhandled argument type ${argument.type}`, ast);\n                        }\n                        continue;\n                      }\n                      break;\n                    case 'HTMLCanvas':\n                    case 'OffscreenCanvas':\n                    case 'HTMLImage':\n                    case 'ImageBitmap':\n                    case 'ImageData':\n                    case 'HTMLImageArray':\n                    case 'HTMLVideo':\n                    case 'ArrayTexture(1)':\n                    case 'ArrayTexture(2)':\n                    case 'ArrayTexture(3)':\n                    case 'ArrayTexture(4)':\n                    case 'Array':\n                    case 'Input':\n                      if (targetType === argumentType) {\n                        if (argument.type !== 'Identifier') throw this.astErrorOutput(`Unhandled argument type ${argument.type}`, ast);\n                        this.triggerImplyArgumentBitRatio(this.name, argument.name, functionName, i);\n                        const name = utils.sanitizeName(argument.name);\n                        retArr.push(`user_${name},user_${name}Size,user_${name}Dim`);\n                        continue;\n                      }\n                      break;\n                  }\n                  throw this.astErrorOutput(`Unhandled argument combination of ${argumentType} and ${targetType} for argument named \"${argument.name}\"`, ast);\n                }\n              }\n              retArr.push(')');\n              return retArr;\n            }\n            astArrayExpression(arrNode, retArr) {\n              const returnType = this.getType(arrNode);\n              const arrLen = arrNode.elements.length;\n              switch (returnType) {\n                case 'Matrix(2)':\n                case 'Matrix(3)':\n                case 'Matrix(4)':\n                  retArr.push(`mat${arrLen}(`);\n                  break;\n                default:\n                  retArr.push(`vec${arrLen}(`);\n              }\n              for (let i = 0; i < arrLen; ++i) {\n                if (i > 0) {\n                  retArr.push(', ');\n                }\n                const subNode = arrNode.elements[i];\n                this.astGeneric(subNode, retArr);\n              }\n              retArr.push(')');\n              return retArr;\n            }\n            memberExpressionXYZ(x, y, z, retArr) {\n              if (z) {\n                retArr.push(this.memberExpressionPropertyMarkup(z), ', ');\n              } else {\n                retArr.push('0, ');\n              }\n              if (y) {\n                retArr.push(this.memberExpressionPropertyMarkup(y), ', ');\n              } else {\n                retArr.push('0, ');\n              }\n              retArr.push(this.memberExpressionPropertyMarkup(x));\n              return retArr;\n            }\n            memberExpressionPropertyMarkup(property) {\n              if (!property) {\n                throw new Error('Property not set');\n              }\n              const type = this.getType(property);\n              const result = [];\n              switch (type) {\n                case 'Number':\n                case 'Float':\n                  this.castValueToInteger(property, result);\n                  break;\n                case 'LiteralInteger':\n                  this.castLiteralToInteger(property, result);\n                  break;\n                default:\n                  this.astGeneric(property, result);\n              }\n              return result.join('');\n            }\n          }\n          const typeMap = {\n            'Array': 'sampler2D',\n            'Array(2)': 'vec2',\n            'Array(3)': 'vec3',\n            'Array(4)': 'vec4',\n            'Matrix(2)': 'mat2',\n            'Matrix(3)': 'mat3',\n            'Matrix(4)': 'mat4',\n            'Array2D': 'sampler2D',\n            'Array3D': 'sampler2D',\n            'Boolean': 'bool',\n            'Float': 'float',\n            'Input': 'sampler2D',\n            'Integer': 'int',\n            'Number': 'float',\n            'LiteralInteger': 'float',\n            'NumberTexture': 'sampler2D',\n            'MemoryOptimizedNumberTexture': 'sampler2D',\n            'ArrayTexture(1)': 'sampler2D',\n            'ArrayTexture(2)': 'sampler2D',\n            'ArrayTexture(3)': 'sampler2D',\n            'ArrayTexture(4)': 'sampler2D',\n            'HTMLVideo': 'sampler2D',\n            'HTMLCanvas': 'sampler2D',\n            'OffscreenCanvas': 'sampler2D',\n            'HTMLImage': 'sampler2D',\n            'ImageBitmap': 'sampler2D',\n            'ImageData': 'sampler2D',\n            'HTMLImageArray': 'sampler2DArray'\n          };\n          const operatorMap = {\n            '===': '==',\n            '!==': '!='\n          };\n          module.exports = {\n            WebGLFunctionNode\n          };\n        }, {\n          \"../../utils\": 114,\n          \"../function-node\": 10\n        }],\n        39: [function (require, module, exports) {\n          const {\n            WebGLKernelValueBoolean\n          } = require('./kernel-value/boolean');\n          const {\n            WebGLKernelValueFloat\n          } = require('./kernel-value/float');\n          const {\n            WebGLKernelValueInteger\n          } = require('./kernel-value/integer');\n          const {\n            WebGLKernelValueHTMLImage\n          } = require('./kernel-value/html-image');\n          const {\n            WebGLKernelValueDynamicHTMLImage\n          } = require('./kernel-value/dynamic-html-image');\n          const {\n            WebGLKernelValueHTMLVideo\n          } = require('./kernel-value/html-video');\n          const {\n            WebGLKernelValueDynamicHTMLVideo\n          } = require('./kernel-value/dynamic-html-video');\n          const {\n            WebGLKernelValueSingleInput\n          } = require('./kernel-value/single-input');\n          const {\n            WebGLKernelValueDynamicSingleInput\n          } = require('./kernel-value/dynamic-single-input');\n          const {\n            WebGLKernelValueUnsignedInput\n          } = require('./kernel-value/unsigned-input');\n          const {\n            WebGLKernelValueDynamicUnsignedInput\n          } = require('./kernel-value/dynamic-unsigned-input');\n          const {\n            WebGLKernelValueMemoryOptimizedNumberTexture\n          } = require('./kernel-value/memory-optimized-number-texture');\n          const {\n            WebGLKernelValueDynamicMemoryOptimizedNumberTexture\n          } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n          const {\n            WebGLKernelValueNumberTexture\n          } = require('./kernel-value/number-texture');\n          const {\n            WebGLKernelValueDynamicNumberTexture\n          } = require('./kernel-value/dynamic-number-texture');\n          const {\n            WebGLKernelValueSingleArray\n          } = require('./kernel-value/single-array');\n          const {\n            WebGLKernelValueDynamicSingleArray\n          } = require('./kernel-value/dynamic-single-array');\n          const {\n            WebGLKernelValueSingleArray1DI\n          } = require('./kernel-value/single-array1d-i');\n          const {\n            WebGLKernelValueDynamicSingleArray1DI\n          } = require('./kernel-value/dynamic-single-array1d-i');\n          const {\n            WebGLKernelValueSingleArray2DI\n          } = require('./kernel-value/single-array2d-i');\n          const {\n            WebGLKernelValueDynamicSingleArray2DI\n          } = require('./kernel-value/dynamic-single-array2d-i');\n          const {\n            WebGLKernelValueSingleArray3DI\n          } = require('./kernel-value/single-array3d-i');\n          const {\n            WebGLKernelValueDynamicSingleArray3DI\n          } = require('./kernel-value/dynamic-single-array3d-i');\n          const {\n            WebGLKernelValueArray2\n          } = require('./kernel-value/array2');\n          const {\n            WebGLKernelValueArray3\n          } = require('./kernel-value/array3');\n          const {\n            WebGLKernelValueArray4\n          } = require('./kernel-value/array4');\n          const {\n            WebGLKernelValueUnsignedArray\n          } = require('./kernel-value/unsigned-array');\n          const {\n            WebGLKernelValueDynamicUnsignedArray\n          } = require('./kernel-value/dynamic-unsigned-array');\n          const kernelValueMaps = {\n            unsigned: {\n              dynamic: {\n                'Boolean': WebGLKernelValueBoolean,\n                'Integer': WebGLKernelValueInteger,\n                'Float': WebGLKernelValueFloat,\n                'Array': WebGLKernelValueDynamicUnsignedArray,\n                'Array(2)': WebGLKernelValueArray2,\n                'Array(3)': WebGLKernelValueArray3,\n                'Array(4)': WebGLKernelValueArray4,\n                'Array1D(2)': false,\n                'Array1D(3)': false,\n                'Array1D(4)': false,\n                'Array2D(2)': false,\n                'Array2D(3)': false,\n                'Array2D(4)': false,\n                'Array3D(2)': false,\n                'Array3D(3)': false,\n                'Array3D(4)': false,\n                'Input': WebGLKernelValueDynamicUnsignedInput,\n                'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n                'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n                'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n                'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n                'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n                'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n                'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n                'OffscreenCanvas': WebGLKernelValueDynamicHTMLImage,\n                'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n                'ImageBitmap': WebGLKernelValueDynamicHTMLImage,\n                'ImageData': WebGLKernelValueDynamicHTMLImage,\n                'HTMLImageArray': false,\n                'HTMLVideo': WebGLKernelValueDynamicHTMLVideo\n              },\n              static: {\n                'Boolean': WebGLKernelValueBoolean,\n                'Float': WebGLKernelValueFloat,\n                'Integer': WebGLKernelValueInteger,\n                'Array': WebGLKernelValueUnsignedArray,\n                'Array(2)': WebGLKernelValueArray2,\n                'Array(3)': WebGLKernelValueArray3,\n                'Array(4)': WebGLKernelValueArray4,\n                'Array1D(2)': false,\n                'Array1D(3)': false,\n                'Array1D(4)': false,\n                'Array2D(2)': false,\n                'Array2D(3)': false,\n                'Array2D(4)': false,\n                'Array3D(2)': false,\n                'Array3D(3)': false,\n                'Array3D(4)': false,\n                'Input': WebGLKernelValueUnsignedInput,\n                'NumberTexture': WebGLKernelValueNumberTexture,\n                'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n                'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n                'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n                'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n                'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n                'HTMLCanvas': WebGLKernelValueHTMLImage,\n                'OffscreenCanvas': WebGLKernelValueHTMLImage,\n                'HTMLImage': WebGLKernelValueHTMLImage,\n                'ImageBitmap': WebGLKernelValueHTMLImage,\n                'ImageData': WebGLKernelValueHTMLImage,\n                'HTMLImageArray': false,\n                'HTMLVideo': WebGLKernelValueHTMLVideo\n              }\n            },\n            single: {\n              dynamic: {\n                'Boolean': WebGLKernelValueBoolean,\n                'Integer': WebGLKernelValueInteger,\n                'Float': WebGLKernelValueFloat,\n                'Array': WebGLKernelValueDynamicSingleArray,\n                'Array(2)': WebGLKernelValueArray2,\n                'Array(3)': WebGLKernelValueArray3,\n                'Array(4)': WebGLKernelValueArray4,\n                'Array1D(2)': WebGLKernelValueDynamicSingleArray1DI,\n                'Array1D(3)': WebGLKernelValueDynamicSingleArray1DI,\n                'Array1D(4)': WebGLKernelValueDynamicSingleArray1DI,\n                'Array2D(2)': WebGLKernelValueDynamicSingleArray2DI,\n                'Array2D(3)': WebGLKernelValueDynamicSingleArray2DI,\n                'Array2D(4)': WebGLKernelValueDynamicSingleArray2DI,\n                'Array3D(2)': WebGLKernelValueDynamicSingleArray3DI,\n                'Array3D(3)': WebGLKernelValueDynamicSingleArray3DI,\n                'Array3D(4)': WebGLKernelValueDynamicSingleArray3DI,\n                'Input': WebGLKernelValueDynamicSingleInput,\n                'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n                'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n                'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n                'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n                'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n                'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n                'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n                'OffscreenCanvas': WebGLKernelValueDynamicHTMLImage,\n                'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n                'ImageBitmap': WebGLKernelValueDynamicHTMLImage,\n                'ImageData': WebGLKernelValueDynamicHTMLImage,\n                'HTMLImageArray': false,\n                'HTMLVideo': WebGLKernelValueDynamicHTMLVideo\n              },\n              static: {\n                'Boolean': WebGLKernelValueBoolean,\n                'Float': WebGLKernelValueFloat,\n                'Integer': WebGLKernelValueInteger,\n                'Array': WebGLKernelValueSingleArray,\n                'Array(2)': WebGLKernelValueArray2,\n                'Array(3)': WebGLKernelValueArray3,\n                'Array(4)': WebGLKernelValueArray4,\n                'Array1D(2)': WebGLKernelValueSingleArray1DI,\n                'Array1D(3)': WebGLKernelValueSingleArray1DI,\n                'Array1D(4)': WebGLKernelValueSingleArray1DI,\n                'Array2D(2)': WebGLKernelValueSingleArray2DI,\n                'Array2D(3)': WebGLKernelValueSingleArray2DI,\n                'Array2D(4)': WebGLKernelValueSingleArray2DI,\n                'Array3D(2)': WebGLKernelValueSingleArray3DI,\n                'Array3D(3)': WebGLKernelValueSingleArray3DI,\n                'Array3D(4)': WebGLKernelValueSingleArray3DI,\n                'Input': WebGLKernelValueSingleInput,\n                'NumberTexture': WebGLKernelValueNumberTexture,\n                'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n                'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n                'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n                'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n                'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n                'HTMLCanvas': WebGLKernelValueHTMLImage,\n                'OffscreenCanvas': WebGLKernelValueHTMLImage,\n                'HTMLImage': WebGLKernelValueHTMLImage,\n                'ImageBitmap': WebGLKernelValueHTMLImage,\n                'ImageData': WebGLKernelValueHTMLImage,\n                'HTMLImageArray': false,\n                'HTMLVideo': WebGLKernelValueHTMLVideo\n              }\n            }\n          };\n          function lookupKernelValueType(type, dynamic, precision, value) {\n            if (!type) {\n              throw new Error('type missing');\n            }\n            if (!dynamic) {\n              throw new Error('dynamic missing');\n            }\n            if (!precision) {\n              throw new Error('precision missing');\n            }\n            if (value.type) {\n              type = value.type;\n            }\n            const types = kernelValueMaps[precision][dynamic];\n            if (types[type] === false) {\n              return null;\n            } else if (types[type] === undefined) {\n              throw new Error(`Could not find a KernelValue for ${type}`);\n            }\n            return types[type];\n          }\n          module.exports = {\n            lookupKernelValueType,\n            kernelValueMaps\n          };\n        }, {\n          \"./kernel-value/array2\": 41,\n          \"./kernel-value/array3\": 42,\n          \"./kernel-value/array4\": 43,\n          \"./kernel-value/boolean\": 44,\n          \"./kernel-value/dynamic-html-image\": 45,\n          \"./kernel-value/dynamic-html-video\": 46,\n          \"./kernel-value/dynamic-memory-optimized-number-texture\": 47,\n          \"./kernel-value/dynamic-number-texture\": 48,\n          \"./kernel-value/dynamic-single-array\": 49,\n          \"./kernel-value/dynamic-single-array1d-i\": 50,\n          \"./kernel-value/dynamic-single-array2d-i\": 51,\n          \"./kernel-value/dynamic-single-array3d-i\": 52,\n          \"./kernel-value/dynamic-single-input\": 53,\n          \"./kernel-value/dynamic-unsigned-array\": 54,\n          \"./kernel-value/dynamic-unsigned-input\": 55,\n          \"./kernel-value/float\": 56,\n          \"./kernel-value/html-image\": 57,\n          \"./kernel-value/html-video\": 58,\n          \"./kernel-value/integer\": 60,\n          \"./kernel-value/memory-optimized-number-texture\": 61,\n          \"./kernel-value/number-texture\": 62,\n          \"./kernel-value/single-array\": 63,\n          \"./kernel-value/single-array1d-i\": 64,\n          \"./kernel-value/single-array2d-i\": 65,\n          \"./kernel-value/single-array3d-i\": 66,\n          \"./kernel-value/single-input\": 67,\n          \"./kernel-value/unsigned-array\": 68,\n          \"./kernel-value/unsigned-input\": 69\n        }],\n        40: [function (require, module, exports) {\n          const {\n            WebGLKernelValue\n          } = require('./index');\n          const {\n            Input\n          } = require('../../../input');\n          class WebGLKernelArray extends WebGLKernelValue {\n            checkSize(width, height) {\n              if (!this.kernel.validate) return;\n              const {\n                maxTextureSize\n              } = this.kernel.constructor.features;\n              if (width > maxTextureSize || height > maxTextureSize) {\n                if (width > height) {\n                  throw new Error(`Argument texture width of ${width} larger than maximum size of ${maxTextureSize} for your GPU`);\n                } else if (width < height) {\n                  throw new Error(`Argument texture height of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n                } else {\n                  throw new Error(`Argument texture height and width of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n                }\n              }\n            }\n            setup() {\n              this.requestTexture();\n              this.setupTexture();\n              this.defineTexture();\n            }\n            requestTexture() {\n              this.texture = this.onRequestTexture();\n            }\n            defineTexture() {\n              const {\n                context: gl\n              } = this;\n              gl.activeTexture(this.contextHandle);\n              gl.bindTexture(gl.TEXTURE_2D, this.texture);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            }\n            setupTexture() {\n              this.contextHandle = this.onRequestContextHandle();\n              this.index = this.onRequestIndex();\n              this.dimensionsId = this.id + 'Dim';\n              this.sizeId = this.id + 'Size';\n            }\n            getBitRatio(value) {\n              if (Array.isArray(value[0])) {\n                return this.getBitRatio(value[0]);\n              } else if (value.constructor === Input) {\n                return this.getBitRatio(value.value);\n              }\n              switch (value.constructor) {\n                case Uint8ClampedArray:\n                case Uint8Array:\n                case Int8Array:\n                  return 1;\n                case Uint16Array:\n                case Int16Array:\n                  return 2;\n                case Float32Array:\n                case Int32Array:\n                default:\n                  return 4;\n              }\n            }\n            destroy() {\n              if (this.prevArg) {\n                this.prevArg.delete();\n              }\n              this.context.deleteTexture(this.texture);\n            }\n          }\n          module.exports = {\n            WebGLKernelArray\n          };\n        }, {\n          \"../../../input\": 110,\n          \"./index\": 59\n        }],\n        41: [function (require, module, exports) {\n          const {\n            WebGLKernelValue\n          } = require('./index');\n          class WebGLKernelValueArray2 extends WebGLKernelValue {\n            constructor(value, settings) {\n              super(value, settings);\n              this.uploadValue = value;\n            }\n            getSource(value) {\n              if (this.origin === 'constants') {\n                return `const vec2 ${this.id} = vec2(${value[0]},${value[1]});\\n`;\n              }\n              return `uniform vec2 ${this.id};\\n`;\n            }\n            getStringValueHandler() {\n              if (this.origin === 'constants') return '';\n              return `const uploadValue_${this.name} = ${this.varName};\\n`;\n            }\n            updateValue(value) {\n              if (this.origin === 'constants') return;\n              this.kernel.setUniform2fv(this.id, this.uploadValue = value);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueArray2\n          };\n        }, {\n          \"./index\": 59\n        }],\n        42: [function (require, module, exports) {\n          const {\n            WebGLKernelValue\n          } = require('./index');\n          class WebGLKernelValueArray3 extends WebGLKernelValue {\n            constructor(value, settings) {\n              super(value, settings);\n              this.uploadValue = value;\n            }\n            getSource(value) {\n              if (this.origin === 'constants') {\n                return `const vec3 ${this.id} = vec3(${value[0]},${value[1]},${value[2]});\\n`;\n              }\n              return `uniform vec3 ${this.id};\\n`;\n            }\n            getStringValueHandler() {\n              if (this.origin === 'constants') return '';\n              return `const uploadValue_${this.name} = ${this.varName};\\n`;\n            }\n            updateValue(value) {\n              if (this.origin === 'constants') return;\n              this.kernel.setUniform3fv(this.id, this.uploadValue = value);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueArray3\n          };\n        }, {\n          \"./index\": 59\n        }],\n        43: [function (require, module, exports) {\n          const {\n            WebGLKernelValue\n          } = require('./index');\n          class WebGLKernelValueArray4 extends WebGLKernelValue {\n            constructor(value, settings) {\n              super(value, settings);\n              this.uploadValue = value;\n            }\n            getSource(value) {\n              if (this.origin === 'constants') {\n                return `const vec4 ${this.id} = vec4(${value[0]},${value[1]},${value[2]},${value[3]});\\n`;\n              }\n              return `uniform vec4 ${this.id};\\n`;\n            }\n            getStringValueHandler() {\n              if (this.origin === 'constants') return '';\n              return `const uploadValue_${this.name} = ${this.varName};\\n`;\n            }\n            updateValue(value) {\n              if (this.origin === 'constants') return;\n              this.kernel.setUniform4fv(this.id, this.uploadValue = value);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueArray4\n          };\n        }, {\n          \"./index\": 59\n        }],\n        44: [function (require, module, exports) {\n          require('../../../utils');\n          const {\n            WebGLKernelValue\n          } = require('./index');\n          class WebGLKernelValueBoolean extends WebGLKernelValue {\n            constructor(value, settings) {\n              super(value, settings);\n              this.uploadValue = value;\n            }\n            getSource(value) {\n              if (this.origin === 'constants') {\n                return `const bool ${this.id} = ${value};\\n`;\n              }\n              return `uniform bool ${this.id};\\n`;\n            }\n            getStringValueHandler() {\n              return `const uploadValue_${this.name} = ${this.varName};\\n`;\n            }\n            updateValue(value) {\n              if (this.origin === 'constants') return;\n              this.kernel.setUniform1i(this.id, this.uploadValue = value);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueBoolean\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./index\": 59\n        }],\n        45: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueHTMLImage\n          } = require('./html-image');\n          class WebGLKernelValueDynamicHTMLImage extends WebGLKernelValueHTMLImage {\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 ${this.dimensionsId}`]);\n            }\n            updateValue(value) {\n              const {\n                width,\n                height\n              } = value;\n              this.checkSize(width, height);\n              this.dimensions = [width, height, 1];\n              this.textureSize = [width, height];\n              this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n              this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n              super.updateValue(value);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueDynamicHTMLImage\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./html-image\": 57\n        }],\n        46: [function (require, module, exports) {\n          const {\n            WebGLKernelValueDynamicHTMLImage\n          } = require('./dynamic-html-image');\n          class WebGLKernelValueDynamicHTMLVideo extends WebGLKernelValueDynamicHTMLImage {}\n          module.exports = {\n            WebGLKernelValueDynamicHTMLVideo\n          };\n        }, {\n          \"./dynamic-html-image\": 45\n        }],\n        47: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueMemoryOptimizedNumberTexture\n          } = require('./memory-optimized-number-texture');\n          class WebGLKernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 ${this.dimensionsId}`]);\n            }\n            updateValue(inputTexture) {\n              this.dimensions = inputTexture.dimensions;\n              this.checkSize(inputTexture.size[0], inputTexture.size[1]);\n              this.textureSize = inputTexture.size;\n              this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n              this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n              super.updateValue(inputTexture);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueDynamicMemoryOptimizedNumberTexture\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./memory-optimized-number-texture\": 61\n        }],\n        48: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueNumberTexture\n          } = require('./number-texture');\n          class WebGLKernelValueDynamicNumberTexture extends WebGLKernelValueNumberTexture {\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 ${this.dimensionsId}`]);\n            }\n            updateValue(value) {\n              this.dimensions = value.dimensions;\n              this.checkSize(value.size[0], value.size[1]);\n              this.textureSize = value.size;\n              this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n              this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n              super.updateValue(value);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueDynamicNumberTexture\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./number-texture\": 62\n        }],\n        49: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueSingleArray\n          } = require('./single-array');\n          class WebGLKernelValueDynamicSingleArray extends WebGLKernelValueSingleArray {\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 ${this.dimensionsId}`]);\n            }\n            updateValue(value) {\n              this.dimensions = utils.getDimensions(value, true);\n              this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n              this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n              this.checkSize(this.textureSize[0], this.textureSize[1]);\n              this.uploadValue = new Float32Array(this.uploadArrayLength);\n              this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n              this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n              super.updateValue(value);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueDynamicSingleArray\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./single-array\": 63\n        }],\n        50: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueSingleArray1DI\n          } = require('./single-array1d-i');\n          class WebGLKernelValueDynamicSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 ${this.dimensionsId}`]);\n            }\n            updateValue(value) {\n              this.setShape(value);\n              this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n              this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n              super.updateValue(value);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueDynamicSingleArray1DI\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./single-array1d-i\": 64\n        }],\n        51: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueSingleArray2DI\n          } = require('./single-array2d-i');\n          class WebGLKernelValueDynamicSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 ${this.dimensionsId}`]);\n            }\n            updateValue(value) {\n              this.setShape(value);\n              this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n              this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n              super.updateValue(value);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueDynamicSingleArray2DI\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./single-array2d-i\": 65\n        }],\n        52: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueSingleArray3DI\n          } = require('./single-array3d-i');\n          class WebGLKernelValueDynamicSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 ${this.dimensionsId}`]);\n            }\n            updateValue(value) {\n              this.setShape(value);\n              this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n              this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n              super.updateValue(value);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueDynamicSingleArray3DI\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./single-array3d-i\": 66\n        }],\n        53: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueSingleInput\n          } = require('./single-input');\n          class WebGLKernelValueDynamicSingleInput extends WebGLKernelValueSingleInput {\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 ${this.dimensionsId}`]);\n            }\n            updateValue(value) {\n              let [w, h, d] = value.size;\n              this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n              this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n              this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n              this.checkSize(this.textureSize[0], this.textureSize[1]);\n              this.uploadValue = new Float32Array(this.uploadArrayLength);\n              this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n              this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n              super.updateValue(value);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueDynamicSingleInput\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./single-input\": 67\n        }],\n        54: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueUnsignedArray\n          } = require('./unsigned-array');\n          class WebGLKernelValueDynamicUnsignedArray extends WebGLKernelValueUnsignedArray {\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 ${this.dimensionsId}`]);\n            }\n            updateValue(value) {\n              this.dimensions = utils.getDimensions(value, true);\n              this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n              this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n              this.checkSize(this.textureSize[0], this.textureSize[1]);\n              const Type = this.getTransferArrayType(value);\n              this.preUploadValue = new Type(this.uploadArrayLength);\n              this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n              this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n              this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n              super.updateValue(value);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueDynamicUnsignedArray\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./unsigned-array\": 68\n        }],\n        55: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueUnsignedInput\n          } = require('./unsigned-input');\n          class WebGLKernelValueDynamicUnsignedInput extends WebGLKernelValueUnsignedInput {\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 ${this.dimensionsId}`]);\n            }\n            updateValue(value) {\n              let [w, h, d] = value.size;\n              this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n              this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n              this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n              this.checkSize(this.textureSize[0], this.textureSize[1]);\n              const Type = this.getTransferArrayType(value.value);\n              this.preUploadValue = new Type(this.uploadArrayLength);\n              this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n              this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n              this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n              super.updateValue(value);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueDynamicUnsignedInput\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./unsigned-input\": 69\n        }],\n        56: [function (require, module, exports) {\n          require('../../../utils');\n          const {\n            WebGLKernelValue\n          } = require('./index');\n          class WebGLKernelValueFloat extends WebGLKernelValue {\n            constructor(value, settings) {\n              super(value, settings);\n              this.uploadValue = value;\n            }\n            getStringValueHandler() {\n              return `const uploadValue_${this.name} = ${this.varName};\\n`;\n            }\n            getSource(value) {\n              if (this.origin === 'constants') {\n                if (Number.isInteger(value)) {\n                  return `const float ${this.id} = ${value}.0;\\n`;\n                }\n                return `const float ${this.id} = ${value};\\n`;\n              }\n              return `uniform float ${this.id};\\n`;\n            }\n            updateValue(value) {\n              if (this.origin === 'constants') return;\n              this.kernel.setUniform1f(this.id, this.uploadValue = value);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueFloat\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./index\": 59\n        }],\n        57: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelArray\n          } = require('./array');\n          class WebGLKernelValueHTMLImage extends WebGLKernelArray {\n            constructor(value, settings) {\n              super(value, settings);\n              const {\n                width,\n                height\n              } = value;\n              this.checkSize(width, height);\n              this.dimensions = [width, height, 1];\n              this.textureSize = [width, height];\n              this.uploadValue = value;\n            }\n            getStringValueHandler() {\n              return `const uploadValue_${this.name} = ${this.varName};\\n`;\n            }\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`]);\n            }\n            updateValue(inputImage) {\n              if (inputImage.constructor !== this.initialValueConstructor) {\n                this.onUpdateValueMismatch(inputImage.constructor);\n                return;\n              }\n              const {\n                context: gl\n              } = this;\n              gl.activeTexture(this.contextHandle);\n              gl.bindTexture(gl.TEXTURE_2D, this.texture);\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = inputImage);\n              this.kernel.setUniform1i(this.id, this.index);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueHTMLImage\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./array\": 40\n        }],\n        58: [function (require, module, exports) {\n          const {\n            WebGLKernelValueHTMLImage\n          } = require('./html-image');\n          class WebGLKernelValueHTMLVideo extends WebGLKernelValueHTMLImage {}\n          module.exports = {\n            WebGLKernelValueHTMLVideo\n          };\n        }, {\n          \"./html-image\": 57\n        }],\n        59: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            KernelValue\n          } = require('../../kernel-value');\n          class WebGLKernelValue extends KernelValue {\n            constructor(value, settings) {\n              super(value, settings);\n              this.dimensionsId = null;\n              this.sizeId = null;\n              this.initialValueConstructor = value.constructor;\n              this.onRequestTexture = settings.onRequestTexture;\n              this.onRequestIndex = settings.onRequestIndex;\n              this.uploadValue = null;\n              this.textureSize = null;\n              this.bitRatio = null;\n              this.prevArg = null;\n            }\n            get id() {\n              return `${this.origin}_${utils.sanitizeName(this.name)}`;\n            }\n            setup() {}\n            getTransferArrayType(value) {\n              if (Array.isArray(value[0])) {\n                return this.getTransferArrayType(value[0]);\n              }\n              switch (value.constructor) {\n                case Array:\n                case Int32Array:\n                case Int16Array:\n                case Int8Array:\n                  return Float32Array;\n                case Uint8ClampedArray:\n                case Uint8Array:\n                case Uint16Array:\n                case Uint32Array:\n                case Float32Array:\n                case Float64Array:\n                  return value.constructor;\n              }\n              console.warn('Unfamiliar constructor type.  Will go ahead and use, but likley this may result in a transfer of zeros');\n              return value.constructor;\n            }\n            getStringValueHandler() {\n              throw new Error(`\"getStringValueHandler\" not implemented on ${this.constructor.name}`);\n            }\n            getVariablePrecisionString() {\n              return this.kernel.getVariablePrecisionString(this.textureSize || undefined, this.tactic || undefined);\n            }\n            destroy() {}\n          }\n          module.exports = {\n            WebGLKernelValue\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../kernel-value\": 35\n        }],\n        60: [function (require, module, exports) {\n          require('../../../utils');\n          const {\n            WebGLKernelValue\n          } = require('./index');\n          class WebGLKernelValueInteger extends WebGLKernelValue {\n            constructor(value, settings) {\n              super(value, settings);\n              this.uploadValue = value;\n            }\n            getStringValueHandler() {\n              return `const uploadValue_${this.name} = ${this.varName};\\n`;\n            }\n            getSource(value) {\n              if (this.origin === 'constants') {\n                return `const int ${this.id} = ${parseInt(value)};\\n`;\n              }\n              return `uniform int ${this.id};\\n`;\n            }\n            updateValue(value) {\n              if (this.origin === 'constants') return;\n              this.kernel.setUniform1i(this.id, this.uploadValue = value);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueInteger\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./index\": 59\n        }],\n        61: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelArray\n          } = require('./array');\n          const sameError = `Source and destination textures are the same.  Use immutable = true and manually cleanup kernel output texture memory with texture.delete()`;\n          class WebGLKernelValueMemoryOptimizedNumberTexture extends WebGLKernelArray {\n            constructor(value, settings) {\n              super(value, settings);\n              const [width, height] = value.size;\n              this.checkSize(width, height);\n              this.dimensions = value.dimensions;\n              this.textureSize = value.size;\n              this.uploadValue = value.texture;\n              this.forceUploadEachRun = true;\n            }\n            setup() {\n              this.setupTexture();\n            }\n            getStringValueHandler() {\n              return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n            }\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`]);\n            }\n            updateValue(inputTexture) {\n              if (inputTexture.constructor !== this.initialValueConstructor) {\n                this.onUpdateValueMismatch(inputTexture.constructor);\n                return;\n              }\n              if (this.checkContext && inputTexture.context !== this.context) {\n                throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n              }\n              const {\n                kernel,\n                context: gl\n              } = this;\n              if (kernel.pipeline) {\n                if (kernel.immutable) {\n                  kernel.updateTextureArgumentRefs(this, inputTexture);\n                } else {\n                  if (kernel.texture && kernel.texture.texture === inputTexture.texture) {\n                    throw new Error(sameError);\n                  } else if (kernel.mappedTextures) {\n                    const {\n                      mappedTextures\n                    } = kernel;\n                    for (let i = 0; i < mappedTextures.length; i++) {\n                      if (mappedTextures[i].texture === inputTexture.texture) {\n                        throw new Error(sameError);\n                      }\n                    }\n                  }\n                }\n              }\n              gl.activeTexture(this.contextHandle);\n              gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n              this.kernel.setUniform1i(this.id, this.index);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueMemoryOptimizedNumberTexture,\n            sameError\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./array\": 40\n        }],\n        62: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelArray\n          } = require('./array');\n          const {\n            sameError\n          } = require('./memory-optimized-number-texture');\n          class WebGLKernelValueNumberTexture extends WebGLKernelArray {\n            constructor(value, settings) {\n              super(value, settings);\n              const [width, height] = value.size;\n              this.checkSize(width, height);\n              const {\n                size: textureSize,\n                dimensions\n              } = value;\n              this.bitRatio = this.getBitRatio(value);\n              this.dimensions = dimensions;\n              this.textureSize = textureSize;\n              this.uploadValue = value.texture;\n              this.forceUploadEachRun = true;\n            }\n            setup() {\n              this.setupTexture();\n            }\n            getStringValueHandler() {\n              return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n            }\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`]);\n            }\n            updateValue(inputTexture) {\n              if (inputTexture.constructor !== this.initialValueConstructor) {\n                this.onUpdateValueMismatch(inputTexture.constructor);\n                return;\n              }\n              if (this.checkContext && inputTexture.context !== this.context) {\n                throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n              }\n              const {\n                kernel,\n                context: gl\n              } = this;\n              if (kernel.pipeline) {\n                if (kernel.immutable) {\n                  kernel.updateTextureArgumentRefs(this, inputTexture);\n                } else {\n                  if (kernel.texture && kernel.texture.texture === inputTexture.texture) {\n                    throw new Error(sameError);\n                  } else if (kernel.mappedTextures) {\n                    const {\n                      mappedTextures\n                    } = kernel;\n                    for (let i = 0; i < mappedTextures.length; i++) {\n                      if (mappedTextures[i].texture === inputTexture.texture) {\n                        throw new Error(sameError);\n                      }\n                    }\n                  }\n                }\n              }\n              gl.activeTexture(this.contextHandle);\n              gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n              this.kernel.setUniform1i(this.id, this.index);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueNumberTexture\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./array\": 40,\n          \"./memory-optimized-number-texture\": 61\n        }],\n        63: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelArray\n          } = require('./array');\n          class WebGLKernelValueSingleArray extends WebGLKernelArray {\n            constructor(value, settings) {\n              super(value, settings);\n              this.bitRatio = 4;\n              this.dimensions = utils.getDimensions(value, true);\n              this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n              this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n              this.checkSize(this.textureSize[0], this.textureSize[1]);\n              this.uploadValue = new Float32Array(this.uploadArrayLength);\n            }\n            getStringValueHandler() {\n              return utils.linesToString([`const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`, `flattenTo(${this.varName}, uploadValue_${this.name})`]);\n            }\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`]);\n            }\n            updateValue(value) {\n              if (value.constructor !== this.initialValueConstructor) {\n                this.onUpdateValueMismatch(value.constructor);\n                return;\n              }\n              const {\n                context: gl\n              } = this;\n              utils.flattenTo(value, this.uploadValue);\n              gl.activeTexture(this.contextHandle);\n              gl.bindTexture(gl.TEXTURE_2D, this.texture);\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n              this.kernel.setUniform1i(this.id, this.index);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueSingleArray\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./array\": 40\n        }],\n        64: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelArray\n          } = require('./array');\n          class WebGLKernelValueSingleArray1DI extends WebGLKernelArray {\n            constructor(value, settings) {\n              super(value, settings);\n              this.bitRatio = 4;\n              this.setShape(value);\n            }\n            setShape(value) {\n              const valueDimensions = utils.getDimensions(value, true);\n              this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n              this.dimensions = new Int32Array([valueDimensions[1], 1, 1]);\n              this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n              this.checkSize(this.textureSize[0], this.textureSize[1]);\n              this.uploadValue = new Float32Array(this.uploadArrayLength);\n            }\n            getStringValueHandler() {\n              return utils.linesToString([`const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`, `flattenTo(${this.varName}, uploadValue_${this.name})`]);\n            }\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`]);\n            }\n            updateValue(value) {\n              if (value.constructor !== this.initialValueConstructor) {\n                this.onUpdateValueMismatch(value.constructor);\n                return;\n              }\n              const {\n                context: gl\n              } = this;\n              utils.flatten2dArrayTo(value, this.uploadValue);\n              gl.activeTexture(this.contextHandle);\n              gl.bindTexture(gl.TEXTURE_2D, this.texture);\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n              this.kernel.setUniform1i(this.id, this.index);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueSingleArray1DI\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./array\": 40\n        }],\n        65: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelArray\n          } = require('./array');\n          class WebGLKernelValueSingleArray2DI extends WebGLKernelArray {\n            constructor(value, settings) {\n              super(value, settings);\n              this.bitRatio = 4;\n              this.setShape(value);\n            }\n            setShape(value) {\n              const valueDimensions = utils.getDimensions(value, true);\n              this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n              this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], 1]);\n              this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n              this.checkSize(this.textureSize[0], this.textureSize[1]);\n              this.uploadValue = new Float32Array(this.uploadArrayLength);\n            }\n            getStringValueHandler() {\n              return utils.linesToString([`const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`, `flattenTo(${this.varName}, uploadValue_${this.name})`]);\n            }\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`]);\n            }\n            updateValue(value) {\n              if (value.constructor !== this.initialValueConstructor) {\n                this.onUpdateValueMismatch(value.constructor);\n                return;\n              }\n              const {\n                context: gl\n              } = this;\n              utils.flatten3dArrayTo(value, this.uploadValue);\n              gl.activeTexture(this.contextHandle);\n              gl.bindTexture(gl.TEXTURE_2D, this.texture);\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n              this.kernel.setUniform1i(this.id, this.index);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueSingleArray2DI\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./array\": 40\n        }],\n        66: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelArray\n          } = require('./array');\n          class WebGLKernelValueSingleArray3DI extends WebGLKernelArray {\n            constructor(value, settings) {\n              super(value, settings);\n              this.bitRatio = 4;\n              this.setShape(value);\n            }\n            setShape(value) {\n              const valueDimensions = utils.getDimensions(value, true);\n              this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n              this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], valueDimensions[3]]);\n              this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n              this.checkSize(this.textureSize[0], this.textureSize[1]);\n              this.uploadValue = new Float32Array(this.uploadArrayLength);\n            }\n            getStringValueHandler() {\n              return utils.linesToString([`const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`, `flattenTo(${this.varName}, uploadValue_${this.name})`]);\n            }\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`]);\n            }\n            updateValue(value) {\n              if (value.constructor !== this.initialValueConstructor) {\n                this.onUpdateValueMismatch(value.constructor);\n                return;\n              }\n              const {\n                context: gl\n              } = this;\n              utils.flatten4dArrayTo(value, this.uploadValue);\n              gl.activeTexture(this.contextHandle);\n              gl.bindTexture(gl.TEXTURE_2D, this.texture);\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n              this.kernel.setUniform1i(this.id, this.index);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueSingleArray3DI\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./array\": 40\n        }],\n        67: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelArray\n          } = require('./array');\n          class WebGLKernelValueSingleInput extends WebGLKernelArray {\n            constructor(value, settings) {\n              super(value, settings);\n              this.bitRatio = 4;\n              let [w, h, d] = value.size;\n              this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n              this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n              this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n              this.checkSize(this.textureSize[0], this.textureSize[1]);\n              this.uploadValue = new Float32Array(this.uploadArrayLength);\n            }\n            getStringValueHandler() {\n              return utils.linesToString([`const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`, `flattenTo(${this.varName}.value, uploadValue_${this.name})`]);\n            }\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`]);\n            }\n            updateValue(input) {\n              if (input.constructor !== this.initialValueConstructor) {\n                this.onUpdateValueMismatch(input.constructor);\n                return;\n              }\n              const {\n                context: gl\n              } = this;\n              utils.flattenTo(input.value, this.uploadValue);\n              gl.activeTexture(this.contextHandle);\n              gl.bindTexture(gl.TEXTURE_2D, this.texture);\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n              this.kernel.setUniform1i(this.id, this.index);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueSingleInput\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./array\": 40\n        }],\n        68: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelArray\n          } = require('./array');\n          class WebGLKernelValueUnsignedArray extends WebGLKernelArray {\n            constructor(value, settings) {\n              super(value, settings);\n              this.bitRatio = this.getBitRatio(value);\n              this.dimensions = utils.getDimensions(value, true);\n              this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n              this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n              this.checkSize(this.textureSize[0], this.textureSize[1]);\n              this.TranserArrayType = this.getTransferArrayType(value);\n              this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n              this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n            }\n            getStringValueHandler() {\n              return utils.linesToString([`const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`, `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`, `flattenTo(${this.varName}, preUploadValue_${this.name})`]);\n            }\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`]);\n            }\n            updateValue(value) {\n              if (value.constructor !== this.initialValueConstructor) {\n                this.onUpdateValueMismatch(value.constructor);\n                return;\n              }\n              const {\n                context: gl\n              } = this;\n              utils.flattenTo(value, this.preUploadValue);\n              gl.activeTexture(this.contextHandle);\n              gl.bindTexture(gl.TEXTURE_2D, this.texture);\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n              this.kernel.setUniform1i(this.id, this.index);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueUnsignedArray\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./array\": 40\n        }],\n        69: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelArray\n          } = require('./array');\n          class WebGLKernelValueUnsignedInput extends WebGLKernelArray {\n            constructor(value, settings) {\n              super(value, settings);\n              this.bitRatio = this.getBitRatio(value);\n              const [w, h, d] = value.size;\n              this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n              this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n              this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n              this.checkSize(this.textureSize[0], this.textureSize[1]);\n              this.TranserArrayType = this.getTransferArrayType(value.value);\n              this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n              this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n            }\n            getStringValueHandler() {\n              return utils.linesToString([`const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`, `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`, `flattenTo(${this.varName}.value, preUploadValue_${this.name})`]);\n            }\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`]);\n            }\n            updateValue(input) {\n              if (input.constructor !== this.initialValueConstructor) {\n                this.onUpdateValueMismatch(value.constructor);\n                return;\n              }\n              const {\n                context: gl\n              } = this;\n              utils.flattenTo(input.value, this.preUploadValue);\n              gl.activeTexture(this.contextHandle);\n              gl.bindTexture(gl.TEXTURE_2D, this.texture);\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n              this.kernel.setUniform1i(this.id, this.index);\n            }\n          }\n          module.exports = {\n            WebGLKernelValueUnsignedInput\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./array\": 40\n        }],\n        70: [function (require, module, exports) {\n          const {\n            GLKernel\n          } = require('../gl/kernel');\n          const {\n            FunctionBuilder\n          } = require('../function-builder');\n          const {\n            WebGLFunctionNode\n          } = require('./function-node');\n          const {\n            utils\n          } = require('../../utils');\n          const mrud = require('../../plugins/math-random-uniformly-distributed');\n          const {\n            fragmentShader\n          } = require('./fragment-shader');\n          const {\n            vertexShader\n          } = require('./vertex-shader');\n          const {\n            glKernelString\n          } = require('../gl/kernel-string');\n          const {\n            lookupKernelValueType\n          } = require('./kernel-value-maps');\n          let isSupported = null;\n          let testCanvas = null;\n          let testContext = null;\n          let testExtensions = null;\n          let features = null;\n          const plugins = [mrud];\n          const canvases = [];\n          const maxTexSizes = {};\n          class WebGLKernel extends GLKernel {\n            static get isSupported() {\n              if (isSupported !== null) {\n                return isSupported;\n              }\n              this.setupFeatureChecks();\n              isSupported = this.isContextMatch(testContext);\n              return isSupported;\n            }\n            static setupFeatureChecks() {\n              if (typeof document !== 'undefined') {\n                testCanvas = document.createElement('canvas');\n              } else if (typeof OffscreenCanvas !== 'undefined') {\n                testCanvas = new OffscreenCanvas(0, 0);\n              }\n              if (!testCanvas) return;\n              testContext = testCanvas.getContext('webgl') || testCanvas.getContext('experimental-webgl');\n              if (!testContext || !testContext.getExtension) return;\n              testExtensions = {\n                OES_texture_float: testContext.getExtension('OES_texture_float'),\n                OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n                OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n                WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers')\n              };\n              features = this.getFeatures();\n            }\n            static isContextMatch(context) {\n              if (typeof WebGLRenderingContext !== 'undefined') {\n                return context instanceof WebGLRenderingContext;\n              }\n              return false;\n            }\n            static getIsTextureFloat() {\n              return Boolean(testExtensions.OES_texture_float);\n            }\n            static getIsDrawBuffers() {\n              return Boolean(testExtensions.WEBGL_draw_buffers);\n            }\n            static getChannelCount() {\n              return testExtensions.WEBGL_draw_buffers ? testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) : 1;\n            }\n            static getMaxTextureSize() {\n              return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n            }\n            static lookupKernelValueType(type, dynamic, precision, value) {\n              return lookupKernelValueType(type, dynamic, precision, value);\n            }\n            static get testCanvas() {\n              return testCanvas;\n            }\n            static get testContext() {\n              return testContext;\n            }\n            static get features() {\n              return features;\n            }\n            static get fragmentShader() {\n              return fragmentShader;\n            }\n            static get vertexShader() {\n              return vertexShader;\n            }\n            constructor(source, settings) {\n              super(source, settings);\n              this.program = null;\n              this.pipeline = settings.pipeline;\n              this.endianness = utils.systemEndianness();\n              this.extensions = {};\n              this.argumentTextureCount = 0;\n              this.constantTextureCount = 0;\n              this.fragShader = null;\n              this.vertShader = null;\n              this.drawBuffersMap = null;\n              this.maxTexSize = null;\n              this.onRequestSwitchKernel = null;\n              this.texture = null;\n              this.mappedTextures = null;\n              this.mergeSettings(source.settings || settings);\n              this.threadDim = null;\n              this.framebuffer = null;\n              this.buffer = null;\n              this.textureCache = [];\n              this.programUniformLocationCache = {};\n              this.uniform1fCache = {};\n              this.uniform1iCache = {};\n              this.uniform2fCache = {};\n              this.uniform2fvCache = {};\n              this.uniform2ivCache = {};\n              this.uniform3fvCache = {};\n              this.uniform3ivCache = {};\n              this.uniform4fvCache = {};\n              this.uniform4ivCache = {};\n            }\n            initCanvas() {\n              if (typeof document !== 'undefined') {\n                const canvas = document.createElement('canvas');\n                canvas.width = 2;\n                canvas.height = 2;\n                return canvas;\n              } else if (typeof OffscreenCanvas !== 'undefined') {\n                return new OffscreenCanvas(0, 0);\n              }\n            }\n            initContext() {\n              const settings = {\n                alpha: false,\n                depth: false,\n                antialias: false\n              };\n              return this.canvas.getContext('webgl', settings) || this.canvas.getContext('experimental-webgl', settings);\n            }\n            initPlugins(settings) {\n              const pluginsToUse = [];\n              const {\n                source\n              } = this;\n              if (typeof source === 'string') {\n                for (let i = 0; i < plugins.length; i++) {\n                  const plugin = plugins[i];\n                  if (source.match(plugin.functionMatch)) {\n                    pluginsToUse.push(plugin);\n                  }\n                }\n              } else if (typeof source === 'object') {\n                if (settings.pluginNames) {\n                  for (let i = 0; i < plugins.length; i++) {\n                    const plugin = plugins[i];\n                    const usePlugin = settings.pluginNames.some(pluginName => pluginName === plugin.name);\n                    if (usePlugin) {\n                      pluginsToUse.push(plugin);\n                    }\n                  }\n                }\n              }\n              return pluginsToUse;\n            }\n            initExtensions() {\n              this.extensions = {\n                OES_texture_float: this.context.getExtension('OES_texture_float'),\n                OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n                OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n                WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n                WEBGL_color_buffer_float: this.context.getExtension('WEBGL_color_buffer_float')\n              };\n            }\n            validateSettings(args) {\n              if (!this.validate) {\n                this.texSize = utils.getKernelTextureSize({\n                  optimizeFloatMemory: this.optimizeFloatMemory,\n                  precision: this.precision\n                }, this.output);\n                return;\n              }\n              const {\n                features\n              } = this.constructor;\n              if (this.optimizeFloatMemory === true && !features.isTextureFloat) {\n                throw new Error('Float textures are not supported');\n              } else if (this.precision === 'single' && !features.isFloatRead) {\n                throw new Error('Single precision not supported');\n              } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n                this.precision = features.isFloatRead ? 'single' : 'unsigned';\n              }\n              if (this.subKernels && this.subKernels.length > 0 && !this.extensions.WEBGL_draw_buffers) {\n                throw new Error('could not instantiate draw buffers extension');\n              }\n              if (this.fixIntegerDivisionAccuracy === null) {\n                this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n              } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n                this.fixIntegerDivisionAccuracy = false;\n              }\n              this.checkOutput();\n              if (!this.output || this.output.length === 0) {\n                if (args.length !== 1) {\n                  throw new Error('Auto output only supported for kernels with only one input');\n                }\n                const argType = utils.getVariableType(args[0], this.strictIntegers);\n                switch (argType) {\n                  case 'Array':\n                    this.output = utils.getDimensions(argType);\n                    break;\n                  case 'NumberTexture':\n                  case 'MemoryOptimizedNumberTexture':\n                  case 'ArrayTexture(1)':\n                  case 'ArrayTexture(2)':\n                  case 'ArrayTexture(3)':\n                  case 'ArrayTexture(4)':\n                    this.output = args[0].output;\n                    break;\n                  default:\n                    throw new Error('Auto output not supported for input type: ' + argType);\n                }\n              }\n              if (this.graphical) {\n                if (this.output.length !== 2) {\n                  throw new Error('Output must have 2 dimensions on graphical mode');\n                }\n                if (this.precision === 'precision') {\n                  this.precision = 'unsigned';\n                  console.warn('Cannot use graphical mode and single precision at the same time');\n                }\n                this.texSize = utils.clone(this.output);\n                return;\n              } else if (this.precision === null && features.isTextureFloat) {\n                this.precision = 'single';\n              }\n              this.texSize = utils.getKernelTextureSize({\n                optimizeFloatMemory: this.optimizeFloatMemory,\n                precision: this.precision\n              }, this.output);\n              this.checkTextureSize();\n            }\n            updateMaxTexSize() {\n              const {\n                texSize,\n                canvas\n              } = this;\n              if (this.maxTexSize === null) {\n                let canvasIndex = canvases.indexOf(canvas);\n                if (canvasIndex === -1) {\n                  canvasIndex = canvases.length;\n                  canvases.push(canvas);\n                  maxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\n                }\n                this.maxTexSize = maxTexSizes[canvasIndex];\n              }\n              if (this.maxTexSize[0] < texSize[0]) {\n                this.maxTexSize[0] = texSize[0];\n              }\n              if (this.maxTexSize[1] < texSize[1]) {\n                this.maxTexSize[1] = texSize[1];\n              }\n            }\n            setupArguments(args) {\n              this.kernelArguments = [];\n              this.argumentTextureCount = 0;\n              const needsArgumentTypes = this.argumentTypes === null;\n              if (needsArgumentTypes) {\n                this.argumentTypes = [];\n              }\n              this.argumentSizes = [];\n              this.argumentBitRatios = [];\n              if (args.length < this.argumentNames.length) {\n                throw new Error('not enough arguments for kernel');\n              } else if (args.length > this.argumentNames.length) {\n                throw new Error('too many arguments for kernel');\n              }\n              const {\n                context: gl\n              } = this;\n              let textureIndexes = 0;\n              const onRequestTexture = () => {\n                return this.createTexture();\n              };\n              const onRequestIndex = () => {\n                return this.constantTextureCount + textureIndexes++;\n              };\n              const onUpdateValueMismatch = constructor => {\n                this.switchKernels({\n                  type: 'argumentMismatch',\n                  needed: constructor\n                });\n              };\n              const onRequestContextHandle = () => {\n                return gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount++;\n              };\n              for (let index = 0; index < args.length; index++) {\n                const value = args[index];\n                const name = this.argumentNames[index];\n                let type;\n                if (needsArgumentTypes) {\n                  type = utils.getVariableType(value, this.strictIntegers);\n                  this.argumentTypes.push(type);\n                } else {\n                  type = this.argumentTypes[index];\n                }\n                const KernelValue = this.constructor.lookupKernelValueType(type, this.dynamicArguments ? 'dynamic' : 'static', this.precision, args[index]);\n                if (KernelValue === null) {\n                  return this.requestFallback(args);\n                }\n                const kernelArgument = new KernelValue(value, {\n                  name,\n                  type,\n                  tactic: this.tactic,\n                  origin: 'user',\n                  context: gl,\n                  checkContext: this.checkContext,\n                  kernel: this,\n                  strictIntegers: this.strictIntegers,\n                  onRequestTexture,\n                  onRequestIndex,\n                  onUpdateValueMismatch,\n                  onRequestContextHandle\n                });\n                this.kernelArguments.push(kernelArgument);\n                kernelArgument.setup();\n                this.argumentSizes.push(kernelArgument.textureSize);\n                this.argumentBitRatios[index] = kernelArgument.bitRatio;\n              }\n            }\n            createTexture() {\n              const texture = this.context.createTexture();\n              this.textureCache.push(texture);\n              return texture;\n            }\n            setupConstants(args) {\n              const {\n                context: gl\n              } = this;\n              this.kernelConstants = [];\n              this.forceUploadKernelConstants = [];\n              let needsConstantTypes = this.constantTypes === null;\n              if (needsConstantTypes) {\n                this.constantTypes = {};\n              }\n              this.constantBitRatios = {};\n              let textureIndexes = 0;\n              for (const name in this.constants) {\n                const value = this.constants[name];\n                let type;\n                if (needsConstantTypes) {\n                  type = utils.getVariableType(value, this.strictIntegers);\n                  this.constantTypes[name] = type;\n                } else {\n                  type = this.constantTypes[name];\n                }\n                const KernelValue = this.constructor.lookupKernelValueType(type, 'static', this.precision, value);\n                if (KernelValue === null) {\n                  return this.requestFallback(args);\n                }\n                const kernelValue = new KernelValue(value, {\n                  name,\n                  type,\n                  tactic: this.tactic,\n                  origin: 'constants',\n                  context: this.context,\n                  checkContext: this.checkContext,\n                  kernel: this,\n                  strictIntegers: this.strictIntegers,\n                  onRequestTexture: () => {\n                    return this.createTexture();\n                  },\n                  onRequestIndex: () => {\n                    return textureIndexes++;\n                  },\n                  onRequestContextHandle: () => {\n                    return gl.TEXTURE0 + this.constantTextureCount++;\n                  }\n                });\n                this.constantBitRatios[name] = kernelValue.bitRatio;\n                this.kernelConstants.push(kernelValue);\n                kernelValue.setup();\n                if (kernelValue.forceUploadEachRun) {\n                  this.forceUploadKernelConstants.push(kernelValue);\n                }\n              }\n            }\n            build() {\n              if (this.built) return;\n              this.initExtensions();\n              this.validateSettings(arguments);\n              this.setupConstants(arguments);\n              if (this.fallbackRequested) return;\n              this.setupArguments(arguments);\n              if (this.fallbackRequested) return;\n              this.updateMaxTexSize();\n              this.translateSource();\n              const failureResult = this.pickRenderStrategy(arguments);\n              if (failureResult) {\n                return failureResult;\n              }\n              const {\n                texSize,\n                context: gl,\n                canvas\n              } = this;\n              gl.enable(gl.SCISSOR_TEST);\n              if (this.pipeline && this.precision === 'single') {\n                gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n                canvas.width = this.maxTexSize[0];\n                canvas.height = this.maxTexSize[1];\n              } else {\n                gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n                canvas.width = this.maxTexSize[0];\n                canvas.height = this.maxTexSize[1];\n              }\n              const threadDim = this.threadDim = Array.from(this.output);\n              while (threadDim.length < 3) {\n                threadDim.push(1);\n              }\n              const compiledVertexShader = this.getVertexShader(arguments);\n              const vertShader = gl.createShader(gl.VERTEX_SHADER);\n              gl.shaderSource(vertShader, compiledVertexShader);\n              gl.compileShader(vertShader);\n              this.vertShader = vertShader;\n              const compiledFragmentShader = this.getFragmentShader(arguments);\n              const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n              gl.shaderSource(fragShader, compiledFragmentShader);\n              gl.compileShader(fragShader);\n              this.fragShader = fragShader;\n              if (this.debug) {\n                console.log('GLSL Shader Output:');\n                console.log(compiledFragmentShader);\n              }\n              if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\n                throw new Error('Error compiling vertex shader: ' + gl.getShaderInfoLog(vertShader));\n              }\n              if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\n                throw new Error('Error compiling fragment shader: ' + gl.getShaderInfoLog(fragShader));\n              }\n              const program = this.program = gl.createProgram();\n              gl.attachShader(program, vertShader);\n              gl.attachShader(program, fragShader);\n              gl.linkProgram(program);\n              this.framebuffer = gl.createFramebuffer();\n              this.framebuffer.width = texSize[0];\n              this.framebuffer.height = texSize[1];\n              this.rawValueFramebuffers = {};\n              const vertices = new Float32Array([-1, -1, 1, -1, -1, 1, 1, 1]);\n              const texCoords = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n              const texCoordOffset = vertices.byteLength;\n              let buffer = this.buffer;\n              if (!buffer) {\n                buffer = this.buffer = gl.createBuffer();\n                gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n                gl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\n              } else {\n                gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n              }\n              gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n              gl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\n              const aPosLoc = gl.getAttribLocation(this.program, 'aPos');\n              gl.enableVertexAttribArray(aPosLoc);\n              gl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, false, 0, 0);\n              const aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\n              gl.enableVertexAttribArray(aTexCoordLoc);\n              gl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, false, 0, texCoordOffset);\n              gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n              let i = 0;\n              gl.useProgram(this.program);\n              for (let p in this.constants) {\n                this.kernelConstants[i++].updateValue(this.constants[p]);\n              }\n              this._setupOutputTexture();\n              if (this.subKernels !== null && this.subKernels.length > 0) {\n                this._mappedTextureSwitched = {};\n                this._setupSubOutputTextures();\n              }\n              this.buildSignature(arguments);\n              this.built = true;\n            }\n            translateSource() {\n              const functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\n                fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n              });\n              this.translatedSource = functionBuilder.getPrototypeString('kernel');\n              this.setupReturnTypes(functionBuilder);\n            }\n            setupReturnTypes(functionBuilder) {\n              if (!this.graphical && !this.returnType) {\n                this.returnType = functionBuilder.getKernelResultType();\n              }\n              if (this.subKernels && this.subKernels.length > 0) {\n                for (let i = 0; i < this.subKernels.length; i++) {\n                  const subKernel = this.subKernels[i];\n                  if (!subKernel.returnType) {\n                    subKernel.returnType = functionBuilder.getSubKernelResultType(i);\n                  }\n                }\n              }\n            }\n            run() {\n              const {\n                kernelArguments,\n                texSize,\n                forceUploadKernelConstants,\n                context: gl\n              } = this;\n              gl.useProgram(this.program);\n              gl.scissor(0, 0, texSize[0], texSize[1]);\n              if (this.dynamicOutput) {\n                this.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\n                this.setUniform2iv('uTexSize', texSize);\n              }\n              this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n              for (let i = 0; i < forceUploadKernelConstants.length; i++) {\n                const constant = forceUploadKernelConstants[i];\n                constant.updateValue(this.constants[constant.name]);\n                if (this.switchingKernels) return;\n              }\n              for (let i = 0; i < kernelArguments.length; i++) {\n                kernelArguments[i].updateValue(arguments[i]);\n                if (this.switchingKernels) return;\n              }\n              if (this.plugins) {\n                for (let i = 0; i < this.plugins.length; i++) {\n                  const plugin = this.plugins[i];\n                  if (plugin.onBeforeRun) {\n                    plugin.onBeforeRun(this);\n                  }\n                }\n              }\n              if (this.graphical) {\n                if (this.pipeline) {\n                  gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n                  gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n                  if (this.immutable) {\n                    this._replaceOutputTexture();\n                  }\n                  gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n                  return this.immutable ? this.texture.clone() : this.texture;\n                }\n                gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n                gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n                gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n                return;\n              }\n              gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n              if (this.immutable) {\n                this._replaceOutputTexture();\n              }\n              if (this.subKernels !== null) {\n                if (this.immutable) {\n                  this._replaceSubOutputTextures();\n                }\n                this.drawBuffers();\n              }\n              gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n            }\n            drawBuffers() {\n              this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap);\n            }\n            getInternalFormat() {\n              return this.context.RGBA;\n            }\n            getTextureFormat() {\n              const {\n                context: gl\n              } = this;\n              switch (this.getInternalFormat()) {\n                case gl.RGBA:\n                  return gl.RGBA;\n                default:\n                  throw new Error('Unknown internal format');\n              }\n            }\n            _replaceOutputTexture() {\n              if (this.texture.beforeMutate() || this._textureSwitched) {\n                const gl = this.context;\n                gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n                this._textureSwitched = false;\n              }\n            }\n            _setupOutputTexture() {\n              const gl = this.context;\n              const texSize = this.texSize;\n              if (this.texture) {\n                gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n                return;\n              }\n              const texture = this.createTexture();\n              gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n              gl.bindTexture(gl.TEXTURE_2D, texture);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n              const format = this.getInternalFormat();\n              if (this.precision === 'single') {\n                gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n              } else {\n                gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n              }\n              gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n              this.texture = new this.TextureConstructor({\n                texture,\n                size: texSize,\n                dimensions: this.threadDim,\n                output: this.output,\n                context: this.context,\n                internalFormat: this.getInternalFormat(),\n                textureFormat: this.getTextureFormat(),\n                kernel: this\n              });\n            }\n            _replaceSubOutputTextures() {\n              const gl = this.context;\n              for (let i = 0; i < this.mappedTextures.length; i++) {\n                const mappedTexture = this.mappedTextures[i];\n                if (mappedTexture.beforeMutate() || this._mappedTextureSwitched[i]) {\n                  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, mappedTexture.texture, 0);\n                  this._mappedTextureSwitched[i] = false;\n                }\n              }\n            }\n            _setupSubOutputTextures() {\n              const gl = this.context;\n              if (this.mappedTextures) {\n                for (let i = 0; i < this.subKernels.length; i++) {\n                  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);\n                }\n                return;\n              }\n              const texSize = this.texSize;\n              this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n              this.mappedTextures = [];\n              for (let i = 0; i < this.subKernels.length; i++) {\n                const texture = this.createTexture();\n                this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n                gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n                gl.bindTexture(gl.TEXTURE_2D, texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                if (this.precision === 'single') {\n                  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n                } else {\n                  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n                }\n                gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n                this.mappedTextures.push(new this.TextureConstructor({\n                  texture,\n                  size: texSize,\n                  dimensions: this.threadDim,\n                  output: this.output,\n                  context: this.context,\n                  internalFormat: this.getInternalFormat(),\n                  textureFormat: this.getTextureFormat(),\n                  kernel: this\n                }));\n              }\n            }\n            setUniform1f(name, value) {\n              if (this.uniform1fCache.hasOwnProperty(name)) {\n                const cache = this.uniform1fCache[name];\n                if (value === cache) {\n                  return;\n                }\n              }\n              this.uniform1fCache[name] = value;\n              const loc = this.getUniformLocation(name);\n              this.context.uniform1f(loc, value);\n            }\n            setUniform1i(name, value) {\n              if (this.uniform1iCache.hasOwnProperty(name)) {\n                const cache = this.uniform1iCache[name];\n                if (value === cache) {\n                  return;\n                }\n              }\n              this.uniform1iCache[name] = value;\n              const loc = this.getUniformLocation(name);\n              this.context.uniform1i(loc, value);\n            }\n            setUniform2f(name, value1, value2) {\n              if (this.uniform2fCache.hasOwnProperty(name)) {\n                const cache = this.uniform2fCache[name];\n                if (value1 === cache[0] && value2 === cache[1]) {\n                  return;\n                }\n              }\n              this.uniform2fCache[name] = [value1, value2];\n              const loc = this.getUniformLocation(name);\n              this.context.uniform2f(loc, value1, value2);\n            }\n            setUniform2fv(name, value) {\n              if (this.uniform2fvCache.hasOwnProperty(name)) {\n                const cache = this.uniform2fvCache[name];\n                if (value[0] === cache[0] && value[1] === cache[1]) {\n                  return;\n                }\n              }\n              this.uniform2fvCache[name] = value;\n              const loc = this.getUniformLocation(name);\n              this.context.uniform2fv(loc, value);\n            }\n            setUniform2iv(name, value) {\n              if (this.uniform2ivCache.hasOwnProperty(name)) {\n                const cache = this.uniform2ivCache[name];\n                if (value[0] === cache[0] && value[1] === cache[1]) {\n                  return;\n                }\n              }\n              this.uniform2ivCache[name] = value;\n              const loc = this.getUniformLocation(name);\n              this.context.uniform2iv(loc, value);\n            }\n            setUniform3fv(name, value) {\n              if (this.uniform3fvCache.hasOwnProperty(name)) {\n                const cache = this.uniform3fvCache[name];\n                if (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2]) {\n                  return;\n                }\n              }\n              this.uniform3fvCache[name] = value;\n              const loc = this.getUniformLocation(name);\n              this.context.uniform3fv(loc, value);\n            }\n            setUniform3iv(name, value) {\n              if (this.uniform3ivCache.hasOwnProperty(name)) {\n                const cache = this.uniform3ivCache[name];\n                if (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2]) {\n                  return;\n                }\n              }\n              this.uniform3ivCache[name] = value;\n              const loc = this.getUniformLocation(name);\n              this.context.uniform3iv(loc, value);\n            }\n            setUniform4fv(name, value) {\n              if (this.uniform4fvCache.hasOwnProperty(name)) {\n                const cache = this.uniform4fvCache[name];\n                if (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2] && value[3] === cache[3]) {\n                  return;\n                }\n              }\n              this.uniform4fvCache[name] = value;\n              const loc = this.getUniformLocation(name);\n              this.context.uniform4fv(loc, value);\n            }\n            setUniform4iv(name, value) {\n              if (this.uniform4ivCache.hasOwnProperty(name)) {\n                const cache = this.uniform4ivCache[name];\n                if (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2] && value[3] === cache[3]) {\n                  return;\n                }\n              }\n              this.uniform4ivCache[name] = value;\n              const loc = this.getUniformLocation(name);\n              this.context.uniform4iv(loc, value);\n            }\n            getUniformLocation(name) {\n              if (this.programUniformLocationCache.hasOwnProperty(name)) {\n                return this.programUniformLocationCache[name];\n              }\n              return this.programUniformLocationCache[name] = this.context.getUniformLocation(this.program, name);\n            }\n            _getFragShaderArtifactMap(args) {\n              return {\n                HEADER: this._getHeaderString(),\n                LOOP_MAX: this._getLoopMaxString(),\n                PLUGINS: this._getPluginsString(),\n                CONSTANTS: this._getConstantsString(),\n                DECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\n                ENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\n                DIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),\n                INJECTED_NATIVE: this._getInjectedNative(),\n                MAIN_CONSTANTS: this._getMainConstantsString(),\n                MAIN_ARGUMENTS: this._getMainArgumentsString(args),\n                KERNEL: this.getKernelString(),\n                MAIN_RESULT: this.getMainResultString(),\n                FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n                INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n                SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n                SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration()\n              };\n            }\n            _getVertShaderArtifactMap(args) {\n              return {\n                FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n                INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n                SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n                SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration()\n              };\n            }\n            _getHeaderString() {\n              return this.subKernels !== null ? '#extension GL_EXT_draw_buffers : require\\n' : '';\n            }\n            _getLoopMaxString() {\n              return this.loopMaxIterations ? ` ${parseInt(this.loopMaxIterations)};\\n` : ' 1000;\\n';\n            }\n            _getPluginsString() {\n              if (!this.plugins) return '\\n';\n              return this.plugins.map(plugin => plugin.source && this.source.match(plugin.functionMatch) ? plugin.source : '').join('\\n');\n            }\n            _getConstantsString() {\n              const result = [];\n              const {\n                threadDim,\n                texSize\n              } = this;\n              if (this.dynamicOutput) {\n                result.push('uniform ivec3 uOutputDim', 'uniform ivec2 uTexSize');\n              } else {\n                result.push(`ivec3 uOutputDim = ivec3(${threadDim[0]}, ${threadDim[1]}, ${threadDim[2]})`, `ivec2 uTexSize = ivec2(${texSize[0]}, ${texSize[1]})`);\n              }\n              return utils.linesToString(result);\n            }\n            _getTextureCoordinate() {\n              const subKernels = this.subKernels;\n              if (subKernels === null || subKernels.length < 1) {\n                return 'varying vec2 vTexCoord;\\n';\n              } else {\n                return 'out vec2 vTexCoord;\\n';\n              }\n            }\n            _getDecode32EndiannessString() {\n              return this.endianness === 'LE' ? '' : '  texel.rgba = texel.abgr;\\n';\n            }\n            _getEncode32EndiannessString() {\n              return this.endianness === 'LE' ? '' : '  texel.rgba = texel.abgr;\\n';\n            }\n            _getDivideWithIntegerCheckString() {\n              return this.fixIntegerDivisionAccuracy ? `float divWithIntCheck(float x, float y) {\n  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\n    return float(int(x) / int(y));\n  }\n  return x / y;\n}\n\nfloat integerCorrectionModulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -(number - (divisor * floor(divWithIntCheck(number, divisor))));\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return number - (divisor * floor(divWithIntCheck(number, divisor)));\n}` : '';\n            }\n            _getMainArgumentsString(args) {\n              const results = [];\n              const {\n                argumentNames\n              } = this;\n              for (let i = 0; i < argumentNames.length; i++) {\n                results.push(this.kernelArguments[i].getSource(args[i]));\n              }\n              return results.join('');\n            }\n            _getInjectedNative() {\n              return this.injectedNative || '';\n            }\n            _getMainConstantsString() {\n              const result = [];\n              const {\n                constants\n              } = this;\n              if (constants) {\n                let i = 0;\n                for (const name in constants) {\n                  if (!this.constants.hasOwnProperty(name)) continue;\n                  result.push(this.kernelConstants[i++].getSource(this.constants[name]));\n                }\n              }\n              return result.join('');\n            }\n            getRawValueFramebuffer(width, height) {\n              if (!this.rawValueFramebuffers[width]) {\n                this.rawValueFramebuffers[width] = {};\n              }\n              if (!this.rawValueFramebuffers[width][height]) {\n                const framebuffer = this.context.createFramebuffer();\n                framebuffer.width = width;\n                framebuffer.height = height;\n                this.rawValueFramebuffers[width][height] = framebuffer;\n              }\n              return this.rawValueFramebuffers[width][height];\n            }\n            getKernelResultDeclaration() {\n              switch (this.returnType) {\n                case 'Array(2)':\n                  return 'vec2 kernelResult';\n                case 'Array(3)':\n                  return 'vec3 kernelResult';\n                case 'Array(4)':\n                  return 'vec4 kernelResult';\n                case 'LiteralInteger':\n                case 'Float':\n                case 'Number':\n                case 'Integer':\n                  return 'float kernelResult';\n                default:\n                  if (this.graphical) {\n                    return 'float kernelResult';\n                  } else {\n                    throw new Error(`unrecognized output type \"${this.returnType}\"`);\n                  }\n              }\n            }\n            getKernelString() {\n              const result = [this.getKernelResultDeclaration()];\n              const {\n                subKernels\n              } = this;\n              if (subKernels !== null) {\n                switch (this.returnType) {\n                  case 'Number':\n                  case 'Float':\n                  case 'Integer':\n                    for (let i = 0; i < subKernels.length; i++) {\n                      const subKernel = subKernels[i];\n                      result.push(subKernel.returnType === 'Integer' ? `int subKernelResult_${subKernel.name} = 0` : `float subKernelResult_${subKernel.name} = 0.0`);\n                    }\n                    break;\n                  case 'Array(2)':\n                    for (let i = 0; i < subKernels.length; i++) {\n                      result.push(`vec2 subKernelResult_${subKernels[i].name}`);\n                    }\n                    break;\n                  case 'Array(3)':\n                    for (let i = 0; i < subKernels.length; i++) {\n                      result.push(`vec3 subKernelResult_${subKernels[i].name}`);\n                    }\n                    break;\n                  case 'Array(4)':\n                    for (let i = 0; i < subKernels.length; i++) {\n                      result.push(`vec4 subKernelResult_${subKernels[i].name}`);\n                    }\n                    break;\n                }\n              }\n              return utils.linesToString(result) + this.translatedSource;\n            }\n            getMainResultGraphical() {\n              return utils.linesToString(['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragColor = actualColor']);\n            }\n            getMainResultPackedPixels() {\n              switch (this.returnType) {\n                case 'LiteralInteger':\n                case 'Number':\n                case 'Integer':\n                case 'Float':\n                  return this.getMainResultKernelPackedPixels() + this.getMainResultSubKernelPackedPixels();\n                default:\n                  throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n              }\n            }\n            getMainResultKernelPackedPixels() {\n              return utils.linesToString(['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', `  gl_FragData[0] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`]);\n            }\n            getMainResultSubKernelPackedPixels() {\n              const result = [];\n              if (!this.subKernels) return '';\n              for (let i = 0; i < this.subKernels.length; i++) {\n                const subKernel = this.subKernels[i];\n                if (subKernel.returnType === 'Integer') {\n                  result.push(`  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`);\n                } else {\n                  result.push(`  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`);\n                }\n              }\n              return utils.linesToString(result);\n            }\n            getMainResultMemoryOptimizedFloats() {\n              const result = ['  index *= 4'];\n              switch (this.returnType) {\n                case 'Number':\n                case 'Integer':\n                case 'Float':\n                  const channels = ['r', 'g', 'b', 'a'];\n                  for (let i = 0; i < channels.length; i++) {\n                    const channel = channels[i];\n                    this.getMainResultKernelMemoryOptimizedFloats(result, channel);\n                    this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\n                    if (i + 1 < channels.length) {\n                      result.push('  index += 1');\n                    }\n                  }\n                  break;\n                default:\n                  throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`);\n              }\n              return utils.linesToString(result);\n            }\n            getMainResultKernelMemoryOptimizedFloats(result, channel) {\n              result.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', `  gl_FragData[0].${channel} = kernelResult`);\n            }\n            getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n              if (!this.subKernels) return result;\n              for (let i = 0; i < this.subKernels.length; i++) {\n                const subKernel = this.subKernels[i];\n                if (subKernel.returnType === 'Integer') {\n                  result.push(`  gl_FragData[${i + 1}].${channel} = float(subKernelResult_${this.subKernels[i].name})`);\n                } else {\n                  result.push(`  gl_FragData[${i + 1}].${channel} = subKernelResult_${this.subKernels[i].name}`);\n                }\n              }\n            }\n            getMainResultKernelNumberTexture() {\n              return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragData[0][0] = kernelResult'];\n            }\n            getMainResultSubKernelNumberTexture() {\n              const result = [];\n              if (!this.subKernels) return result;\n              for (let i = 0; i < this.subKernels.length; ++i) {\n                const subKernel = this.subKernels[i];\n                if (subKernel.returnType === 'Integer') {\n                  result.push(`  gl_FragData[${i + 1}][0] = float(subKernelResult_${subKernel.name})`);\n                } else {\n                  result.push(`  gl_FragData[${i + 1}][0] = subKernelResult_${subKernel.name}`);\n                }\n              }\n              return result;\n            }\n            getMainResultKernelArray2Texture() {\n              return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragData[0][0] = kernelResult[0]', '  gl_FragData[0][1] = kernelResult[1]'];\n            }\n            getMainResultSubKernelArray2Texture() {\n              const result = [];\n              if (!this.subKernels) return result;\n              for (let i = 0; i < this.subKernels.length; ++i) {\n                result.push(`  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`, `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`);\n              }\n              return result;\n            }\n            getMainResultKernelArray3Texture() {\n              return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragData[0][0] = kernelResult[0]', '  gl_FragData[0][1] = kernelResult[1]', '  gl_FragData[0][2] = kernelResult[2]'];\n            }\n            getMainResultSubKernelArray3Texture() {\n              const result = [];\n              if (!this.subKernels) return result;\n              for (let i = 0; i < this.subKernels.length; ++i) {\n                result.push(`  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`, `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`, `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`);\n              }\n              return result;\n            }\n            getMainResultKernelArray4Texture() {\n              return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragData[0] = kernelResult'];\n            }\n            getMainResultSubKernelArray4Texture() {\n              const result = [];\n              if (!this.subKernels) return result;\n              switch (this.returnType) {\n                case 'Number':\n                case 'Float':\n                case 'Integer':\n                  for (let i = 0; i < this.subKernels.length; ++i) {\n                    const subKernel = this.subKernels[i];\n                    if (subKernel.returnType === 'Integer') {\n                      result.push(`  gl_FragData[${i + 1}] = float(subKernelResult_${this.subKernels[i].name})`);\n                    } else {\n                      result.push(`  gl_FragData[${i + 1}] = subKernelResult_${this.subKernels[i].name}`);\n                    }\n                  }\n                  break;\n                case 'Array(2)':\n                  for (let i = 0; i < this.subKernels.length; ++i) {\n                    result.push(`  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`, `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`);\n                  }\n                  break;\n                case 'Array(3)':\n                  for (let i = 0; i < this.subKernels.length; ++i) {\n                    result.push(`  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`, `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`, `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`);\n                  }\n                  break;\n                case 'Array(4)':\n                  for (let i = 0; i < this.subKernels.length; ++i) {\n                    result.push(`  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`, `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`, `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`, `  gl_FragData[${i + 1}][3] = subKernelResult_${this.subKernels[i].name}[3]`);\n                  }\n                  break;\n              }\n              return result;\n            }\n            replaceArtifacts(src, map) {\n              return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z]*[0-9]?)*)__;\\n/g, (match, artifact) => {\n                if (map.hasOwnProperty(artifact)) {\n                  return map[artifact];\n                }\n                throw `unhandled artifact ${artifact}`;\n              });\n            }\n            getFragmentShader(args) {\n              if (this.compiledFragmentShader !== null) {\n                return this.compiledFragmentShader;\n              }\n              return this.compiledFragmentShader = this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShaderArtifactMap(args));\n            }\n            getVertexShader(args) {\n              if (this.compiledVertexShader !== null) {\n                return this.compiledVertexShader;\n              }\n              return this.compiledVertexShader = this.replaceArtifacts(this.constructor.vertexShader, this._getVertShaderArtifactMap(args));\n            }\n            toString() {\n              const setupContextString = utils.linesToString([`const gl = context`]);\n              return glKernelString(this.constructor, arguments, this, setupContextString);\n            }\n            destroy(removeCanvasReferences) {\n              if (!this.context) return;\n              if (this.buffer) {\n                this.context.deleteBuffer(this.buffer);\n              }\n              if (this.framebuffer) {\n                this.context.deleteFramebuffer(this.framebuffer);\n              }\n              for (const width in this.rawValueFramebuffers) {\n                for (const height in this.rawValueFramebuffers[width]) {\n                  this.context.deleteFramebuffer(this.rawValueFramebuffers[width][height]);\n                  delete this.rawValueFramebuffers[width][height];\n                }\n                delete this.rawValueFramebuffers[width];\n              }\n              if (this.vertShader) {\n                this.context.deleteShader(this.vertShader);\n              }\n              if (this.fragShader) {\n                this.context.deleteShader(this.fragShader);\n              }\n              if (this.program) {\n                this.context.deleteProgram(this.program);\n              }\n              if (this.texture) {\n                this.texture.delete();\n                const textureCacheIndex = this.textureCache.indexOf(this.texture.texture);\n                if (textureCacheIndex > -1) {\n                  this.textureCache.splice(textureCacheIndex, 1);\n                }\n                this.texture = null;\n              }\n              if (this.mappedTextures && this.mappedTextures.length) {\n                for (let i = 0; i < this.mappedTextures.length; i++) {\n                  const mappedTexture = this.mappedTextures[i];\n                  mappedTexture.delete();\n                  const textureCacheIndex = this.textureCache.indexOf(mappedTexture.texture);\n                  if (textureCacheIndex > -1) {\n                    this.textureCache.splice(textureCacheIndex, 1);\n                  }\n                }\n                this.mappedTextures = null;\n              }\n              if (this.kernelArguments) {\n                for (let i = 0; i < this.kernelArguments.length; i++) {\n                  this.kernelArguments[i].destroy();\n                }\n              }\n              if (this.kernelConstants) {\n                for (let i = 0; i < this.kernelConstants.length; i++) {\n                  this.kernelConstants[i].destroy();\n                }\n              }\n              while (this.textureCache.length > 0) {\n                const texture = this.textureCache.pop();\n                this.context.deleteTexture(texture);\n              }\n              if (removeCanvasReferences) {\n                const idx = canvases.indexOf(this.canvas);\n                if (idx >= 0) {\n                  canvases[idx] = null;\n                  maxTexSizes[idx] = null;\n                }\n              }\n              this.destroyExtensions();\n              delete this.context;\n              delete this.canvas;\n              if (!this.gpu) return;\n              const i = this.gpu.kernels.indexOf(this);\n              if (i === -1) return;\n              this.gpu.kernels.splice(i, 1);\n            }\n            destroyExtensions() {\n              this.extensions.OES_texture_float = null;\n              this.extensions.OES_texture_float_linear = null;\n              this.extensions.OES_element_index_uint = null;\n              this.extensions.WEBGL_draw_buffers = null;\n            }\n            static destroyContext(context) {\n              const extension = context.getExtension('WEBGL_lose_context');\n              if (extension) {\n                extension.loseContext();\n              }\n            }\n            toJSON() {\n              const json = super.toJSON();\n              json.functionNodes = FunctionBuilder.fromKernel(this, WebGLFunctionNode).toJSON();\n              json.settings.threadDim = this.threadDim;\n              return json;\n            }\n          }\n          module.exports = {\n            WebGLKernel\n          };\n        }, {\n          \"../../plugins/math-random-uniformly-distributed\": 112,\n          \"../../utils\": 114,\n          \"../function-builder\": 9,\n          \"../gl/kernel\": 13,\n          \"../gl/kernel-string\": 12,\n          \"./fragment-shader\": 37,\n          \"./function-node\": 38,\n          \"./kernel-value-maps\": 39,\n          \"./vertex-shader\": 71\n        }],\n        71: [function (require, module, exports) {\n          const vertexShader = `__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nattribute vec2 aPos;\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n          module.exports = {\n            vertexShader\n          };\n        }, {}],\n        72: [function (require, module, exports) {\n          const fragmentShader = `#version 300 es\n__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n__SAMPLER_2D_ARRAY_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nin vec2 vTexCoord;\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat expm1(float x) {\n  return pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x/y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  return texel[channel] * 255.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  index = index / 4;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return texel[channel];\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, st / vec2(texSize));\n}\n\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, vec3(st / vec2(texSize), z));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n\n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n          module.exports = {\n            fragmentShader\n          };\n        }, {}],\n        73: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../utils');\n          const {\n            WebGLFunctionNode\n          } = require('../web-gl/function-node');\n          class WebGL2FunctionNode extends WebGLFunctionNode {\n            astIdentifierExpression(idtNode, retArr) {\n              if (idtNode.type !== 'Identifier') {\n                throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n              }\n              const type = this.getType(idtNode);\n              const name = utils.sanitizeName(idtNode.name);\n              if (idtNode.name === 'Infinity') {\n                retArr.push('intBitsToFloat(2139095039)');\n              } else if (type === 'Boolean') {\n                if (this.argumentNames.indexOf(name) > -1) {\n                  retArr.push(`bool(user_${name})`);\n                } else {\n                  retArr.push(`user_${name}`);\n                }\n              } else {\n                retArr.push(`user_${name}`);\n              }\n              return retArr;\n            }\n          }\n          module.exports = {\n            WebGL2FunctionNode\n          };\n        }, {\n          \"../../utils\": 114,\n          \"../web-gl/function-node\": 38\n        }],\n        74: [function (require, module, exports) {\n          const {\n            WebGL2KernelValueBoolean\n          } = require('./kernel-value/boolean');\n          const {\n            WebGL2KernelValueFloat\n          } = require('./kernel-value/float');\n          const {\n            WebGL2KernelValueInteger\n          } = require('./kernel-value/integer');\n          const {\n            WebGL2KernelValueHTMLImage\n          } = require('./kernel-value/html-image');\n          const {\n            WebGL2KernelValueDynamicHTMLImage\n          } = require('./kernel-value/dynamic-html-image');\n          const {\n            WebGL2KernelValueHTMLImageArray\n          } = require('./kernel-value/html-image-array');\n          const {\n            WebGL2KernelValueDynamicHTMLImageArray\n          } = require('./kernel-value/dynamic-html-image-array');\n          const {\n            WebGL2KernelValueHTMLVideo\n          } = require('./kernel-value/html-video');\n          const {\n            WebGL2KernelValueDynamicHTMLVideo\n          } = require('./kernel-value/dynamic-html-video');\n          const {\n            WebGL2KernelValueSingleInput\n          } = require('./kernel-value/single-input');\n          const {\n            WebGL2KernelValueDynamicSingleInput\n          } = require('./kernel-value/dynamic-single-input');\n          const {\n            WebGL2KernelValueUnsignedInput\n          } = require('./kernel-value/unsigned-input');\n          const {\n            WebGL2KernelValueDynamicUnsignedInput\n          } = require('./kernel-value/dynamic-unsigned-input');\n          const {\n            WebGL2KernelValueMemoryOptimizedNumberTexture\n          } = require('./kernel-value/memory-optimized-number-texture');\n          const {\n            WebGL2KernelValueDynamicMemoryOptimizedNumberTexture\n          } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n          const {\n            WebGL2KernelValueNumberTexture\n          } = require('./kernel-value/number-texture');\n          const {\n            WebGL2KernelValueDynamicNumberTexture\n          } = require('./kernel-value/dynamic-number-texture');\n          const {\n            WebGL2KernelValueSingleArray\n          } = require('./kernel-value/single-array');\n          const {\n            WebGL2KernelValueDynamicSingleArray\n          } = require('./kernel-value/dynamic-single-array');\n          const {\n            WebGL2KernelValueSingleArray1DI\n          } = require('./kernel-value/single-array1d-i');\n          const {\n            WebGL2KernelValueDynamicSingleArray1DI\n          } = require('./kernel-value/dynamic-single-array1d-i');\n          const {\n            WebGL2KernelValueSingleArray2DI\n          } = require('./kernel-value/single-array2d-i');\n          const {\n            WebGL2KernelValueDynamicSingleArray2DI\n          } = require('./kernel-value/dynamic-single-array2d-i');\n          const {\n            WebGL2KernelValueSingleArray3DI\n          } = require('./kernel-value/single-array3d-i');\n          const {\n            WebGL2KernelValueDynamicSingleArray3DI\n          } = require('./kernel-value/dynamic-single-array3d-i');\n          const {\n            WebGL2KernelValueArray2\n          } = require('./kernel-value/array2');\n          const {\n            WebGL2KernelValueArray3\n          } = require('./kernel-value/array3');\n          const {\n            WebGL2KernelValueArray4\n          } = require('./kernel-value/array4');\n          const {\n            WebGL2KernelValueUnsignedArray\n          } = require('./kernel-value/unsigned-array');\n          const {\n            WebGL2KernelValueDynamicUnsignedArray\n          } = require('./kernel-value/dynamic-unsigned-array');\n          const kernelValueMaps = {\n            unsigned: {\n              dynamic: {\n                'Boolean': WebGL2KernelValueBoolean,\n                'Integer': WebGL2KernelValueInteger,\n                'Float': WebGL2KernelValueFloat,\n                'Array': WebGL2KernelValueDynamicUnsignedArray,\n                'Array(2)': WebGL2KernelValueArray2,\n                'Array(3)': WebGL2KernelValueArray3,\n                'Array(4)': WebGL2KernelValueArray4,\n                'Array1D(2)': false,\n                'Array1D(3)': false,\n                'Array1D(4)': false,\n                'Array2D(2)': false,\n                'Array2D(3)': false,\n                'Array2D(4)': false,\n                'Array3D(2)': false,\n                'Array3D(3)': false,\n                'Array3D(4)': false,\n                'Input': WebGL2KernelValueDynamicUnsignedInput,\n                'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n                'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n                'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n                'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n                'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n                'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n                'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n                'OffscreenCanvas': WebGL2KernelValueDynamicHTMLImage,\n                'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n                'ImageBitmap': WebGL2KernelValueDynamicHTMLImage,\n                'ImageData': WebGL2KernelValueDynamicHTMLImage,\n                'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n                'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo\n              },\n              static: {\n                'Boolean': WebGL2KernelValueBoolean,\n                'Float': WebGL2KernelValueFloat,\n                'Integer': WebGL2KernelValueInteger,\n                'Array': WebGL2KernelValueUnsignedArray,\n                'Array(2)': WebGL2KernelValueArray2,\n                'Array(3)': WebGL2KernelValueArray3,\n                'Array(4)': WebGL2KernelValueArray4,\n                'Array1D(2)': false,\n                'Array1D(3)': false,\n                'Array1D(4)': false,\n                'Array2D(2)': false,\n                'Array2D(3)': false,\n                'Array2D(4)': false,\n                'Array3D(2)': false,\n                'Array3D(3)': false,\n                'Array3D(4)': false,\n                'Input': WebGL2KernelValueUnsignedInput,\n                'NumberTexture': WebGL2KernelValueNumberTexture,\n                'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n                'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n                'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n                'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n                'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n                'HTMLCanvas': WebGL2KernelValueHTMLImage,\n                'OffscreenCanvas': WebGL2KernelValueHTMLImage,\n                'HTMLImage': WebGL2KernelValueHTMLImage,\n                'ImageBitmap': WebGL2KernelValueHTMLImage,\n                'ImageData': WebGL2KernelValueHTMLImage,\n                'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n                'HTMLVideo': WebGL2KernelValueHTMLVideo\n              }\n            },\n            single: {\n              dynamic: {\n                'Boolean': WebGL2KernelValueBoolean,\n                'Integer': WebGL2KernelValueInteger,\n                'Float': WebGL2KernelValueFloat,\n                'Array': WebGL2KernelValueDynamicSingleArray,\n                'Array(2)': WebGL2KernelValueArray2,\n                'Array(3)': WebGL2KernelValueArray3,\n                'Array(4)': WebGL2KernelValueArray4,\n                'Array1D(2)': WebGL2KernelValueDynamicSingleArray1DI,\n                'Array1D(3)': WebGL2KernelValueDynamicSingleArray1DI,\n                'Array1D(4)': WebGL2KernelValueDynamicSingleArray1DI,\n                'Array2D(2)': WebGL2KernelValueDynamicSingleArray2DI,\n                'Array2D(3)': WebGL2KernelValueDynamicSingleArray2DI,\n                'Array2D(4)': WebGL2KernelValueDynamicSingleArray2DI,\n                'Array3D(2)': WebGL2KernelValueDynamicSingleArray3DI,\n                'Array3D(3)': WebGL2KernelValueDynamicSingleArray3DI,\n                'Array3D(4)': WebGL2KernelValueDynamicSingleArray3DI,\n                'Input': WebGL2KernelValueDynamicSingleInput,\n                'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n                'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n                'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n                'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n                'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n                'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n                'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n                'OffscreenCanvas': WebGL2KernelValueDynamicHTMLImage,\n                'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n                'ImageBitmap': WebGL2KernelValueDynamicHTMLImage,\n                'ImageData': WebGL2KernelValueDynamicHTMLImage,\n                'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n                'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo\n              },\n              static: {\n                'Boolean': WebGL2KernelValueBoolean,\n                'Float': WebGL2KernelValueFloat,\n                'Integer': WebGL2KernelValueInteger,\n                'Array': WebGL2KernelValueSingleArray,\n                'Array(2)': WebGL2KernelValueArray2,\n                'Array(3)': WebGL2KernelValueArray3,\n                'Array(4)': WebGL2KernelValueArray4,\n                'Array1D(2)': WebGL2KernelValueSingleArray1DI,\n                'Array1D(3)': WebGL2KernelValueSingleArray1DI,\n                'Array1D(4)': WebGL2KernelValueSingleArray1DI,\n                'Array2D(2)': WebGL2KernelValueSingleArray2DI,\n                'Array2D(3)': WebGL2KernelValueSingleArray2DI,\n                'Array2D(4)': WebGL2KernelValueSingleArray2DI,\n                'Array3D(2)': WebGL2KernelValueSingleArray3DI,\n                'Array3D(3)': WebGL2KernelValueSingleArray3DI,\n                'Array3D(4)': WebGL2KernelValueSingleArray3DI,\n                'Input': WebGL2KernelValueSingleInput,\n                'NumberTexture': WebGL2KernelValueNumberTexture,\n                'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n                'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n                'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n                'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n                'MemoryOptimizedNumberTexture': WebGL2KernelValueMemoryOptimizedNumberTexture,\n                'HTMLCanvas': WebGL2KernelValueHTMLImage,\n                'OffscreenCanvas': WebGL2KernelValueHTMLImage,\n                'HTMLImage': WebGL2KernelValueHTMLImage,\n                'ImageBitmap': WebGL2KernelValueHTMLImage,\n                'ImageData': WebGL2KernelValueHTMLImage,\n                'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n                'HTMLVideo': WebGL2KernelValueHTMLVideo\n              }\n            }\n          };\n          function lookupKernelValueType(type, dynamic, precision, value) {\n            if (!type) {\n              throw new Error('type missing');\n            }\n            if (!dynamic) {\n              throw new Error('dynamic missing');\n            }\n            if (!precision) {\n              throw new Error('precision missing');\n            }\n            if (value.type) {\n              type = value.type;\n            }\n            const types = kernelValueMaps[precision][dynamic];\n            if (types[type] === false) {\n              return null;\n            } else if (types[type] === undefined) {\n              throw new Error(`Could not find a KernelValue for ${type}`);\n            }\n            return types[type];\n          }\n          module.exports = {\n            kernelValueMaps,\n            lookupKernelValueType\n          };\n        }, {\n          \"./kernel-value/array2\": 75,\n          \"./kernel-value/array3\": 76,\n          \"./kernel-value/array4\": 77,\n          \"./kernel-value/boolean\": 78,\n          \"./kernel-value/dynamic-html-image\": 80,\n          \"./kernel-value/dynamic-html-image-array\": 79,\n          \"./kernel-value/dynamic-html-video\": 81,\n          \"./kernel-value/dynamic-memory-optimized-number-texture\": 82,\n          \"./kernel-value/dynamic-number-texture\": 83,\n          \"./kernel-value/dynamic-single-array\": 84,\n          \"./kernel-value/dynamic-single-array1d-i\": 85,\n          \"./kernel-value/dynamic-single-array2d-i\": 86,\n          \"./kernel-value/dynamic-single-array3d-i\": 87,\n          \"./kernel-value/dynamic-single-input\": 88,\n          \"./kernel-value/dynamic-unsigned-array\": 89,\n          \"./kernel-value/dynamic-unsigned-input\": 90,\n          \"./kernel-value/float\": 91,\n          \"./kernel-value/html-image\": 93,\n          \"./kernel-value/html-image-array\": 92,\n          \"./kernel-value/html-video\": 94,\n          \"./kernel-value/integer\": 95,\n          \"./kernel-value/memory-optimized-number-texture\": 96,\n          \"./kernel-value/number-texture\": 97,\n          \"./kernel-value/single-array\": 98,\n          \"./kernel-value/single-array1d-i\": 99,\n          \"./kernel-value/single-array2d-i\": 100,\n          \"./kernel-value/single-array3d-i\": 101,\n          \"./kernel-value/single-input\": 102,\n          \"./kernel-value/unsigned-array\": 103,\n          \"./kernel-value/unsigned-input\": 104\n        }],\n        75: [function (require, module, exports) {\n          const {\n            WebGLKernelValueArray2\n          } = require('../../web-gl/kernel-value/array2');\n          class WebGL2KernelValueArray2 extends WebGLKernelValueArray2 {}\n          module.exports = {\n            WebGL2KernelValueArray2\n          };\n        }, {\n          \"../../web-gl/kernel-value/array2\": 41\n        }],\n        76: [function (require, module, exports) {\n          const {\n            WebGLKernelValueArray3\n          } = require('../../web-gl/kernel-value/array3');\n          class WebGL2KernelValueArray3 extends WebGLKernelValueArray3 {}\n          module.exports = {\n            WebGL2KernelValueArray3\n          };\n        }, {\n          \"../../web-gl/kernel-value/array3\": 42\n        }],\n        77: [function (require, module, exports) {\n          const {\n            WebGLKernelValueArray4\n          } = require('../../web-gl/kernel-value/array4');\n          class WebGL2KernelValueArray4 extends WebGLKernelValueArray4 {}\n          module.exports = {\n            WebGL2KernelValueArray4\n          };\n        }, {\n          \"../../web-gl/kernel-value/array4\": 43\n        }],\n        78: [function (require, module, exports) {\n          const {\n            WebGLKernelValueBoolean\n          } = require('../../web-gl/kernel-value/boolean');\n          class WebGL2KernelValueBoolean extends WebGLKernelValueBoolean {}\n          module.exports = {\n            WebGL2KernelValueBoolean\n          };\n        }, {\n          \"../../web-gl/kernel-value/boolean\": 44\n        }],\n        79: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGL2KernelValueHTMLImageArray\n          } = require('./html-image-array');\n          class WebGL2KernelValueDynamicHTMLImageArray extends WebGL2KernelValueHTMLImageArray {\n            getSource() {\n              const variablePrecision = this.getVariablePrecisionString();\n              return utils.linesToString([`uniform ${variablePrecision} sampler2DArray ${this.id}`, `uniform ${variablePrecision} ivec2 ${this.sizeId}`, `uniform ${variablePrecision} ivec3 ${this.dimensionsId}`]);\n            }\n            updateValue(images) {\n              const {\n                width,\n                height\n              } = images[0];\n              this.checkSize(width, height);\n              this.dimensions = [width, height, images.length];\n              this.textureSize = [width, height];\n              this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n              this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n              super.updateValue(images);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueDynamicHTMLImageArray\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./html-image-array\": 92\n        }],\n        80: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueDynamicHTMLImage\n          } = require('../../web-gl/kernel-value/dynamic-html-image');\n          class WebGL2KernelValueDynamicHTMLImage extends WebGLKernelValueDynamicHTMLImage {\n            getSource() {\n              const variablePrecision = this.getVariablePrecisionString();\n              return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`, `uniform ${variablePrecision} ivec2 ${this.sizeId}`, `uniform ${variablePrecision} ivec3 ${this.dimensionsId}`]);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueDynamicHTMLImage\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl/kernel-value/dynamic-html-image\": 45\n        }],\n        81: [function (require, module, exports) {\n          require('../../../utils');\n          const {\n            WebGL2KernelValueDynamicHTMLImage\n          } = require('./dynamic-html-image');\n          class WebGL2KernelValueDynamicHTMLVideo extends WebGL2KernelValueDynamicHTMLImage {}\n          module.exports = {\n            WebGL2KernelValueDynamicHTMLVideo\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./dynamic-html-image\": 80\n        }],\n        82: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueDynamicMemoryOptimizedNumberTexture\n          } = require('../../web-gl/kernel-value/dynamic-memory-optimized-number-texture');\n          class WebGL2KernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueDynamicMemoryOptimizedNumberTexture {\n            getSource() {\n              return utils.linesToString([`uniform sampler2D ${this.id}`, `uniform ivec2 ${this.sizeId}`, `uniform ivec3 ${this.dimensionsId}`]);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueDynamicMemoryOptimizedNumberTexture\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl/kernel-value/dynamic-memory-optimized-number-texture\": 47\n        }],\n        83: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueDynamicNumberTexture\n          } = require('../../web-gl/kernel-value/dynamic-number-texture');\n          class WebGL2KernelValueDynamicNumberTexture extends WebGLKernelValueDynamicNumberTexture {\n            getSource() {\n              const variablePrecision = this.getVariablePrecisionString();\n              return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`, `uniform ${variablePrecision} ivec2 ${this.sizeId}`, `uniform ${variablePrecision} ivec3 ${this.dimensionsId}`]);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueDynamicNumberTexture\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl/kernel-value/dynamic-number-texture\": 48\n        }],\n        84: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGL2KernelValueSingleArray\n          } = require('../../web-gl2/kernel-value/single-array');\n          class WebGL2KernelValueDynamicSingleArray extends WebGL2KernelValueSingleArray {\n            getSource() {\n              const variablePrecision = this.getVariablePrecisionString();\n              return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`, `uniform ${variablePrecision} ivec2 ${this.sizeId}`, `uniform ${variablePrecision} ivec3 ${this.dimensionsId}`]);\n            }\n            updateValue(value) {\n              this.dimensions = utils.getDimensions(value, true);\n              this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n              this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n              this.checkSize(this.textureSize[0], this.textureSize[1]);\n              this.uploadValue = new Float32Array(this.uploadArrayLength);\n              this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n              this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n              super.updateValue(value);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueDynamicSingleArray\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl2/kernel-value/single-array\": 98\n        }],\n        85: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGL2KernelValueSingleArray1DI\n          } = require('../../web-gl2/kernel-value/single-array1d-i');\n          class WebGL2KernelValueDynamicSingleArray1DI extends WebGL2KernelValueSingleArray1DI {\n            getSource() {\n              const variablePrecision = this.getVariablePrecisionString();\n              return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`, `uniform ${variablePrecision} ivec2 ${this.sizeId}`, `uniform ${variablePrecision} ivec3 ${this.dimensionsId}`]);\n            }\n            updateValue(value) {\n              this.setShape(value);\n              this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n              this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n              super.updateValue(value);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueDynamicSingleArray1DI\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl2/kernel-value/single-array1d-i\": 99\n        }],\n        86: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGL2KernelValueSingleArray2DI\n          } = require('../../web-gl2/kernel-value/single-array2d-i');\n          class WebGL2KernelValueDynamicSingleArray2DI extends WebGL2KernelValueSingleArray2DI {\n            getSource() {\n              const variablePrecision = this.getVariablePrecisionString();\n              return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`, `uniform ${variablePrecision} ivec2 ${this.sizeId}`, `uniform ${variablePrecision} ivec3 ${this.dimensionsId}`]);\n            }\n            updateValue(value) {\n              this.setShape(value);\n              this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n              this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n              super.updateValue(value);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueDynamicSingleArray2DI\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl2/kernel-value/single-array2d-i\": 100\n        }],\n        87: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGL2KernelValueSingleArray3DI\n          } = require('../../web-gl2/kernel-value/single-array3d-i');\n          class WebGL2KernelValueDynamicSingleArray3DI extends WebGL2KernelValueSingleArray3DI {\n            getSource() {\n              const variablePrecision = this.getVariablePrecisionString();\n              return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`, `uniform ${variablePrecision} ivec2 ${this.sizeId}`, `uniform ${variablePrecision} ivec3 ${this.dimensionsId}`]);\n            }\n            updateValue(value) {\n              this.setShape(value);\n              this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n              this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n              super.updateValue(value);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueDynamicSingleArray3DI\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl2/kernel-value/single-array3d-i\": 101\n        }],\n        88: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGL2KernelValueSingleInput\n          } = require('../../web-gl2/kernel-value/single-input');\n          class WebGL2KernelValueDynamicSingleInput extends WebGL2KernelValueSingleInput {\n            getSource() {\n              const variablePrecision = this.getVariablePrecisionString();\n              return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`, `uniform ${variablePrecision} ivec2 ${this.sizeId}`, `uniform ${variablePrecision} ivec3 ${this.dimensionsId}`]);\n            }\n            updateValue(value) {\n              let [w, h, d] = value.size;\n              this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n              this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n              this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n              this.checkSize(this.textureSize[0], this.textureSize[1]);\n              this.uploadValue = new Float32Array(this.uploadArrayLength);\n              this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n              this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n              super.updateValue(value);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueDynamicSingleInput\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl2/kernel-value/single-input\": 102\n        }],\n        89: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueDynamicUnsignedArray\n          } = require('../../web-gl/kernel-value/dynamic-unsigned-array');\n          class WebGL2KernelValueDynamicUnsignedArray extends WebGLKernelValueDynamicUnsignedArray {\n            getSource() {\n              const variablePrecision = this.getVariablePrecisionString();\n              return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`, `uniform ${variablePrecision} ivec2 ${this.sizeId}`, `uniform ${variablePrecision} ivec3 ${this.dimensionsId}`]);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueDynamicUnsignedArray\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl/kernel-value/dynamic-unsigned-array\": 54\n        }],\n        90: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueDynamicUnsignedInput\n          } = require('../../web-gl/kernel-value/dynamic-unsigned-input');\n          class WebGL2KernelValueDynamicUnsignedInput extends WebGLKernelValueDynamicUnsignedInput {\n            getSource() {\n              const variablePrecision = this.getVariablePrecisionString();\n              return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`, `uniform ${variablePrecision} ivec2 ${this.sizeId}`, `uniform ${variablePrecision} ivec3 ${this.dimensionsId}`]);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueDynamicUnsignedInput\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl/kernel-value/dynamic-unsigned-input\": 55\n        }],\n        91: [function (require, module, exports) {\n          require('../../../utils');\n          const {\n            WebGLKernelValueFloat\n          } = require('../../web-gl/kernel-value/float');\n          class WebGL2KernelValueFloat extends WebGLKernelValueFloat {}\n          module.exports = {\n            WebGL2KernelValueFloat\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl/kernel-value/float\": 56\n        }],\n        92: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelArray\n          } = require('../../web-gl/kernel-value/array');\n          class WebGL2KernelValueHTMLImageArray extends WebGLKernelArray {\n            constructor(value, settings) {\n              super(value, settings);\n              this.checkSize(value[0].width, value[0].height);\n              this.dimensions = [value[0].width, value[0].height, value.length];\n              this.textureSize = [value[0].width, value[0].height];\n            }\n            defineTexture() {\n              const {\n                context: gl\n              } = this;\n              gl.activeTexture(this.contextHandle);\n              gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n              gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n              gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            }\n            getStringValueHandler() {\n              return `const uploadValue_${this.name} = ${this.varName};\\n`;\n            }\n            getSource() {\n              const variablePrecision = this.getVariablePrecisionString();\n              return utils.linesToString([`uniform ${variablePrecision} sampler2DArray ${this.id}`, `${variablePrecision} ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, `${variablePrecision} ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`]);\n            }\n            updateValue(images) {\n              const {\n                context: gl\n              } = this;\n              gl.activeTexture(this.contextHandle);\n              gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n              gl.texImage3D(gl.TEXTURE_2D_ARRAY, 0, gl.RGBA, images[0].width, images[0].height, images.length, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n              for (let i = 0; i < images.length; i++) {\n                const xOffset = 0;\n                const yOffset = 0;\n                const imageDepth = 1;\n                gl.texSubImage3D(gl.TEXTURE_2D_ARRAY, 0, xOffset, yOffset, i, images[i].width, images[i].height, imageDepth, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = images[i]);\n              }\n              this.kernel.setUniform1i(this.id, this.index);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueHTMLImageArray\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl/kernel-value/array\": 40\n        }],\n        93: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueHTMLImage\n          } = require('../../web-gl/kernel-value/html-image');\n          class WebGL2KernelValueHTMLImage extends WebGLKernelValueHTMLImage {\n            getSource() {\n              const variablePrecision = this.getVariablePrecisionString();\n              return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`, `${variablePrecision} ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, `${variablePrecision} ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`]);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueHTMLImage\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl/kernel-value/html-image\": 57\n        }],\n        94: [function (require, module, exports) {\n          require('../../../utils');\n          const {\n            WebGL2KernelValueHTMLImage\n          } = require('./html-image');\n          class WebGL2KernelValueHTMLVideo extends WebGL2KernelValueHTMLImage {}\n          module.exports = {\n            WebGL2KernelValueHTMLVideo\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"./html-image\": 93\n        }],\n        95: [function (require, module, exports) {\n          const {\n            WebGLKernelValueInteger\n          } = require('../../web-gl/kernel-value/integer');\n          class WebGL2KernelValueInteger extends WebGLKernelValueInteger {\n            getSource(value) {\n              const variablePrecision = this.getVariablePrecisionString();\n              if (this.origin === 'constants') {\n                return `const ${variablePrecision} int ${this.id} = ${parseInt(value)};\\n`;\n              }\n              return `uniform ${variablePrecision} int ${this.id};\\n`;\n            }\n            updateValue(value) {\n              if (this.origin === 'constants') return;\n              this.kernel.setUniform1i(this.id, this.uploadValue = value);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueInteger\n          };\n        }, {\n          \"../../web-gl/kernel-value/integer\": 60\n        }],\n        96: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueMemoryOptimizedNumberTexture\n          } = require('../../web-gl/kernel-value/memory-optimized-number-texture');\n          class WebGL2KernelValueMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n            getSource() {\n              const {\n                id,\n                sizeId,\n                textureSize,\n                dimensionsId,\n                dimensions\n              } = this;\n              const variablePrecision = this.getVariablePrecisionString();\n              return utils.linesToString([`uniform sampler2D ${id}`, `${variablePrecision} ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`, `${variablePrecision} ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`]);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueMemoryOptimizedNumberTexture\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl/kernel-value/memory-optimized-number-texture\": 61\n        }],\n        97: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueNumberTexture\n          } = require('../../web-gl/kernel-value/number-texture');\n          class WebGL2KernelValueNumberTexture extends WebGLKernelValueNumberTexture {\n            getSource() {\n              const {\n                id,\n                sizeId,\n                textureSize,\n                dimensionsId,\n                dimensions\n              } = this;\n              const variablePrecision = this.getVariablePrecisionString();\n              return utils.linesToString([`uniform ${variablePrecision} sampler2D ${id}`, `${variablePrecision} ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`, `${variablePrecision} ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`]);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueNumberTexture\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl/kernel-value/number-texture\": 62\n        }],\n        98: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueSingleArray\n          } = require('../../web-gl/kernel-value/single-array');\n          class WebGL2KernelValueSingleArray extends WebGLKernelValueSingleArray {\n            getSource() {\n              const variablePrecision = this.getVariablePrecisionString();\n              return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`, `${variablePrecision} ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, `${variablePrecision} ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`]);\n            }\n            updateValue(value) {\n              if (value.constructor !== this.initialValueConstructor) {\n                this.onUpdateValueMismatch(value.constructor);\n                return;\n              }\n              const {\n                context: gl\n              } = this;\n              utils.flattenTo(value, this.uploadValue);\n              gl.activeTexture(this.contextHandle);\n              gl.bindTexture(gl.TEXTURE_2D, this.texture);\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n              this.kernel.setUniform1i(this.id, this.index);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueSingleArray\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl/kernel-value/single-array\": 63\n        }],\n        99: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueSingleArray1DI\n          } = require('../../web-gl/kernel-value/single-array1d-i');\n          class WebGL2KernelValueSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n            updateValue(value) {\n              if (value.constructor !== this.initialValueConstructor) {\n                this.onUpdateValueMismatch(value.constructor);\n                return;\n              }\n              const {\n                context: gl\n              } = this;\n              utils.flattenTo(value, this.uploadValue);\n              gl.activeTexture(this.contextHandle);\n              gl.bindTexture(gl.TEXTURE_2D, this.texture);\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n              this.kernel.setUniform1i(this.id, this.index);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueSingleArray1DI\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl/kernel-value/single-array1d-i\": 64\n        }],\n        100: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueSingleArray2DI\n          } = require('../../web-gl/kernel-value/single-array2d-i');\n          class WebGL2KernelValueSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n            updateValue(value) {\n              if (value.constructor !== this.initialValueConstructor) {\n                this.onUpdateValueMismatch(value.constructor);\n                return;\n              }\n              const {\n                context: gl\n              } = this;\n              utils.flattenTo(value, this.uploadValue);\n              gl.activeTexture(this.contextHandle);\n              gl.bindTexture(gl.TEXTURE_2D, this.texture);\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n              this.kernel.setUniform1i(this.id, this.index);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueSingleArray2DI\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl/kernel-value/single-array2d-i\": 65\n        }],\n        101: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueSingleArray3DI\n          } = require('../../web-gl/kernel-value/single-array3d-i');\n          class WebGL2KernelValueSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n            updateValue(value) {\n              if (value.constructor !== this.initialValueConstructor) {\n                this.onUpdateValueMismatch(value.constructor);\n                return;\n              }\n              const {\n                context: gl\n              } = this;\n              utils.flattenTo(value, this.uploadValue);\n              gl.activeTexture(this.contextHandle);\n              gl.bindTexture(gl.TEXTURE_2D, this.texture);\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n              this.kernel.setUniform1i(this.id, this.index);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueSingleArray3DI\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl/kernel-value/single-array3d-i\": 66\n        }],\n        102: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueSingleInput\n          } = require('../../web-gl/kernel-value/single-input');\n          class WebGL2KernelValueSingleInput extends WebGLKernelValueSingleInput {\n            getSource() {\n              const variablePrecision = this.getVariablePrecisionString();\n              return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`, `${variablePrecision} ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, `${variablePrecision} ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`]);\n            }\n            updateValue(input) {\n              const {\n                context: gl\n              } = this;\n              utils.flattenTo(input.value, this.uploadValue);\n              gl.activeTexture(this.contextHandle);\n              gl.bindTexture(gl.TEXTURE_2D, this.texture);\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n              this.kernel.setUniform1i(this.id, this.index);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueSingleInput\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl/kernel-value/single-input\": 67\n        }],\n        103: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueUnsignedArray\n          } = require('../../web-gl/kernel-value/unsigned-array');\n          class WebGL2KernelValueUnsignedArray extends WebGLKernelValueUnsignedArray {\n            getSource() {\n              const variablePrecision = this.getVariablePrecisionString();\n              return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`, `${variablePrecision} ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, `${variablePrecision} ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`]);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueUnsignedArray\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl/kernel-value/unsigned-array\": 68\n        }],\n        104: [function (require, module, exports) {\n          const {\n            utils\n          } = require('../../../utils');\n          const {\n            WebGLKernelValueUnsignedInput\n          } = require('../../web-gl/kernel-value/unsigned-input');\n          class WebGL2KernelValueUnsignedInput extends WebGLKernelValueUnsignedInput {\n            getSource() {\n              const variablePrecision = this.getVariablePrecisionString();\n              return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`, `${variablePrecision} ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`, `${variablePrecision} ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`]);\n            }\n          }\n          module.exports = {\n            WebGL2KernelValueUnsignedInput\n          };\n        }, {\n          \"../../../utils\": 114,\n          \"../../web-gl/kernel-value/unsigned-input\": 69\n        }],\n        105: [function (require, module, exports) {\n          const {\n            WebGLKernel\n          } = require('../web-gl/kernel');\n          const {\n            WebGL2FunctionNode\n          } = require('./function-node');\n          const {\n            FunctionBuilder\n          } = require('../function-builder');\n          const {\n            utils\n          } = require('../../utils');\n          const {\n            fragmentShader\n          } = require('./fragment-shader');\n          const {\n            vertexShader\n          } = require('./vertex-shader');\n          const {\n            lookupKernelValueType\n          } = require('./kernel-value-maps');\n          let isSupported = null;\n          let testCanvas = null;\n          let testContext = null;\n          let features = null;\n          class WebGL2Kernel extends WebGLKernel {\n            static get isSupported() {\n              if (isSupported !== null) {\n                return isSupported;\n              }\n              this.setupFeatureChecks();\n              isSupported = this.isContextMatch(testContext);\n              return isSupported;\n            }\n            static setupFeatureChecks() {\n              if (typeof document !== 'undefined') {\n                testCanvas = document.createElement('canvas');\n              } else if (typeof OffscreenCanvas !== 'undefined') {\n                testCanvas = new OffscreenCanvas(0, 0);\n              }\n              if (!testCanvas) return;\n              testContext = testCanvas.getContext('webgl2');\n              if (!testContext || !testContext.getExtension) return;\n              ({\n                EXT_color_buffer_float: testContext.getExtension('EXT_color_buffer_float'),\n                OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear')\n              });\n              features = this.getFeatures();\n            }\n            static isContextMatch(context) {\n              if (typeof WebGL2RenderingContext !== 'undefined') {\n                return context instanceof WebGL2RenderingContext;\n              }\n              return false;\n            }\n            static getFeatures() {\n              const gl = this.testContext;\n              return Object.freeze({\n                isFloatRead: this.getIsFloatRead(),\n                isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n                isSpeedTacticSupported: this.getIsSpeedTacticSupported(),\n                kernelMap: true,\n                isTextureFloat: true,\n                isDrawBuffers: true,\n                channelCount: this.getChannelCount(),\n                maxTextureSize: this.getMaxTextureSize(),\n                lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n                lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n                mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n                mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n                highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n                highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT)\n              });\n            }\n            static getIsTextureFloat() {\n              return true;\n            }\n            static getChannelCount() {\n              return testContext.getParameter(testContext.MAX_DRAW_BUFFERS);\n            }\n            static getMaxTextureSize() {\n              return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n            }\n            static lookupKernelValueType(type, dynamic, precision, value) {\n              return lookupKernelValueType(type, dynamic, precision, value);\n            }\n            static get testCanvas() {\n              return testCanvas;\n            }\n            static get testContext() {\n              return testContext;\n            }\n            static get features() {\n              return features;\n            }\n            static get fragmentShader() {\n              return fragmentShader;\n            }\n            static get vertexShader() {\n              return vertexShader;\n            }\n            initContext() {\n              const settings = {\n                alpha: false,\n                depth: false,\n                antialias: false\n              };\n              return this.canvas.getContext('webgl2', settings);\n            }\n            initExtensions() {\n              this.extensions = {\n                EXT_color_buffer_float: this.context.getExtension('EXT_color_buffer_float'),\n                OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear')\n              };\n            }\n            validateSettings(args) {\n              if (!this.validate) {\n                this.texSize = utils.getKernelTextureSize({\n                  optimizeFloatMemory: this.optimizeFloatMemory,\n                  precision: this.precision\n                }, this.output);\n                return;\n              }\n              const {\n                features\n              } = this.constructor;\n              if (this.precision === 'single' && !features.isFloatRead) {\n                throw new Error('Float texture outputs are not supported');\n              } else if (!this.graphical && this.precision === null) {\n                this.precision = features.isFloatRead ? 'single' : 'unsigned';\n              }\n              if (this.fixIntegerDivisionAccuracy === null) {\n                this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n              } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n                this.fixIntegerDivisionAccuracy = false;\n              }\n              this.checkOutput();\n              if (!this.output || this.output.length === 0) {\n                if (args.length !== 1) {\n                  throw new Error('Auto output only supported for kernels with only one input');\n                }\n                const argType = utils.getVariableType(args[0], this.strictIntegers);\n                switch (argType) {\n                  case 'Array':\n                    this.output = utils.getDimensions(argType);\n                    break;\n                  case 'NumberTexture':\n                  case 'MemoryOptimizedNumberTexture':\n                  case 'ArrayTexture(1)':\n                  case 'ArrayTexture(2)':\n                  case 'ArrayTexture(3)':\n                  case 'ArrayTexture(4)':\n                    this.output = args[0].output;\n                    break;\n                  default:\n                    throw new Error('Auto output not supported for input type: ' + argType);\n                }\n              }\n              if (this.graphical) {\n                if (this.output.length !== 2) {\n                  throw new Error('Output must have 2 dimensions on graphical mode');\n                }\n                if (this.precision === 'single') {\n                  console.warn('Cannot use graphical mode and single precision at the same time');\n                  this.precision = 'unsigned';\n                }\n                this.texSize = utils.clone(this.output);\n                return;\n              } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n                this.precision = 'single';\n              }\n              this.texSize = utils.getKernelTextureSize({\n                optimizeFloatMemory: this.optimizeFloatMemory,\n                precision: this.precision\n              }, this.output);\n              this.checkTextureSize();\n            }\n            translateSource() {\n              const functionBuilder = FunctionBuilder.fromKernel(this, WebGL2FunctionNode, {\n                fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n              });\n              this.translatedSource = functionBuilder.getPrototypeString('kernel');\n              this.setupReturnTypes(functionBuilder);\n            }\n            drawBuffers() {\n              this.context.drawBuffers(this.drawBuffersMap);\n            }\n            getTextureFormat() {\n              const {\n                context: gl\n              } = this;\n              switch (this.getInternalFormat()) {\n                case gl.R32F:\n                  return gl.RED;\n                case gl.RG32F:\n                  return gl.RG;\n                case gl.RGBA32F:\n                  return gl.RGBA;\n                case gl.RGBA:\n                  return gl.RGBA;\n                default:\n                  throw new Error('Unknown internal format');\n              }\n            }\n            getInternalFormat() {\n              const {\n                context: gl\n              } = this;\n              if (this.precision === 'single') {\n                if (this.pipeline) {\n                  switch (this.returnType) {\n                    case 'Number':\n                    case 'Float':\n                    case 'Integer':\n                      if (this.optimizeFloatMemory) {\n                        return gl.RGBA32F;\n                      } else {\n                        return gl.R32F;\n                      }\n                    case 'Array(2)':\n                      return gl.RG32F;\n                    case 'Array(3)':\n                    case 'Array(4)':\n                      return gl.RGBA32F;\n                    default:\n                      throw new Error('Unhandled return type');\n                  }\n                }\n                return gl.RGBA32F;\n              }\n              return gl.RGBA;\n            }\n            _setupOutputTexture() {\n              const gl = this.context;\n              if (this.texture) {\n                gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n                return;\n              }\n              gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n              const texture = gl.createTexture();\n              const texSize = this.texSize;\n              gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n              gl.bindTexture(gl.TEXTURE_2D, texture);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n              const format = this.getInternalFormat();\n              if (this.precision === 'single') {\n                gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n              } else {\n                gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n              }\n              gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n              this.texture = new this.TextureConstructor({\n                texture,\n                size: texSize,\n                dimensions: this.threadDim,\n                output: this.output,\n                context: this.context,\n                internalFormat: this.getInternalFormat(),\n                textureFormat: this.getTextureFormat(),\n                kernel: this\n              });\n            }\n            _setupSubOutputTextures() {\n              const gl = this.context;\n              if (this.mappedTextures) {\n                for (let i = 0; i < this.subKernels.length; i++) {\n                  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);\n                }\n                return;\n              }\n              const texSize = this.texSize;\n              this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n              this.mappedTextures = [];\n              for (let i = 0; i < this.subKernels.length; i++) {\n                const texture = this.createTexture();\n                this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n                gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n                gl.bindTexture(gl.TEXTURE_2D, texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                const format = this.getInternalFormat();\n                if (this.precision === 'single') {\n                  gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n                } else {\n                  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n                }\n                gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n                this.mappedTextures.push(new this.TextureConstructor({\n                  texture,\n                  size: texSize,\n                  dimensions: this.threadDim,\n                  output: this.output,\n                  context: this.context,\n                  internalFormat: this.getInternalFormat(),\n                  textureFormat: this.getTextureFormat(),\n                  kernel: this\n                }));\n              }\n            }\n            _getHeaderString() {\n              return '';\n            }\n            _getTextureCoordinate() {\n              const subKernels = this.subKernels;\n              const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n              if (subKernels === null || subKernels.length < 1) {\n                return `in ${variablePrecision} vec2 vTexCoord;\\n`;\n              } else {\n                return `out ${variablePrecision} vec2 vTexCoord;\\n`;\n              }\n            }\n            _getMainArgumentsString(args) {\n              const result = [];\n              const argumentNames = this.argumentNames;\n              for (let i = 0; i < argumentNames.length; i++) {\n                result.push(this.kernelArguments[i].getSource(args[i]));\n              }\n              return result.join('');\n            }\n            getKernelString() {\n              const result = [this.getKernelResultDeclaration()];\n              const subKernels = this.subKernels;\n              if (subKernels !== null) {\n                result.push('layout(location = 0) out vec4 data0');\n                switch (this.returnType) {\n                  case 'Number':\n                  case 'Float':\n                  case 'Integer':\n                    for (let i = 0; i < subKernels.length; i++) {\n                      const subKernel = subKernels[i];\n                      result.push(subKernel.returnType === 'Integer' ? `int subKernelResult_${subKernel.name} = 0` : `float subKernelResult_${subKernel.name} = 0.0`, `layout(location = ${i + 1}) out vec4 data${i + 1}`);\n                    }\n                    break;\n                  case 'Array(2)':\n                    for (let i = 0; i < subKernels.length; i++) {\n                      result.push(`vec2 subKernelResult_${subKernels[i].name}`, `layout(location = ${i + 1}) out vec4 data${i + 1}`);\n                    }\n                    break;\n                  case 'Array(3)':\n                    for (let i = 0; i < subKernels.length; i++) {\n                      result.push(`vec3 subKernelResult_${subKernels[i].name}`, `layout(location = ${i + 1}) out vec4 data${i + 1}`);\n                    }\n                    break;\n                  case 'Array(4)':\n                    for (let i = 0; i < subKernels.length; i++) {\n                      result.push(`vec4 subKernelResult_${subKernels[i].name}`, `layout(location = ${i + 1}) out vec4 data${i + 1}`);\n                    }\n                    break;\n                }\n              } else {\n                result.push('out vec4 data0');\n              }\n              return utils.linesToString(result) + this.translatedSource;\n            }\n            getMainResultGraphical() {\n              return utils.linesToString(['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0 = actualColor']);\n            }\n            getMainResultPackedPixels() {\n              switch (this.returnType) {\n                case 'LiteralInteger':\n                case 'Number':\n                case 'Integer':\n                case 'Float':\n                  return this.getMainResultKernelPackedPixels() + this.getMainResultSubKernelPackedPixels();\n                default:\n                  throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n              }\n            }\n            getMainResultKernelPackedPixels() {\n              return utils.linesToString(['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', `  data0 = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`]);\n            }\n            getMainResultSubKernelPackedPixels() {\n              const result = [];\n              if (!this.subKernels) return '';\n              for (let i = 0; i < this.subKernels.length; i++) {\n                const subKernel = this.subKernels[i];\n                if (subKernel.returnType === 'Integer') {\n                  result.push(`  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`);\n                } else {\n                  result.push(`  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`);\n                }\n              }\n              return utils.linesToString(result);\n            }\n            getMainResultKernelMemoryOptimizedFloats(result, channel) {\n              result.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', `  data0.${channel} = kernelResult`);\n            }\n            getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n              if (!this.subKernels) return result;\n              for (let i = 0; i < this.subKernels.length; i++) {\n                const subKernel = this.subKernels[i];\n                if (subKernel.returnType === 'Integer') {\n                  result.push(`  data${i + 1}.${channel} = float(subKernelResult_${subKernel.name})`);\n                } else {\n                  result.push(`  data${i + 1}.${channel} = subKernelResult_${subKernel.name}`);\n                }\n              }\n            }\n            getMainResultKernelNumberTexture() {\n              return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0[0] = kernelResult'];\n            }\n            getMainResultSubKernelNumberTexture() {\n              const result = [];\n              if (!this.subKernels) return result;\n              for (let i = 0; i < this.subKernels.length; ++i) {\n                const subKernel = this.subKernels[i];\n                if (subKernel.returnType === 'Integer') {\n                  result.push(`  data${i + 1}[0] = float(subKernelResult_${subKernel.name})`);\n                } else {\n                  result.push(`  data${i + 1}[0] = subKernelResult_${subKernel.name}`);\n                }\n              }\n              return result;\n            }\n            getMainResultKernelArray2Texture() {\n              return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0[0] = kernelResult[0]', '  data0[1] = kernelResult[1]'];\n            }\n            getMainResultSubKernelArray2Texture() {\n              const result = [];\n              if (!this.subKernels) return result;\n              for (let i = 0; i < this.subKernels.length; ++i) {\n                const subKernel = this.subKernels[i];\n                result.push(`  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`, `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`);\n              }\n              return result;\n            }\n            getMainResultKernelArray3Texture() {\n              return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0[0] = kernelResult[0]', '  data0[1] = kernelResult[1]', '  data0[2] = kernelResult[2]'];\n            }\n            getMainResultSubKernelArray3Texture() {\n              const result = [];\n              if (!this.subKernels) return result;\n              for (let i = 0; i < this.subKernels.length; ++i) {\n                const subKernel = this.subKernels[i];\n                result.push(`  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`, `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`, `  data${i + 1}[2] = subKernelResult_${subKernel.name}[2]`);\n              }\n              return result;\n            }\n            getMainResultKernelArray4Texture() {\n              return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0 = kernelResult'];\n            }\n            getMainResultSubKernelArray4Texture() {\n              const result = [];\n              if (!this.subKernels) return result;\n              for (let i = 0; i < this.subKernels.length; ++i) {\n                result.push(`  data${i + 1} = subKernelResult_${this.subKernels[i].name}`);\n              }\n              return result;\n            }\n            destroyExtensions() {\n              this.extensions.EXT_color_buffer_float = null;\n              this.extensions.OES_texture_float_linear = null;\n            }\n            toJSON() {\n              const json = super.toJSON();\n              json.functionNodes = FunctionBuilder.fromKernel(this, WebGL2FunctionNode).toJSON();\n              json.settings.threadDim = this.threadDim;\n              return json;\n            }\n          }\n          module.exports = {\n            WebGL2Kernel\n          };\n        }, {\n          \"../../utils\": 114,\n          \"../function-builder\": 9,\n          \"../web-gl/kernel\": 70,\n          \"./fragment-shader\": 72,\n          \"./function-node\": 73,\n          \"./kernel-value-maps\": 74,\n          \"./vertex-shader\": 106\n        }],\n        106: [function (require, module, exports) {\n          const vertexShader = `#version 300 es\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nin vec2 aPos;\nin vec2 aTexCoord;\n\nout vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n          module.exports = {\n            vertexShader\n          };\n        }, {}],\n        107: [function (require, module, exports) {\n          const lib = require('./index');\n          const GPU = lib.GPU;\n          for (const p in lib) {\n            if (!lib.hasOwnProperty(p)) continue;\n            if (p === 'GPU') continue;\n            GPU[p] = lib[p];\n          }\n          if (typeof window !== 'undefined') {\n            bindTo(window);\n          }\n          if (typeof self !== 'undefined') {\n            bindTo(self);\n          }\n          function bindTo(target) {\n            if (target.GPU) return;\n            Object.defineProperty(target, 'GPU', {\n              get() {\n                return GPU;\n              }\n            });\n          }\n          module.exports = lib;\n        }, {\n          \"./index\": 109\n        }],\n        108: [function (require, module, exports) {\n          const {\n            gpuMock\n          } = require('gpu-mock.js');\n          const {\n            utils\n          } = require('./utils');\n          require('./backend/kernel');\n          const {\n            CPUKernel\n          } = require('./backend/cpu/kernel');\n          const {\n            HeadlessGLKernel\n          } = require('./backend/headless-gl/kernel');\n          const {\n            WebGL2Kernel\n          } = require('./backend/web-gl2/kernel');\n          const {\n            WebGLKernel\n          } = require('./backend/web-gl/kernel');\n          const {\n            kernelRunShortcut\n          } = require('./kernel-run-shortcut');\n          const kernelOrder = [HeadlessGLKernel, WebGL2Kernel, WebGLKernel];\n          const kernelTypes = ['gpu', 'cpu'];\n          const internalKernels = {\n            'headlessgl': HeadlessGLKernel,\n            'webgl2': WebGL2Kernel,\n            'webgl': WebGLKernel\n          };\n          let validate = true;\n          class GPU {\n            static disableValidation() {\n              validate = false;\n            }\n            static enableValidation() {\n              validate = true;\n            }\n            static get isGPUSupported() {\n              return kernelOrder.some(Kernel => Kernel.isSupported);\n            }\n            static get isKernelMapSupported() {\n              return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.kernelMap);\n            }\n            static get isOffscreenCanvasSupported() {\n              return typeof Worker !== 'undefined' && typeof OffscreenCanvas !== 'undefined' || typeof importScripts !== 'undefined';\n            }\n            static get isWebGLSupported() {\n              return WebGLKernel.isSupported;\n            }\n            static get isWebGL2Supported() {\n              return WebGL2Kernel.isSupported;\n            }\n            static get isHeadlessGLSupported() {\n              return HeadlessGLKernel.isSupported;\n            }\n            static get isCanvasSupported() {\n              return typeof HTMLCanvasElement !== 'undefined';\n            }\n            static get isGPUHTMLImageArraySupported() {\n              return WebGL2Kernel.isSupported;\n            }\n            static get isSinglePrecisionSupported() {\n              return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.isFloatRead && Kernel.features.isTextureFloat);\n            }\n            constructor(settings) {\n              settings = settings || {};\n              this.canvas = settings.canvas || null;\n              this.context = settings.context || null;\n              this.mode = settings.mode;\n              this.Kernel = null;\n              this.kernels = [];\n              this.functions = [];\n              this.nativeFunctions = [];\n              this.injectedNative = null;\n              if (this.mode === 'dev') return;\n              this.chooseKernel();\n              if (settings.functions) {\n                for (let i = 0; i < settings.functions.length; i++) {\n                  this.addFunction(settings.functions[i]);\n                }\n              }\n              if (settings.nativeFunctions) {\n                for (const p in settings.nativeFunctions) {\n                  if (!settings.nativeFunctions.hasOwnProperty(p)) continue;\n                  const s = settings.nativeFunctions[p];\n                  const {\n                    name,\n                    source\n                  } = s;\n                  this.addNativeFunction(name, source, s);\n                }\n              }\n            }\n            chooseKernel() {\n              if (this.Kernel) return;\n              let Kernel = null;\n              if (this.context) {\n                for (let i = 0; i < kernelOrder.length; i++) {\n                  const ExternalKernel = kernelOrder[i];\n                  if (ExternalKernel.isContextMatch(this.context)) {\n                    if (!ExternalKernel.isSupported) {\n                      throw new Error(`Kernel type ${ExternalKernel.name} not supported`);\n                    }\n                    Kernel = ExternalKernel;\n                    break;\n                  }\n                }\n                if (Kernel === null) {\n                  throw new Error('unknown Context');\n                }\n              } else if (this.mode) {\n                if (this.mode in internalKernels) {\n                  if (!validate || internalKernels[this.mode].isSupported) {\n                    Kernel = internalKernels[this.mode];\n                  }\n                } else if (this.mode === 'gpu') {\n                  for (let i = 0; i < kernelOrder.length; i++) {\n                    if (kernelOrder[i].isSupported) {\n                      Kernel = kernelOrder[i];\n                      break;\n                    }\n                  }\n                } else if (this.mode === 'cpu') {\n                  Kernel = CPUKernel;\n                }\n                if (!Kernel) {\n                  throw new Error(`A requested mode of \"${this.mode}\" and is not supported`);\n                }\n              } else {\n                for (let i = 0; i < kernelOrder.length; i++) {\n                  if (kernelOrder[i].isSupported) {\n                    Kernel = kernelOrder[i];\n                    break;\n                  }\n                }\n                if (!Kernel) {\n                  Kernel = CPUKernel;\n                }\n              }\n              if (!this.mode) {\n                this.mode = Kernel.mode;\n              }\n              this.Kernel = Kernel;\n            }\n            createKernel(source, settings) {\n              if (typeof source === 'undefined') {\n                throw new Error('Missing source parameter');\n              }\n              if (typeof source !== 'object' && !utils.isFunction(source) && typeof source !== 'string') {\n                throw new Error('source parameter not a function');\n              }\n              const kernels = this.kernels;\n              if (this.mode === 'dev') {\n                const devKernel = gpuMock(source, upgradeDeprecatedCreateKernelSettings(settings));\n                kernels.push(devKernel);\n                return devKernel;\n              }\n              source = typeof source === 'function' ? source.toString() : source;\n              const switchableKernels = {};\n              const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings) || {};\n              if (settings && typeof settings.argumentTypes === 'object') {\n                settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n              }\n              function onRequestFallback(args) {\n                console.warn('Falling back to CPU');\n                const fallbackKernel = new CPUKernel(source, {\n                  argumentTypes: kernelRun.argumentTypes,\n                  constantTypes: kernelRun.constantTypes,\n                  graphical: kernelRun.graphical,\n                  loopMaxIterations: kernelRun.loopMaxIterations,\n                  constants: kernelRun.constants,\n                  dynamicOutput: kernelRun.dynamicOutput,\n                  dynamicArgument: kernelRun.dynamicArguments,\n                  output: kernelRun.output,\n                  precision: kernelRun.precision,\n                  pipeline: kernelRun.pipeline,\n                  immutable: kernelRun.immutable,\n                  optimizeFloatMemory: kernelRun.optimizeFloatMemory,\n                  fixIntegerDivisionAccuracy: kernelRun.fixIntegerDivisionAccuracy,\n                  functions: kernelRun.functions,\n                  nativeFunctions: kernelRun.nativeFunctions,\n                  injectedNative: kernelRun.injectedNative,\n                  subKernels: kernelRun.subKernels,\n                  strictIntegers: kernelRun.strictIntegers,\n                  debug: kernelRun.debug\n                });\n                fallbackKernel.build.apply(fallbackKernel, args);\n                const result = fallbackKernel.run.apply(fallbackKernel, args);\n                kernelRun.replaceKernel(fallbackKernel);\n                return result;\n              }\n              function onRequestSwitchKernel(reasons, args, _kernel) {\n                if (_kernel.debug) {\n                  console.warn('Switching kernels');\n                }\n                let newOutput = null;\n                if (_kernel.signature && !switchableKernels[_kernel.signature]) {\n                  switchableKernels[_kernel.signature] = _kernel;\n                }\n                if (_kernel.dynamicOutput) {\n                  for (let i = reasons.length - 1; i >= 0; i--) {\n                    const reason = reasons[i];\n                    if (reason.type === 'outputPrecisionMismatch') {\n                      newOutput = reason.needed;\n                    }\n                  }\n                }\n                const Constructor = _kernel.constructor;\n                const argumentTypes = Constructor.getArgumentTypes(_kernel, args);\n                const signature = Constructor.getSignature(_kernel, argumentTypes);\n                const existingKernel = switchableKernels[signature];\n                if (existingKernel) {\n                  existingKernel.onActivate(_kernel);\n                  return existingKernel;\n                }\n                const newKernel = switchableKernels[signature] = new Constructor(source, {\n                  argumentTypes,\n                  constantTypes: _kernel.constantTypes,\n                  graphical: _kernel.graphical,\n                  loopMaxIterations: _kernel.loopMaxIterations,\n                  constants: _kernel.constants,\n                  dynamicOutput: _kernel.dynamicOutput,\n                  dynamicArgument: _kernel.dynamicArguments,\n                  context: _kernel.context,\n                  canvas: _kernel.canvas,\n                  output: newOutput || _kernel.output,\n                  precision: _kernel.precision,\n                  pipeline: _kernel.pipeline,\n                  immutable: _kernel.immutable,\n                  optimizeFloatMemory: _kernel.optimizeFloatMemory,\n                  fixIntegerDivisionAccuracy: _kernel.fixIntegerDivisionAccuracy,\n                  functions: _kernel.functions,\n                  nativeFunctions: _kernel.nativeFunctions,\n                  injectedNative: _kernel.injectedNative,\n                  subKernels: _kernel.subKernels,\n                  strictIntegers: _kernel.strictIntegers,\n                  debug: _kernel.debug,\n                  gpu: _kernel.gpu,\n                  validate,\n                  returnType: _kernel.returnType,\n                  tactic: _kernel.tactic,\n                  onRequestFallback,\n                  onRequestSwitchKernel,\n                  texture: _kernel.texture,\n                  mappedTextures: _kernel.mappedTextures,\n                  drawBuffersMap: _kernel.drawBuffersMap\n                });\n                newKernel.build.apply(newKernel, args);\n                kernelRun.replaceKernel(newKernel);\n                kernels.push(newKernel);\n                return newKernel;\n              }\n              const mergedSettings = Object.assign({\n                context: this.context,\n                canvas: this.canvas,\n                functions: this.functions,\n                nativeFunctions: this.nativeFunctions,\n                injectedNative: this.injectedNative,\n                gpu: this,\n                validate,\n                onRequestFallback,\n                onRequestSwitchKernel\n              }, settingsCopy);\n              const kernel = new this.Kernel(source, mergedSettings);\n              const kernelRun = kernelRunShortcut(kernel);\n              if (!this.canvas) {\n                this.canvas = kernel.canvas;\n              }\n              if (!this.context) {\n                this.context = kernel.context;\n              }\n              kernels.push(kernel);\n              return kernelRun;\n            }\n            createKernelMap() {\n              let fn;\n              let settings;\n              const argument2Type = typeof arguments[arguments.length - 2];\n              if (argument2Type === 'function' || argument2Type === 'string') {\n                fn = arguments[arguments.length - 2];\n                settings = arguments[arguments.length - 1];\n              } else {\n                fn = arguments[arguments.length - 1];\n              }\n              if (this.mode !== 'dev') {\n                if (!this.Kernel.isSupported || !this.Kernel.features.kernelMap) {\n                  if (this.mode && kernelTypes.indexOf(this.mode) < 0) {\n                    throw new Error(`kernelMap not supported on ${this.Kernel.name}`);\n                  }\n                }\n              }\n              const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings);\n              if (settings && typeof settings.argumentTypes === 'object') {\n                settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n              }\n              if (Array.isArray(arguments[0])) {\n                settingsCopy.subKernels = [];\n                const functions = arguments[0];\n                for (let i = 0; i < functions.length; i++) {\n                  const source = functions[i].toString();\n                  const name = utils.getFunctionNameFromString(source);\n                  settingsCopy.subKernels.push({\n                    name,\n                    source,\n                    property: i\n                  });\n                }\n              } else {\n                settingsCopy.subKernels = [];\n                const functions = arguments[0];\n                for (let p in functions) {\n                  if (!functions.hasOwnProperty(p)) continue;\n                  const source = functions[p].toString();\n                  const name = utils.getFunctionNameFromString(source);\n                  settingsCopy.subKernels.push({\n                    name: name || p,\n                    source,\n                    property: p\n                  });\n                }\n              }\n              return this.createKernel(fn, settingsCopy);\n            }\n            combineKernels() {\n              const firstKernel = arguments[0];\n              const combinedKernel = arguments[arguments.length - 1];\n              if (firstKernel.kernel.constructor.mode === 'cpu') return combinedKernel;\n              const canvas = arguments[0].canvas;\n              const context = arguments[0].context;\n              const max = arguments.length - 1;\n              for (let i = 0; i < max; i++) {\n                arguments[i].setCanvas(canvas).setContext(context).setPipeline(true);\n              }\n              return function () {\n                const texture = combinedKernel.apply(this, arguments);\n                if (texture.toArray) {\n                  return texture.toArray();\n                }\n                return texture;\n              };\n            }\n            setFunctions(functions) {\n              this.functions = functions;\n              return this;\n            }\n            setNativeFunctions(nativeFunctions) {\n              this.nativeFunctions = nativeFunctions;\n              return this;\n            }\n            addFunction(source, settings) {\n              this.functions.push({\n                source,\n                settings\n              });\n              return this;\n            }\n            addNativeFunction(name, source, settings) {\n              if (this.kernels.length > 0) {\n                throw new Error('Cannot call \"addNativeFunction\" after \"createKernels\" has been called.');\n              }\n              this.nativeFunctions.push(Object.assign({\n                name,\n                source\n              }, settings));\n              return this;\n            }\n            injectNative(source) {\n              this.injectedNative = source;\n              return this;\n            }\n            destroy() {\n              return new Promise((resolve, reject) => {\n                if (!this.kernels) {\n                  resolve();\n                }\n                setTimeout(() => {\n                  try {\n                    for (let i = 0; i < this.kernels.length; i++) {\n                      this.kernels[i].destroy(true);\n                    }\n                    let firstKernel = this.kernels[0];\n                    if (firstKernel) {\n                      if (firstKernel.kernel) {\n                        firstKernel = firstKernel.kernel;\n                      }\n                      if (firstKernel.constructor.destroyContext) {\n                        firstKernel.constructor.destroyContext(this.context);\n                      }\n                    }\n                  } catch (e) {\n                    reject(e);\n                  }\n                  resolve();\n                }, 0);\n              });\n            }\n          }\n          function upgradeDeprecatedCreateKernelSettings(settings) {\n            if (!settings) {\n              return {};\n            }\n            const upgradedSettings = Object.assign({}, settings);\n            if (settings.hasOwnProperty('floatOutput')) {\n              utils.warnDeprecated('setting', 'floatOutput', 'precision');\n              upgradedSettings.precision = settings.floatOutput ? 'single' : 'unsigned';\n            }\n            if (settings.hasOwnProperty('outputToTexture')) {\n              utils.warnDeprecated('setting', 'outputToTexture', 'pipeline');\n              upgradedSettings.pipeline = Boolean(settings.outputToTexture);\n            }\n            if (settings.hasOwnProperty('outputImmutable')) {\n              utils.warnDeprecated('setting', 'outputImmutable', 'immutable');\n              upgradedSettings.immutable = Boolean(settings.outputImmutable);\n            }\n            if (settings.hasOwnProperty('floatTextures')) {\n              utils.warnDeprecated('setting', 'floatTextures', 'optimizeFloatMemory');\n              upgradedSettings.optimizeFloatMemory = Boolean(settings.floatTextures);\n            }\n            return upgradedSettings;\n          }\n          module.exports = {\n            GPU,\n            kernelOrder,\n            kernelTypes\n          };\n        }, {\n          \"./backend/cpu/kernel\": 8,\n          \"./backend/headless-gl/kernel\": 34,\n          \"./backend/kernel\": 36,\n          \"./backend/web-gl/kernel\": 70,\n          \"./backend/web-gl2/kernel\": 105,\n          \"./kernel-run-shortcut\": 111,\n          \"./utils\": 114,\n          \"gpu-mock.js\": 4\n        }],\n        109: [function (require, module, exports) {\n          const {\n            GPU\n          } = require('./gpu');\n          const {\n            alias\n          } = require('./alias');\n          const {\n            utils\n          } = require('./utils');\n          const {\n            Input,\n            input\n          } = require('./input');\n          const {\n            Texture\n          } = require('./texture');\n          const {\n            FunctionBuilder\n          } = require('./backend/function-builder');\n          const {\n            FunctionNode\n          } = require('./backend/function-node');\n          const {\n            CPUFunctionNode\n          } = require('./backend/cpu/function-node');\n          const {\n            CPUKernel\n          } = require('./backend/cpu/kernel');\n          const {\n            HeadlessGLKernel\n          } = require('./backend/headless-gl/kernel');\n          const {\n            WebGLFunctionNode\n          } = require('./backend/web-gl/function-node');\n          const {\n            WebGLKernel\n          } = require('./backend/web-gl/kernel');\n          const {\n            kernelValueMaps: webGLKernelValueMaps\n          } = require('./backend/web-gl/kernel-value-maps');\n          const {\n            WebGL2FunctionNode\n          } = require('./backend/web-gl2/function-node');\n          const {\n            WebGL2Kernel\n          } = require('./backend/web-gl2/kernel');\n          const {\n            kernelValueMaps: webGL2KernelValueMaps\n          } = require('./backend/web-gl2/kernel-value-maps');\n          const {\n            GLKernel\n          } = require('./backend/gl/kernel');\n          const {\n            Kernel\n          } = require('./backend/kernel');\n          const {\n            FunctionTracer\n          } = require('./backend/function-tracer');\n          const mathRandom = require('./plugins/math-random-uniformly-distributed');\n          module.exports = {\n            alias,\n            CPUFunctionNode,\n            CPUKernel,\n            GPU,\n            FunctionBuilder,\n            FunctionNode,\n            HeadlessGLKernel,\n            Input,\n            input,\n            Texture,\n            utils,\n            WebGL2FunctionNode,\n            WebGL2Kernel,\n            webGL2KernelValueMaps,\n            WebGLFunctionNode,\n            WebGLKernel,\n            webGLKernelValueMaps,\n            GLKernel,\n            Kernel,\n            FunctionTracer,\n            plugins: {\n              mathRandom\n            }\n          };\n        }, {\n          \"./alias\": 5,\n          \"./backend/cpu/function-node\": 6,\n          \"./backend/cpu/kernel\": 8,\n          \"./backend/function-builder\": 9,\n          \"./backend/function-node\": 10,\n          \"./backend/function-tracer\": 11,\n          \"./backend/gl/kernel\": 13,\n          \"./backend/headless-gl/kernel\": 34,\n          \"./backend/kernel\": 36,\n          \"./backend/web-gl/function-node\": 38,\n          \"./backend/web-gl/kernel\": 70,\n          \"./backend/web-gl/kernel-value-maps\": 39,\n          \"./backend/web-gl2/function-node\": 73,\n          \"./backend/web-gl2/kernel\": 105,\n          \"./backend/web-gl2/kernel-value-maps\": 74,\n          \"./gpu\": 108,\n          \"./input\": 110,\n          \"./plugins/math-random-uniformly-distributed\": 112,\n          \"./texture\": 113,\n          \"./utils\": 114\n        }],\n        110: [function (require, module, exports) {\n          class Input {\n            constructor(value, size) {\n              this.value = value;\n              if (Array.isArray(size)) {\n                this.size = size;\n              } else {\n                this.size = new Int32Array(3);\n                if (size.z) {\n                  this.size = new Int32Array([size.x, size.y, size.z]);\n                } else if (size.y) {\n                  this.size = new Int32Array([size.x, size.y]);\n                } else {\n                  this.size = new Int32Array([size.x]);\n                }\n              }\n              const [w, h, d] = this.size;\n              if (d) {\n                if (this.value.length !== w * h * d) {\n                  throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} * ${d} = ${h * w * d}`);\n                }\n              } else if (h) {\n                if (this.value.length !== w * h) {\n                  throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} = ${h * w}`);\n                }\n              } else {\n                if (this.value.length !== w) {\n                  throw new Error(`Input size ${this.value.length} does not match ${w}`);\n                }\n              }\n            }\n            toArray() {\n              const {\n                utils\n              } = require('./utils');\n              const [w, h, d] = this.size;\n              if (d) {\n                return utils.erectMemoryOptimized3DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h, d);\n              } else if (h) {\n                return utils.erectMemoryOptimized2DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h);\n              } else {\n                return this.value;\n              }\n            }\n          }\n          function input(value, size) {\n            return new Input(value, size);\n          }\n          module.exports = {\n            Input,\n            input\n          };\n        }, {\n          \"./utils\": 114\n        }],\n        111: [function (require, module, exports) {\n          const {\n            utils\n          } = require('./utils');\n          function kernelRunShortcut(kernel) {\n            let run = function () {\n              kernel.build.apply(kernel, arguments);\n              run = function () {\n                let result = kernel.run.apply(kernel, arguments);\n                if (kernel.switchingKernels) {\n                  const reasons = kernel.resetSwitchingKernels();\n                  const newKernel = kernel.onRequestSwitchKernel(reasons, arguments, kernel);\n                  shortcut.kernel = kernel = newKernel;\n                  result = newKernel.run.apply(newKernel, arguments);\n                }\n                if (kernel.renderKernels) {\n                  return kernel.renderKernels();\n                } else if (kernel.renderOutput) {\n                  return kernel.renderOutput();\n                } else {\n                  return result;\n                }\n              };\n              return run.apply(kernel, arguments);\n            };\n            const shortcut = function () {\n              return run.apply(kernel, arguments);\n            };\n            shortcut.exec = function () {\n              return new Promise((accept, reject) => {\n                try {\n                  accept(run.apply(this, arguments));\n                } catch (e) {\n                  reject(e);\n                }\n              });\n            };\n            shortcut.replaceKernel = function (replacementKernel) {\n              kernel = replacementKernel;\n              bindKernelToShortcut(kernel, shortcut);\n            };\n            bindKernelToShortcut(kernel, shortcut);\n            return shortcut;\n          }\n          function bindKernelToShortcut(kernel, shortcut) {\n            if (shortcut.kernel) {\n              shortcut.kernel = kernel;\n              return;\n            }\n            const properties = utils.allPropertiesOf(kernel);\n            for (let i = 0; i < properties.length; i++) {\n              const property = properties[i];\n              if (property[0] === '_' && property[1] === '_') continue;\n              if (typeof kernel[property] === 'function') {\n                if (property.substring(0, 3) === 'add' || property.substring(0, 3) === 'set') {\n                  shortcut[property] = function () {\n                    shortcut.kernel[property].apply(shortcut.kernel, arguments);\n                    return shortcut;\n                  };\n                } else {\n                  shortcut[property] = function () {\n                    return shortcut.kernel[property].apply(shortcut.kernel, arguments);\n                  };\n                }\n              } else {\n                shortcut.__defineGetter__(property, () => shortcut.kernel[property]);\n                shortcut.__defineSetter__(property, value => {\n                  shortcut.kernel[property] = value;\n                });\n              }\n            }\n            shortcut.kernel = kernel;\n          }\n          module.exports = {\n            kernelRunShortcut\n          };\n        }, {\n          \"./utils\": 114\n        }],\n        112: [function (require, module, exports) {\n          const source = `// https://www.shadertoy.com/view/4t2SDh\n//note: uniformly distributed, normalized rand, [0,1]\nhighp float randomSeedShift = 1.0;\nhighp float slide = 1.0;\nuniform highp float randomSeed1;\nuniform highp float randomSeed2;\n\nhighp float nrand(highp vec2 n) {\n  highp float result = fract(sin(dot((n.xy + 1.0) * vec2(randomSeed1 * slide, randomSeed2 * randomSeedShift), vec2(12.9898, 78.233))) * 43758.5453);\n  randomSeedShift = result;\n  if (randomSeedShift > 0.5) {\n    slide += 0.00009; \n  } else {\n    slide += 0.0009;\n  }\n  return result;\n}`;\n          const name = 'math-random-uniformly-distributed';\n          const functionMatch = `Math.random()`;\n          const functionReplace = `nrand(vTexCoord)`;\n          const functionReturnType = 'Number';\n          const onBeforeRun = kernel => {\n            kernel.setUniform1f('randomSeed1', Math.random());\n            kernel.setUniform1f('randomSeed2', Math.random());\n          };\n          const plugin = {\n            name,\n            onBeforeRun,\n            functionMatch,\n            functionReplace,\n            functionReturnType,\n            source\n          };\n          module.exports = plugin;\n        }, {}],\n        113: [function (require, module, exports) {\n          class Texture {\n            constructor(settings) {\n              const {\n                texture,\n                size,\n                dimensions,\n                output,\n                context,\n                type = 'NumberTexture',\n                kernel,\n                internalFormat,\n                textureFormat\n              } = settings;\n              if (!output) throw new Error('settings property \"output\" required.');\n              if (!context) throw new Error('settings property \"context\" required.');\n              if (!texture) throw new Error('settings property \"texture\" required.');\n              if (!kernel) throw new Error('settings property \"kernel\" required.');\n              this.texture = texture;\n              if (texture._refs) {\n                texture._refs++;\n              } else {\n                texture._refs = 1;\n              }\n              this.size = size;\n              this.dimensions = dimensions;\n              this.output = output;\n              this.context = context;\n              this.kernel = kernel;\n              this.type = type;\n              this._deleted = false;\n              this.internalFormat = internalFormat;\n              this.textureFormat = textureFormat;\n            }\n            toArray() {\n              throw new Error(`Not implemented on ${this.constructor.name}`);\n            }\n            clone() {\n              throw new Error(`Not implemented on ${this.constructor.name}`);\n            }\n            delete() {\n              throw new Error(`Not implemented on ${this.constructor.name}`);\n            }\n            clear() {\n              throw new Error(`Not implemented on ${this.constructor.name}`);\n            }\n          }\n          module.exports = {\n            Texture\n          };\n        }, {}],\n        114: [function (require, module, exports) {\n          const acorn = require('acorn');\n          const {\n            Input\n          } = require('./input');\n          const {\n            Texture\n          } = require('./texture');\n          const FUNCTION_NAME = /function ([^(]*)/;\n          const STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n          const ARGUMENT_NAMES = /([^\\s,]+)/g;\n          const utils = {\n            systemEndianness() {\n              return _systemEndianness;\n            },\n            getSystemEndianness() {\n              const b = new ArrayBuffer(4);\n              const a = new Uint32Array(b);\n              const c = new Uint8Array(b);\n              a[0] = 0xdeadbeef;\n              if (c[0] === 0xef) return 'LE';\n              if (c[0] === 0xde) return 'BE';\n              throw new Error('unknown endianness');\n            },\n            isFunction(funcObj) {\n              return typeof funcObj === 'function';\n            },\n            isFunctionString(fn) {\n              if (typeof fn === 'string') {\n                return fn.slice(0, 'function'.length).toLowerCase() === 'function';\n              }\n              return false;\n            },\n            getFunctionNameFromString(funcStr) {\n              const result = FUNCTION_NAME.exec(funcStr);\n              if (!result || result.length === 0) return null;\n              return result[1].trim();\n            },\n            getFunctionBodyFromString(funcStr) {\n              return funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\n            },\n            getArgumentNamesFromString(fn) {\n              const fnStr = fn.replace(STRIP_COMMENTS, '');\n              let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n              if (result === null) {\n                result = [];\n              }\n              return result;\n            },\n            clone(obj) {\n              if (obj === null || typeof obj !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\n              const temp = obj.constructor();\n              for (let key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                  obj.isActiveClone = null;\n                  temp[key] = utils.clone(obj[key]);\n                  delete obj.isActiveClone;\n                }\n              }\n              return temp;\n            },\n            isArray(array) {\n              return !isNaN(array.length);\n            },\n            getVariableType(value, strictIntegers) {\n              if (utils.isArray(value)) {\n                if (value.length > 0 && value[0].nodeName === 'IMG') {\n                  return 'HTMLImageArray';\n                }\n                return 'Array';\n              }\n              switch (value.constructor) {\n                case Boolean:\n                  return 'Boolean';\n                case Number:\n                  if (strictIntegers && Number.isInteger(value)) {\n                    return 'Integer';\n                  }\n                  return 'Float';\n                case Texture:\n                  return value.type;\n                case Input:\n                  return 'Input';\n              }\n              if ('nodeName' in value) {\n                switch (value.nodeName) {\n                  case 'IMG':\n                    return 'HTMLImage';\n                  case 'CANVAS':\n                    return 'HTMLImage';\n                  case 'VIDEO':\n                    return 'HTMLVideo';\n                }\n              } else if (value.hasOwnProperty('type')) {\n                return value.type;\n              } else if (typeof OffscreenCanvas !== 'undefined' && value instanceof OffscreenCanvas) {\n                return 'OffscreenCanvas';\n              } else if (typeof ImageBitmap !== 'undefined' && value instanceof ImageBitmap) {\n                return 'ImageBitmap';\n              } else if (typeof ImageData !== 'undefined' && value instanceof ImageData) {\n                return 'ImageData';\n              }\n              return 'Unknown';\n            },\n            getKernelTextureSize(settings, dimensions) {\n              let [w, h, d] = dimensions;\n              let texelCount = (w || 1) * (h || 1) * (d || 1);\n              if (settings.optimizeFloatMemory && settings.precision === 'single') {\n                w = texelCount = Math.ceil(texelCount / 4);\n              }\n              if (h > 1 && w * h === texelCount) {\n                return new Int32Array([w, h]);\n              }\n              return utils.closestSquareDimensions(texelCount);\n            },\n            closestSquareDimensions(length) {\n              const sqrt = Math.sqrt(length);\n              let high = Math.ceil(sqrt);\n              let low = Math.floor(sqrt);\n              while (high * low < length) {\n                high--;\n                low = Math.ceil(length / high);\n              }\n              return new Int32Array([low, Math.ceil(length / low)]);\n            },\n            getMemoryOptimizedFloatTextureSize(dimensions, bitRatio) {\n              const totalArea = utils.roundTo((dimensions[0] || 1) * (dimensions[1] || 1) * (dimensions[2] || 1) * (dimensions[3] || 1), 4);\n              const texelCount = totalArea / bitRatio;\n              return utils.closestSquareDimensions(texelCount);\n            },\n            getMemoryOptimizedPackedTextureSize(dimensions, bitRatio) {\n              const [w, h, d] = dimensions;\n              const totalArea = utils.roundTo((w || 1) * (h || 1) * (d || 1), 4);\n              const texelCount = totalArea / (4 / bitRatio);\n              return utils.closestSquareDimensions(texelCount);\n            },\n            roundTo(n, d) {\n              return Math.floor((n + d - 1) / d) * d;\n            },\n            getDimensions(x, pad) {\n              let ret;\n              if (utils.isArray(x)) {\n                const dim = [];\n                let temp = x;\n                while (utils.isArray(temp)) {\n                  dim.push(temp.length);\n                  temp = temp[0];\n                }\n                ret = dim.reverse();\n              } else if (x instanceof Texture) {\n                ret = x.output;\n              } else if (x instanceof Input) {\n                ret = x.size;\n              } else {\n                throw new Error(`Unknown dimensions of ${x}`);\n              }\n              if (pad) {\n                ret = Array.from(ret);\n                while (ret.length < 3) {\n                  ret.push(1);\n                }\n              }\n              return new Int32Array(ret);\n            },\n            flatten2dArrayTo(array, target) {\n              let offset = 0;\n              for (let y = 0; y < array.length; y++) {\n                target.set(array[y], offset);\n                offset += array[y].length;\n              }\n            },\n            flatten3dArrayTo(array, target) {\n              let offset = 0;\n              for (let z = 0; z < array.length; z++) {\n                for (let y = 0; y < array[z].length; y++) {\n                  target.set(array[z][y], offset);\n                  offset += array[z][y].length;\n                }\n              }\n            },\n            flatten4dArrayTo(array, target) {\n              let offset = 0;\n              for (let l = 0; l < array.length; l++) {\n                for (let z = 0; z < array[l].length; z++) {\n                  for (let y = 0; y < array[l][z].length; y++) {\n                    target.set(array[l][z][y], offset);\n                    offset += array[l][z][y].length;\n                  }\n                }\n              }\n            },\n            flattenTo(array, target) {\n              if (utils.isArray(array[0])) {\n                if (utils.isArray(array[0][0])) {\n                  if (utils.isArray(array[0][0][0])) {\n                    utils.flatten4dArrayTo(array, target);\n                  } else {\n                    utils.flatten3dArrayTo(array, target);\n                  }\n                } else {\n                  utils.flatten2dArrayTo(array, target);\n                }\n              } else {\n                target.set(array);\n              }\n            },\n            splitArray(array, part) {\n              const result = [];\n              for (let i = 0; i < array.length; i += part) {\n                result.push(new array.constructor(array.buffer, i * 4 + array.byteOffset, part));\n              }\n              return result;\n            },\n            getAstString(source, ast) {\n              const lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\n              const start = ast.loc.start;\n              const end = ast.loc.end;\n              const result = [];\n              if (start.line === end.line) {\n                result.push(lines[start.line - 1].substring(start.column, end.column));\n              } else {\n                result.push(lines[start.line - 1].slice(start.column));\n                for (let i = start.line; i < end.line; i++) {\n                  result.push(lines[i]);\n                }\n                result.push(lines[end.line - 1].slice(0, end.column));\n              }\n              return result.join('\\n');\n            },\n            allPropertiesOf(obj) {\n              const props = [];\n              do {\n                props.push.apply(props, Object.getOwnPropertyNames(obj));\n              } while (obj = Object.getPrototypeOf(obj));\n              return props;\n            },\n            linesToString(lines) {\n              if (lines.length > 0) {\n                return lines.join(';\\n') + ';\\n';\n              } else {\n                return '\\n';\n              }\n            },\n            warnDeprecated(type, oldName, newName) {\n              if (newName) {\n                console.warn(`You are using a deprecated ${type} \"${oldName}\". It has been replaced with \"${newName}\". Fixing, but please upgrade as it will soon be removed.`);\n              } else {\n                console.warn(`You are using a deprecated ${type} \"${oldName}\". It has been removed. Fixing, but please upgrade as it will soon be removed.`);\n              }\n            },\n            flipPixels: (pixels, width, height) => {\n              const halfHeight = height / 2 | 0;\n              const bytesPerRow = width * 4;\n              const temp = new Uint8ClampedArray(width * 4);\n              const result = pixels.slice(0);\n              for (let y = 0; y < halfHeight; ++y) {\n                const topOffset = y * bytesPerRow;\n                const bottomOffset = (height - y - 1) * bytesPerRow;\n                temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n                result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n                result.set(temp, bottomOffset);\n              }\n              return result;\n            },\n            erectPackedFloat: (array, width) => {\n              return array.subarray(0, width);\n            },\n            erect2DPackedFloat: (array, width, height) => {\n              const yResults = new Array(height);\n              for (let y = 0; y < height; y++) {\n                const xStart = y * width;\n                const xEnd = xStart + width;\n                yResults[y] = array.subarray(xStart, xEnd);\n              }\n              return yResults;\n            },\n            erect3DPackedFloat: (array, width, height, depth) => {\n              const zResults = new Array(depth);\n              for (let z = 0; z < depth; z++) {\n                const yResults = new Array(height);\n                for (let y = 0; y < height; y++) {\n                  const xStart = z * height * width + y * width;\n                  const xEnd = xStart + width;\n                  yResults[y] = array.subarray(xStart, xEnd);\n                }\n                zResults[z] = yResults;\n              }\n              return zResults;\n            },\n            erectMemoryOptimizedFloat: (array, width) => {\n              return array.subarray(0, width);\n            },\n            erectMemoryOptimized2DFloat: (array, width, height) => {\n              const yResults = new Array(height);\n              for (let y = 0; y < height; y++) {\n                const offset = y * width;\n                yResults[y] = array.subarray(offset, offset + width);\n              }\n              return yResults;\n            },\n            erectMemoryOptimized3DFloat: (array, width, height, depth) => {\n              const zResults = new Array(depth);\n              for (let z = 0; z < depth; z++) {\n                const yResults = new Array(height);\n                for (let y = 0; y < height; y++) {\n                  const offset = z * height * width + y * width;\n                  yResults[y] = array.subarray(offset, offset + width);\n                }\n                zResults[z] = yResults;\n              }\n              return zResults;\n            },\n            erectFloat: (array, width) => {\n              const xResults = new Float32Array(width);\n              let i = 0;\n              for (let x = 0; x < width; x++) {\n                xResults[x] = array[i];\n                i += 4;\n              }\n              return xResults;\n            },\n            erect2DFloat: (array, width, height) => {\n              const yResults = new Array(height);\n              let i = 0;\n              for (let y = 0; y < height; y++) {\n                const xResults = new Float32Array(width);\n                for (let x = 0; x < width; x++) {\n                  xResults[x] = array[i];\n                  i += 4;\n                }\n                yResults[y] = xResults;\n              }\n              return yResults;\n            },\n            erect3DFloat: (array, width, height, depth) => {\n              const zResults = new Array(depth);\n              let i = 0;\n              for (let z = 0; z < depth; z++) {\n                const yResults = new Array(height);\n                for (let y = 0; y < height; y++) {\n                  const xResults = new Float32Array(width);\n                  for (let x = 0; x < width; x++) {\n                    xResults[x] = array[i];\n                    i += 4;\n                  }\n                  yResults[y] = xResults;\n                }\n                zResults[z] = yResults;\n              }\n              return zResults;\n            },\n            erectArray2: (array, width) => {\n              const xResults = new Array(width);\n              const xResultsMax = width * 4;\n              let i = 0;\n              for (let x = 0; x < xResultsMax; x += 4) {\n                xResults[i++] = array.subarray(x, x + 2);\n              }\n              return xResults;\n            },\n            erect2DArray2: (array, width, height) => {\n              const yResults = new Array(height);\n              const XResultsMax = width * 4;\n              for (let y = 0; y < height; y++) {\n                const xResults = new Array(width);\n                const offset = y * XResultsMax;\n                let i = 0;\n                for (let x = 0; x < XResultsMax; x += 4) {\n                  xResults[i++] = array.subarray(x + offset, x + offset + 2);\n                }\n                yResults[y] = xResults;\n              }\n              return yResults;\n            },\n            erect3DArray2: (array, width, height, depth) => {\n              const xResultsMax = width * 4;\n              const zResults = new Array(depth);\n              for (let z = 0; z < depth; z++) {\n                const yResults = new Array(height);\n                for (let y = 0; y < height; y++) {\n                  const xResults = new Array(width);\n                  const offset = z * xResultsMax * height + y * xResultsMax;\n                  let i = 0;\n                  for (let x = 0; x < xResultsMax; x += 4) {\n                    xResults[i++] = array.subarray(x + offset, x + offset + 2);\n                  }\n                  yResults[y] = xResults;\n                }\n                zResults[z] = yResults;\n              }\n              return zResults;\n            },\n            erectArray3: (array, width) => {\n              const xResults = new Array(width);\n              const xResultsMax = width * 4;\n              let i = 0;\n              for (let x = 0; x < xResultsMax; x += 4) {\n                xResults[i++] = array.subarray(x, x + 3);\n              }\n              return xResults;\n            },\n            erect2DArray3: (array, width, height) => {\n              const xResultsMax = width * 4;\n              const yResults = new Array(height);\n              for (let y = 0; y < height; y++) {\n                const xResults = new Array(width);\n                const offset = y * xResultsMax;\n                let i = 0;\n                for (let x = 0; x < xResultsMax; x += 4) {\n                  xResults[i++] = array.subarray(x + offset, x + offset + 3);\n                }\n                yResults[y] = xResults;\n              }\n              return yResults;\n            },\n            erect3DArray3: (array, width, height, depth) => {\n              const xResultsMax = width * 4;\n              const zResults = new Array(depth);\n              for (let z = 0; z < depth; z++) {\n                const yResults = new Array(height);\n                for (let y = 0; y < height; y++) {\n                  const xResults = new Array(width);\n                  const offset = z * xResultsMax * height + y * xResultsMax;\n                  let i = 0;\n                  for (let x = 0; x < xResultsMax; x += 4) {\n                    xResults[i++] = array.subarray(x + offset, x + offset + 3);\n                  }\n                  yResults[y] = xResults;\n                }\n                zResults[z] = yResults;\n              }\n              return zResults;\n            },\n            erectArray4: (array, width) => {\n              const xResults = new Array(array);\n              const xResultsMax = width * 4;\n              let i = 0;\n              for (let x = 0; x < xResultsMax; x += 4) {\n                xResults[i++] = array.subarray(x, x + 4);\n              }\n              return xResults;\n            },\n            erect2DArray4: (array, width, height) => {\n              const xResultsMax = width * 4;\n              const yResults = new Array(height);\n              for (let y = 0; y < height; y++) {\n                const xResults = new Array(width);\n                const offset = y * xResultsMax;\n                let i = 0;\n                for (let x = 0; x < xResultsMax; x += 4) {\n                  xResults[i++] = array.subarray(x + offset, x + offset + 4);\n                }\n                yResults[y] = xResults;\n              }\n              return yResults;\n            },\n            erect3DArray4: (array, width, height, depth) => {\n              const xResultsMax = width * 4;\n              const zResults = new Array(depth);\n              for (let z = 0; z < depth; z++) {\n                const yResults = new Array(height);\n                for (let y = 0; y < height; y++) {\n                  const xResults = new Array(width);\n                  const offset = z * xResultsMax * height + y * xResultsMax;\n                  let i = 0;\n                  for (let x = 0; x < xResultsMax; x += 4) {\n                    xResults[i++] = array.subarray(x + offset, x + offset + 4);\n                  }\n                  yResults[y] = xResults;\n                }\n                zResults[z] = yResults;\n              }\n              return zResults;\n            },\n            flattenFunctionToString: (source, settings) => {\n              const {\n                findDependency,\n                thisLookup,\n                doNotDefine\n              } = settings;\n              let flattened = settings.flattened;\n              if (!flattened) {\n                flattened = settings.flattened = {};\n              }\n              const ast = acorn.parse(source);\n              const functionDependencies = [];\n              let indent = 0;\n              function flatten(ast) {\n                if (Array.isArray(ast)) {\n                  const results = [];\n                  for (let i = 0; i < ast.length; i++) {\n                    results.push(flatten(ast[i]));\n                  }\n                  return results.join('');\n                }\n                switch (ast.type) {\n                  case 'Program':\n                    return flatten(ast.body) + (ast.body[0].type === 'VariableDeclaration' ? ';' : '');\n                  case 'FunctionDeclaration':\n                    return `function ${ast.id.name}(${ast.params.map(flatten).join(', ')}) ${flatten(ast.body)}`;\n                  case 'BlockStatement':\n                    {\n                      const result = [];\n                      indent += 2;\n                      for (let i = 0; i < ast.body.length; i++) {\n                        const flat = flatten(ast.body[i]);\n                        if (flat) {\n                          result.push(' '.repeat(indent) + flat, ';\\n');\n                        }\n                      }\n                      indent -= 2;\n                      return `{\\n${result.join('')}}`;\n                    }\n                  case 'VariableDeclaration':\n                    const declarations = utils.normalizeDeclarations(ast).map(flatten).filter(r => r !== null);\n                    if (declarations.length < 1) {\n                      return '';\n                    } else {\n                      return `${ast.kind} ${declarations.join(',')}`;\n                    }\n                  case 'VariableDeclarator':\n                    if (ast.init.object && ast.init.object.type === 'ThisExpression') {\n                      const lookup = thisLookup(ast.init.property.name, true);\n                      if (lookup) {\n                        return `${ast.id.name} = ${flatten(ast.init)}`;\n                      } else {\n                        return null;\n                      }\n                    } else {\n                      return `${ast.id.name} = ${flatten(ast.init)}`;\n                    }\n                  case 'CallExpression':\n                    {\n                      if (ast.callee.property.name === 'subarray') {\n                        return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                      }\n                      if (ast.callee.object.name === 'gl' || ast.callee.object.name === 'context') {\n                        return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                      }\n                      if (ast.callee.object.type === 'ThisExpression') {\n                        functionDependencies.push(findDependency('this', ast.callee.property.name));\n                        return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                      } else if (ast.callee.object.name) {\n                        const foundSource = findDependency(ast.callee.object.name, ast.callee.property.name);\n                        if (foundSource === null) {\n                          return `${ast.callee.object.name}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                        } else {\n                          functionDependencies.push(foundSource);\n                          return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                        }\n                      } else if (ast.callee.object.type === 'MemberExpression') {\n                        return `${flatten(ast.callee.object)}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                      } else {\n                        throw new Error('unknown ast.callee');\n                      }\n                    }\n                  case 'ReturnStatement':\n                    return `return ${flatten(ast.argument)}`;\n                  case 'BinaryExpression':\n                    return `(${flatten(ast.left)}${ast.operator}${flatten(ast.right)})`;\n                  case 'UnaryExpression':\n                    if (ast.prefix) {\n                      return `${ast.operator} ${flatten(ast.argument)}`;\n                    } else {\n                      return `${flatten(ast.argument)} ${ast.operator}`;\n                    }\n                  case 'ExpressionStatement':\n                    return `${flatten(ast.expression)}`;\n                  case 'SequenceExpression':\n                    return `(${flatten(ast.expressions)})`;\n                  case 'ArrowFunctionExpression':\n                    return `(${ast.params.map(flatten).join(', ')}) => ${flatten(ast.body)}`;\n                  case 'Literal':\n                    return ast.raw;\n                  case 'Identifier':\n                    return ast.name;\n                  case 'MemberExpression':\n                    if (ast.object.type === 'ThisExpression') {\n                      return thisLookup(ast.property.name);\n                    }\n                    if (ast.computed) {\n                      return `${flatten(ast.object)}[${flatten(ast.property)}]`;\n                    }\n                    return flatten(ast.object) + '.' + flatten(ast.property);\n                  case 'ThisExpression':\n                    return 'this';\n                  case 'NewExpression':\n                    return `new ${flatten(ast.callee)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                  case 'ForStatement':\n                    return `for (${flatten(ast.init)};${flatten(ast.test)};${flatten(ast.update)}) ${flatten(ast.body)}`;\n                  case 'AssignmentExpression':\n                    return `${flatten(ast.left)}${ast.operator}${flatten(ast.right)}`;\n                  case 'UpdateExpression':\n                    return `${flatten(ast.argument)}${ast.operator}`;\n                  case 'IfStatement':\n                    return `if (${flatten(ast.test)}) ${flatten(ast.consequent)}`;\n                  case 'ThrowStatement':\n                    return `throw ${flatten(ast.argument)}`;\n                  case 'ObjectPattern':\n                    return ast.properties.map(flatten).join(', ');\n                  case 'ArrayPattern':\n                    return ast.elements.map(flatten).join(', ');\n                  case 'DebuggerStatement':\n                    return 'debugger;';\n                  case 'ConditionalExpression':\n                    return `${flatten(ast.test)}?${flatten(ast.consequent)}:${flatten(ast.alternate)}`;\n                  case 'Property':\n                    if (ast.kind === 'init') {\n                      return flatten(ast.key);\n                    }\n                }\n                throw new Error(`unhandled ast.type of ${ast.type}`);\n              }\n              const result = flatten(ast);\n              if (functionDependencies.length > 0) {\n                const flattenedFunctionDependencies = [];\n                for (let i = 0; i < functionDependencies.length; i++) {\n                  const functionDependency = functionDependencies[i];\n                  if (!flattened[functionDependency]) {\n                    flattened[functionDependency] = true;\n                  }\n                  functionDependency ? flattenedFunctionDependencies.push(utils.flattenFunctionToString(functionDependency, settings) + '\\n') : '';\n                }\n                return flattenedFunctionDependencies.join('') + result;\n              }\n              return result;\n            },\n            normalizeDeclarations: ast => {\n              if (ast.type !== 'VariableDeclaration') throw new Error('Ast is not of type \"VariableDeclaration\"');\n              const normalizedDeclarations = [];\n              for (let declarationIndex = 0; declarationIndex < ast.declarations.length; declarationIndex++) {\n                const declaration = ast.declarations[declarationIndex];\n                if (declaration.id && declaration.id.type === 'ObjectPattern' && declaration.id.properties) {\n                  const {\n                    properties\n                  } = declaration.id;\n                  for (let propertyIndex = 0; propertyIndex < properties.length; propertyIndex++) {\n                    const property = properties[propertyIndex];\n                    if (property.value.type === 'ObjectPattern' && property.value.properties) {\n                      for (let subPropertyIndex = 0; subPropertyIndex < property.value.properties.length; subPropertyIndex++) {\n                        const subProperty = property.value.properties[subPropertyIndex];\n                        if (subProperty.type === 'Property') {\n                          normalizedDeclarations.push({\n                            type: 'VariableDeclarator',\n                            id: {\n                              type: 'Identifier',\n                              name: subProperty.key.name\n                            },\n                            init: {\n                              type: 'MemberExpression',\n                              object: {\n                                type: 'MemberExpression',\n                                object: declaration.init,\n                                property: {\n                                  type: 'Identifier',\n                                  name: property.key.name\n                                },\n                                computed: false\n                              },\n                              property: {\n                                type: 'Identifier',\n                                name: subProperty.key.name\n                              },\n                              computed: false\n                            }\n                          });\n                        } else {\n                          throw new Error('unexpected state');\n                        }\n                      }\n                    } else if (property.value.type === 'Identifier') {\n                      normalizedDeclarations.push({\n                        type: 'VariableDeclarator',\n                        id: {\n                          type: 'Identifier',\n                          name: property.value && property.value.name ? property.value.name : property.key.name\n                        },\n                        init: {\n                          type: 'MemberExpression',\n                          object: declaration.init,\n                          property: {\n                            type: 'Identifier',\n                            name: property.key.name\n                          },\n                          computed: false\n                        }\n                      });\n                    } else {\n                      throw new Error('unexpected state');\n                    }\n                  }\n                } else if (declaration.id && declaration.id.type === 'ArrayPattern' && declaration.id.elements) {\n                  const {\n                    elements\n                  } = declaration.id;\n                  for (let elementIndex = 0; elementIndex < elements.length; elementIndex++) {\n                    const element = elements[elementIndex];\n                    if (element.type === 'Identifier') {\n                      normalizedDeclarations.push({\n                        type: 'VariableDeclarator',\n                        id: {\n                          type: 'Identifier',\n                          name: element.name\n                        },\n                        init: {\n                          type: 'MemberExpression',\n                          object: declaration.init,\n                          property: {\n                            type: 'Literal',\n                            value: elementIndex,\n                            raw: elementIndex.toString(),\n                            start: element.start,\n                            end: element.end\n                          },\n                          computed: true\n                        }\n                      });\n                    } else {\n                      throw new Error('unexpected state');\n                    }\n                  }\n                } else {\n                  normalizedDeclarations.push(declaration);\n                }\n              }\n              return normalizedDeclarations;\n            },\n            splitHTMLImageToRGB: (gpu, image) => {\n              const rKernel = gpu.createKernel(function (a) {\n                const pixel = a[this.thread.y][this.thread.x];\n                return pixel.r * 255;\n              }, {\n                output: [image.width, image.height],\n                precision: 'unsigned',\n                argumentTypes: {\n                  a: 'HTMLImage'\n                }\n              });\n              const gKernel = gpu.createKernel(function (a) {\n                const pixel = a[this.thread.y][this.thread.x];\n                return pixel.g * 255;\n              }, {\n                output: [image.width, image.height],\n                precision: 'unsigned',\n                argumentTypes: {\n                  a: 'HTMLImage'\n                }\n              });\n              const bKernel = gpu.createKernel(function (a) {\n                const pixel = a[this.thread.y][this.thread.x];\n                return pixel.b * 255;\n              }, {\n                output: [image.width, image.height],\n                precision: 'unsigned',\n                argumentTypes: {\n                  a: 'HTMLImage'\n                }\n              });\n              const aKernel = gpu.createKernel(function (a) {\n                const pixel = a[this.thread.y][this.thread.x];\n                return pixel.a * 255;\n              }, {\n                output: [image.width, image.height],\n                precision: 'unsigned',\n                argumentTypes: {\n                  a: 'HTMLImage'\n                }\n              });\n              const result = [rKernel(image), gKernel(image), bKernel(image), aKernel(image)];\n              result.rKernel = rKernel;\n              result.gKernel = gKernel;\n              result.bKernel = bKernel;\n              result.aKernel = aKernel;\n              result.gpu = gpu;\n              return result;\n            },\n            splitRGBAToCanvases: (gpu, rgba, width, height) => {\n              const visualKernelR = gpu.createKernel(function (v) {\n                const pixel = v[this.thread.y][this.thread.x];\n                this.color(pixel.r / 255, 0, 0, 255);\n              }, {\n                output: [width, height],\n                graphical: true,\n                argumentTypes: {\n                  v: 'Array2D(4)'\n                }\n              });\n              visualKernelR(rgba);\n              const visualKernelG = gpu.createKernel(function (v) {\n                const pixel = v[this.thread.y][this.thread.x];\n                this.color(0, pixel.g / 255, 0, 255);\n              }, {\n                output: [width, height],\n                graphical: true,\n                argumentTypes: {\n                  v: 'Array2D(4)'\n                }\n              });\n              visualKernelG(rgba);\n              const visualKernelB = gpu.createKernel(function (v) {\n                const pixel = v[this.thread.y][this.thread.x];\n                this.color(0, 0, pixel.b / 255, 255);\n              }, {\n                output: [width, height],\n                graphical: true,\n                argumentTypes: {\n                  v: 'Array2D(4)'\n                }\n              });\n              visualKernelB(rgba);\n              const visualKernelA = gpu.createKernel(function (v) {\n                const pixel = v[this.thread.y][this.thread.x];\n                this.color(255, 255, 255, pixel.a / 255);\n              }, {\n                output: [width, height],\n                graphical: true,\n                argumentTypes: {\n                  v: 'Array2D(4)'\n                }\n              });\n              visualKernelA(rgba);\n              return [visualKernelR.canvas, visualKernelG.canvas, visualKernelB.canvas, visualKernelA.canvas];\n            },\n            getMinifySafeName: fn => {\n              try {\n                const ast = acorn.parse(`const value = ${fn.toString()}`);\n                const {\n                  init\n                } = ast.body[0].declarations[0];\n                return init.body.name || init.body.body[0].argument.name;\n              } catch (e) {\n                throw new Error('Unrecognized function type.  Please use `() => yourFunctionVariableHere` or function() { return yourFunctionVariableHere; }');\n              }\n            },\n            sanitizeName: function (name) {\n              if (dollarSign.test(name)) {\n                name = name.replace(dollarSign, 'S_S');\n              }\n              if (doubleUnderscore.test(name)) {\n                name = name.replace(doubleUnderscore, 'U_U');\n              } else if (singleUnderscore.test(name)) {\n                name = name.replace(singleUnderscore, 'u_u');\n              }\n              return name;\n            }\n          };\n          const dollarSign = /\\$/;\n          const doubleUnderscore = /__/;\n          const singleUnderscore = /_/;\n          const _systemEndianness = utils.getSystemEndianness();\n          module.exports = {\n            utils\n          };\n        }, {\n          \"./input\": 110,\n          \"./texture\": 113,\n          \"acorn\": 1\n        }]\n      }, {}, [107])(107);\n    });\n  });\n\n  /* Functions for turning sparse hashes into arrays and vice versa */\n  const lookup = {\n    /**\r\n     * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\r\n     * @param {Object} hashes\r\n     * @returns {Object}\r\n     */\n    toTable(hashes) {\n      const hash = hashes.reduce((memo, hash) => {\n        return Object.assign(memo, hash);\n      }, {});\n      return lookup.toHash(hash);\n    },\n    /**\r\n     * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\r\n     */\n    toTable2D(objects2D) {\n      const table = {};\n      let valueIndex = 0;\n      for (let i = 0; i < objects2D.length; i++) {\n        const objects = objects2D[i];\n        for (let j = 0; j < objects.length; j++) {\n          const object = objects[j];\n          for (const p in object) {\n            if (object.hasOwnProperty(p) && !table.hasOwnProperty(p)) {\n              table[p] = valueIndex++;\n            }\n          }\n        }\n      }\n      return table;\n    },\n    toInputTable2D(data) {\n      const table = {};\n      let tableIndex = 0;\n      for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n        const input = data[dataIndex].input;\n        for (let i = 0; i < input.length; i++) {\n          const object = input[i];\n          for (const p in object) {\n            if (!object.hasOwnProperty(p)) continue;\n            if (!table.hasOwnProperty(p)) {\n              table[p] = tableIndex++;\n            }\n          }\n        }\n      }\n      return table;\n    },\n    toOutputTable2D(data) {\n      const table = {};\n      let tableIndex = 0;\n      for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n        const output = data[dataIndex].output;\n        for (let i = 0; i < output.length; i++) {\n          const object = output[i];\n          for (const p in object) {\n            if (!object.hasOwnProperty(p)) continue;\n            if (!table.hasOwnProperty(p)) {\n              table[p] = tableIndex++;\n            }\n          }\n        }\n      }\n      return table;\n    },\n    /**\r\n     * performs `{a: 6, b: 7} -> {a: 0, b: 1}`\r\n     */\n    toHash(hash) {\n      const lookup = {};\n      let index = 0;\n      const keys = Object.keys(hash);\n      for (let i = 0; i < keys.length; i++) {\n        lookup[keys[i]] = index++;\n      }\n      return lookup;\n    },\n    /**\r\n     * performs `{a: 0, b: 1}, {a: 6} -> [6, 0]`\r\n     */\n    toArray(lookup, object, arrayLength) {\n      const result = new Float32Array(arrayLength);\n      for (const p in lookup) {\n        if (!lookup.hasOwnProperty(p)) continue;\n        result[lookup[p]] = object.hasOwnProperty(p) ? object[p] : 0;\n      }\n      return result;\n    },\n    toArrayShort(lookup, object) {\n      const result = [];\n      for (const p in lookup) {\n        if (!lookup.hasOwnProperty(p)) continue;\n        if (!object.hasOwnProperty(p)) break;\n        result[lookup[p]] = object[p];\n      }\n      return Float32Array.from(result);\n    },\n    toArrays(lookup, objects, arrayLength) {\n      const result = [];\n      for (let i = 0; i < objects.length; i++) {\n        result.push(this.toArray(lookup, objects[i], arrayLength));\n      }\n      return result;\n    },\n    /**\r\n     * performs `{a: 0, b: 1}, [6, 7] -> {a: 6, b: 7}`\r\n     * @param {Object} lookup\r\n     * @param {Array} array\r\n     * @returns {Object}\r\n     */\n    toObject(lookup, array) {\n      const object = {};\n      for (const p in lookup) {\n        if (!lookup.hasOwnProperty(p)) continue;\n        object[p] = array[lookup[p]];\n      }\n      return object;\n    },\n    toObjectPartial(lookup, array, offset = 0, limit = 0) {\n      const object = {};\n      let i = 0;\n      for (const p in lookup) {\n        if (!lookup.hasOwnProperty(p)) continue;\n        if (offset > 0) {\n          if (i++ < offset) continue;\n        }\n        if (limit > 0) {\n          if (i++ >= limit) continue;\n        }\n        object[p] = array[lookup[p] - offset];\n      }\n      return object;\n    },\n    dataShape(data) {\n      const shape = [];\n      let lastData;\n      if (data.hasOwnProperty('input')) {\n        shape.push('datum');\n        lastData = data.input;\n      } else if (Array.isArray(data)) {\n        if (data[0] && data[0].input) {\n          shape.push('array', 'datum');\n          lastData = data[0].input;\n        } else if (Array.isArray(data[0])) {\n          shape.push('array');\n          lastData = data[0];\n        } else {\n          lastData = data;\n        }\n      } else {\n        lastData = data;\n      }\n      let p;\n      while (lastData) {\n        p = Object.keys(lastData)[0];\n        if (Array.isArray(lastData) || typeof lastData.buffer === 'object') {\n          shape.push('array');\n          const possibleNumber = lastData[parseInt(p)];\n          if (typeof possibleNumber === 'number') {\n            shape.push('number');\n            break;\n          } else {\n            lastData = possibleNumber;\n          }\n        } else if (typeof lastData === 'object' && typeof lastData.buffer !== 'object') {\n          shape.push('object');\n          const possibleNumber = lastData[p];\n          if (typeof possibleNumber === 'number') {\n            shape.push('number');\n            break;\n          } else {\n            lastData = possibleNumber;\n          }\n        } else {\n          throw new Error('unhandled signature');\n        }\n      }\n      return shape;\n    },\n    addKeys(value, table) {\n      if (Array.isArray(value)) return table;\n      let i = Object.keys(table).length;\n      for (const p in value) {\n        if (!value.hasOwnProperty(p)) continue;\n        if (table.hasOwnProperty(p)) continue;\n        table[p] = i++;\n      }\n      return table;\n    }\n  };\n  var browser = createCommonjsModule(function (module, exports) {\n    var __assign = commonjsGlobal && commonjsGlobal.__assign || function () {\n      __assign = Object.assign || function (t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.thaw = exports.Block = exports.Thaw = void 0;\n    /**\n     * thaw an array of items\n     */\n    var Thaw = /** @class */function () {\n      function Thaw(items, options) {\n        var _this = this;\n        if (options === void 0) {\n          options = {};\n        }\n        var _a = __assign(__assign({}, Thaw.defaultSettings), options),\n          each = _a.each,\n          done = _a.done;\n        this.i = 0;\n        this.isStopped = false;\n        this.items = items;\n        this.options = options;\n        this.tick = function () {\n          if (_this.isStopped) return;\n          _this.timeout = setTimeout(_this.tick, 0);\n          if (Thaw.thawing) return;\n          var item = _this.items[_this.i];\n          if (_this.i >= _this.items.length) {\n            if (done !== null) {\n              Thaw.thawing = true;\n              done();\n              Thaw.thawing = false;\n            }\n            _this.isStopped = true;\n            clearTimeout(_this.timeout);\n            return;\n          }\n          if (each !== null) {\n            Thaw.thawing = true;\n            each(item, _this.i);\n            Thaw.thawing = false;\n          } else if (item !== undefined) {\n            item();\n          }\n          _this.i++;\n        };\n        Thaw.thaws.push(this);\n        if (!options.delay) {\n          this.tick();\n        }\n      }\n      Object.defineProperty(Thaw, \"isThawing\", {\n        /**\n         * returns if Thaw.js is thawing\n         */\n        get: function () {\n          return Thaw.thawing;\n        },\n        enumerable: false,\n        configurable: true\n      });\n      /**\n       * Stops all Thaw instances\n       */\n      Thaw.stopAll = function () {\n        for (var i = 0; i < Thaw.thaws.length; i++) {\n          Thaw.thaws[i].stop();\n        }\n      };\n      /**\n       * readies thaw to continue\n       */\n      Thaw.prototype.makeReady = function () {\n        if (this.isStopped) {\n          this.isStopped = false;\n          return true;\n        }\n        return false;\n      };\n      /**\n       * Adds an item to the end of this instance of Thaw and readies Thaw to process it\n       */\n      Thaw.prototype.add = function (item) {\n        this.items.push(item);\n        if (this.makeReady()) {\n          this.tick();\n        }\n        return this;\n      };\n      /**\n       * Inserts an item just after the current item being processed in Thaw and readies Thaw to process it\n       */\n      Thaw.prototype.insert = function (item) {\n        this.items.splice(this.i, 0, item);\n        if (this.makeReady()) {\n          this.tick();\n        }\n        return this;\n      };\n      /**\n       * Adds an Array to the end of this instance of Thaw and readies Thaw to process it\n       */\n      Thaw.prototype.addArray = function (items) {\n        this.items = this.items.concat(items);\n        if (this.makeReady()) {\n          this.tick();\n        }\n        return this;\n      };\n      /**\n       * Inserts an Array just after the current item being processed in Thaw and readies Thaw to process them\n       */\n      Thaw.prototype.insertArray = function (items) {\n        var before = this.items.splice(0, this.i);\n        var after = this.items;\n        this.items = before.concat(items, after);\n        if (this.makeReady()) {\n          this.tick();\n        }\n        return this;\n      };\n      /**\n       * Stops this instance of Thaw\n       */\n      Thaw.prototype.stop = function () {\n        this.isStopped = true;\n        clearTimeout(this.timeout);\n        if (this.options.done) {\n          this.options.done();\n        }\n        return this;\n      };\n      Thaw.thawing = false;\n      Thaw.thaws = [];\n      Thaw.defaultSettings = {\n        each: null,\n        done: null\n      };\n      return Thaw;\n    }();\n    exports.Thaw = Thaw;\n    /**\n     * simple thaw\n     */\n    function thaw(items, options) {\n      return new Thaw(items, options);\n    }\n    exports.thaw = thaw;\n    var Block = /** @class */function () {\n      function Block(options, count) {\n        if (count === void 0) {\n          count = 200;\n        }\n        this.index = 0;\n        this.thaws = [];\n        this.count = count;\n        this.options = options;\n      }\n      /**\n       * add an item to the end of items\n       */\n      Block.prototype.add = function (item) {\n        var next = this.next();\n        next.add(item);\n        return this;\n      };\n      /**\n       * add an Array to the end of items\n       */\n      Block.prototype.addArray = function (items) {\n        var next = this.next();\n        next.addArray(items);\n        return this;\n      };\n      /**\n       * insert an item into items @ current position\n       */\n      Block.prototype.insert = function (item) {\n        var next = this.next();\n        next.insert(item);\n        return this;\n      };\n      /**\n       * insert and array into items @ current position\n       */\n      Block.prototype.insertArray = function (items) {\n        var next = this.next();\n        next.insertArray(items);\n        return this;\n      };\n      /**\n       * Stops all thaws in this block\n       */\n      Block.prototype.stop = function () {\n        for (var i = 0; i < this.thaws.length; i++) {\n          this.thaws[i].stop();\n        }\n        return this;\n      };\n      /**\n       * Get next available in block\n       */\n      Block.prototype.next = function () {\n        var thaw;\n        var thaws = this.thaws;\n        if (thaws.length < this.count) {\n          thaw = new Thaw([], this.options);\n          thaws.push(thaw);\n        } else {\n          thaw = thaws[this.index] || null;\n        }\n        this.index++;\n        if (this.index >= this.count) {\n          this.index = 0;\n        }\n        return thaw;\n      };\n      return Block;\n    }();\n    exports.Block = Block;\n    if (typeof window !== 'undefined') {\n      // @ts-ignore\n      window.Thaw = Thaw;\n      // @ts-ignore\n      window.thaw = thaw;\n      // @ts-ignore\n      window.Thaw.Block = Block;\n    }\n  });\n  function arraysToFloat32Arrays(arrays) {\n    const result = [];\n    for (let i = 0; i < arrays.length; i++) {\n      result.push(Float32Array.from(arrays[i]));\n    }\n    return result;\n  }\n  function inputOutputArraysToFloat32Arrays(input, output) {\n    const result = [];\n    for (let i = 0; i < input.length; i++) {\n      result.push(Float32Array.from(input[i]));\n    }\n    for (let i = 0; i < output.length; i++) {\n      result.push(Float32Array.from(output[i]));\n    }\n    return result;\n  }\n  function arrayToFloat32Arrays(array) {\n    const result = [];\n    for (let i = 0; i < array.length; i++) {\n      result.push(Float32Array.from([array[i]]));\n    }\n    return result;\n  }\n  function inputOutputArrayToFloat32Arrays(input, output) {\n    const result = [];\n    for (let i = 0; i < input.length; i++) {\n      result.push(Float32Array.from([input[i]]));\n    }\n    for (let i = 0; i < output.length; i++) {\n      result.push(Float32Array.from([output[i]]));\n    }\n    return result;\n  }\n  function arrayToFloat32Array(array) {\n    return Float32Array.from(array);\n  }\n  function inputOutputObjectsToFloat32Arrays(input, output, inputTable, outputTable, inputLength, outputLength) {\n    const results = [];\n    for (let i = 0; i < input.length; i++) {\n      const object = input[i];\n      const result = new Float32Array(inputLength);\n      for (const p in object) {\n        if (object.hasOwnProperty(p)) {\n          result[inputTable[p]] = object[p];\n        }\n      }\n      results.push(result);\n    }\n    for (let i = 0; i < output.length; i++) {\n      const object = output[i];\n      const result = new Float32Array(outputLength);\n      for (const p in object) {\n        if (object.hasOwnProperty(p)) {\n          result[outputTable[p]] = object[p];\n        }\n      }\n      results.push(result);\n    }\n    return results;\n  }\n  function objectToFloat32Arrays(object) {\n    const result = [];\n    for (const p in object) {\n      if (!object.hasOwnProperty(p)) continue;\n      result.push(Float32Array.from([object[p]]));\n    }\n    return result;\n  }\n  function inputOutputObjectToFloat32Arrays(input, output) {\n    const result = [];\n    for (const p in input) {\n      if (!input.hasOwnProperty(p)) continue;\n      result.push(Float32Array.from([input[p]]));\n    }\n    for (const p in output) {\n      if (!output.hasOwnProperty(p)) continue;\n      result.push(Float32Array.from([output[p]]));\n    }\n    return result;\n  }\n  function objectToFloat32Array(object, table, length) {\n    const result = new Float32Array(length);\n    for (const p in object) {\n      if (object.hasOwnProperty(p)) {\n        result[table[p]] = object[p];\n      }\n    }\n    return result;\n  }\n  class LookupTable {\n    constructor(data, prop) {\n      this.prop = null;\n      this.table = {};\n      this.length = 0;\n      const table = this.table;\n      if (prop) {\n        this.prop = prop;\n        for (let i = 0; i < data.length; i++) {\n          const datum = data[i];\n          const object = datum[prop];\n          for (const p in object) {\n            if (!object.hasOwnProperty(p)) continue;\n            if (table.hasOwnProperty(p)) continue;\n            table[p] = this.length++;\n          }\n        }\n      } else if (Array.isArray(data) && Array.isArray(data[0])) {\n        for (let i = 0; i < data.length; i++) {\n          const array = data[i];\n          for (let j = 0; j < array.length; j++) {\n            const object = array[j];\n            for (const p in object) {\n              if (!object.hasOwnProperty(p)) continue;\n              if (table.hasOwnProperty(p)) continue;\n              table[p] = this.length++;\n            }\n          }\n        }\n      } else {\n        for (let i = 0; i < data.length; i++) {\n          const object = data[i];\n          for (const p in object) {\n            if (!object.hasOwnProperty(p)) continue;\n            if (table.hasOwnProperty(p)) continue;\n            table[p] = this.length++;\n          }\n        }\n      }\n    }\n  }\n  function max(values) {\n    if (Array.isArray(values) || values instanceof Float32Array) {\n      return Math.max(...values);\n    } else {\n      return Math.max(...Object.values(values));\n    }\n  }\n  function mse$1(errors) {\n    // mean squared error\n    let sum = 0;\n    for (let i = 0; i < errors.length; i++) {\n      sum += errors[i] ** 2;\n    }\n    return sum / errors.length;\n  }\n  function randomWeight() {\n    return Math.random() * 0.4 - 0.2;\n  }\n\n  /**\r\n   * Returns a random float between given min and max bounds (inclusive)\r\n   * @param min Minimum value of the ranfom float\r\n   * @param max Maximum value of the random float\r\n   */\n  function randomFloat(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n  /**\r\n   * Complicated math. All you need to know is that it returns a random number.\r\n   * More info: https://en.wikipedia.org/wiki/Normal_distribution\r\n   */\n  function gaussRandom() {\n    if (gaussRandom.returnV) {\n      gaussRandom.returnV = false;\n      return gaussRandom.vVal;\n    }\n    const u = 2 * Math.random() - 1;\n    const v = 2 * Math.random() - 1;\n    const r = u * u + v * v;\n    if (r === 0 || r > 1) {\n      return gaussRandom();\n    }\n    const c = Math.sqrt(-2 * Math.log(r) / r);\n    gaussRandom.vVal = v * c; // cache this\n    gaussRandom.returnV = true;\n    return u * c;\n  }\n  /**\r\n   * Returns a random integer between given min and max bounds\r\n   * @param min Minimum value of the random integer\r\n   * @param max Maximum value of the random integer\r\n   */\n  function randomInteger(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n  /**\r\n   * If you know what this is: https://en.wikipedia.org/wiki/Normal_distribution\r\n   * @param mu\r\n   * @param std\r\n   */\n  function randomN(mu, std) {\n    return mu + gaussRandom() * std;\n  }\n  gaussRandom.returnV = false;\n  gaussRandom.vVal = 0;\n  var random$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    randomFloat: randomFloat,\n    gaussRandom: gaussRandom,\n    randomInteger: randomInteger,\n    randomN: randomN\n  });\n\n  /**\r\n   * Returns an array of given size, full of randomness\r\n   */\n  function randos(size, std = null) {\n    const array = new Float32Array(size);\n    if (std === null) {\n      for (let i = 0; i < size; i++) {\n        array[i] = randomWeight();\n      }\n    } else {\n      for (let i = 0; i < size; i++) {\n        array[i] = randomFloat(-std, std);\n      }\n    }\n    return array;\n  }\n  /**\r\n   * Returns a 2D matrix of given size, full of randomness\r\n   */\n  function randos2D(width, height, std) {\n    const result = new Array(height);\n    for (let y = 0; y < height; y++) {\n      result[y] = randos(width, std);\n    }\n    return result;\n  }\n  /**\r\n   * Returns a 3D tensor of given size, full of randomness\r\n   */\n  function randos3D(width, height, depth, std) {\n    const result = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      result[z] = randos2D(width, height, std);\n    }\n    return result;\n  }\n\n  /**\r\n   * Returns an array of zeros\r\n   */\n  function zeros$1(size) {\n    return new Float32Array(size);\n  }\n  function getTypedArrayFn(value, table) {\n    if (value.buffer instanceof ArrayBuffer) {\n      return null;\n    }\n    if (Array.isArray(value)) {\n      return arrayToFloat32Array;\n    }\n    if (!table) throw new Error('table is not Object');\n    const {\n      length\n    } = Object.keys(table);\n    return v => {\n      const array = new Float32Array(length);\n      for (const p in table) {\n        if (!table.hasOwnProperty(p)) continue;\n        if (typeof v[p] !== 'number') continue;\n        array[table[p]] = v[p] || 0;\n      }\n      return array;\n    };\n  }\n  function defaults$8() {\n    return {\n      inputSize: 0,\n      outputSize: 0,\n      binaryThresh: 0.5\n    };\n  }\n  function trainDefaults$3() {\n    return {\n      activation: 'sigmoid',\n      iterations: 20000,\n      errorThresh: 0.005,\n      log: false,\n      logPeriod: 10,\n      leakyReluAlpha: 0.01,\n      learningRate: 0.3,\n      momentum: 0.1,\n      callbackPeriod: 10,\n      timeout: Infinity,\n      beta1: 0.9,\n      beta2: 0.999,\n      epsilon: 1e-8\n    };\n  }\n  class NeuralNetwork {\n    constructor(options = {}) {\n      this.options = defaults$8();\n      this.trainOpts = trainDefaults$3();\n      this.sizes = [];\n      this.outputLayer = -1;\n      this.biases = [];\n      this.weights = []; // weights for bias nodes\n      this.outputs = [];\n      // state for training\n      this.deltas = [];\n      this.changes = []; // for momentum\n      this.errors = [];\n      this.errorCheckInterval = 1;\n      this.inputLookup = null;\n      this.inputLookupLength = 0;\n      this.outputLookup = null;\n      this.outputLookupLength = 0;\n      this._formatInput = null;\n      this._formatOutput = null;\n      this.runInput = input => {\n        this.setActivation();\n        return this.runInput(input);\n      };\n      this.calculateDeltas = output => {\n        this.setActivation();\n        return this.calculateDeltas(output);\n      };\n      // adam\n      this.biasChangesLow = [];\n      this.biasChangesHigh = [];\n      this.changesLow = [];\n      this.changesHigh = [];\n      this.iterations = 0;\n      this.options = {\n        ...this.options,\n        ...options\n      };\n      this.updateTrainingOptions(options);\n      const {\n        inputSize,\n        hiddenLayers,\n        outputSize\n      } = this.options;\n      if (inputSize && outputSize) {\n        this.sizes = [inputSize].concat(hiddenLayers !== null && hiddenLayers !== void 0 ? hiddenLayers : []).concat([outputSize]);\n      }\n    }\n    /**\r\n     *\r\n     * Expects this.sizes to have been set\r\n     */\n    initialize() {\n      if (!this.sizes.length) {\n        throw new Error('Sizes must be set before initializing');\n      }\n      this.outputLayer = this.sizes.length - 1;\n      this.biases = new Array(this.outputLayer); // weights for bias nodes\n      this.weights = new Array(this.outputLayer);\n      this.outputs = new Array(this.outputLayer);\n      // state for training\n      this.deltas = new Array(this.outputLayer);\n      this.changes = new Array(this.outputLayer); // for momentum\n      this.errors = new Array(this.outputLayer);\n      for (let layerIndex = 0; layerIndex <= this.outputLayer; layerIndex++) {\n        const size = this.sizes[layerIndex];\n        this.deltas[layerIndex] = zeros$1(size);\n        this.errors[layerIndex] = zeros$1(size);\n        this.outputs[layerIndex] = zeros$1(size);\n        if (layerIndex > 0) {\n          this.biases[layerIndex] = randos(size);\n          this.weights[layerIndex] = new Array(size);\n          this.changes[layerIndex] = new Array(size);\n          for (let nodeIndex = 0; nodeIndex < size; nodeIndex++) {\n            const prevSize = this.sizes[layerIndex - 1];\n            this.weights[layerIndex][nodeIndex] = randos(prevSize);\n            this.changes[layerIndex][nodeIndex] = zeros$1(prevSize);\n          }\n        }\n      }\n      this.setActivation();\n      if (this.trainOpts.praxis === 'adam') {\n        this._setupAdam();\n      }\n    }\n    setActivation(activation) {\n      const value = activation !== null && activation !== void 0 ? activation : this.trainOpts.activation;\n      switch (value) {\n        case 'sigmoid':\n          this.runInput = this._runInputSigmoid;\n          this.calculateDeltas = this._calculateDeltasSigmoid;\n          break;\n        case 'relu':\n          this.runInput = this._runInputRelu;\n          this.calculateDeltas = this._calculateDeltasRelu;\n          break;\n        case 'leaky-relu':\n          this.runInput = this._runInputLeakyRelu;\n          this.calculateDeltas = this._calculateDeltasLeakyRelu;\n          break;\n        case 'tanh':\n          this.runInput = this._runInputTanh;\n          this.calculateDeltas = this._calculateDeltasTanh;\n          break;\n        default:\n          throw new Error(`Unknown activation ${value}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`);\n      }\n    }\n    get isRunnable() {\n      return this.sizes.length > 0;\n    }\n    run(input) {\n      if (!this.isRunnable) {\n        throw new Error('network not runnable');\n      }\n      let formattedInput;\n      if (this.inputLookup) {\n        formattedInput = lookup.toArray(this.inputLookup, input, this.inputLookupLength);\n      } else {\n        formattedInput = input;\n      }\n      this.validateInput(formattedInput);\n      const output = this.runInput(formattedInput).slice(0);\n      if (this.outputLookup) {\n        return lookup.toObject(this.outputLookup, output);\n      }\n      return output;\n    }\n    _runInputSigmoid(input) {\n      this.outputs[0] = input; // set output state of input layer\n      let output = null;\n      for (let layer = 1; layer <= this.outputLayer; layer++) {\n        const activeLayer = this.sizes[layer];\n        const activeWeights = this.weights[layer];\n        const activeBiases = this.biases[layer];\n        const activeOutputs = this.outputs[layer];\n        for (let node = 0; node < activeLayer; node++) {\n          const weights = activeWeights[node];\n          let sum = activeBiases[node];\n          for (let k = 0; k < weights.length; k++) {\n            sum += weights[k] * input[k];\n          }\n          // sigmoid\n          activeOutputs[node] = 1 / (1 + Math.exp(-sum));\n        }\n        output = input = activeOutputs;\n      }\n      if (!output) {\n        throw new Error('output was empty');\n      }\n      return output;\n    }\n    _runInputRelu(input) {\n      this.outputs[0] = input; // set output state of input layer\n      let output = null;\n      for (let layer = 1; layer <= this.outputLayer; layer++) {\n        const activeSize = this.sizes[layer];\n        const activeWeights = this.weights[layer];\n        const activeBiases = this.biases[layer];\n        const activeOutputs = this.outputs[layer];\n        for (let node = 0; node < activeSize; node++) {\n          const weights = activeWeights[node];\n          let sum = activeBiases[node];\n          for (let k = 0; k < weights.length; k++) {\n            sum += weights[k] * input[k];\n          }\n          // relu\n          activeOutputs[node] = sum < 0 ? 0 : sum;\n        }\n        output = input = activeOutputs;\n      }\n      if (!output) {\n        throw new Error('output was empty');\n      }\n      return output;\n    }\n    _runInputLeakyRelu(input) {\n      this.outputs[0] = input; // set output state of input layer\n      const {\n        leakyReluAlpha\n      } = this.trainOpts;\n      let output = null;\n      for (let layer = 1; layer <= this.outputLayer; layer++) {\n        const activeSize = this.sizes[layer];\n        const activeWeights = this.weights[layer];\n        const activeBiases = this.biases[layer];\n        const activeOutputs = this.outputs[layer];\n        for (let node = 0; node < activeSize; node++) {\n          const weights = activeWeights[node];\n          let sum = activeBiases[node];\n          for (let k = 0; k < weights.length; k++) {\n            sum += weights[k] * input[k];\n          }\n          // leaky relu\n          activeOutputs[node] = Math.max(sum, leakyReluAlpha * sum);\n        }\n        output = input = activeOutputs;\n      }\n      if (!output) {\n        throw new Error('output was empty');\n      }\n      return output;\n    }\n    _runInputTanh(input) {\n      this.outputs[0] = input; // set output state of input layer\n      let output = null;\n      for (let layer = 1; layer <= this.outputLayer; layer++) {\n        const activeSize = this.sizes[layer];\n        const activeWeights = this.weights[layer];\n        const activeBiases = this.biases[layer];\n        const activeOutputs = this.outputs[layer];\n        for (let node = 0; node < activeSize; node++) {\n          const weights = activeWeights[node];\n          let sum = activeBiases[node];\n          for (let k = 0; k < weights.length; k++) {\n            sum += weights[k] * input[k];\n          }\n          // tanh\n          activeOutputs[node] = Math.tanh(sum);\n        }\n        output = input = activeOutputs;\n      }\n      if (!output) {\n        throw new Error('output was empty');\n      }\n      return output;\n    }\n    /**\r\n     *\r\n     * Verifies network sizes are initialized\r\n     * If they are not it will initialize them based off the data set.\r\n     */\n    verifyIsInitialized(preparedData) {\n      if (this.sizes.length && this.outputLayer > 0) return;\n      this.sizes = [];\n      this.sizes.push(preparedData[0].input.length);\n      if (!this.options.hiddenLayers) {\n        this.sizes.push(Math.max(3, Math.floor(preparedData[0].input.length / 2)));\n      } else {\n        this.options.hiddenLayers.forEach(size => {\n          this.sizes.push(size);\n        });\n      }\n      this.sizes.push(preparedData[0].output.length);\n      this.initialize();\n    }\n    updateTrainingOptions(trainOpts) {\n      const merged = {\n        ...this.trainOpts,\n        ...trainOpts\n      };\n      this.validateTrainingOptions(merged);\n      this.trainOpts = merged;\n      this.setLogMethod(this.trainOpts.log);\n    }\n    validateTrainingOptions(options) {\n      const validations = {\n        activation: () => {\n          return ['sigmoid', 'relu', 'leaky-relu', 'tanh'].includes(options.activation);\n        },\n        iterations: () => {\n          const val = options.iterations;\n          return typeof val === 'number' && val > 0;\n        },\n        errorThresh: () => {\n          const val = options.errorThresh;\n          return typeof val === 'number' && val > 0 && val < 1;\n        },\n        log: () => {\n          const val = options.log;\n          return typeof val === 'function' || typeof val === 'boolean';\n        },\n        logPeriod: () => {\n          const val = options.logPeriod;\n          return typeof val === 'number' && val > 0;\n        },\n        leakyReluAlpha: () => {\n          const val = options.leakyReluAlpha;\n          return typeof val === 'number' && val > 0 && val < 1;\n        },\n        learningRate: () => {\n          const val = options.learningRate;\n          return typeof val === 'number' && val > 0 && val < 1;\n        },\n        momentum: () => {\n          const val = options.momentum;\n          return typeof val === 'number' && val > 0 && val < 1;\n        },\n        callback: () => {\n          const val = options.callback;\n          return typeof val === 'function' || val === undefined;\n        },\n        callbackPeriod: () => {\n          const val = options.callbackPeriod;\n          return typeof val === 'number' && val > 0;\n        },\n        timeout: () => {\n          const val = options.timeout;\n          return typeof val === 'number' && val > 0;\n        },\n        praxis: () => {\n          const val = options.praxis;\n          return !val || val === 'adam';\n        },\n        beta1: () => {\n          const val = options.beta1;\n          return val > 0 && val < 1;\n        },\n        beta2: () => {\n          const val = options.beta2;\n          return val > 0 && val < 1;\n        },\n        epsilon: () => {\n          const val = options.epsilon;\n          return val > 0 && val < 1;\n        }\n      };\n      for (const p in validations) {\n        const v = options;\n        if (!validations[p]()) {\n          throw new Error(`[${p}, ${v[p]}] is out of normal training range, your network will probably not train.`);\n        }\n      }\n    }\n    /**\r\n     *\r\n     *  Gets JSON of trainOpts object\r\n     *    NOTE: Activation is stored directly on JSON object and not in the training options\r\n     */\n    getTrainOptsJSON() {\n      const {\n        activation,\n        iterations,\n        errorThresh,\n        log,\n        logPeriod,\n        leakyReluAlpha,\n        learningRate,\n        momentum,\n        callbackPeriod,\n        timeout,\n        praxis,\n        beta1,\n        beta2,\n        epsilon\n      } = this.trainOpts;\n      return {\n        activation,\n        iterations,\n        errorThresh,\n        log: typeof log === 'function' ? true : typeof log === 'boolean' ? log : false,\n        logPeriod,\n        leakyReluAlpha,\n        learningRate,\n        momentum,\n        callbackPeriod,\n        timeout: timeout === Infinity ? 'Infinity' : timeout,\n        praxis,\n        beta1,\n        beta2,\n        epsilon\n      };\n    }\n    setLogMethod(log) {\n      if (typeof log === 'function') {\n        this.trainOpts.log = log;\n      } else if (log) {\n        this.trainOpts.log = this.logTrainingStatus;\n      } else {\n        this.trainOpts.log = false;\n      }\n    }\n    logTrainingStatus(status) {\n      console.log(`iterations: ${status.iterations}, training error: ${status.error}`);\n    }\n    calculateTrainingError(data) {\n      let sum = 0;\n      for (let i = 0; i < data.length; ++i) {\n        sum += this.trainPattern(data[i], true);\n      }\n      return sum / data.length;\n    }\n    trainPatterns(data) {\n      for (let i = 0; i < data.length; ++i) {\n        this.trainPattern(data[i]);\n      }\n    }\n    trainingTick(data, status, endTime) {\n      const {\n        callback,\n        callbackPeriod,\n        errorThresh,\n        iterations,\n        log,\n        logPeriod\n      } = this.trainOpts;\n      if (status.iterations >= iterations || status.error <= errorThresh || Date.now() >= endTime) {\n        return false;\n      }\n      status.iterations++;\n      if (log && status.iterations % logPeriod === 0) {\n        status.error = this.calculateTrainingError(data);\n        log(status);\n      } else if (status.iterations % this.errorCheckInterval === 0) {\n        status.error = this.calculateTrainingError(data);\n      } else {\n        this.trainPatterns(data);\n      }\n      if (callback && status.iterations % callbackPeriod === 0) {\n        callback({\n          iterations: status.iterations,\n          error: status.error\n        });\n      }\n      return true;\n    }\n    prepTraining(data, options = {}) {\n      this.updateTrainingOptions(options);\n      const preparedData = this.formatData(data);\n      const endTime = Date.now() + this.trainOpts.timeout;\n      const status = {\n        error: 1,\n        iterations: 0\n      };\n      this.verifyIsInitialized(preparedData);\n      this.validateData(preparedData);\n      return {\n        preparedData,\n        status,\n        endTime\n      };\n    }\n    train(data, options = {}) {\n      const {\n        preparedData,\n        status,\n        endTime\n      } = this.prepTraining(data, options);\n      while (true) {\n        if (!this.trainingTick(preparedData, status, endTime)) {\n          break;\n        }\n      }\n      return status;\n    }\n    async trainAsync(data, options = {}) {\n      const {\n        preparedData,\n        status,\n        endTime\n      } = this.prepTraining(data, options);\n      return await new Promise((resolve, reject) => {\n        try {\n          const thawedTrain = new browser.Thaw(new Array(this.trainOpts.iterations), {\n            delay: true,\n            each: () => this.trainingTick(preparedData, status, endTime) || thawedTrain.stop(),\n            done: () => resolve(status)\n          });\n          thawedTrain.tick();\n        } catch (trainError) {\n          reject(trainError);\n        }\n      });\n    }\n    trainPattern(value, logErrorRate) {\n      // forward propagate\n      this.runInput(value.input);\n      // back propagate\n      this.calculateDeltas(value.output);\n      this.adjustWeights();\n      if (logErrorRate) {\n        return mse$1(this.errors[this.outputLayer]);\n      }\n      return null;\n    }\n    _calculateDeltasSigmoid(target) {\n      for (let layer = this.outputLayer; layer >= 0; layer--) {\n        const activeSize = this.sizes[layer];\n        const activeOutput = this.outputs[layer];\n        const activeError = this.errors[layer];\n        const activeDeltas = this.deltas[layer];\n        const nextLayer = this.weights[layer + 1];\n        for (let node = 0; node < activeSize; node++) {\n          const output = activeOutput[node];\n          let error = 0;\n          if (layer === this.outputLayer) {\n            error = target[node] - output;\n          } else {\n            const deltas = this.deltas[layer + 1];\n            for (let k = 0; k < deltas.length; k++) {\n              error += deltas[k] * nextLayer[k][node];\n            }\n          }\n          activeError[node] = error;\n          activeDeltas[node] = error * output * (1 - output);\n        }\n      }\n    }\n    _calculateDeltasRelu(target) {\n      for (let layer = this.outputLayer; layer >= 0; layer--) {\n        const currentSize = this.sizes[layer];\n        const currentOutputs = this.outputs[layer];\n        const nextWeights = this.weights[layer + 1];\n        const nextDeltas = this.deltas[layer + 1];\n        const currentErrors = this.errors[layer];\n        const currentDeltas = this.deltas[layer];\n        for (let node = 0; node < currentSize; node++) {\n          const output = currentOutputs[node];\n          let error = 0;\n          if (layer === this.outputLayer) {\n            error = target[node] - output;\n          } else {\n            for (let k = 0; k < nextDeltas.length; k++) {\n              error += nextDeltas[k] * nextWeights[k][node];\n            }\n          }\n          currentErrors[node] = error;\n          currentDeltas[node] = output > 0 ? error : 0;\n        }\n      }\n    }\n    _calculateDeltasLeakyRelu(target) {\n      const alpha = this.trainOpts.leakyReluAlpha;\n      for (let layer = this.outputLayer; layer >= 0; layer--) {\n        const currentSize = this.sizes[layer];\n        const currentOutputs = this.outputs[layer];\n        const nextDeltas = this.deltas[layer + 1];\n        const nextWeights = this.weights[layer + 1];\n        const currentErrors = this.errors[layer];\n        const currentDeltas = this.deltas[layer];\n        for (let node = 0; node < currentSize; node++) {\n          const output = currentOutputs[node];\n          let error = 0;\n          if (layer === this.outputLayer) {\n            error = target[node] - output;\n          } else {\n            for (let k = 0; k < nextDeltas.length; k++) {\n              error += nextDeltas[k] * nextWeights[k][node];\n            }\n          }\n          currentErrors[node] = error;\n          currentDeltas[node] = output > 0 ? error : alpha * error;\n        }\n      }\n    }\n    _calculateDeltasTanh(target) {\n      for (let layer = this.outputLayer; layer >= 0; layer--) {\n        const currentSize = this.sizes[layer];\n        const currentOutputs = this.outputs[layer];\n        const nextDeltas = this.deltas[layer + 1];\n        const nextWeights = this.weights[layer + 1];\n        const currentErrors = this.errors[layer];\n        const currentDeltas = this.deltas[layer];\n        for (let node = 0; node < currentSize; node++) {\n          const output = currentOutputs[node];\n          let error = 0;\n          if (layer === this.outputLayer) {\n            error = target[node] - output;\n          } else {\n            for (let k = 0; k < nextDeltas.length; k++) {\n              error += nextDeltas[k] * nextWeights[k][node];\n            }\n          }\n          currentErrors[node] = error;\n          currentDeltas[node] = (1 - output * output) * error;\n        }\n      }\n    }\n    /**\r\n     *\r\n     * Changes weights of networks\r\n     */\n    adjustWeights() {\n      const {\n        learningRate,\n        momentum\n      } = this.trainOpts;\n      for (let layer = 1; layer <= this.outputLayer; layer++) {\n        const incoming = this.outputs[layer - 1];\n        const activeSize = this.sizes[layer];\n        const activeDelta = this.deltas[layer];\n        const activeChanges = this.changes[layer];\n        const activeWeights = this.weights[layer];\n        const activeBiases = this.biases[layer];\n        for (let node = 0; node < activeSize; node++) {\n          const delta = activeDelta[node];\n          for (let k = 0; k < incoming.length; k++) {\n            let change = activeChanges[node][k];\n            change = learningRate * delta * incoming[k] + momentum * change;\n            activeChanges[node][k] = change;\n            activeWeights[node][k] += change;\n          }\n          activeBiases[node] += learningRate * delta;\n        }\n      }\n    }\n    _setupAdam() {\n      this.biasChangesLow = [];\n      this.biasChangesHigh = [];\n      this.changesLow = [];\n      this.changesHigh = [];\n      this.iterations = 0;\n      for (let layer = 0; layer <= this.outputLayer; layer++) {\n        const size = this.sizes[layer];\n        if (layer > 0) {\n          this.biasChangesLow[layer] = zeros$1(size);\n          this.biasChangesHigh[layer] = zeros$1(size);\n          this.changesLow[layer] = new Array(size);\n          this.changesHigh[layer] = new Array(size);\n          for (let node = 0; node < size; node++) {\n            const prevSize = this.sizes[layer - 1];\n            this.changesLow[layer][node] = zeros$1(prevSize);\n            this.changesHigh[layer][node] = zeros$1(prevSize);\n          }\n        }\n      }\n      this.adjustWeights = this._adjustWeightsAdam;\n    }\n    _adjustWeightsAdam() {\n      this.iterations++;\n      const {\n        iterations\n      } = this;\n      const {\n        beta1,\n        beta2,\n        epsilon,\n        learningRate\n      } = this.trainOpts;\n      for (let layer = 1; layer <= this.outputLayer; layer++) {\n        const incoming = this.outputs[layer - 1];\n        const currentSize = this.sizes[layer];\n        const currentDeltas = this.deltas[layer];\n        const currentChangesLow = this.changesLow[layer];\n        const currentChangesHigh = this.changesHigh[layer];\n        const currentWeights = this.weights[layer];\n        const currentBiases = this.biases[layer];\n        const currentBiasChangesLow = this.biasChangesLow[layer];\n        const currentBiasChangesHigh = this.biasChangesHigh[layer];\n        for (let node = 0; node < currentSize; node++) {\n          const delta = currentDeltas[node];\n          for (let k = 0; k < incoming.length; k++) {\n            const gradient = delta * incoming[k];\n            const changeLow = currentChangesLow[node][k] * beta1 + (1 - beta1) * gradient;\n            const changeHigh = currentChangesHigh[node][k] * beta2 + (1 - beta2) * gradient * gradient;\n            const momentumCorrection = changeLow / (1 - Math.pow(beta1, iterations));\n            const gradientCorrection = changeHigh / (1 - Math.pow(beta2, iterations));\n            currentChangesLow[node][k] = changeLow;\n            currentChangesHigh[node][k] = changeHigh;\n            currentWeights[node][k] += learningRate * momentumCorrection / (Math.sqrt(gradientCorrection) + epsilon);\n          }\n          const biasGradient = currentDeltas[node];\n          const biasChangeLow = currentBiasChangesLow[node] * beta1 + (1 - beta1) * biasGradient;\n          const biasChangeHigh = currentBiasChangesHigh[node] * beta2 + (1 - beta2) * biasGradient * biasGradient;\n          const biasMomentumCorrection = currentBiasChangesLow[node] / (1 - Math.pow(beta1, iterations));\n          const biasGradientCorrection = currentBiasChangesHigh[node] / (1 - Math.pow(beta2, iterations));\n          currentBiasChangesLow[node] = biasChangeLow;\n          currentBiasChangesHigh[node] = biasChangeHigh;\n          currentBiases[node] += learningRate * biasMomentumCorrection / (Math.sqrt(biasGradientCorrection) + epsilon);\n        }\n      }\n    }\n    validateData(data) {\n      const inputSize = this.sizes[0];\n      const outputSize = this.sizes[this.sizes.length - 1];\n      const {\n        length\n      } = data;\n      for (let i = 0; i < length; i++) {\n        const {\n          input,\n          output\n        } = data[i];\n        if (input.length !== inputSize) {\n          throw new Error(`input at index ${i} length ${input.length} must be ${inputSize}`);\n        }\n        if (data[i].output.length !== outputSize) {\n          throw new Error(`output at index ${i} length ${output.length} must be ${outputSize}`);\n        }\n      }\n    }\n    validateInput(formattedInput) {\n      const inputSize = this.sizes[0];\n      if (formattedInput.length !== inputSize) {\n        throw new Error(`input length ${formattedInput.length} must match options.inputSize of ${inputSize}`);\n      }\n    }\n    formatData(data) {\n      if (!Array.isArray(data[0].input)) {\n        if (this.inputLookup) {\n          this.inputLookupLength = Object.keys(this.inputLookup).length;\n        } else {\n          const inputLookup = new LookupTable(data, 'input');\n          this.inputLookup = inputLookup.table;\n          this.inputLookupLength = inputLookup.length;\n        }\n      }\n      if (!Array.isArray(data[0].output)) {\n        if (this.outputLookup) {\n          this.outputLookupLength = Object.keys(this.outputLookup).length;\n        } else {\n          const lookup = new LookupTable(data, 'output');\n          this.outputLookup = lookup.table;\n          this.outputLookupLength = lookup.length;\n        }\n      }\n      if (!this._formatInput) {\n        this._formatInput = getTypedArrayFn(data[0].input, this.inputLookup);\n      }\n      if (!this._formatOutput) {\n        this._formatOutput = getTypedArrayFn(data[0].output, this.outputLookup);\n      }\n      // turn sparse hash input into arrays with 0s as filler\n      if (this._formatInput && this._formatOutput) {\n        const result = [];\n        for (let i = 0; i < data.length; i++) {\n          result.push({\n            input: this._formatInput(data[i].input),\n            output: this._formatOutput(data[i].output)\n          });\n        }\n        return result;\n      }\n      if (this._formatInput) {\n        const result = [];\n        for (let i = 0; i < data.length; i++) {\n          result.push({\n            input: this._formatInput(data[i].input),\n            output: data[i].output\n          });\n        }\n        return result;\n      }\n      if (this._formatOutput) {\n        const result = [];\n        for (let i = 0; i < data.length; i++) {\n          result.push({\n            input: data[i].input,\n            output: this._formatOutput(data[i].output)\n          });\n        }\n        return result;\n      }\n      return data;\n    }\n    addFormat(data) {\n      var _a, _b;\n      if (!Array.isArray(data.input) || typeof data.input[0] !== 'number') {\n        this.inputLookup = lookup.addKeys(data.input, (_a = this.inputLookup) !== null && _a !== void 0 ? _a : {});\n        if (this.inputLookup) {\n          this.inputLookupLength = Object.keys(this.inputLookup).length;\n        }\n      }\n      if (!Array.isArray(data.output) || typeof data.output[0] !== 'number') {\n        this.outputLookup = lookup.addKeys(data.output, (_b = this.outputLookup) !== null && _b !== void 0 ? _b : {});\n        if (this.outputLookup) {\n          this.outputLookupLength = Object.keys(this.outputLookup).length;\n        }\n      }\n    }\n    test(data) {\n      const {\n        preparedData\n      } = this.prepTraining(data);\n      // for binary classification problems with one output node\n      const isBinary = preparedData[0].output.length === 1;\n      // for classification problems\n      const misclasses = [];\n      // run each pattern through the trained network and collect\n      // error and misclassification statistics\n      let errorSum = 0;\n      if (isBinary) {\n        let falsePos = 0;\n        let falseNeg = 0;\n        let truePos = 0;\n        let trueNeg = 0;\n        for (let i = 0; i < preparedData.length; i++) {\n          const output = this.runInput(preparedData[i].input);\n          const target = preparedData[i].output;\n          const actual = output[0] > this.options.binaryThresh ? 1 : 0;\n          const expected = target[0];\n          if (actual !== expected) {\n            const misclass = preparedData[i];\n            misclasses.push({\n              input: misclass.input,\n              output: misclass.output,\n              actual,\n              expected\n            });\n          }\n          if (actual === 0 && expected === 0) {\n            trueNeg++;\n          } else if (actual === 1 && expected === 1) {\n            truePos++;\n          } else if (actual === 0 && expected === 1) {\n            falseNeg++;\n          } else if (actual === 1 && expected === 0) {\n            falsePos++;\n          }\n          errorSum += mse$1(output.map((value, i) => {\n            return target[i] - value;\n          }));\n        }\n        return {\n          error: errorSum / preparedData.length,\n          misclasses,\n          total: preparedData.length,\n          trueNeg,\n          truePos,\n          falseNeg,\n          falsePos,\n          precision: truePos > 0 ? truePos / (truePos + falsePos) : 0,\n          recall: truePos > 0 ? truePos / (truePos + falseNeg) : 0,\n          accuracy: (trueNeg + truePos) / preparedData.length\n        };\n      }\n      for (let i = 0; i < preparedData.length; i++) {\n        const output = this.runInput(preparedData[i].input);\n        const target = preparedData[i].output;\n        const actual = output.indexOf(max(output));\n        const expected = target.indexOf(max(target));\n        if (actual !== expected) {\n          const misclass = preparedData[i];\n          misclasses.push({\n            input: misclass.input,\n            output: misclass.output,\n            actual,\n            expected\n          });\n        }\n        errorSum += mse$1(output.map((value, i) => {\n          return target[i] - value;\n        }));\n      }\n      return {\n        error: errorSum / preparedData.length,\n        misclasses,\n        total: preparedData.length\n      };\n    }\n    toJSON() {\n      var _a, _b;\n      if (!this.isRunnable) {\n        this.initialize();\n      }\n      // use Array.from, keeping json small\n      const jsonLayerWeights = this.weights.map(layerWeights => {\n        return layerWeights.map(layerWeights => Array.from(layerWeights));\n      });\n      const jsonLayerBiases = this.biases.map(layerBiases => Array.from(layerBiases));\n      const jsonLayers = [];\n      const outputLength = this.sizes.length - 1;\n      for (let i = 0; i <= outputLength; i++) {\n        jsonLayers.push({\n          weights: (_a = jsonLayerWeights[i]) !== null && _a !== void 0 ? _a : [],\n          biases: (_b = jsonLayerBiases[i]) !== null && _b !== void 0 ? _b : []\n        });\n      }\n      return {\n        type: 'NeuralNetwork',\n        sizes: [...this.sizes],\n        layers: jsonLayers,\n        inputLookup: this.inputLookup ? {\n          ...this.inputLookup\n        } : null,\n        inputLookupLength: this.inputLookupLength,\n        outputLookup: this.outputLookup ? {\n          ...this.outputLookup\n        } : null,\n        outputLookupLength: this.outputLookupLength,\n        options: {\n          ...this.options\n        },\n        trainOpts: this.getTrainOptsJSON()\n      };\n    }\n    fromJSON(json) {\n      this.options = {\n        ...defaults$8(),\n        ...json.options\n      };\n      if (json.hasOwnProperty('trainOpts')) {\n        const trainOpts = {\n          ...json.trainOpts,\n          timeout: json.trainOpts.timeout === 'Infinity' ? Infinity : json.trainOpts.timeout\n        };\n        this.updateTrainingOptions(trainOpts);\n      }\n      this.sizes = json.sizes;\n      this.initialize();\n      this.inputLookup = json.inputLookup ? {\n        ...json.inputLookup\n      } : null;\n      this.inputLookupLength = json.inputLookupLength;\n      this.outputLookup = json.outputLookup ? {\n        ...json.outputLookup\n      } : null;\n      this.outputLookupLength = json.outputLookupLength;\n      const jsonLayers = json.layers;\n      const layerWeights = this.weights.map((layerWeights, layerIndex) => {\n        return jsonLayers[layerIndex].weights.map(layerWeights => Float32Array.from(layerWeights));\n      });\n      const layerBiases = this.biases.map((layerBiases, layerIndex) => Float32Array.from(jsonLayers[layerIndex].biases));\n      for (let i = 0; i <= this.outputLayer; i++) {\n        this.weights[i] = layerWeights[i] || [];\n        this.biases[i] = layerBiases[i] || [];\n      }\n      return this;\n    }\n    toFunction(cb) {\n      const {\n        activation,\n        leakyReluAlpha\n      } = this.trainOpts;\n      let needsVar = false;\n      const nodeHandle = (layerIndex, nodeIndex) => {\n        if (layerIndex === 0) {\n          return `(input[${nodeIndex}]||0)`;\n        }\n        const weights = this.weights[layerIndex][nodeIndex];\n        const bias = this.biases[layerIndex][nodeIndex];\n        if (!weights) {\n          throw new Error(`weights at layerIndex ${layerIndex} & nodeIndex ${nodeIndex} not found`);\n        }\n        if (!bias) {\n          throw new Error(`bias as layerIndex ${layerIndex} & nodeIndex ${nodeIndex} not found`);\n        }\n        const weightsArray = [];\n        weights.forEach((weight, subNodeIndex) => {\n          if (weight < 0) {\n            weightsArray.push(`${weight}*${nodeHandle(layerIndex - 1, subNodeIndex)}`);\n          } else {\n            weightsArray.push(`+${weight}*${nodeHandle(layerIndex - 1, subNodeIndex)}`);\n          }\n        });\n        const result = `(${bias.toString()}${weightsArray.join('')})`;\n        switch (activation) {\n          case 'sigmoid':\n            return `1/(1+1/Math.exp(${result}))`;\n          case 'relu':\n            {\n              needsVar = true;\n              return `((v=${result})<0?0:v)`;\n            }\n          case 'leaky-relu':\n            {\n              needsVar = true;\n              return `Math.max((v=${result}),${leakyReluAlpha}*v)`;\n            }\n          case 'tanh':\n            return `Math.tanh(${result})`;\n          default:\n            throw new Error(`Unknown activation ${activation}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`);\n        }\n      };\n      function checkKeys(keys) {\n        if (keys.find(v => v.includes('\"'))) {\n          throw new Error(`key contains '\"', which is not compatible`);\n        }\n      }\n      const layersAsMath = [];\n      let result;\n      let inputLookup = '';\n      if (this.inputLookup) {\n        const keys = Object.keys(this.inputLookup);\n        checkKeys(keys);\n        inputLookup = `input = new Float32Array([${Object.keys(this.inputLookup).map(key => `input[\"${key}\"]`).join(',')}]);`;\n      }\n      if (this.sizes.length < 1) throw new Error('No layers');\n      for (let nodeIndex = 0; nodeIndex < this.sizes[this.outputLayer]; nodeIndex++) {\n        layersAsMath.push(nodeHandle(this.outputLayer, nodeIndex));\n      }\n      if (this.outputLookup) {\n        const keys = Object.keys(this.outputLookup);\n        checkKeys(keys);\n        const values = keys.map((key, i) => `\"${key}\":${layersAsMath[i]}`).join(',');\n        result = `{${values}}`;\n      } else {\n        result = `[${layersAsMath.join(',')}]`;\n      }\n      const source = `${inputLookup}${needsVar ? 'var v;' : ''}return ${result};`;\n      // eslint-disable-next-line @typescript-eslint/no-implied-eval,no-new-func\n      return new Function('input', cb ? cb(source) : source);\n    }\n  }\n  let gpuInstance = null;\n  /**\r\n   * Sets up the gpu.js instance\r\n   */\n  function setup(value) {\n    gpuInstance = value;\n  }\n  function makeKernel(fn, settings) {\n    let _gpuInstance = gpuInstance;\n    if (_gpuInstance === null) {\n      _gpuInstance = new gpuBrowser.GPU({\n        mode: 'gpu'\n      });\n      setup(_gpuInstance);\n    }\n    return _gpuInstance.createKernel(fn, settings).setPipeline(true);\n  }\n  function makeKernelMap(map, fn, settings) {\n    let _gpuInstance = gpuInstance;\n    if (_gpuInstance === null) {\n      _gpuInstance = new gpuBrowser.GPU({\n        mode: 'gpu'\n      });\n      setup(_gpuInstance);\n    }\n    return _gpuInstance.createKernelMap(map, fn, settings).setPipeline(true);\n  }\n  /**\r\n   * Compiles a function into a gpu.js dev mode kernel\r\n   */\n  // export function makeDevKernel(\n  //   fn: ThreadFunction,\n  //   settings: makeKernelSettings\n  // ): IKernelRunShortcut {\n  //   if ('map' in settings) {\n  //     throw new Error('map kernels are not supported by dev kernels');\n  //   }\n  //   const gpu = new GPU({ mode: 'dev' });\n  //   return gpu.createKernel(fn, settings);\n  // }\n  function kernelInput(value, size) {\n    return new gpuBrowser.Input(value, size);\n  }\n  /**\r\n   * Deletes a gpu.js texture and frees VRAM\r\n   */\n  function release(possibleTexture) {\n    if (possibleTexture instanceof gpuBrowser.Texture) {\n      possibleTexture.delete();\n    }\n  }\n  /**\r\n   * Cleans ie sets all elements to 0 of a Texture or a js array\r\n   */\n  function clear(value) {\n    if (value instanceof gpuBrowser.Texture) {\n      value.clear();\n      return;\n    }\n    // array\n    if (Array.isArray(value)) {\n      if (typeof value[0] === 'number') {\n        value.fill(0);\n      } else if (typeof value[0][0] === 'number') {\n        for (let x = 0; x < value.length; x++) {\n          value[x].fill(0);\n        }\n        return;\n      } else if (typeof value[0][0][0] === 'number') {\n        // cube\n        for (let y = 0; y < value.length; y++) {\n          const row = value[y];\n          for (let x = 0; x < row.length; x++) {\n            row[x].fill(0);\n          }\n        }\n        return;\n      }\n    }\n    if (value instanceof Float32Array) {\n      value.fill(0);\n      return;\n    }\n    throw new Error('unhandled value');\n  }\n  /**\r\n   * Clones a value\r\n   */\n  function clone(value) {\n    if (value instanceof gpuBrowser.Texture) {\n      return value.clone();\n    }\n    if (value instanceof Float32Array) {\n      return value.slice(0);\n    }\n    if (Array.isArray(value)) {\n      if (typeof value[0] === 'number') {\n        return value.slice(0);\n      } else if (typeof value[0][0] === 'number') {\n        const matrix = new Array(value.length);\n        for (let x = 0; x < value.length; x++) {\n          matrix[x] = value[x].slice(0);\n        }\n        return matrix;\n      } else if (typeof value[0][0][0] === 'number') {\n        const cube = new Array(value.length);\n        for (let y = 0; y < value.length; y++) {\n          const row = value[y];\n          const matrix = new Array(row.length);\n          for (let x = 0; x < row.length; x++) {\n            matrix[x] = row[x].slice(0);\n          }\n        }\n        return cube;\n      }\n    }\n    throw new Error('unhandled value');\n  }\n  function weightedSumSigmoid(weights, biases, inputs) {\n    let sum = biases[this.thread.x];\n    for (let k = 0; k < this.constants.size; k++) {\n      sum += weights[this.thread.x][k] * inputs[k];\n    }\n    // sigmoid\n    return 1 / (1 + Math.exp(-sum));\n  }\n  function weightedSumRelu(weights, biases, inputs) {\n    let sum = biases[this.thread.x];\n    for (let k = 0; k < this.constants.size; k++) {\n      sum += weights[this.thread.x][k] * inputs[k];\n    }\n    // relu\n    return sum < 0 ? 0 : sum;\n  }\n  function weightedSumLeakyRelu(weights, biases, inputs) {\n    let sum = biases[this.thread.x];\n    for (let k = 0; k < this.constants.size; k++) {\n      sum += weights[this.thread.x][k] * inputs[k];\n    }\n    // leaky relu\n    return sum < 0 ? 0 : 0.01 * sum;\n  }\n  function weightedSumTanh(weights, biases, inputs) {\n    let sum = biases[this.thread.x];\n    for (let k = 0; k < this.constants.size; k++) {\n      sum += weights[this.thread.x][k] * inputs[k];\n    }\n    // tanh\n    return Math.tanh(sum);\n  }\n  function calcErrorOutput(output, target) {\n    return target - output;\n  }\n  function calcDeltasSigmoid(error, output) {\n    // sigmoid derivative\n    return error * output * (1 - output);\n  }\n  function calcDeltasRelu(error, output) {\n    // relu derivative\n    return output > 0 ? error : 0;\n  }\n  function calcDeltasLeakyRelu(error, output) {\n    // leaky relu derivative\n    return output > 0 ? error : 0.01 * error;\n  }\n  function calcDeltasTanh(error, output) {\n    // tanh derivative\n    return (1 - output * output) * error;\n  }\n  function calcError(x, size, nextWeights, nextDeltas) {\n    let error = 0;\n    for (let k = 0; k < size; k++) {\n      error += nextDeltas[k] * nextWeights[k][x];\n    }\n    return error;\n  }\n  function calcChanges(learningRate, momentum, previousChange, delta, previousOutput) {\n    return learningRate * delta * previousOutput + momentum * previousChange;\n  }\n  function addWeights(change, weight) {\n    return change + weight;\n  }\n  function addBiases(biases, deltas) {\n    return biases[this.thread.x] + deltas[this.thread.x] * this.constants.learningRate;\n  }\n  // mean squared error, reimplemented for GPU\n  function mse(errors) {\n    let sum = 0;\n    for (let i = 0; i < this.constants.size; i++) {\n      sum += errors[i] ** 2;\n    }\n    return sum / this.constants.size;\n  }\n  class NeuralNetworkGPU extends NeuralNetwork {\n    constructor(options = {}) {\n      super(options);\n      this.texturizeInputData = () => {\n        throw new Error('not yet setup');\n      };\n      this.forwardPropagate = [];\n      this.backwardPropagate = [];\n      this.changesPropagate = [];\n      this.biasesPropagate = [];\n      this.getMSE = () => {\n        throw new Error('not yet setup');\n      };\n      this._addMSE = () => {\n        throw new Error('not yet setup');\n      };\n      this._divideMSESum = () => {\n        throw new Error('not yet setup');\n      };\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      this.outputs = [];\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      this.deltas = [];\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      this.errors = [];\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      this.weights = [];\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      this.changes = [];\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      this.biases = [];\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      this.runInput = input => {\n        let output;\n        this.outputs[0] = input;\n        for (let layer = 1; layer <= this.outputLayer; layer++) {\n          release(this.outputs[layer]);\n          this.outputs[layer] = this.forwardPropagate[layer](this.weights[layer], this.biases[layer], input);\n          output = input = this.outputs[layer];\n        }\n        return output;\n      };\n      this.calculateDeltas = target => {\n        for (let layer = this.outputLayer; layer > 0; layer--) {\n          release(this.deltas[layer]);\n          release(this.errors[layer]);\n          let output;\n          if (layer === this.outputLayer) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-expect-error\n            output = this.backwardPropagate[layer](this.outputs[layer], target);\n          } else {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-expect-error\n            output = this.backwardPropagate[layer](this.weights[layer + 1], this.outputs[layer], this.deltas[layer + 1]);\n          }\n          this.deltas[layer] = output.result;\n          this.errors[layer] = output.error;\n        }\n      };\n      this.errorCheckInterval = 100;\n      this.gpu = new gpuBrowser.GPU({\n        mode: options.mode\n      });\n    }\n    initialize() {\n      super.initialize();\n      this.buildRunInput();\n      this.buildCalculateDeltas();\n      this.buildGetChanges();\n      this.buildChangeBiases();\n      this.buildGetMSE();\n    }\n    setActivation() {}\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    trainPattern(value, logErrorRate) {\n      // forward propagate\n      this.runInput(value.input);\n      // back propagate\n      this.calculateDeltas(value.output);\n      this.adjustWeights();\n      if (logErrorRate) {\n        return this.getMSE(this.errors[this.outputLayer]);\n      }\n      return null;\n    }\n    calculateTrainingError(data) {\n      let sum = new Float32Array([0]);\n      for (let i = 0; i < data.length; ++i) {\n        const prevSum = sum;\n        const error = this.trainPattern(data[i], true);\n        sum = this._addMSE(sum, error);\n        release(error);\n        release(prevSum);\n      }\n      const result = this._divideMSESum(data.length, sum);\n      release(sum);\n      return (result instanceof gpuBrowser.Texture ? result.toArray() : result)[0];\n    }\n    adjustWeights() {\n      this.getChanges();\n      this.changeBiases();\n    }\n    buildRunInput() {\n      let weightedSum = null;\n      switch (this.trainOpts.activation) {\n        case 'sigmoid':\n          weightedSum = weightedSumSigmoid;\n          break;\n        case 'relu':\n          weightedSum = weightedSumRelu;\n          break;\n        case 'leaky-relu':\n          weightedSum = weightedSumLeakyRelu;\n          break;\n        case 'tanh':\n          weightedSum = weightedSumTanh;\n          break;\n        default:\n          throw new Error(`Unknown activation ${this.trainOpts.activation}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`);\n      }\n      for (let layer = 1; layer <= this.outputLayer; layer++) {\n        this.forwardPropagate[layer] = this.gpu.createKernel(weightedSum, {\n          output: [this.sizes[layer]],\n          pipeline: true,\n          constants: {\n            size: this.sizes[layer - 1]\n          },\n          immutable: true\n        });\n      }\n      this.texturizeInputData = this.gpu.createKernel(function (value) {\n        return value[this.thread.x];\n      }, {\n        output: [this.sizes[1]],\n        pipeline: true,\n        immutable: true\n      });\n    }\n    buildCalculateDeltas() {\n      let calcDeltas;\n      switch (this.trainOpts.activation) {\n        case 'sigmoid':\n          calcDeltas = calcDeltasSigmoid;\n          break;\n        case 'relu':\n          calcDeltas = calcDeltasRelu;\n          break;\n        case 'leaky-relu':\n          calcDeltas = calcDeltasLeakyRelu;\n          break;\n        case 'tanh':\n          calcDeltas = calcDeltasTanh;\n          break;\n        default:\n          throw new Error(`Unknown activation ${this.trainOpts.activation}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`);\n      }\n      calcDeltas = gpuBrowser.alias(gpuBrowser.utils.getMinifySafeName(() => calcDeltas), calcDeltas);\n      this.gpu.addFunction(calcDeltas);\n      for (let layer = this.outputLayer; layer > 0; layer--) {\n        if (layer === this.outputLayer) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-expect-error\n          this.backwardPropagate[this.outputLayer] = this.gpu.createKernelMap({\n            error: calcErrorOutput\n          }, function (outputs, targets) {\n            const output = outputs[this.thread.x];\n            const target = targets[this.thread.x];\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-expect-error\n            return calcDeltas(calcErrorOutput(output, target), output);\n          }, {\n            output: [this.sizes[this.outputLayer]],\n            pipeline: true,\n            immutable: true\n          });\n        } else {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-expect-error\n          this.backwardPropagate[layer] = this.gpu.createKernelMap({\n            error: calcError\n          }, function (nextWeights, outputs, nextDeltas) {\n            const output = outputs[this.thread.x];\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-expect-error\n            return calcDeltas(calcError(this.thread.x, this.constants.size, nextWeights, nextDeltas), output);\n          }, {\n            output: [this.sizes[layer]],\n            pipeline: true,\n            constants: {\n              size: this.sizes[layer + 1]\n            },\n            immutable: true\n          });\n        }\n      }\n    }\n    buildGetChanges() {\n      for (let layer = 1; layer <= this.outputLayer; layer++) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        this.changesPropagate[layer] = this.gpu.createKernelMap({\n          weights: addWeights,\n          changes: calcChanges\n        }, function (previousOutputs, deltas, weights, previousChanges) {\n          const change = calcChanges(this.constants.learningRate, this.constants.momentum, previousChanges[this.thread.y][this.thread.x], deltas[this.thread.y], previousOutputs[this.thread.x]);\n          return addWeights(change, weights[this.thread.y][this.thread.x]);\n        }, {\n          output: [this.sizes[layer - 1], this.sizes[layer]],\n          pipeline: true,\n          constants: {\n            size: this.sizes[layer - 1],\n            learningRate: this.trainOpts.learningRate,\n            momentum: this.trainOpts.momentum\n          },\n          immutable: true\n        });\n      }\n    }\n    getChanges() {\n      for (let layer = 1; layer <= this.outputLayer; layer++) {\n        const weights = this.weights[layer];\n        const changes = this.changes[layer];\n        const output = this.changesPropagate[layer](this.outputs[layer - 1], this.deltas[layer], weights, changes);\n        release(weights);\n        release(changes);\n        this.weights[layer] = output.weights;\n        this.changes[layer] = output.changes;\n        release(output.result);\n      }\n    }\n    buildChangeBiases() {\n      for (let layer = 1; layer <= this.outputLayer; layer++) {\n        this.biasesPropagate[layer] = this.gpu.createKernel(addBiases, {\n          output: [this.sizes[layer]],\n          pipeline: true,\n          constants: {\n            learningRate: this.trainOpts.learningRate\n          },\n          immutable: true\n        });\n      }\n    }\n    changeBiases() {\n      for (let layer = 1; layer <= this.outputLayer; layer++) {\n        const biases = this.biases[layer];\n        this.biases[layer] = this.biasesPropagate[layer](biases, this.deltas[layer]);\n        release(biases);\n      }\n    }\n    buildGetMSE() {\n      this.getMSE = this.gpu.createKernel(mse, {\n        output: [1],\n        constants: {\n          size: this.sizes[this.outputLayer]\n        },\n        pipeline: true,\n        immutable: true\n      });\n      this._addMSE = this.gpu.createKernel(function (value1, value2) {\n        return value1[0] + value2[0];\n      }, {\n        output: [1],\n        pipeline: true,\n        immutable: true\n      });\n      this._divideMSESum = this.gpu.createKernel(function (length, mseSum) {\n        const value = mseSum[0];\n        if (value > 0) {\n          return value / length;\n        }\n        return 0;\n      }, {\n        output: [1]\n      });\n    }\n    run(input) {\n      if (!this.isRunnable) {\n        throw new Error('network not runnable');\n      }\n      let formattedInput;\n      if (this.inputLookup) {\n        formattedInput = lookup.toArray(this.inputLookup, input, this.inputLookupLength);\n      } else {\n        formattedInput = input;\n      }\n      this.validateInput(formattedInput);\n      const outputTextures = this.runInput(formattedInput);\n      const output = outputTextures instanceof gpuBrowser.Texture ? outputTextures.toArray() : outputTextures;\n      if (this.outputLookup) {\n        return lookup.toObject(this.outputLookup, output);\n      }\n      return output;\n    }\n    // @ts-expect-error the underlying network works as normal, but we are working on the GPU\n    prepTraining(data, options = {}) {\n      this.updateTrainingOptions(options);\n      const preparedData = this.formatData(data);\n      const endTime = Date.now() + this.trainOpts.timeout;\n      const status = {\n        error: 1,\n        iterations: 0\n      };\n      this.verifyIsInitialized(preparedData);\n      const texturizeOutputData = this.gpu.createKernel(function (value) {\n        return value[this.thread.x];\n      }, {\n        output: [preparedData[0].output.length],\n        pipeline: true,\n        immutable: true\n      });\n      return {\n        preparedData: preparedData.map(set => ({\n          input: this.texturizeInputData(set.input),\n          output: texturizeOutputData(set.output)\n        })),\n        status,\n        endTime\n      };\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    toFunction() {\n      throw new Error(`${this.constructor.name}-toFunction is not yet implemented`);\n    }\n    toJSON() {\n      var _a, _b;\n      if (this.sizes === null) {\n        this.initialize();\n      }\n      // use Array.from, keeping json small\n      const jsonLayerWeights = this.weights.map(layerWeights => {\n        return (layerWeights instanceof gpuBrowser.Texture ? layerWeights.toArray() : layerWeights).map(layerWeights => Array.from(layerWeights));\n      });\n      const jsonLayerBiases = this.biases.map(layerBiases => Array.from(layerBiases instanceof gpuBrowser.Texture ? layerBiases.toArray() : layerBiases));\n      const jsonLayers = [];\n      for (let i = 0; i <= this.outputLayer; i++) {\n        jsonLayers.push({\n          weights: (_a = jsonLayerWeights[i]) !== null && _a !== void 0 ? _a : [],\n          biases: (_b = jsonLayerBiases[i]) !== null && _b !== void 0 ? _b : []\n        });\n      }\n      return {\n        type: 'NeuralNetworkGPU',\n        sizes: [...this.sizes],\n        layers: jsonLayers,\n        inputLookup: this.inputLookup ? {\n          ...this.inputLookup\n        } : null,\n        inputLookupLength: this.inputLookupLength,\n        outputLookup: this.outputLookup ? {\n          ...this.outputLookup\n        } : null,\n        outputLookupLength: this.outputLookupLength,\n        options: {\n          ...this.options\n        },\n        trainOpts: this.getTrainOptsJSON()\n      };\n    }\n  }\n  class UntrainedNeuralNetworkError extends Error {\n    constructor(neuralNetwork) {\n      super(`Cannot run a ${neuralNetwork.constructor.name} before it is trained.`);\n    }\n  }\n\n  /**\r\n   * An autoencoder learns to compress input data down to relevant features and reconstruct input data from its compressed representation.\r\n   */\n  class AE {\n    constructor(options) {\n      // Create default options for the autoencoder.\n      options !== null && options !== void 0 ? options : options = {};\n      // Inherit the binary threshold of the parent autoencoder.\n      options.binaryThresh;\n      // Inherit the hidden layers of the parent autoencoder.\n      options.hiddenLayers;\n      // Define the denoiser subnet's input and output sizes.\n      if (options.decodedSize) options.decodedSize;\n      // Create the denoiser subnet of the autoencoder.\n      this.denoiser = new NeuralNetworkGPU(options);\n    }\n    /**\r\n     * Denoise input data, removing any anomalies from the data.\r\n     * @param {DecodedData} input\r\n     * @returns {DecodedData}\r\n     */\n    denoise(input) {\n      // Run the input through the generic denoiser.\n      // This isn't the best denoiser implementation, but it's efficient.\n      // Efficiency is important here because training should focus on\n      // optimizing for feature extraction as quickly as possible rather than\n      // denoising and anomaly detection; there are other specialized topologies\n      // better suited for these tasks anyways, many of which can be implemented\n      // by using an autoencoder.\n      return this.denoiser.run(input);\n    }\n    /**\r\n     * Decode `EncodedData` into an approximation of its original form.\r\n     *\r\n     * @param {EncodedData} input\r\n     * @returns {DecodedData}\r\n     */\n    decode(input) {\n      // If the decoder has not been trained yet, throw an error.\n      if (!this.decoder) throw new UntrainedNeuralNetworkError(this);\n      // Decode the encoded input.\n      return this.decoder.run(input);\n    }\n    /**\r\n     * Encode data to extract features, reduce dimensionality, etc.\r\n     *\r\n     * @param {DecodedData} input\r\n     * @returns {EncodedData}\r\n     */\n    encode(input) {\n      // If the decoder has not been trained yet, throw an error.\n      if (!this.denoiser) throw new UntrainedNeuralNetworkError(this);\n      // Process the input.\n      this.denoiser.run(input);\n      // Get the auto-encoded input.\n      let encodedInput = this.encodedLayer;\n      // If the encoded input is a `Texture`, convert it into an `Array`.\n      if (encodedInput instanceof gpuBrowser.Texture) encodedInput = encodedInput.toArray();else encodedInput = encodedInput.slice(0);\n      // Return the encoded input.\n      return encodedInput;\n    }\n    /**\r\n     * Test whether or not a data sample likely contains anomalies.\r\n     * If anomalies are likely present in the sample, returns `true`.\r\n     * Otherwise, returns `false`.\r\n     *\r\n     * @param {DecodedData} input\r\n     * @returns {boolean}\r\n     */\n    likelyIncludesAnomalies(input, anomalyThreshold = 0.2) {\n      var _a;\n      // Create the anomaly vector.\n      const anomalies = [];\n      // Attempt to denoise the input.\n      const denoised = this.denoise(input);\n      // Calculate the anomaly vector.\n      for (let i = 0; i < ((_a = input.length) !== null && _a !== void 0 ? _a : 0); i++) {\n        anomalies[i] = Math.abs(input[i] - denoised[i]);\n      }\n      // Calculate the sum of all anomalies within the vector.\n      const sum = anomalies.reduce((previousValue, value) => previousValue + value);\n      // Calculate the mean anomaly.\n      const mean = sum / input.length;\n      // Return whether or not the mean anomaly rate is greater than the anomaly threshold.\n      return mean > anomalyThreshold;\n    }\n    /**\r\n     * Train the auto encoder.\r\n     *\r\n     * @param {DecodedData[]} data\r\n     * @param {Partial<INeuralNetworkTrainOptions>} options\r\n     * @returns {INeuralNetworkState}\r\n     */\n    train(data, options) {\n      const preprocessedData = [];\n      for (const datum of data) {\n        preprocessedData.push({\n          input: datum,\n          output: datum\n        });\n      }\n      const results = this.denoiser.train(preprocessedData, options);\n      this.decoder = this.createDecoder();\n      return results;\n    }\n    /**\r\n     * Create a new decoder from the trained denoiser.\r\n     *\r\n     * @returns {NeuralNetworkGPU<EncodedData, DecodedData>}\r\n     */\n    createDecoder() {\n      const json = this.denoiser.toJSON();\n      const layers = [];\n      const sizes = [];\n      for (let i = this.encodedLayerIndex; i < this.denoiser.sizes.length; i++) {\n        layers.push(json.layers[i]);\n        sizes.push(json.sizes[i]);\n      }\n      json.layers = layers;\n      json.sizes = sizes;\n      json.options.inputSize = json.sizes[0];\n      const decoder = new NeuralNetworkGPU().fromJSON(json);\n      return decoder;\n    }\n    /**\r\n     * Get the layer containing the encoded representation.\r\n     */\n    get encodedLayer() {\n      return this.denoiser.outputs[this.encodedLayerIndex];\n    }\n    /**\r\n     * Get the offset of the encoded layer.\r\n     */\n    get encodedLayerIndex() {\n      return Math.round(this.denoiser.outputs.length * 0.5) - 1;\n    }\n  }\n  class CrossValidate {\n    constructor(initClassifier) {\n      this.json = {\n        avgs: {\n          error: 0,\n          iterations: 0,\n          testTime: 0,\n          trainTime: 0\n        },\n        stats: {\n          total: 0,\n          testSize: 0,\n          trainSize: 0\n        },\n        sets: []\n      };\n      this.initClassifier = initClassifier;\n    }\n    testPartition(trainOpts, trainSet, testSet) {\n      const classifier = this.initClassifier();\n      const beginTrain = Date.now();\n      const trainingStats = classifier.train(trainSet, trainOpts);\n      const beginTest = Date.now();\n      const testStats = classifier.test(testSet);\n      const endTest = Date.now();\n      return {\n        ...testStats,\n        trainTime: beginTest - beginTrain,\n        testTime: endTest - beginTest,\n        iterations: trainingStats.iterations,\n        error: trainingStats.error,\n        total: testStats.total,\n        network: classifier.toJSON()\n      };\n    }\n    /**\r\n     * Randomize array element order in-place.\r\n     * Using Durstenfeld shuffle algorithm.\r\n     * source: http://stackoverflow.com/a/12646864/1324039\r\n     */\n    shuffleArray(array) {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n      return array;\n    }\n    train(data, trainOpts = {}, k = 4) {\n      if (data.length < k) {\n        throw new Error(`Training set size is too small for ${data.length} k folds of ${k}`);\n      }\n      this.shuffleArray(data);\n      const size = data.length / k;\n      const avgs = {\n        trainTime: 0,\n        testTime: 0,\n        iterations: 0,\n        error: 0\n      };\n      const stats = {\n        total: 0,\n        testSize: 0,\n        trainSize: 0\n      };\n      const binaryStats = {\n        total: 0,\n        testSize: 0,\n        trainSize: 0,\n        truePos: 0,\n        trueNeg: 0,\n        falsePos: 0,\n        falseNeg: 0,\n        precision: 0,\n        recall: 0,\n        accuracy: 0\n      };\n      const results = [];\n      let isBinary = null;\n      for (let i = 0; i < k; i++) {\n        const dclone = data.slice(0);\n        const testSet = dclone.splice(i * size, size);\n        const trainSet = dclone;\n        const result = this.testPartition(trainOpts, trainSet, testSet);\n        if (isBinary === null) {\n          isBinary = result.hasOwnProperty('falseNeg') && result.hasOwnProperty('falsePos') && result.hasOwnProperty('trueNeg') && result.hasOwnProperty('truePos');\n          if (isBinary) {\n            Object.assign(stats, binaryStats);\n          }\n        }\n        avgs.iterations += result.iterations;\n        avgs.testTime += result.testTime;\n        avgs.trainTime += result.trainTime;\n        avgs.error += result.error;\n        stats.total += result.total;\n        if (CrossValidate.isBinaryStats(stats) && CrossValidate.isBinaryPartitionResults(result)) {\n          stats.accuracy += result.accuracy;\n          stats.falseNeg += result.falseNeg;\n          stats.falsePos += result.falsePos;\n          stats.precision += result.precision;\n          stats.recall += result.recall;\n          stats.trueNeg += result.trueNeg;\n          stats.truePos += result.truePos;\n        }\n        results.push(result);\n      }\n      avgs.error /= k;\n      avgs.iterations /= k;\n      avgs.testTime /= k;\n      avgs.trainTime /= k;\n      if (CrossValidate.isBinaryStats(stats)) {\n        stats.precision = stats.truePos / (stats.truePos + stats.falsePos);\n        stats.recall = stats.truePos / (stats.truePos + stats.falseNeg);\n        stats.accuracy = (stats.trueNeg + stats.truePos) / stats.total;\n      }\n      stats.testSize = size;\n      stats.trainSize = data.length - size;\n      this.json = {\n        avgs: avgs,\n        stats: stats,\n        sets: results\n      };\n      return this.json;\n    }\n    toNeuralNetwork() {\n      return this.fromJSON(this.json);\n    }\n    toJSON() {\n      return this.json;\n    }\n    fromJSON(crossValidateJson) {\n      const winningJSON = crossValidateJson.sets.reduce((prev, cur) => prev.error < cur.error ? prev : cur);\n      return this.initClassifier().fromJSON(winningJSON.network);\n    }\n  }\n  CrossValidate.isBinaryStats = stats => {\n    return stats.accuracy !== undefined;\n  };\n  CrossValidate.isBinaryResults = stats => stats.stats.accuracy !== undefined;\n  CrossValidate.isBinaryPartitionResults = stats => stats.accuracy !== undefined;\n\n  /**\r\n   * 2D Mean Squared Error\r\n   */\n  function mse2d(errors) {\n    let sum = 0;\n    for (let y = 0; y < this.constants.height; y++) {\n      for (let x = 0; x < this.constants.width; x++) {\n        sum += errors[y][x] ** 2;\n      }\n    }\n    return sum / this.constants.length;\n  }\n  class MeanSquaredError {\n    constructor({\n      width,\n      height\n    }) {\n      this.calculate = makeKernel(mse2d, {\n        output: [1],\n        constants: {\n          width,\n          height,\n          length: width * height\n        },\n        immutable: true\n      });\n      this.addAbsolute = makeKernel(function (prevError, prevLayerErrors) {\n        return prevError[0] + Math.abs(prevLayerErrors[0][0]);\n      }, {\n        output: [1],\n        immutable: true\n      });\n      this.add = makeKernel(function (value1, value2) {\n        return value1[0] + value2[0];\n      }, {\n        output: [1],\n        immutable: true\n      });\n      this.divide = makeKernel(function (length, mseSum) {\n        const value = mseSum[0];\n        if (value > 0) {\n          return value / length;\n        }\n        return 0;\n      }, {\n        output: [1],\n        immutable: true\n      });\n    }\n  }\n  const baseLayerDefaultSettings = {\n    width: 1,\n    height: 1,\n    depth: null,\n    weights: null,\n    deltas: null,\n    praxis: null,\n    praxisOpts: null,\n    cleanupDeltas: true\n  };\n  class BaseLayer {\n    constructor(settings) {\n      this.praxis = null;\n      this.predictKernel = null;\n      this.compareKernel = null;\n      if (settings) {\n        this.settings = {\n          ...baseLayerDefaultSettings,\n          ...settings\n        };\n      } else {\n        this.settings = {\n          ...baseLayerDefaultSettings\n        };\n      }\n      this.setupPraxis();\n    }\n    get width() {\n      var _a;\n      return (_a = this.settings.width) !== null && _a !== void 0 ? _a : 0;\n    }\n    get height() {\n      var _a;\n      return (_a = this.settings.height) !== null && _a !== void 0 ? _a : 0;\n    }\n    get depth() {\n      var _a;\n      return (_a = this.settings.depth) !== null && _a !== void 0 ? _a : 0;\n    }\n    get weights() {\n      return this.settings.weights;\n    }\n    set weights(weights) {\n      this.settings.weights = weights;\n      if (this.settings.cleanupDeltas && this.deltas) {\n        clear(this.deltas);\n      }\n    }\n    get deltas() {\n      return this.settings.deltas;\n    }\n    set deltas(deltas) {\n      this.settings.deltas = deltas;\n    }\n    get id() {\n      var _a;\n      return (_a = this.settings.id) !== null && _a !== void 0 ? _a : '';\n    }\n    set id(title) {\n      this.settings.id = title;\n    }\n    setupPraxis() {\n      const {\n        initPraxis,\n        praxis,\n        praxisOpts\n      } = this.settings;\n      if (!this.praxis) {\n        if (initPraxis) {\n          if (praxisOpts) {\n            this.praxis = initPraxis(this, praxisOpts);\n          } else {\n            this.praxis = initPraxis(this);\n          }\n        } else if (praxis) {\n          this.praxis = praxis;\n        }\n      }\n    }\n    /*\r\n    get weights() {\r\n      return this._weights;\r\n    }\r\n            set weights(value) {\r\n      if (value) {\r\n        if (value.dimensions) {\r\n          if (value.dimensions[0] !== this.width) {\r\n            throw new Error(`${this.constructor.name}.weights being set with improper value width`);\r\n          }\r\n          if (value.dimensions[1] !== this.height) {\r\n            throw new Error(`${this.constructor.name}.weights being set with improper value height`);\r\n          }\r\n        } else {\r\n          if (value[0].length !== this.width) {\r\n            throw new Error(`${this.constructor.name}.weights being set with improper value width`);\r\n          }\r\n          if (value.length !== this.height) {\r\n            throw new Error(`${this.constructor.name}.weights being set with improper value height`);\r\n          }\r\n        }\r\n      }\r\n      this._weights = value;\r\n    }\r\n            get deltas() {\r\n      return this._deltas;\r\n    }\r\n            set deltas(value) {\r\n      if (value) {\r\n        if (value.dimensions) {\r\n          if (value.dimensions[0] !== this.width) {\r\n            throw new Error(`${this.constructor.name}.deltas being set with improper value width`);\r\n          }\r\n          if (value.dimensions[1] !== this.height) {\r\n            throw new Error(`${this.constructor.name}.deltas being set with improper value height`);\r\n          }\r\n        } else {\r\n          if (value[0].length !== this.width) {\r\n            throw new Error(`${this.constructor.name}.deltas being set with improper value width`);\r\n          }\r\n          if (value.length !== this.height) {\r\n            throw new Error(`${this.constructor.name}.deltas being set with improper value height`);\r\n          }\r\n        }\r\n      }\r\n      this._deltas = value;\r\n    } */\n    validate() {\n      if (Number.isNaN(this.height)) {\n        throw new Error(`${this.constructor.name} layer height is not a number`);\n      }\n      if (Number.isNaN(this.width)) {\n        throw new Error(`${this.constructor.name} layer width is not a number`);\n      }\n      if (this.height < 1) {\n        throw new Error(`${this.constructor.name} layer height is less than 1`);\n      }\n      if (this.width < 1) {\n        throw new Error(`${this.constructor.name} layer width is less than 1`);\n      }\n    }\n    setupKernels(isTraining) {}\n    reuseKernels(layer) {\n      if (layer.width !== this.width) {\n        throw new Error(`${this.constructor.name} kernel width mismatch ${layer.width} is not ${this.width}`);\n      }\n      if (layer.height !== this.height) {\n        throw new Error(`${this.constructor.name} kernel width mismatch ${layer.height} is not ${this.height}`);\n      }\n      if (layer.hasOwnProperty('predictKernel') && layer.predictKernel !== null) {\n        if (!layer.predictKernel.immutable) {\n          throw new Error(`${layer.constructor.name}.predictKernel is not reusable, set kernel.immutable = true`);\n        }\n        this.predictKernel = layer.predictKernel;\n      }\n      if (layer.hasOwnProperty('compareKernel') && layer.compareKernel !== null) {\n        if (!layer.compareKernel.immutable) {\n          throw new Error(`${layer.constructor.name}.compareKernel is not reusable, set kernel.immutable = true`);\n        }\n        this.compareKernel = layer.compareKernel;\n      }\n      this.praxis = layer.praxis;\n    }\n    predict(inputs) {}\n    compare(targetValues) {}\n    learn(learningRate) {}\n    toArray() {\n      return Array.isArray(this.weights) ? this.weights : this.weights.toArray();\n    }\n    toJSON() {\n      return BaseLayer.toJSON(this);\n    }\n    static toJSON(layer) {\n      const {\n        weights\n      } = layer;\n      return {\n        width: layer.width,\n        height: layer.height,\n        depth: layer.depth,\n        weights: toUntypedArray(weights && weights instanceof gpuBrowser.Texture ? weights.toArray() : weights),\n        type: layer.constructor.name,\n        praxisOpts: layer.praxis ? layer.praxis.toJSON() : null\n      };\n    }\n  }\n  function toUntypedArray(weights) {\n    if (weights === null) return null;\n    if (Array.isArray(weights)) {\n      if (typeof weights[0] === 'number') {\n        return weights;\n      } else if (Array.isArray(weights[0]) && typeof weights[0][0] === 'number') {\n        return weights;\n      } else if (Array.isArray(weights[0][0]) && typeof weights[0][0][0] === 'number') {\n        return weights;\n      } else if (weights[0] instanceof Float32Array) {\n        const matrix = weights;\n        return matrix.map(row => {\n          return Array.from(row);\n        });\n      } else if (weights[0][0] instanceof Float32Array) {\n        const cube = weights;\n        return cube.map(matrix => {\n          return matrix.map(row => {\n            return Array.from(row);\n          });\n        });\n      }\n    } else if (weights) {\n      return Array.from(weights);\n    }\n    throw new Error('unexpected value');\n  }\n\n  /**\r\n   * Returns a 2D tensor(matrix) of zeros\r\n   */\n  function zeros2D(width, height) {\n    const result = new Array(height);\n    for (let y = 0; y < height; y++) {\n      result[y] = zeros$1(width);\n    }\n    return result;\n  }\n\n  /**\r\n   * Returns a 3D tensor of arrays\r\n   */\n  function zeros3D(width, height, depth) {\n    const result = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      result[z] = zeros2D(width, height);\n    }\n    return result;\n  }\n  class Activation extends BaseLayer {\n    constructor(inputLayer, settings) {\n      super(settings);\n      this.inputLayer = inputLayer;\n      const {\n        width,\n        height,\n        depth\n      } = this;\n      this.predictKernel = null;\n      this.compareKernel = null;\n      this.validate();\n      if (depth > 0) {\n        this.weights = zeros3D(width, height, depth);\n        this.deltas = zeros3D(width, height, depth);\n      } else if (height > 0) {\n        this.weights = zeros2D(width, height);\n        this.deltas = zeros2D(width, height);\n      }\n      this.setupPraxis();\n    }\n    get width() {\n      return this.inputLayer.width;\n    }\n    get height() {\n      return this.inputLayer.height;\n    }\n    get depth() {\n      return this.inputLayer.depth;\n    }\n  }\n  class Filter extends BaseLayer {\n    constructor(settings, inputLayer) {\n      super();\n      this.settings = settings;\n      this.inputLayer = inputLayer;\n    }\n    get width() {\n      return this.inputLayer.width;\n    }\n    get height() {\n      return this.inputLayer.height;\n    }\n    get depth() {\n      return this.inputLayer.depth;\n    }\n    get filterCount() {\n      return this.settings.filterCount;\n    }\n    get filterWidth() {\n      return this.settings.filterWidth;\n    }\n    get filterHeight() {\n      return this.settings.filterHeight;\n    }\n    get filters() {\n      return this.settings.filters;\n    }\n    set filters(filters) {\n      this.settings.filters = filters;\n    }\n    get filterDeltas() {\n      return this.settings.filterDeltas;\n    }\n    set filterDeltas(filterDeltas) {\n      this.settings.filterDeltas = filterDeltas;\n    }\n  }\n  class Internal {\n    constructor() {\n      this.predictKernel = null;\n      this.compareKernel = null;\n      this.praxis = null;\n    }\n    get width() {\n      return this.settings.width;\n    }\n    get height() {\n      return this.settings.height;\n    }\n    get depth() {\n      return this.settings.depth;\n    }\n    get weights() {\n      return this.settings.weights;\n    }\n    set weights(weights) {\n      this.settings.weights = weights;\n    }\n    get deltas() {\n      return this.settings.deltas;\n    }\n    set deltas(deltas) {\n      this.settings.deltas = deltas;\n    }\n    toJSON() {\n      return BaseLayer.toJSON(this);\n    }\n  }\n  class Modifier extends BaseLayer {\n    constructor(inputLayer, settings) {\n      super({\n        ...settings,\n        width: inputLayer.width,\n        height: inputLayer.height,\n        depth: inputLayer.depth\n      });\n      this.inputLayer = inputLayer;\n    }\n    validate() {\n      var _a;\n      super.validate();\n      if (this.width !== this.inputLayer.width) {\n        throw new Error(`width of ${this.width} does not match inputLayer.width of ${this.inputLayer.width}`);\n      }\n      if (this.height !== this.inputLayer.height) {\n        throw new Error(`height of ${this.height} does not match inputLayer.height of ${this.inputLayer.height}`);\n      }\n      if (this.depth !== ((_a = this.inputLayer.depth) !== null && _a !== void 0 ? _a : 0)) {\n        throw new Error(`depth of ${this.depth} does not match inputLayer.depth of ${this.inputLayer.depth}`);\n      }\n    }\n  }\n  class Operator extends BaseLayer {\n    constructor(inputLayer1, inputLayer2, settings) {\n      super(settings);\n      this.inputLayer1 = inputLayer1;\n      this.inputLayer2 = inputLayer2;\n      this.validate();\n      this.weights = zeros2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n      this.setupPraxis();\n    }\n  }\n  function compare1D(weights, targetValues) {\n    return weights[this.thread.y][this.thread.x] - targetValues[this.thread.x];\n  }\n  function compare2D$5(weights, targetValues) {\n    return weights[this.thread.y][this.thread.x] - targetValues[this.thread.y][this.thread.x];\n  }\n  class Target extends BaseLayer {\n    constructor(settings, inputLayer) {\n      super(settings);\n      this.inputLayer = inputLayer;\n      this.validate();\n      if (this.depth) {\n        throw new Error('Target layer not implemented for depth');\n      } else if (this.height) {\n        this.weights = zeros2D(this.width, this.height);\n        this.deltas = zeros2D(this.width, this.height);\n        this.errors = zeros2D(this.width, this.height);\n      } else {\n        this.weights = zeros$1(this.width);\n        this.deltas = zeros$1(this.width);\n        this.errors = zeros$1(this.width);\n      }\n    }\n    setupKernels() {\n      if (this.width === 1) {\n        this.compareKernel = makeKernel(compare1D, {\n          output: [this.width, this.height],\n          immutable: true\n        });\n      } else {\n        this.compareKernel = makeKernel(compare2D$5, {\n          output: [this.width, this.height],\n          immutable: true\n        });\n      }\n    }\n    predict() {\n      // TODO: should we clone here?\n      // NOTE: this looks like it shouldn't be, but the weights are immutable, and this is where they are reused.\n      release(this.weights);\n      this.weights = clone(this.inputLayer.weights);\n    }\n    compare(targetValues) {\n      // this is where weights attach to deltas\n      // deltas will be zero on learn, so save it in error for comparing to mse later\n      release(this.deltas);\n      release(this.errors);\n      release(this.inputLayer.deltas);\n      this.deltas = this.compareKernel(this.weights, targetValues);\n      this.inputLayer.deltas = clone(this.deltas);\n      this.errors = clone(this.deltas);\n    }\n    setupPraxis() {}\n  }\n  function target(settings, inputLayer) {\n    return new Target(settings, inputLayer);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-extraneous-class\n  class InternalModel {}\n  // eslint-disable-next-line @typescript-eslint/no-extraneous-class\n  class EntryPoint extends BaseLayer {}\n  // eslint-disable-next-line @typescript-eslint/no-extraneous-class\n  class Model extends BaseLayer {\n    learn(learningRate) {\n      // TODO: do we need to release here?\n      const {\n        weights: oldWeights\n      } = this;\n      if (!this.praxis) throw new Error('this.praxis not defined');\n      this.weights = this.praxis.run(this, learningRate);\n      release(oldWeights);\n    }\n  }\n  class BasePraxis {\n    constructor(layerTemplate, settings = {}) {\n      this.layerTemplate = layerTemplate;\n      this.settings = {\n        ...settings\n      };\n      this.kernel = null;\n    }\n    get width() {\n      return this.layerTemplate.width;\n    }\n    get height() {\n      return this.layerTemplate.height;\n    }\n    get depth() {\n      return this.layerTemplate.depth;\n    }\n    setupKernels() {}\n    reuseKernels(praxis) {\n      if (praxis.width !== this.width) {\n        throw new Error(`${this.constructor.name} kernel width mismatch ${praxis.width} is not ${this.width}`);\n      }\n      if (praxis.height !== this.height) {\n        throw new Error(`${this.constructor.name} kernel width mismatch ${praxis.height} is not ${this.height}`);\n      }\n      if (praxis.hasOwnProperty('kernel')) {\n        this.kernel = praxis.kernel;\n      }\n    }\n    toJSON() {\n      return {\n        ...this.settings\n      };\n    }\n  }\n  function update$2(weights, deltas) {\n    return weights[this.thread.y][this.thread.x] + this.constants.learningRate * deltas[this.thread.y][this.thread.x];\n  }\n  const defaultSettings$1 = {\n    learningRate: 0.3\n  };\n  class ArthurDeviationBiases extends BasePraxis {\n    constructor(layer, settings) {\n      super(layer);\n      this.settings = {\n        ...defaultSettings$1,\n        ...settings\n      };\n      this.kernel = null;\n    }\n    run(layer) {\n      return this.kernel(layer.weights, layer.deltas);\n    }\n    setupKernels() {\n      var _a;\n      this.kernel = makeKernel(update$2, {\n        output: [this.width, this.height],\n        constants: {\n          learningRate: (_a = this.settings.learningRate) !== null && _a !== void 0 ? _a : 0.01\n        }\n      });\n    }\n  }\n  function arthurDeviationBiases(layer, settings) {\n    return new ArthurDeviationBiases(layer, settings);\n  }\n  function updateChange(value) {\n    return value;\n  }\n  function update$1(changes, weights, incomingWeights, inputDeltas) {\n    const lastChange = changes[this.thread.y][this.thread.x];\n    const inputDelta = inputDeltas[this.thread.y][0];\n    const weight = weights[this.thread.y][this.thread.x];\n    const incoming = incomingWeights[this.thread.x][0];\n    const change = this.constants.learningRate * inputDelta * incoming + this.constants.momentum * lastChange;\n    return weight + change;\n  }\n  const defaultSettings = {\n    learningRate: 0.3,\n    momentum: 0.1,\n    weightsLayer: null,\n    incomingLayer: null,\n    deltaLayer: null\n  };\n  class ArthurDeviationWeights extends BasePraxis {\n    constructor(layer, settings) {\n      super(layer);\n      this.kernelMap = null;\n      this.settings = {\n        ...defaultSettings,\n        ...settings\n      };\n      this.changes = zeros2D(layer.width, layer.height);\n    }\n    get learningRate() {\n      return this.settings.learningRate;\n    }\n    get momentum() {\n      return this.settings.momentum;\n    }\n    get weightsLayer() {\n      return this.settings.weightsLayer;\n    }\n    set weightsLayer(layer) {\n      this.settings.weightsLayer = layer;\n    }\n    get deltaLayer() {\n      return this.settings.deltaLayer;\n    }\n    set deltaLayer(layer) {\n      this.settings.deltaLayer = layer;\n    }\n    get incomingLayer() {\n      return this.settings.incomingLayer;\n    }\n    set incomingLayer(layer) {\n      this.settings.incomingLayer = layer;\n    }\n    run() {\n      const output = this.kernelMap(this.changes, this.weightsLayer.weights, this.incomingLayer.weights, this.deltaLayer.deltas);\n      this.changes = output.changes;\n      return output.result;\n    }\n    setupKernels() {\n      this.kernelMap = makeKernelMap({\n        changes: updateChange\n      }, update$1, {\n        output: [this.width, this.height],\n        constants: {\n          learningRate: this.learningRate,\n          momentum: this.momentum\n        }\n      });\n    }\n  }\n  function arthurDeviationWeights(layer, settings) {\n    return new ArthurDeviationWeights(layer, settings);\n  }\n  function getMomentum(delta, decay, previousMomentum) {\n    return previousMomentum * decay + (1 - decay) * delta * delta;\n  }\n  function clipByValue(value, max, min) {\n    if (value > max) {\n      return max;\n    }\n    if (value < min) {\n      return min;\n    }\n    return value;\n  }\n  /**\r\n   * @description Momentum Root Mean Square Propagation Function\r\n   */\n  function update(weights, deltas, previousMomenta) {\n    const delta = deltas[this.thread.y][this.thread.x];\n    const clippedDelta = clipByValue(delta, this.constants.clipValue, -this.constants.clipValue);\n    const weight = weights[this.thread.y][this.thread.x];\n    const previousMomentum = previousMomenta[this.thread.y][this.thread.x];\n    const momentum = getMomentum(delta, this.constants.decayRate, previousMomentum);\n    return weight + -this.constants.learningRate * clippedDelta / Math.sqrt(momentum + this.constants.smoothEps) - this.constants.regularizationStrength * weight;\n  }\n  const defaults$7 = {\n    decayRate: 0.999,\n    regularizationStrength: 0.000001,\n    learningRate: 0.01,\n    smoothEps: 1e-8,\n    clipValue: 5\n  };\n  class MomentumRootMeanSquaredPropagation extends BasePraxis {\n    constructor(layerTemplate, settings = {}) {\n      super(layerTemplate);\n      this.kernelMap = null;\n      this.settings = {\n        ...defaults$7,\n        ...settings\n      };\n      this.momenta = zeros2D(layerTemplate.width, layerTemplate.height);\n    }\n    get clipValue() {\n      return this.settings.clipValue;\n    }\n    get decayRate() {\n      return this.settings.decayRate;\n    }\n    get learningRate() {\n      return this.settings.learningRate;\n    }\n    get regularizationStrength() {\n      return this.settings.regularizationStrength;\n    }\n    get smoothEps() {\n      return this.settings.smoothEps;\n    }\n    run(layer) {\n      const {\n        momenta,\n        result\n      } = this.kernelMap(layer.weights, layer.deltas, this.momenta);\n      release(this.momenta);\n      this.momenta = momenta;\n      return result;\n    }\n    setupKernels() {\n      this.kernelMap = makeKernelMap({\n        momenta: getMomentum\n      }, update, {\n        output: [this.width, this.height],\n        constants: {\n          clipValue: this.clipValue,\n          decayRate: this.decayRate,\n          learningRate: this.learningRate,\n          regularizationStrength: this.regularizationStrength,\n          smoothEps: this.smoothEps\n        },\n        functions: [clipByValue],\n        immutable: true\n      });\n    }\n  }\n  function momentumRootMeanSquaredPropagation(layer, settings) {\n    return new MomentumRootMeanSquaredPropagation(layer, settings);\n  }\n  /**\r\n   * @description Mathematician friendly name of MomentumRootMeanSquaredPropagation class. For those that are not mere mortals\r\n   */\n  const MRmsProp = MomentumRootMeanSquaredPropagation;\n  const mRmsProp = momentumRootMeanSquaredPropagation;\n  var index = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ArthurDeviationBiases: ArthurDeviationBiases,\n    arthurDeviationBiases: arthurDeviationBiases,\n    ArthurDeviationWeights: ArthurDeviationWeights,\n    arthurDeviationWeights: arthurDeviationWeights,\n    MomentumRootMeanSquaredPropagation: MomentumRootMeanSquaredPropagation,\n    momentumRootMeanSquaredPropagation: momentumRootMeanSquaredPropagation,\n    MRmsProp: MRmsProp,\n    mRmsProp: mRmsProp\n  });\n  function traverseLayersFrom(layer, cb) {\n    if (layer.hasOwnProperty('inputLayer')) {\n      traverseLayersFrom(layer.inputLayer, cb);\n    } else {\n      if (layer.hasOwnProperty('inputLayer1')) {\n        traverseLayersFrom(layer.inputLayer1, cb);\n      }\n      if (layer.hasOwnProperty('inputLayer2')) {\n        traverseLayersFrom(layer.inputLayer2, cb);\n      }\n    }\n    cb(layer);\n  }\n  function flattenLayers(layers) {\n    const result = layers.slice(0);\n    for (let i = 0; i < result.length; i++) {\n      let offset = 0;\n      traverseLayersFrom(result[i], layer => {\n        if (!result.includes(layer)) {\n          result.splice(i + offset, 0, layer);\n          offset++;\n        }\n      });\n    }\n    return result;\n  }\n  function checkSameSize(layer1, layer2) {\n    if (layer1.width !== layer2.width) {\n      throw new Error(`Layer width mismatch of ${layer1.width} and ${layer2.width}`);\n    }\n    if (layer1.height !== layer2.height) {\n      throw new Error(`Layer height mismatch of ${layer1.height} and ${layer2.height}`);\n    }\n  }\n  function predict$8(inputWeights1, inputWeights2) {\n    return inputWeights1[this.thread.y][this.thread.x] + inputWeights2[this.thread.y][this.thread.x];\n  }\n  class Add extends Operator {\n    get width() {\n      return this.inputLayer1.width;\n    }\n    get height() {\n      return this.inputLayer1.height;\n    }\n    get depth() {\n      return this.inputLayer1.depth;\n    }\n    validate() {\n      super.validate();\n      checkSameSize(this.inputLayer1, this.inputLayer2);\n    }\n    setupKernels() {\n      this.predictKernel = makeKernel(predict$8, {\n        output: [this.width, this.height],\n        immutable: true\n      });\n    }\n    predict() {\n      release(this.weights);\n      this.weights = this.predictKernel(this.inputLayer1.weights, this.inputLayer2.weights);\n    }\n    compare() {\n      // TODO: Do we need release and clone here?\n      release(this.inputLayer1.deltas);\n      release(this.inputLayer2.deltas);\n      this.inputLayer1.deltas = clone(this.deltas);\n      this.inputLayer2.deltas = clone(this.deltas);\n    }\n  }\n  function add$1(inputLayer1, inputLayer2, settings) {\n    return new Add(inputLayer1, inputLayer2, settings);\n  }\n  const defaults$6 = {\n    ...baseLayerDefaultSettings,\n    std: null\n  };\n  class Random extends Model {\n    constructor(settings) {\n      super();\n      this.settings = {\n        ...defaults$6,\n        ...settings\n      };\n      this.setupPraxis();\n      this.validate();\n      if (!this.weights) {\n        this.weights = randos2D(this.width, this.height, settings.std);\n      }\n      if (!this.deltas) {\n        this.deltas = zeros2D(this.width, this.height);\n      }\n    }\n    predict() {}\n    compare() {}\n  }\n  function random(settings) {\n    return new Random(settings);\n  }\n  function predict$7(weights1, weights2) {\n    let sum = 0;\n    for (let i = 0; i < this.constants.size; i++) {\n      sum += weights1[this.thread.y][i] * weights2[i][this.thread.x];\n    }\n    return sum;\n  }\n  function compareFromX(deltas, inputDeltas, inputWeights) {\n    let sum = inputDeltas[this.thread.y][this.thread.x];\n    for (let i = 0; i < this.constants.size; i++) {\n      sum += deltas[this.thread.y][i] * inputWeights[this.thread.x][i];\n    }\n    return sum;\n  }\n  function compareFromY(deltas, inputDeltas, inputWeights) {\n    let sum = inputDeltas[this.thread.y][this.thread.x];\n    for (let i = 0; i < this.constants.size; i++) {\n      sum += deltas[i][this.thread.x] * inputWeights[i][this.thread.y];\n    }\n    return sum;\n  }\n  class Multiply extends Operator {\n    constructor() {\n      super(...arguments);\n      this.compareKernel1 = null;\n      this.compareKernel2 = null;\n    }\n    get width() {\n      return this.inputLayer2.width;\n    }\n    set width(width) {\n      throw new Error('Cannot set width on Multiply');\n    }\n    get height() {\n      return this.inputLayer1.height;\n    }\n    set height(height) {\n      throw new Error('Cannot set height on Multiply');\n    }\n    get depth() {\n      return this.inputLayer1.depth;\n    }\n    set depth(depth) {\n      throw new Error('Cannot set depth on Multiply');\n    }\n    validate() {\n      super.validate();\n      if (this.inputLayer1.width !== this.inputLayer2.height) {\n        throw new Error(`Layer width mismatch of ${this.inputLayer1.width} and ${this.inputLayer2.height}`);\n      }\n    }\n    setupKernels() {\n      this.predictKernel = makeKernel(predict$7, {\n        output: [this.width, this.height],\n        constants: {\n          size: this.inputLayer2.height\n        },\n        immutable: true\n      });\n      this.compareKernel1 = makeKernel(compareFromX, {\n        output: [this.inputLayer1.width, this.inputLayer1.height],\n        constants: {\n          size: this.inputLayer2.width\n        },\n        immutable: true\n      });\n      this.compareKernel2 = makeKernel(compareFromY, {\n        output: [this.inputLayer2.width, this.inputLayer2.height],\n        constants: {\n          size: this.inputLayer1.height\n        },\n        immutable: true\n      });\n    }\n    reuseKernels(layer) {\n      super.reuseKernels(layer);\n      this.compareKernel1 = layer.compareKernel1;\n      this.compareKernel2 = layer.compareKernel2;\n    }\n    predict() {\n      release(this.weights);\n      if (!this.predictKernel) throw new Error('this.predictKernel is not set');\n      this.weights = this.predictKernel(this.inputLayer1.weights, this.inputLayer2.weights);\n    }\n    compare() {\n      if (!this.compareKernel1) throw new Error('this.compareKernel1 not set');\n      if (!this.compareKernel2) throw new Error('this.compareKernel2 not set');\n      const inputLayer1Deltas = this.inputLayer1.deltas;\n      const inputLayer2Deltas = this.inputLayer2.deltas;\n      const newDeltas1 = this.compareKernel1(this.deltas, this.inputLayer1.deltas, this.inputLayer2.weights);\n      const newDeltas2 = this.compareKernel2(this.deltas, this.inputLayer2.deltas, this.inputLayer1.weights);\n      this.inputLayer2.deltas = newDeltas2;\n      this.inputLayer1.deltas = newDeltas1;\n      release(inputLayer1Deltas);\n      release(inputLayer2Deltas);\n    }\n    setupPraxis() {}\n    toJSON() {\n      return {\n        ...super.toJSON(),\n        width: this.width,\n        height: this.height\n      };\n    }\n  }\n  function multiply$1(inputLayer1, inputLayer2, settings) {\n    return new Multiply(inputLayer1, inputLayer2, settings);\n  }\n  function predict2D$4(inputs) {\n    return 1 / (1 + Math.exp(-inputs[this.thread.y][this.thread.x]));\n  }\n  function predict3D$5(inputs) {\n    return 1 / (1 + Math.exp(-inputs[this.thread.z][this.thread.y][this.thread.x]));\n  }\n  function compare2D$4(weights, deltas) {\n    const weight = weights[this.thread.y][this.thread.x];\n    const delta = deltas[this.thread.y][this.thread.x];\n    return weight * (1 - weight) * delta;\n  }\n  function compare3D$4(weights, deltas) {\n    const weight = weights[this.thread.z][this.thread.y][this.thread.x];\n    const delta = deltas[this.thread.z][this.thread.y][this.thread.x];\n    return weight * (1 - weight) * delta;\n  }\n  class Sigmoid extends Activation {\n    setupKernels() {\n      if (this.depth > 0) {\n        this.predictKernel = makeKernel(predict3D$5, {\n          output: [this.width, this.height, this.depth],\n          functions: [activate$2],\n          immutable: true\n        });\n        this.compareKernel = makeKernel(compare3D$4, {\n          output: [this.width, this.height, this.depth],\n          functions: [measure$2],\n          immutable: true\n        });\n      } else {\n        this.predictKernel = makeKernel(predict2D$4, {\n          output: [this.width, this.height],\n          functions: [activate$2],\n          immutable: true\n        });\n        this.compareKernel = makeKernel(compare2D$4, {\n          output: [this.width, this.height],\n          functions: [measure$2],\n          immutable: true\n        });\n      }\n    }\n    predict() {\n      release(this.weights);\n      this.weights = this.predictKernel(this.inputLayer.weights);\n    }\n    compare() {\n      release(this.inputLayer.deltas);\n      this.inputLayer.deltas = this.compareKernel(this.weights, this.deltas);\n    }\n    learn(learningRate) {}\n  }\n  function sigmoid$1(inputLayer, settings) {\n    return new Sigmoid(inputLayer, settings);\n  }\n  function arthurFeedForward(settings, inputLayer) {\n    const {\n      height\n    } = settings;\n    function initWeightsPraxis(layerTemplate, settings) {\n      const praxis = arthurDeviationWeights(layerTemplate, settings);\n      praxis.setupKernels();\n      return praxis;\n    }\n    function initBiasesPraxis(layerTemplate, settings) {\n      const praxis = arthurDeviationBiases(layerTemplate, settings);\n      praxis.setupKernels();\n      return praxis;\n    }\n    const weightsLayer = random({\n      id: 'weights',\n      height,\n      width: inputLayer.height,\n      initPraxis: initWeightsPraxis\n    });\n    const biasesLayer = random({\n      id: 'biases',\n      height,\n      initPraxis: initBiasesPraxis\n    });\n    const multiplyLayer = multiply$1(weightsLayer, inputLayer);\n    const addLayer = add$1(multiplyLayer, biasesLayer);\n    const sigmoidLayer = sigmoid$1(addLayer);\n    const weightsPraxis = weightsLayer.praxis;\n    weightsPraxis.weightsLayer = weightsLayer;\n    weightsPraxis.incomingLayer = inputLayer;\n    weightsPraxis.deltaLayer = sigmoidLayer;\n    return sigmoidLayer;\n  }\n  function getStride(settings, defaults) {\n    if (typeof settings.stride === 'number') {\n      return {\n        strideX: settings.stride,\n        strideY: settings.stride\n      };\n    } else {\n      let strideX = defaults.stride;\n      let strideY = defaults.stride;\n      if (typeof settings.strideX === 'number') {\n        strideX = settings.strideX;\n      }\n      if (typeof settings.strideY === 'number') {\n        strideY = settings.strideY;\n      }\n      return {\n        strideX,\n        strideY\n      };\n    }\n  }\n  function getPadding(settings, defaults) {\n    if (typeof settings.padding === 'number') {\n      return {\n        paddingX: settings.padding,\n        paddingY: settings.padding\n      };\n    } else {\n      let paddingX = defaults.padding;\n      let paddingY = defaults.padding;\n      if (typeof settings.paddingX === 'number') {\n        paddingX = settings.paddingX;\n      }\n      if (typeof settings.paddingY === 'number') {\n        paddingY = settings.paddingY;\n      }\n      return {\n        paddingX,\n        paddingY\n      };\n    }\n  }\n\n  /**\r\n   * Returns an array of a given size with each element filled with a single value\r\n   */\n  function values(size, value) {\n    return new Float32Array(size).fill(value);\n  }\n  function predict$6(inputs, filters, biases) {\n    const startFilterX = this.constants.paddingX - this.thread.x * this.constants.strideX;\n    const startInputX = this.thread.x * this.constants.strideX - this.constants.paddingX;\n    const endFilterX = Math.min(this.constants.filterWidth, startFilterX + this.constants.inputWidth);\n    const startFilterY = this.constants.paddingY - this.thread.y * this.constants.strideY;\n    const startInputY = this.thread.y * this.constants.strideY - this.constants.paddingY;\n    const endFilterY = Math.min(this.constants.filterHeight, startFilterY + this.constants.inputHeight);\n    let sum = 0;\n    for (let z = 0; z < this.constants.inputDepth; z++) {\n      for (let filterY = Math.max(0, startFilterY), inputY = Math.max(0, startInputY); filterY < endFilterY; filterY++, inputY++) {\n        for (let filterX = Math.max(0, startFilterX), inputX = Math.max(0, startInputX); filterX < endFilterX; filterX++, inputX++) {\n          sum += filters[z][filterY][filterX] * inputs[z][inputY][inputX];\n        }\n      }\n    }\n    return sum + biases[this.thread.z];\n  }\n  function compareFilterDeltas$1(filterDeltas, inputs, deltas) {\n    const startDeltaX = Math.max(0, Math.ceil((this.constants.paddingX - this.thread.x) / this.constants.strideX));\n    const startInputX = startDeltaX * this.constants.strideX + this.thread.x - this.constants.paddingX;\n    const endDeltaX = Math.min(this.constants.deltaWidth, Math.floor((this.constants.inputWidth - 1 - this.thread.x + this.constants.paddingX) / this.constants.strideX) + 1);\n    const startDeltaY = Math.max(0, Math.ceil((this.constants.paddingY - this.thread.y) / this.constants.strideY));\n    const startInputY = startDeltaY * this.constants.strideY + this.thread.y - this.constants.paddingY;\n    const endDeltaY = Math.min(this.constants.deltaHeight, Math.floor((this.constants.inputHeight - 1 - this.thread.y + this.constants.paddingY) / this.constants.strideY) + 1);\n    let sum = filterDeltas[this.thread.z][this.thread.y][this.thread.x];\n    for (let deltaY = startDeltaY, inputY = startInputY; deltaY < endDeltaY; deltaY++, inputY += this.constants.strideY) {\n      for (let deltaX = startDeltaX, inputX = startInputX; deltaX < endDeltaX; deltaX++, inputX += this.constants.strideX) {\n        sum += inputs[this.thread.z][inputY][inputX] * deltas[this.constants.deltaZ][deltaY][deltaX];\n      }\n    }\n    return sum;\n  }\n  function compareInputDeltas$1(inputDeltas, filters, deltas) {\n    const x = this.thread.x + this.constants.paddingX;\n    const startDeltaX = x < this.constants.filterWidth ? 0 : Math.floor((x - this.constants.filterWidth + this.constants.strideX) / this.constants.strideX);\n    const startFilterX = x - startDeltaX * this.constants.strideX;\n    const endDeltaX = Math.min(startDeltaX + Math.floor(startFilterX / this.constants.strideX) + 1, this.constants.deltaWidth);\n    const y = this.thread.y + this.constants.paddingY;\n    const startDeltaY = y < this.constants.filterHeight ? 0 : Math.floor((y - this.constants.filterHeight + this.constants.strideY) / this.constants.strideY);\n    const startFilterY = y - startDeltaY * this.constants.strideY;\n    const endDeltaY = Math.min(startDeltaY + Math.floor(startFilterY / this.constants.strideY) + 1, this.constants.deltaHeight);\n    let sum = inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n    let deltaY = startDeltaY;\n    for (let filterY = startFilterY; deltaY < endDeltaY; filterY -= this.constants.strideY, deltaY++) {\n      let deltaX = startDeltaX;\n      for (let filterX = startFilterX; deltaX < endDeltaX; filterX -= this.constants.strideX, deltaX++) {\n        sum += filters[this.thread.z][filterY][filterX] * deltas[this.constants.deltaZ][deltaY][deltaX];\n      }\n    }\n    return sum;\n  }\n  function compareBiases$1(biasDeltas, deltas) {\n    let sum = 0;\n    for (let y = 0; y < this.constants.deltaHeight; y++) {\n      for (let x = 0; x < this.constants.deltaWidth; x++) {\n        sum += deltas[this.thread.z][y][x];\n      }\n    }\n    return biasDeltas[this.thread.z][this.thread.y][this.thread.x] + sum;\n  }\n  const defaults$5 = {\n    stride: 0,\n    padding: 0,\n    bias: 0.1,\n    filterCount: 1,\n    filterWidth: 0,\n    filterHeight: 0\n  };\n  class Convolution extends Filter {\n    constructor(settings, inputLayer) {\n      var _a, _b, _c;\n      super(settings, inputLayer);\n      this.compareFilterDeltasKernel = null;\n      this.compareInputDeltasKernel = null;\n      this.compareBiasesKernel = null;\n      this.settings = {\n        ...defaults$5,\n        ...settings,\n        ...getPadding(settings, defaults$5),\n        ...getStride(settings, defaults$5)\n      };\n      this.weights = (_a = settings.weights) !== null && _a !== void 0 ? _a : randos3D(this.width, this.height, this.depth);\n      this.deltas = zeros3D(this.width, this.height, this.depth);\n      this.biases = values(this.depth, this.bias);\n      this.biasDeltas = (_b = settings.biasDeltas) !== null && _b !== void 0 ? _b : randos(this.depth);\n      this.filters = (_c = settings.filters) !== null && _c !== void 0 ? _c : randos3D(this.filterWidth, this.filterHeight, this.filterCount);\n      this.filterDeltas = zeros3D(this.filterWidth, this.filterHeight, this.filterCount);\n      this.validate();\n    }\n    get strideX() {\n      return this.settings.strideX;\n    }\n    get strideY() {\n      return this.settings.strideY;\n    }\n    get paddingX() {\n      return this.settings.paddingX;\n    }\n    get paddingY() {\n      return this.settings.paddingX;\n    }\n    get width() {\n      return Math.floor((this.inputLayer.width + this.paddingX * 2 - this.filterWidth) / this.strideX + 1);\n    }\n    get height() {\n      return Math.floor((this.inputLayer.height + this.paddingY * 2 - this.filterHeight) / this.strideY + 1);\n    }\n    get bias() {\n      return this.settings.bias;\n    }\n    get depth() {\n      return this.filterCount;\n    }\n    get biases() {\n      return this.settings.biases;\n    }\n    set biases(biases) {\n      this.settings.biases = biases;\n    }\n    get biasDeltas() {\n      return this.settings.biasDeltas;\n    }\n    set biasDeltas(weights) {\n      this.settings.biasDeltas = weights;\n    }\n    get filters() {\n      return this.settings.filters;\n    }\n    set filters(filters) {\n      this.settings.filters = filters;\n    }\n    get filterDeltas() {\n      return this.settings.filterDeltas;\n    }\n    set filterDeltas(filterDeltas) {\n      this.settings.filterDeltas = filterDeltas;\n    }\n    setupKernels() {\n      this.predictKernel = makeKernel(predict$6, {\n        constants: {\n          inputWidth: this.inputLayer.width,\n          inputHeight: this.inputLayer.height,\n          inputDepth: this.inputLayer.depth,\n          strideX: this.strideX,\n          strideY: this.strideY,\n          paddingX: this.paddingX,\n          paddingY: this.paddingY,\n          filterWidth: this.filterWidth,\n          filterHeight: this.filterHeight\n        },\n        output: [this.width, this.height, this.depth],\n        immutable: true\n      });\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas$1, {\n        constants: {\n          deltaWidth: this.width,\n          deltaHeight: this.height,\n          deltaZ: this.depth,\n          inputWidth: this.inputLayer.width,\n          inputHeight: this.inputLayer.height,\n          inputDepth: this.inputLayer.depth,\n          strideX: this.strideX,\n          strideY: this.strideY,\n          paddingX: this.paddingX,\n          paddingY: this.paddingY,\n          filterWidth: this.filterWidth,\n          filterHeight: this.filterHeight\n        },\n        output: [this.width, this.height, this.depth],\n        immutable: true\n      });\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas$1, {\n        constants: {\n          deltaWidth: this.width,\n          deltaHeight: this.height,\n          deltaZ: this.depth,\n          strideX: this.strideX,\n          strideY: this.strideY,\n          paddingX: this.paddingX,\n          paddingY: this.paddingY,\n          filterWidth: this.filterWidth,\n          filterHeight: this.filterHeight,\n          filterCount: this.filterCount\n        },\n        output: [this.inputLayer.width, this.inputLayer.height, this.inputLayer.depth],\n        immutable: true\n      });\n      this.compareBiasesKernel = makeKernel(compareBiases$1, {\n        output: [1, 1, this.depth],\n        constants: {\n          deltaWidth: this.width,\n          deltaHeight: this.height\n        },\n        immutable: true\n      });\n    }\n    predict() {\n      this.weights = this.predictKernel(this.inputLayer.weights, this.filters, this.biases);\n    }\n    compare() {\n      const {\n        filterDeltas,\n        biasDeltas\n      } = this;\n      this.filterDeltas = this.compareFilterDeltasKernel(filterDeltas, this.inputLayer.weights, this.deltas);\n      release(filterDeltas);\n      this.biasDeltas = this.compareBiasesKernel(biasDeltas, this.deltas);\n      release(biasDeltas);\n      release(this.deltas);\n      this.deltas = this.compareInputDeltasKernel(this.filters, this.inputLayer.deltas);\n      release(this.inputLayer.deltas);\n      // TODO: do we need to clone here?\n      this.inputLayer.deltas = clone(this.deltas);\n    }\n    learn(learningRate) {\n      // TODO: handle filters\n      // TODO: do we need to release here?\n      const {\n        weights: oldWeights\n      } = this;\n      this.weights = this.praxis.run(this, learningRate);\n      release(oldWeights);\n    }\n  }\n  function convolution(settings, inputLayer) {\n    return new Convolution(settings, inputLayer);\n  }\n  function setDropout(dropout) {\n    return dropout;\n  }\n  function trainingPredict(inputs) {\n    if (setDropout(Math.random()) < this.constants.probability) {\n      return 0;\n    }\n    return inputs[this.thread.y][this.thread.x];\n  }\n  function predict$5(inputs) {\n    return inputs[this.thread.y][this.thread.x] * this.constants.probability;\n  }\n  function compare$3(dropouts, deltas) {\n    if (dropouts[this.thread.y][this.thread.x] === 0) {\n      return 0;\n    }\n    return deltas[this.thread.y][this.thread.x];\n  }\n  const dropoutDefaults = {\n    ...baseLayerDefaultSettings,\n    probability: 0.5\n  };\n  class Dropout extends Filter {\n    constructor(inputLayer, settings) {\n      super(settings, inputLayer);\n      this.predictKernelMap = null;\n      this.settings = {\n        ...dropoutDefaults,\n        ...settings\n      };\n      this.dropouts = null;\n      this.validate();\n    }\n    setupKernels(isTraining) {\n      const output = [this.width, this.height];\n      if (isTraining) {\n        this.predictKernelMap = makeKernelMap({\n          dropouts: setDropout\n        }, trainingPredict, {\n          output,\n          immutable: true\n        });\n        this.compareKernel = makeKernel(compare$3, {\n          output,\n          immutable: true\n        });\n      } else {\n        this.predictKernelMap = makeKernelMap({}, predict$5, {\n          output,\n          immutable: true\n        });\n      }\n    }\n    predict() {\n      release(this.weights);\n      if (this.dropouts) {\n        release(this.dropouts);\n      }\n      const {\n        result,\n        dropouts\n      } = this.predictKernelMap(this.inputLayer.weights);\n      this.weights = result;\n      this.dropouts = dropouts;\n    }\n    compare() {\n      release(this.deltas);\n      this.deltas = this.compareKernel(this.dropouts, this.inputLayer.deltas);\n    }\n  }\n  function dropout(inputLayer, settings) {\n    return new Dropout(inputLayer, settings);\n  }\n  function feedForward(settings, input) {\n    const {\n      height,\n      praxisOpts = null\n    } = settings;\n    const weights = random({\n      id: 'weights',\n      height,\n      width: input.height,\n      praxisOpts\n    });\n    const biases = random({\n      id: 'biases',\n      height,\n      praxisOpts\n    });\n    return sigmoid$1(add$1(multiply$1(weights, input, {\n      praxisOpts\n    }), biases, {\n      praxisOpts\n    }), {\n      praxisOpts\n    });\n  }\n  function predict$4(inputs, filters, biases) {\n    let output = 0;\n    let i = 0;\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        output += inputs[y][x] * filters[this.thread.x][i];\n        i++;\n      }\n    }\n    return output + biases[this.thread.x];\n  }\n  function predict3D$4(inputs, filters, biases) {\n    let output = 0;\n    let i = 0;\n    for (let z = 0; z < this.constants.inputDepth; z++) {\n      for (let y = 0; y < this.constants.inputHeight; y++) {\n        for (let x = 0; x < this.constants.inputWidth; x++) {\n          output += inputs[z][y][x] * filters[this.thread.x][i];\n          i++;\n        }\n      }\n    }\n    return output + biases[this.thread.x];\n  }\n  function compareInputDeltas(inputDeltas, deltas, filters) {\n    let sum = 0;\n    const filterX = this.thread.x + this.thread.y * this.output.x;\n    for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n      sum += filters[filterY][filterX] * deltas[0][filterY];\n    }\n    return sum + inputDeltas[this.thread.y][this.thread.x];\n  }\n  function compareInputDeltas3D(inputDeltas, deltas, filters) {\n    let sum = 0;\n    const filterX = this.thread.x + this.thread.y * this.output.x;\n    for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n      sum += filters[filterY][filterX] * deltas[0][filterY];\n    }\n    return sum + inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n  }\n  function compareBiases(biases, deltas) {\n    return biases[this.thread.x] + deltas[this.thread.y][this.thread.x];\n  }\n  function compareFilterDeltas(filterDeltas, inputWeights, deltas) {\n    return filterDeltas[this.thread.y][this.thread.x] + inputWeights[this.thread.y][this.thread.x] * deltas[this.constants.deltaY][this.constants.deltaX];\n  }\n  function compareFilterDeltas3D(filterDeltas, inputWeights, deltas) {\n    const inputZ = Math.floor(this.thread.x / (this.constants.inputWidth * this.constants.inputHeight));\n    const inputY = Math.floor((this.thread.x - inputZ * this.constants.inputWidth * this.constants.inputHeight) / this.constants.inputWidth);\n    const inputX = this.thread.x - this.constants.inputWidth * (inputY + this.constants.inputHeight * inputZ);\n    return filterDeltas[this.thread.y][this.thread.x] + inputWeights[inputZ][inputY][inputX] * deltas[0][this.thread.y];\n  }\n  class FullyConnected extends Filter {\n    constructor(settings, inputLayer) {\n      super(settings, inputLayer);\n      this.compareFilterDeltasKernel = null;\n      this.compareInputDeltasKernel = null;\n      this.compareBiasesKernel = null;\n      this.settings = {\n        ...settings\n      };\n      this.validate();\n      const connectionCount = inputLayer.width * inputLayer.height * inputLayer.depth;\n      this.biases = values(this.height, this.bias);\n      this.biasDeltas = zeros$1(this.height);\n      this.filters = randos2D(connectionCount, this.height);\n      this.filterDeltas = zeros2D(connectionCount, this.height);\n      if (this.depth > 0) {\n        this.weights = randos3D(this.width, this.height, this.depth);\n        this.deltas = zeros3D(this.width, this.height, this.depth);\n      } else if (this.height > 0) {\n        this.weights = randos2D(this.width, this.height);\n        this.deltas = zeros2D(this.width, this.height);\n      }\n    }\n    get bias() {\n      return this.settings.bias;\n    }\n    get biases() {\n      return this.settings.biases;\n    }\n    set biases(biases) {\n      this.settings.biases = biases;\n    }\n    get biasDeltas() {\n      return this.settings.biases;\n    }\n    set biasDeltas(biasDeltas) {\n      this.settings.biasDeltas = biasDeltas;\n    }\n    validate() {\n      super.validate();\n      if (this.depth > 0) throw new Error('depth not supported');\n    }\n    setupKernels() {\n      const {\n        inputLayer\n      } = this;\n      const connectionCount = inputLayer.width * inputLayer.height * inputLayer.depth;\n      if (inputLayer.depth > 0) {\n        this.predictKernel = makeKernel(predict3D$4, {\n          output: [this.width, this.height],\n          constants: {\n            inputHeight: inputLayer.height,\n            inputWidth: inputLayer.width,\n            inputDepth: inputLayer.depth\n          }\n        });\n        this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas3D, {\n          output: [connectionCount, this.height],\n          constants: {\n            deltaX: 0,\n            deltaY: 0,\n            inputWidth: inputLayer.width,\n            inputHeight: inputLayer.height\n          },\n          immutable: true\n        });\n        this.compareInputDeltasKernel = makeKernel(compareInputDeltas3D, {\n          output: [inputLayer.width, inputLayer.height, inputLayer.depth],\n          constants: {\n            filterCount: this.height\n          },\n          immutable: true\n        });\n      } else {\n        this.predictKernel = makeKernel(predict$4, {\n          output: [this.width, this.height],\n          constants: {\n            inputHeight: inputLayer.height,\n            inputWidth: inputLayer.width\n          }\n        });\n        this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n          output: [connectionCount, this.height],\n          constants: {\n            deltaX: 0,\n            deltaY: 0,\n            inputWidth: inputLayer.width,\n            inputHeight: inputLayer.height\n          }\n        });\n        this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n          output: [inputLayer.width, inputLayer.height],\n          constants: {\n            filterCount: this.height\n          }\n        });\n      }\n      this.compareBiasesKernel = makeKernel(compareBiases, {\n        output: [this.width, this.height]\n      });\n    }\n    predict() {\n      this.weights = this.predictKernel(this.inputLayer.weights, this.filters, this.biases);\n    }\n    compare() {\n      const inputLayerDeltas = this.inputLayer.deltas;\n      this.inputLayer.deltas = this.compareInputDeltasKernel(inputLayerDeltas, this.deltas, this.filters);\n      release(inputLayerDeltas);\n      const {\n        biasDeltas,\n        filterDeltas\n      } = this;\n      // TODO: handle biasDeltas learn\n      this.biasDeltas = this.compareBiasesKernel(this.biases, this.deltas);\n      // TODO: handle filterDeltas learn\n      this.filterDeltas = this.compareFilterDeltasKernel(filterDeltas, this.inputLayer.weights, this.deltas);\n      release(biasDeltas);\n      release(filterDeltas);\n    }\n  }\n  function fullyConnected(settings, inputLayer) {\n    return new FullyConnected(settings, inputLayer);\n  }\n  function predict$3(weights) {\n    return -weights[this.thread.y][this.thread.x];\n  }\n  class Negative extends Modifier {\n    constructor(inputLayer, settings) {\n      super(inputLayer, settings);\n      this.validate();\n    }\n    setupKernels() {\n      this.predictKernel = makeKernel(predict$3, {\n        output: [this.width, this.height]\n      });\n    }\n    predict() {\n      this.weights = this.predictKernel(this.inputLayer.weights);\n    }\n  }\n  function negative(inputLayer, settings) {\n    return new Negative(inputLayer, settings);\n  }\n  function predict$2(inputLayerWeights1, inputLayerWeights2) {\n    return inputLayerWeights1[this.thread.y][this.thread.x] * inputLayerWeights2[this.thread.y][this.thread.x];\n  }\n  function compare$2(weights, deltas) {\n    return weights[this.thread.y][this.thread.x] * deltas[this.thread.y][this.thread.x];\n  }\n  class MultiplyElement extends Operator {\n    get width() {\n      return this.inputLayer1.width;\n    }\n    get height() {\n      return this.inputLayer1.height;\n    }\n    get depth() {\n      return this.inputLayer1.depth;\n    }\n    validate() {\n      super.validate();\n      checkSameSize(this.inputLayer1, this.inputLayer2);\n    }\n    setupKernels() {\n      this.predictKernel = makeKernel(predict$2, {\n        output: [this.width, this.height],\n        immutable: true\n      });\n      this.compareKernel = makeKernel(compare$2, {\n        output: [this.width, this.height],\n        immutable: true\n      });\n    }\n    predict() {\n      release(this.weights);\n      this.weights = this.predictKernel(this.inputLayer1.weights, this.inputLayer2.weights);\n    }\n    compare() {\n      release(this.inputLayer1.deltas);\n      release(this.inputLayer2.deltas);\n      this.inputLayer1.deltas = this.compareKernel(this.inputLayer2.weights, this.deltas);\n      this.inputLayer2.deltas = this.compareKernel(this.inputLayer1.weights, this.deltas);\n    }\n  }\n  function multiplyElement$1(inputLayer1, inputLayer2, settings) {\n    return new MultiplyElement(inputLayer1, inputLayer2, settings);\n  }\n  function ones$1(size) {\n    return new Float32Array(size).fill(1);\n  }\n  function ones2D(width, height) {\n    const result = new Array(height);\n    for (let y = 0; y < height; y++) {\n      result[y] = ones$1(width);\n    }\n    return result;\n  }\n  class Ones extends Model {\n    constructor(settings) {\n      super(settings);\n      this.validate();\n      this.weights = ones2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n    }\n  }\n  function ones(settings) {\n    return new Ones(settings);\n  }\n  function predict2D$3(inputs) {\n    return activate$1(inputs[this.thread.y][this.thread.x]);\n  }\n  function predict3D$3(inputs) {\n    return activate$1(inputs[this.thread.z][this.thread.y][this.thread.x]);\n  }\n  function compare2D$3(weights, errors) {\n    return measure$1(weights[this.thread.y][this.thread.x], errors[this.thread.y][this.thread.x]);\n  }\n  function compare3D$3(weights, errors) {\n    return measure$1(weights[this.thread.z][this.thread.y][this.thread.x], errors[this.thread.z][this.thread.y][this.thread.x]);\n  }\n  class Tanh extends Activation {\n    setupKernels() {\n      if (this.depth > 0) {\n        this.predictKernel = makeKernel(predict3D$3, {\n          output: [this.width, this.height, this.depth],\n          functions: [activate$1],\n          immutable: true\n        });\n        this.compareKernel = makeKernel(compare3D$3, {\n          output: [this.width, this.height, this.depth],\n          functions: [measure$1],\n          immutable: true\n        });\n      } else {\n        this.predictKernel = makeKernel(predict2D$3, {\n          output: [this.width, this.height],\n          functions: [activate$1],\n          immutable: true\n        });\n        this.compareKernel = makeKernel(compare2D$3, {\n          output: [this.width, this.height],\n          functions: [measure$1],\n          immutable: true\n        });\n      }\n    }\n    predict() {\n      release(this.weights);\n      this.weights = this.predictKernel(this.inputLayer.weights);\n    }\n    compare() {\n      release(this.inputLayer.deltas);\n      this.inputLayer.deltas = this.compareKernel(this.weights, this.deltas);\n    }\n  }\n  function tanh$1(inputLayer, settings) {\n    return new Tanh(inputLayer, settings);\n  }\n  class Zeros extends Model {\n    constructor(settings) {\n      super(settings);\n      this.validate();\n      this.weights = zeros2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n    }\n    predict() {\n      // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n    }\n    compare() {\n      // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n    }\n  }\n  function zeros(settings) {\n    return new Zeros(settings);\n  }\n  function gru(settings, recurrentInput, input) {\n    const {\n      height\n    } = settings;\n    const updateGateWeights = random({\n      height,\n      width: input.height\n    });\n    const updateGatePeepholes = random({\n      width: height,\n      height\n    });\n    const updateGateBias = zeros({\n      height\n    });\n    const updateGate = sigmoid$1(add$1(add$1(multiply$1(updateGateWeights, input), multiply$1(updateGatePeepholes, recurrentInput)), updateGateBias));\n    const resetGateWeights = random({\n      height,\n      width: input.height\n    });\n    const resetGatePeepholes = random({\n      width: height,\n      height\n    });\n    const resetGateBias = zeros({\n      height\n    });\n    const resetGate = sigmoid$1(add$1(add$1(multiply$1(resetGateWeights, input), multiply$1(resetGatePeepholes, recurrentInput)), resetGateBias));\n    const cellWeights = random({\n      height,\n      width: input.height\n    });\n    const cellPeepholes = random({\n      width: height,\n      height\n    });\n    const cellBias = zeros({\n      height\n    });\n    const cell = tanh$1(add$1(add$1(multiply$1(cellWeights, input), multiply$1(cellPeepholes, multiplyElement$1(resetGate, recurrentInput))), cellBias));\n    // compute hidden state as gated, saturated cell activations\n    // negate updateGate\n    return add$1(multiplyElement$1(add$1(ones({\n      width: updateGate.width,\n      height: updateGate.height\n    }), negative(updateGate)), cell), multiplyElement$1(recurrentInput, updateGate));\n  }\n  const defaults$4 = {\n    weights: null\n  };\n  class Input extends EntryPoint {\n    constructor(settings) {\n      super({\n        ...defaults$4,\n        ...settings\n      });\n      this.reshapeInput = null;\n      this.validate();\n      this.reshapeInput = null;\n      this.deltas = zeros2D(this.width, this.height);\n    }\n    setupKernels() {\n      if (this.width === 1) {\n        this.predict = this.predict1D;\n        this.reshapeInput = makeKernel(function (value) {\n          return value[this.thread.y];\n        }, {\n          output: [1, this.height],\n          immutable: true\n        });\n      }\n    }\n    reuseKernels(layer) {\n      // super.reuseKernels(layer);\n      this.reshapeInput = layer.reshapeInput;\n    }\n    predict(inputs) {\n      if ((Array.isArray(inputs) || inputs instanceof Float32Array) && typeof inputs[0] === 'number' && inputs.length === this.height * this.width) {\n        release(this.weights);\n        this.weights = kernelInput(inputs, [this.width, this.height]);\n      } else if (Array.isArray(inputs) && inputs.length === this.height && (Array.isArray(inputs[0]) || inputs[0] instanceof Float32Array) && inputs[0].length === this.width) {\n        this.weights = clone(inputs);\n      } else {\n        throw new Error('Inputs are not of sized correctly');\n      }\n    }\n    predict1D(inputs) {\n      if (this.weights) release(this.weights);\n      if (this.reshapeInput) {\n        this.weights = this.reshapeInput(inputs);\n      } else {\n        this.weights = inputs;\n      }\n    }\n    compare() {\n      // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n    }\n    learn() {}\n  }\n  function input(settings) {\n    return new Input(settings);\n  }\n  function predict2D$2(inputs) {\n    return activate(inputs[this.thread.y][this.thread.x]);\n  }\n  function predict3D$2(inputs) {\n    return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n  }\n  function compare2D$2(weights, deltas) {\n    return measure(weights[this.thread.y][this.thread.x], deltas[this.thread.y][this.thread.x]);\n  }\n  function compare3D$2(weights, deltas) {\n    return measure(weights[this.thread.z][this.thread.y][this.thread.x], deltas[this.thread.z][this.thread.y][this.thread.x]);\n  }\n  class LeakyRelu extends Activation {\n    setupKernels() {\n      const {\n        width,\n        height,\n        depth\n      } = this.inputLayer;\n      if (this.depth > 0) {\n        this.predictKernel = makeKernel(predict3D$2, {\n          output: [width, height, depth],\n          functions: [activate],\n          immutable: true\n        });\n        this.compareKernel = makeKernel(compare3D$2, {\n          output: [width, height, depth],\n          functions: [measure],\n          immutable: true\n        });\n      } else {\n        this.predictKernel = makeKernel(predict2D$2, {\n          output: [width, height],\n          functions: [activate],\n          immutable: true\n        });\n        this.compareKernel = makeKernel(compare2D$2, {\n          output: [width, height],\n          functions: [measure],\n          immutable: true\n        });\n      }\n    }\n    predict() {\n      release(this.weights);\n      this.weights = this.predictKernel(this.inputLayer.weights);\n    }\n    compare() {\n      const {\n        deltas\n      } = this;\n      this.deltas = this.compareKernel(this.weights, deltas);\n      release(deltas);\n    }\n  }\n  function leakyRelu(inputLayer, settings) {\n    return new LeakyRelu(inputLayer, settings);\n  }\n  function lstmCell(settings, input, recurrentInput) {\n    const {\n      height\n    } = settings;\n    if (typeof height !== 'number') {\n      throw new Error('no settings.height given');\n    }\n    if (recurrentInput.setDimensions) {\n      recurrentInput.setDimensions(1, height);\n    }\n    const inputGateWeights = random({\n      width: input.height,\n      height,\n      std: 0.08,\n      id: 'inputGateWeights'\n    });\n    const inputGatePeepholes = random({\n      width: height,\n      height,\n      std: 0.08,\n      id: 'inputGatePeepholes'\n    });\n    const inputGateBias = zeros({\n      width: 1,\n      height,\n      id: 'inputGateBias'\n    });\n    const inputGate = sigmoid$1(add$1(add$1(multiply$1(inputGateWeights, input), multiply$1(inputGatePeepholes, recurrentInput)), inputGateBias), {\n      id: 'inputGate'\n    });\n    const forgetGateWeights = random({\n      width: input.height,\n      height,\n      std: 0.08,\n      id: 'forgetGateWeights'\n    });\n    const forgetGatePeepholes = random({\n      width: height,\n      height,\n      std: 0.08,\n      id: 'forgetGatePeepholes'\n    });\n    const forgetGateBias = zeros({\n      width: 1,\n      height,\n      id: 'forgetGateBias'\n    });\n    const forgetGate = sigmoid$1(add$1(add$1(multiply$1(forgetGateWeights, input), multiply$1(forgetGatePeepholes, recurrentInput)), forgetGateBias), {\n      id: 'forgetGate'\n    });\n    const outputGateWeights = random({\n      width: input.height,\n      height,\n      std: 0.08,\n      id: 'outputGateWeights'\n    });\n    const outputGatePeepholes = random({\n      width: height,\n      height,\n      std: 0.08,\n      id: 'outputGatePeepholes'\n    });\n    const outputGateBias = zeros({\n      width: 1,\n      height,\n      id: 'outputGateBias'\n    });\n    const outputGate = sigmoid$1(add$1(add$1(multiply$1(outputGateWeights, input), multiply$1(outputGatePeepholes, recurrentInput)), outputGateBias), {\n      id: 'outputGate'\n    });\n    const memoryWeights = random({\n      width: input.height,\n      height,\n      std: 0.08,\n      id: 'memoryWeights'\n    });\n    const memoryPeepholes = random({\n      width: height,\n      height,\n      std: 0.08,\n      id: 'memoryPeepholes'\n    });\n    const memoryBias = zeros({\n      width: 1,\n      height,\n      id: 'memoryBias'\n    });\n    const memory = tanh$1(add$1(add$1(multiply$1(memoryWeights, input), multiply$1(memoryPeepholes, recurrentInput)), memoryBias), {\n      id: 'memory'\n    });\n    // compute new cell activation\n    const retainCell = multiplyElement$1(forgetGate, recurrentInput, {\n      id: 'retainCell'\n    }); // what do we keep from cell\n    const writeCell = multiplyElement$1(inputGate, memory, {\n      id: 'writeCell'\n    }); // what do we write to cell\n    const cell = add$1(retainCell, writeCell, {\n      id: 'cell'\n    }); // new cell contents\n    // compute hidden state as gated, saturated cell activations\n    return multiplyElement$1(outputGate, tanh$1(cell), {\n      id: 'activations'\n    });\n  }\n  function output(settings, inputLayer) {\n    const {\n      height\n    } = settings;\n    const outputGate = random({\n      height,\n      width: inputLayer.height,\n      id: 'outputGate',\n      std: 0.08\n    });\n    const output = random({\n      height,\n      id: 'output',\n      std: 0.08\n    });\n    const outputGateConnector = multiply$1(outputGate, inputLayer, {\n      id: 'outputGateConnected'\n    });\n    return target({\n      id: 'target',\n      ...settings\n    }, add$1(outputGateConnector, output));\n  }\n  function setSwitchY(value) {\n    return value;\n  }\n  function setSwitchX(value) {\n    return value;\n  }\n  function predict$1(inputs) {\n    // Ends are exclusive, that is if end=4, the last item is 3\n    const unclippedStartInputX = this.thread.x * this.constants.strideX - this.constants.paddingX;\n    const unclippedStartInputY = this.thread.y * this.constants.strideY - this.constants.paddingY;\n    const unclippedEndInputX = unclippedStartInputX + this.constants.filterWidth;\n    const unclippedEndInputY = unclippedStartInputY + this.constants.filterHeight;\n    const startInputX = Math.max(unclippedStartInputX, 0);\n    const startInputY = Math.max(unclippedStartInputY, 0);\n    const endInputX = Math.min(unclippedEndInputX, this.constants.inputWidth);\n    const endInputY = Math.min(unclippedEndInputY, this.constants.inputHeight);\n    let largestValue = inputs[this.thread.z][startInputY][startInputX];\n    for (let y = startInputY; y < endInputY; y++) {\n      for (let x = startInputX; x < endInputX; x++) {\n        const input = inputs[this.thread.z][y][x];\n        if (input > largestValue) {\n          largestValue = input;\n        }\n      }\n    }\n    return largestValue;\n  }\n  function compare$1(deltas, switchX, switchY) {\n    const xCenter = this.thread.x + 0.5;\n    const yCenter = this.thread.y + 0.5;\n    const invStrideX = 1 / this.constants.strideX;\n    const invStrideY = 1 / this.constants.strideY;\n    const startSourceX = Math.max(0, Math.ceil((xCenter - this.constants.filterWidth + this.constants.paddingX) * invStrideX));\n    const startSourceY = Math.max(0, Math.ceil((yCenter - this.constants.filterHeight + this.constants.paddingY) * invStrideY));\n    const endSourceX = Math.min(Math.ceil((xCenter + this.constants.paddingX) * invStrideX), this.constants.outputWidth);\n    const endSourceY = Math.min(Math.ceil((yCenter + this.constants.paddingY) * invStrideY), this.constants.outputHeight);\n    let result = 0;\n    for (let backY = startSourceY; backY < endSourceY; backY++) {\n      for (let backX = startSourceX; backX < endSourceX; backX++) {\n        const switchXValue = switchX[backY][backX];\n        const switchYValue = switchY[backY][backX];\n        if (Math.abs(switchXValue - this.thread.x) < 0.1 && Math.abs(switchYValue - this.thread.y) < 0.1) {\n          result += deltas[backY][backX];\n        }\n      }\n    }\n    return result;\n  }\n  const defaults$3 = {\n    padding: 0,\n    stride: 0,\n    filterWidth: 0,\n    filterHeight: 0,\n    filterCount: 0\n  };\n  class Pool extends Filter {\n    constructor(settings, inputLayer) {\n      super(settings, inputLayer);\n      this.predictKernelMap = null;\n      this.settings = {\n        ...settings,\n        ...getStride(settings, defaults$3),\n        ...getPadding(settings, defaults$3)\n      };\n      this.weights = randos3D(this.width, this.height, this.depth);\n      this.deltas = zeros3D(this.width, this.height, this.depth);\n      this.validate();\n    }\n    get strideX() {\n      return this.settings.strideX;\n    }\n    get strideY() {\n      return this.settings.strideY;\n    }\n    get paddingX() {\n      return this.settings.paddingX;\n    }\n    get paddingY() {\n      return this.settings.paddingY;\n    }\n    get width() {\n      // Using floor prefers to pad less (or use negative padding) on the right\n      // using ceil prefers to pad more\n      return Math.ceil((this.inputLayer.width + this.paddingX * 2 - this.filterWidth) / this.strideX + 1);\n    }\n    get height() {\n      // Using floor prefers to pad less (or use negative padding) on the bottom\n      // using ceil prefers to pad more\n      return Math.floor((this.inputLayer.height + this.paddingY * 2 - this.filterHeight) / this.strideY + 1);\n    }\n    get depth() {\n      return this.settings.filterCount;\n    }\n    get filterCount() {\n      // TODO: handle 1 depth?\n      return this.settings.filterCount;\n    }\n    get switchX() {\n      return this.settings.switchX;\n    }\n    set switchX(switchX) {\n      this.settings.switchX = switchX;\n    }\n    get switchY() {\n      return this.settings.switchY;\n    }\n    set switchY(switchY) {\n      this.settings.switchY = switchY;\n    }\n    setupKernels() {\n      this.predictKernelMap = makeKernelMap({\n        switchX: setSwitchX,\n        switchY: setSwitchY\n      }, predict$1, {\n        output: [this.width, this.height, this.depth],\n        constants: {\n          inputWidth: this.inputLayer.width,\n          inputHeight: this.inputLayer.height,\n          paddingX: this.paddingX,\n          paddingY: this.paddingY,\n          filterHeight: this.filterHeight,\n          filterWidth: this.filterWidth,\n          strideX: this.strideX,\n          strideY: this.strideY\n        }\n      });\n      this.compareKernel = makeKernel(compare$1, {\n        output: [this.inputLayer.width, this.inputLayer.height, this.inputLayer.depth],\n        constants: {\n          inputWidth: this.inputLayer.width,\n          inputHeight: this.inputLayer.height,\n          outputWidth: this.width,\n          outputHeight: this.height,\n          filterWidth: this.filterWidth,\n          filterHeight: this.filterHeight,\n          paddingX: this.paddingX,\n          paddingY: this.paddingY,\n          strideX: this.strideX,\n          strideY: this.strideY\n        }\n      });\n    }\n    predict() {\n      const {\n        result: weights,\n        switchX,\n        switchY\n      } = this.predictKernelMap(this.inputLayer.weights);\n      this.switchX = switchX;\n      this.switchY = switchY;\n      this.weights = weights;\n    }\n    compare() {\n      // debugger;\n      // const depth = this.inputLayer.deltas.length;\n      // const height = this.inputLayer.deltas[0].length;\n      // const width = this.inputLayer.deltas[0][0].length;\n      // const type = typeof this.inputLayer.deltas[0][0][0];\n      const inputLayerDeltas = this.inputLayer.deltas;\n      this.inputLayer.deltas = this.compareKernel(this.deltas, this.switchX, this.switchY);\n      release(inputLayerDeltas);\n      // debugger;\n      // if (depth !== this.inputLayer.deltas.length) debugger;\n      // if (height !== this.inputLayer.deltas[0].length) debugger;\n      // if (width !== this.inputLayer.deltas[0][0].length) debugger;\n      // if (type !== typeof this.inputLayer.deltas[0][0][0]) debugger;\n    }\n  }\n  function pool(settings, inputLayer) {\n    return new Pool(settings, inputLayer);\n  }\n  class RecurrentInput extends Internal {\n    constructor(recurrentInput) {\n      super();\n      this.praxis = null;\n      this.predictKernel = null;\n      this.compareKernel = null;\n      this.settings = {};\n      this.recurrentInput = recurrentInput;\n      this.validate();\n    }\n    get width() {\n      return this.recurrentInput.width;\n    }\n    get height() {\n      return this.recurrentInput.height;\n    }\n    get depth() {\n      return this.recurrentInput.depth;\n    }\n    get deltas() {\n      return this.recurrentInput.deltas;\n    }\n    set deltas(deltas) {\n      const recurrentInputDeltas = this.recurrentInput.deltas;\n      this.recurrentInput.deltas = deltas;\n      release(recurrentInputDeltas);\n    }\n    get weights() {\n      return this.recurrentInput.weights;\n    }\n    set weights(weights) {\n      const recurrentInputWeights = this.recurrentInput.weights;\n      this.recurrentInput.weights = weights;\n      release(recurrentInputWeights);\n    }\n    validate() {\n      BaseLayer.prototype.validate.call(this);\n      if (this.width !== this.recurrentInput.width) {\n        throw new Error(`${this.constructor.name} layer width ${this.width} and ${this.recurrentInput.constructor.name} width (${this.recurrentInput.width}) are not same`);\n      }\n      if (this.height !== this.recurrentInput.height) {\n        throw new Error(`${this.constructor.name} layer height ${this.height} and ${this.recurrentInput.constructor.name} width (${this.recurrentInput.height}) are not same`);\n      }\n    }\n    setDimensions(width, height) {\n      this.recurrentInput.width = width;\n      this.recurrentInput.height = height;\n    }\n    predict() {\n      // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n    }\n    compare() {\n      // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n    }\n    learn() {\n      // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n    }\n    setupKernels() {\n      // throw new Error(\n      //   `${this.constructor.name}-setupKernels is not yet implemented`\n      // )\n    }\n    reuseKernels() {\n      // throw new Error(\n      //   `${this.constructor.name}-reuseKernels is not yet implemented`\n      // )\n    }\n  }\n  class RecurrentZeros extends Internal {\n    constructor(settings) {\n      super();\n      this.praxis = null;\n      this.settings = {};\n      this.predictKernel = null;\n      this.compareKernel = null;\n      if (settings) {\n        this.settings = {\n          ...settings\n        };\n      }\n    }\n    setDimensions(width, height) {\n      this.praxis = null;\n      this.settings = {\n        ...this.settings,\n        width,\n        height,\n        weights: zeros2D(width, height),\n        deltas: zeros2D(width, height)\n      };\n    }\n    setupKernels() {\n      // throw new Error(\n      //   `${this.constructor.name}-setupKernels is not yet implemented`\n      // )\n    }\n    reuseKernels() {\n      // throw new Error(\n      //   `${this.constructor.name}-reuseKernels is not yet implemented`\n      // )\n    }\n    predict() {\n      // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n    }\n    compare() {\n      // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n    }\n    learn(learningRate) {\n      const {\n        weights: oldWeights\n      } = this;\n      this.weights = this.praxis.run(this, learningRate);\n      // this.deltas = deltas;\n      release(oldWeights);\n    }\n  }\n  function recurrentZeros() {\n    return new RecurrentZeros();\n  }\n  function predict2D$1(inputs) {\n    return activate$3(inputs[this.thread.y][this.thread.x]);\n  }\n  function compare2D$1(weights, deltas) {\n    return measure$3(weights[this.thread.y][this.thread.x], deltas[this.thread.y][this.thread.x]);\n  }\n  function predict3D$1(inputs) {\n    return activate$3(inputs[this.thread.z][this.thread.y][this.thread.x]);\n  }\n  function compare3D$1(weights, deltas) {\n    return measure$3(weights[this.thread.z][this.thread.y][this.thread.x], deltas[this.thread.z][this.thread.y][this.thread.x]);\n  }\n  class Relu extends Activation {\n    setupKernels() {\n      const {\n        width,\n        height,\n        depth\n      } = this.inputLayer;\n      if (depth > 0) {\n        this.predictKernel = makeKernel(predict3D$1, {\n          output: [width, height, depth],\n          functions: [activate$3],\n          immutable: true\n        });\n        this.compareKernel = makeKernel(compare3D$1, {\n          output: [width, height, depth],\n          functions: [measure$3],\n          immutable: true\n        });\n      } else {\n        this.predictKernel = makeKernel(predict2D$1, {\n          output: [width, height],\n          functions: [activate$3],\n          immutable: true\n        });\n        this.compareKernel = makeKernel(compare2D$1, {\n          output: [width, height],\n          functions: [measure$3],\n          immutable: true\n        });\n      }\n    }\n    predict() {\n      release(this.weights);\n      this.weights = this.predictKernel(this.inputLayer.weights);\n    }\n    compare() {\n      release(this.inputLayer.deltas);\n      this.inputLayer.deltas = this.compareKernel(this.weights, this.deltas);\n    }\n  }\n  function relu$1(inputLayer, settings) {\n    return new Relu(inputLayer, settings);\n  }\n  function rnnCell(settings, input, recurrentInput) {\n    const {\n      height\n    } = settings;\n    if (typeof height !== 'number') throw new Error('height not set');\n    if (recurrentInput.setDimensions) {\n      recurrentInput.setDimensions(1, height);\n    }\n    // wxh\n    const weight = random({\n      id: 'weight',\n      height,\n      width: input.height,\n      std: 0.08\n    });\n    // whh\n    const transition = random({\n      id: 'transition',\n      height,\n      width: height,\n      std: 0.08\n    });\n    // bhh\n    const bias = zeros({\n      id: 'bias',\n      height\n    });\n    return relu$1(add$1(add$1(multiply$1(weight, input), multiply$1(transition, recurrentInput)), bias));\n  }\n  class Regression extends BaseLayer {\n    constructor(settings, inputLayer) {\n      super(settings);\n      this.inputLayer = inputLayer;\n      this.validate();\n    }\n    predict() {\n      release(this.weights);\n      this.weights = clone(this.inputLayer.weights);\n    }\n    learn() {\n      // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n    }\n  }\n  // TODO: handle `loss += 0.5*dy*dy;` total and sum in learn\n  function regression(settings, inputLayer) {\n    return new Regression(settings, inputLayer);\n  }\n  function getMaxValue2D(inputs) {\n    let maxInput = -Infinity;\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        const input = inputs[y][x];\n        if (input > maxInput) {\n          maxInput = input;\n        }\n      }\n    }\n    return maxInput;\n  }\n  function getMaxValue3D(inputs) {\n    let maxInput = -Infinity;\n    for (let z = 0; z < this.constants.inputDepth; z++) {\n      for (let y = 0; y < this.constants.inputHeight; y++) {\n        for (let x = 0; x < this.constants.inputWidth; x++) {\n          const input = inputs[z][y][x];\n          if (input > maxInput) {\n            maxInput = input;\n          }\n        }\n      }\n    }\n    return maxInput;\n  }\n  function getSum2D(inputs) {\n    let sum = 0;\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        sum += inputs[y][x];\n      }\n    }\n    return sum;\n  }\n  function getSum3D(inputs) {\n    let sum = 0;\n    for (let z = 0; z < this.constants.inputDepth; z++) {\n      for (let y = 0; y < this.constants.inputHeight; y++) {\n        for (let x = 0; x < this.constants.inputWidth; x++) {\n          sum += inputs[z][y][x];\n        }\n      }\n    }\n    return sum;\n  }\n  function getExponentials(inputs, maxInput) {\n    return Math.exp(inputs[this.thread.x] - maxInput[0]);\n  }\n  function getExponentials3D(inputs, maxInput) {\n    return Math.exp(inputs[this.thread.z][this.thread.y][this.thread.x] - maxInput[0]);\n  }\n  function predict2D(exponentials, exponentialsSum) {\n    return exponentials[this.thread.y][this.thread.x] / exponentialsSum[0];\n  }\n  function predict3D(exponentials, exponentialsSum) {\n    return exponentials[this.thread.z][this.thread.y][this.thread.x] / exponentialsSum[0];\n  }\n  function compare2D(target, exponentials) {\n    let indicator = 0;\n    const index = this.thread.x + this.thread.y * this.output.x;\n    if (index === target) {\n      indicator = 1;\n    }\n    return -(indicator - exponentials[this.thread.y][this.thread.x]);\n  }\n  function compare3D(target, exponentials) {\n    let indicator = 0;\n    const index = this.thread.x + this.thread.y * this.output.x + this.thread.z * this.output.x * this.output.y;\n    if (index === target) {\n      indicator = 1;\n    }\n    return -(indicator - exponentials[this.thread.z][this.thread.y][this.thread.x]);\n  }\n  // TODO: handle: `return -Math.log(this.es[y]);` in learn\n  class SoftMax extends Modifier {\n    constructor(inputLayer, settings) {\n      super(inputLayer, settings);\n      this.errors = null;\n      this.getExponentialsKernel = null;\n      this.getMaxValueKernel = null;\n      this.getSumKernel = null;\n      this.validate();\n      if (this.depth > 0) {\n        this.weights = randos3D(this.width, this.height, this.depth);\n        this.deltas = zeros3D(this.width, this.height, this.depth);\n      } else if (this.height > 0) {\n        this.weights = randos2D(this.width, this.height);\n        this.deltas = zeros2D(this.width, this.height);\n      } else {\n        this.weights = randos(this.width);\n        this.deltas = zeros$1(this.width);\n      }\n    }\n    setupKernels() {\n      const {\n        width,\n        height,\n        depth\n      } = this;\n      if (depth > 0) {\n        this.getExponentialsKernel = makeKernel(getExponentials3D, {\n          output: [width, height, depth]\n        });\n        this.getMaxValueKernel = makeKernel(getMaxValue3D, {\n          output: [1, 1, 1],\n          constants: {\n            inputWidth: width,\n            inputHeight: height,\n            inputDepth: depth\n          }\n        });\n        this.getSumKernel = makeKernel(getSum3D, {\n          output: [1, 1, 1],\n          constants: {\n            inputWidth: width,\n            inputHeight: height,\n            inputDepth: depth\n          }\n        });\n        this.predictKernel = makeKernel(predict3D, {\n          output: [width, height, depth]\n        });\n        this.compareKernel = makeKernel(compare3D, {\n          output: [width, height, depth],\n          immutable: true\n        });\n      } else {\n        this.getExponentialsKernel = makeKernel(getExponentials, {\n          output: [width, height]\n        });\n        this.getMaxValueKernel = makeKernel(getMaxValue2D, {\n          output: [1, 1],\n          constants: {\n            inputWidth: width,\n            inputHeight: height\n          }\n        });\n        this.getSumKernel = makeKernel(getSum2D, {\n          output: [1, 1],\n          constants: {\n            inputWidth: width,\n            inputHeight: height\n          }\n        });\n        this.predictKernel = makeKernel(predict2D, {\n          output: [width, height]\n        });\n        this.compareKernel = makeKernel(compare2D, {\n          output: [width, height],\n          immutable: true\n        });\n      }\n    }\n    predict() {\n      const maxValue = this.getMaxValueKernel(this.inputLayer.weights);\n      const exponentials = this.getExponentialsKernel(this.inputLayer.weights, maxValue);\n      const exponentialsSum = this.getSumKernel(exponentials);\n      this.weights = this.predictKernel(exponentials, exponentialsSum);\n    }\n    compare(targetValues) {\n      const {\n        deltas,\n        errors\n      } = this;\n      this.errors = this.compareKernel(targetValues[0], deltas);\n      this.deltas = clone(this.errors);\n      release(deltas);\n      release(errors);\n      const inputLayerDeltas = this.inputLayer.deltas;\n      this.inputLayer.deltas = clone(this.deltas);\n      release(inputLayerDeltas);\n    }\n  }\n  function softMax(inputLayer, settings) {\n    return new SoftMax(inputLayer, settings);\n  }\n  class SVM extends BaseLayer {\n    constructor(inputLayer, settings) {\n      super(settings);\n      this.inputLayer = inputLayer;\n    }\n    predict() {\n      release(this.weights);\n      this.weights = clone(this.inputLayer.weights);\n      this.validate();\n    }\n    learn() {\n      // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n    }\n  }\n  // function learn(target) {\n  //   if (y === i) {\n  //     continue;\n  //   }\n  //   const ydiff = -yscore + x.w[i] + margin;\n  //   if (ydiff > 0) {\n  //     // violating dimension, apply loss\n  //     x.dw[i] += 1;\n  //     x.dw[y] -= 1;\n  //     loss += ydiff;\n  //   }\n  // }\n  function svm(inputLayer, settings) {\n    return new SVM(inputLayer, settings);\n  }\n  function predict(value) {\n    return value[this.thread.x][this.thread.y];\n  }\n  const compare = predict;\n  class Transpose extends Modifier {\n    get width() {\n      return this.inputLayer.height;\n    }\n    get height() {\n      return this.inputLayer.width;\n    }\n    constructor(inputLayer) {\n      super(inputLayer);\n      this.validate();\n    }\n    setupKernels() {\n      this.predictKernel = makeKernel(predict, {\n        output: [this.height, this.width]\n      });\n      this.compareKernel = makeKernel(compare, {\n        output: [this.width, this.height]\n      });\n    }\n    predict() {\n      this.weights = this.predictKernel(this.inputLayer.weights);\n    }\n    compare() {\n      this.inputLayer.deltas = this.compareKernel(this.deltas);\n    }\n  }\n  function transpose(inputLayer) {\n    return new Transpose(inputLayer);\n  }\n  const layerTypes = {\n    Activation,\n    Internal,\n    InternalModel,\n    EntryPoint,\n    Filter,\n    Model,\n    Modifier,\n    Operator,\n    Target\n  };\n  var layer = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    layerTypes: layerTypes,\n    Add: Add,\n    add: add$1,\n    arthurFeedForward: arthurFeedForward,\n    BaseLayer: BaseLayer,\n    baseLayerDefaultSettings: baseLayerDefaultSettings,\n    Convolution: Convolution,\n    convolution: convolution,\n    Dropout: Dropout,\n    dropout: dropout,\n    feedForward: feedForward,\n    FullyConnected: FullyConnected,\n    fullyConnected: fullyConnected,\n    gru: gru,\n    Input: Input,\n    input: input,\n    LeakyRelu: LeakyRelu,\n    leakyRelu: leakyRelu,\n    lstmCell: lstmCell,\n    Multiply: Multiply,\n    multiply: multiply$1,\n    MultiplyElement: MultiplyElement,\n    multiplyElement: multiplyElement$1,\n    Negative: Negative,\n    negative: negative,\n    Ones: Ones,\n    ones: ones,\n    output: output,\n    Pool: Pool,\n    pool: pool,\n    Random: Random,\n    random: random,\n    RecurrentInput: RecurrentInput,\n    RecurrentZeros: RecurrentZeros,\n    rnnCell: rnnCell,\n    Regression: Regression,\n    regression: regression,\n    Relu: Relu,\n    relu: relu$1,\n    Sigmoid: Sigmoid,\n    sigmoid: sigmoid$1,\n    SoftMax: SoftMax,\n    softMax: softMax,\n    SVM: SVM,\n    svm: svm,\n    Tanh: Tanh,\n    tanh: tanh$1,\n    Target: Target,\n    target: target,\n    Transpose: Transpose,\n    transpose: transpose,\n    Zeros: Zeros,\n    zeros: zeros\n  });\n  const layerNameTypes = Object.keys(layer);\n  function layerFromJSON(jsonLayer, inputLayer1, inputLayer2) {\n    if (!layerNameTypes.find(layerNameType => layerNameType === jsonLayer.type)) {\n      return null;\n    }\n    const Layer = layer[jsonLayer.type];\n    if (Layer.prototype instanceof layerTypes.Filter) {\n      if (!inputLayer1) throw new Error('inputLayer missing');\n      return new Layer(jsonLayer, inputLayer1);\n    } else if (Layer.prototype instanceof layerTypes.Activation || Layer.prototype instanceof layerTypes.Modifier) {\n      if (!inputLayer1) throw new Error('inputLayer missing');\n      return new Layer(inputLayer1, jsonLayer);\n    } else if (Layer.prototype instanceof layerTypes.Internal) {\n      return new Layer(jsonLayer);\n    } else if (Layer.prototype instanceof layerTypes.Operator) {\n      if (!inputLayer1) throw new Error('inputLayer1 missing');\n      if (!inputLayer2) throw new Error('inputLayer2 missing');\n      return new Layer(inputLayer1, inputLayer2, jsonLayer);\n    } else if (Layer.prototype instanceof layerTypes.InternalModel || Layer.prototype instanceof layerTypes.EntryPoint || Layer.prototype instanceof layerTypes.Model) {\n      return new Layer(jsonLayer);\n    } else if (Layer === Target) {\n      if (!inputLayer1) throw new Error('inputLayer missing');\n      return new Layer(jsonLayer, inputLayer1);\n    }\n    return null;\n  }\n  const defaults$2 = {\n    learningRate: 0.3,\n    binaryThresh: 0.5,\n    initPraxis: (layerTemplate, settings) => {\n      var _a;\n      return momentumRootMeanSquaredPropagation(layerTemplate, (_a = layerTemplate.settings.praxisOpts) !== null && _a !== void 0 ? _a : settings);\n    }\n  };\n  const trainDefaults$2 = {\n    iterations: 20000,\n    errorThresh: 0.005,\n    log: false,\n    logPeriod: 10,\n    learningRate: 0.3,\n    callbackPeriod: 10,\n    errorCheckInterval: 100,\n    timeout: Infinity\n  };\n  class FeedForward {\n    constructor(options = {}) {\n      this.trainOpts = {};\n      this.layers = null;\n      this._inputLayer = null;\n      this._hiddenLayers = null;\n      this._outputLayer = null;\n      this._model = null;\n      this.meanSquaredError = null;\n      this.inputLookup = null;\n      this.inputLookupLength = null;\n      this.outputLookup = null;\n      this.outputLookupLength = null;\n      this.options = {\n        ...defaults$2,\n        ...options\n      };\n      this._updateTrainingOptions({\n        ...trainDefaults$2,\n        ...options\n      });\n    }\n    static _validateTrainingOptions(options) {\n      const {\n        iterations,\n        errorThresh,\n        log,\n        logPeriod,\n        learningRate,\n        callback,\n        callbackPeriod,\n        timeout\n      } = options;\n      const validations = {\n        iterations: () => typeof iterations === 'number' && iterations > 0,\n        errorThresh: () => typeof errorThresh === 'number' && errorThresh > 0 && errorThresh < 1,\n        log: () => typeof log === 'function' || typeof log === 'boolean',\n        logPeriod: () => typeof logPeriod === 'number' && logPeriod > 0,\n        learningRate: () => typeof learningRate === 'number' && learningRate > 0 && learningRate < 1,\n        callback: () => typeof callback === 'function' || callback === null,\n        callbackPeriod: () => typeof callbackPeriod === 'number' && callbackPeriod > 0,\n        timeout: () => typeof timeout === 'number' && timeout > 0\n      };\n      Object.keys(trainDefaults$2).forEach(key => {\n        if (validations.hasOwnProperty(key) && !validations[key]()) {\n          const val = options[key];\n          throw new Error(`[${key}, ${(val !== null && val !== void 0 ? val : 'undefined').toString()}] is out of normal training range, your network will probably not train.`);\n        }\n      });\n    }\n    /**\r\n     * if a method is passed in method is used\r\n     * if false passed in nothing is logged\r\n     */\n    _setLogMethod(log) {\n      if (typeof log === 'function') {\n        this.trainOpts.log = log;\n      } else if (log) {\n        // eslint-disable-next-line\n        this.trainOpts.log = console.log;\n      } else {\n        this.trainOpts.log = false;\n      }\n    }\n    _updateTrainingOptions(opts) {\n      var _a;\n      this.trainOpts = {\n        ...trainDefaults$2,\n        ...this.trainOpts,\n        ...opts\n      };\n      FeedForward._validateTrainingOptions(this.trainOpts);\n      this._setLogMethod((_a = opts.log) !== null && _a !== void 0 ? _a : this.trainOpts.log);\n      const {\n        callback,\n        callbackPeriod,\n        errorCheckInterval\n      } = this.trainOpts;\n      if (callback && callbackPeriod !== errorCheckInterval) {\n        console.warn(`options.callbackPeriod with value of ${(callbackPeriod !== null && callbackPeriod !== void 0 ? callbackPeriod : 'undefined').toString()} does not match options.errorCheckInterval with value of ${(errorCheckInterval !== null && errorCheckInterval !== void 0 ? errorCheckInterval : 'undefined').toString()}, if logging error, it will repeat.  These values may need to match`);\n      }\n    }\n    _connectOptionsLayers() {\n      const {\n        inputLayerIndex,\n        outputLayerIndex,\n        layers\n      } = this.options;\n      if (!layers) throw new Error('this.options.layers in unexpected state');\n      if (typeof inputLayerIndex !== 'number') throw new Error('inputLayerIndex not a number');\n      if (typeof outputLayerIndex !== 'number') throw new Error('inputLayerIndex not a number');\n      const inputLayer = layers[inputLayerIndex];\n      if (!inputLayer) {\n        throw new Error('inputLayer not found in this.options.layers');\n      }\n      const outputLayer = layers[outputLayerIndex];\n      if (!outputLayer) {\n        throw new Error('outputLayer not found in this.options.layers');\n      }\n      this._inputLayer = inputLayer;\n      this._hiddenLayers = layers.slice(inputLayerIndex, outputLayerIndex - inputLayerIndex);\n      this._outputLayer = outputLayer;\n      return layers;\n    }\n    _connectNewLayers() {\n      const {\n        inputLayer,\n        outputLayer\n      } = this.options;\n      if (!inputLayer) throw new Error('inputLayer not defined');\n      const layers = [];\n      this._inputLayer = inputLayer();\n      const hiddenLayers = this._connectHiddenLayers(this._inputLayer);\n      if (!outputLayer) throw new Error('outputLayer not defined');\n      this._outputLayer = outputLayer(hiddenLayers[hiddenLayers.length - 1], hiddenLayers.length);\n      layers.push(this._inputLayer);\n      layers.push(...hiddenLayers);\n      layers.push(this._outputLayer);\n      return flattenLayers(layers);\n    }\n    _connectHiddenLayers(previousLayer) {\n      this._hiddenLayers = [];\n      const result = [];\n      const {\n        hiddenLayers\n      } = this.options;\n      if (!hiddenLayers) throw new Error('hiddenLayers not defined');\n      for (let i = 0; i < hiddenLayers.length; i++) {\n        const hiddenLayer = hiddenLayers[i](previousLayer, i);\n        result.push(hiddenLayer);\n        this._hiddenLayers.push(hiddenLayer);\n        previousLayer = hiddenLayer;\n      }\n      return result;\n    }\n    initialize() {\n      this.layers = this.options.layers ? this._connectOptionsLayers() : this._connectNewLayers();\n      this.initializeLayers(this.layers);\n      this._model = this.layers.filter(l => l instanceof Model);\n    }\n    initializeLayers(layers) {\n      var _a, _b;\n      for (let i = 0; i < layers.length; i++) {\n        const layer = layers[i];\n        // TODO: optimize for when training or just running\n        layer.setupKernels(true);\n        if (layer instanceof Model && layer.praxis === null && typeof this.options.initPraxis === 'function') {\n          layer.praxis = this.options.initPraxis(layer, (_b = (_a = layer.settings.praxisOpts) !== null && _a !== void 0 ? _a : this.options.praxisOpts) !== null && _b !== void 0 ? _b : {});\n          layer.praxis.setupKernels();\n        }\n      }\n      const lastLayer = layers[layers.length - 1];\n      this.meanSquaredError = new MeanSquaredError({\n        width: lastLayer.width,\n        height: lastLayer.height\n      });\n    }\n    run(input) {\n      let typeSafeInput;\n      if (Array.isArray(input) || input.buffer) {\n        typeSafeInput = input;\n      } else {\n        if (this.inputLookup) {\n          typeSafeInput = lookup.toArray(this.inputLookup, input, this.inputLookupLength);\n        } else {\n          throw new Error('input is incompatible with net');\n        }\n      }\n      let output = this.runInput(typeSafeInput);\n      if (output instanceof gpuBrowser.Texture) {\n        output = output.toArray();\n      }\n      if (this.outputLookup) {\n        return lookup.toObject(this.outputLookup, output);\n      }\n      return output;\n    }\n    runInput(input) {\n      if (!this.layers) throw new Error('not initialized');\n      this.layers[0].predict(input);\n      for (let i = 1; i < this.layers.length; i++) {\n        this.layers[i].predict();\n      }\n      return this.layers[this.layers.length - 1].weights;\n    }\n    train(data, options = {}) {\n      const {\n        preparedData,\n        status,\n        endTime\n      } = this._prepTraining(data, options);\n      let continueTicking = true;\n      const calculateError = () => this._calculateTrainingError(preparedData);\n      const trainPatterns = () => this._trainPatterns(preparedData);\n      while (continueTicking) {\n        continueTicking = this._trainingTick(status, endTime, calculateError, trainPatterns);\n      }\n      return status;\n    }\n    async trainAsync(data, options = {}) {\n      const {\n        preparedData,\n        status,\n        endTime\n      } = this._prepTraining(data, options);\n      return await new Promise((resolve, reject) => {\n        try {\n          const calculateError = () => this._calculateTrainingError(preparedData);\n          const trainPatterns = () => this._trainPatterns(preparedData);\n          const thawedTrain = new browser.Thaw(new Array(this.trainOpts.iterations), {\n            delay: true,\n            each: () => this._trainingTick(status, endTime, calculateError, trainPatterns) || thawedTrain.stop(),\n            done: () => resolve(status)\n          });\n          thawedTrain.tick();\n        } catch (trainError) {\n          reject(trainError);\n        }\n      });\n    }\n    _trainingTick(status, endTime, calculateError, trainPatterns) {\n      const {\n        trainOpts\n      } = this;\n      if (status.iterations >= trainOpts.iterations || status.error <= trainOpts.errorThresh || Date.now() >= endTime) {\n        return false;\n      }\n      if (typeof trainOpts.log === 'function' && status.iterations % trainOpts.logPeriod === 0) {\n        status.error = calculateError();\n        trainOpts.log(`iterations: ${status.iterations}, training error: ${status.error}`);\n      } else if (status.iterations % trainOpts.errorCheckInterval === 0) {\n        status.error = calculateError();\n      } else {\n        trainPatterns();\n      }\n      if (trainOpts.callback && status.iterations % trainOpts.callbackPeriod === 0) {\n        trainOpts.callback(Object.assign(status));\n      }\n      status.iterations++;\n      return true;\n    }\n    _prepTraining(data, options) {\n      this._updateTrainingOptions(options);\n      const formattedData = this.formatData(data);\n      const endTime = this.trainOpts.timeout ? Date.now() + this.trainOpts.timeout : 0;\n      const status = {\n        error: 1,\n        iterations: 0\n      };\n      this.verifyIsInitialized();\n      return {\n        preparedData: this.transferData(formattedData),\n        status,\n        endTime\n      };\n    }\n    verifyIsInitialized() {\n      if (!this._model) {\n        this.initialize();\n      }\n    }\n    _calculateTrainingError(preparedData) {\n      let sum = new Float32Array([0]);\n      const meanSquaredError = this.meanSquaredError;\n      for (let i = 0; i < preparedData.length; ++i) {\n        const prevSum = sum;\n        const error = this._trainPattern(preparedData[i].input, preparedData[i].output, true);\n        sum = meanSquaredError.add(sum, error);\n        release(error);\n        release(prevSum);\n      }\n      const result = meanSquaredError.divide(preparedData.length, sum);\n      release(sum);\n      if (result instanceof gpuBrowser.Texture) {\n        const resultArray = result.toArray();\n        release(result);\n        return resultArray[0];\n      }\n      return result[0];\n    }\n    /**\r\n     * @param data\r\n     * @private\r\n     */\n    _trainPatterns(data) {\n      for (let i = 0; i < data.length; ++i) {\n        this._trainPattern(data[i].input, data[i].output, false);\n      }\n    }\n    _trainPattern(input, target, logErrorRate) {\n      var _a;\n      // forward propagate\n      this.runInput(input);\n      // back propagate\n      this._calculateDeltas(target);\n      this.adjustWeights();\n      if (logErrorRate) {\n        if (!((_a = this._outputLayer) === null || _a === void 0 ? void 0 : _a.errors)) {\n          throw new Error('outputLayer.errors not defined');\n        }\n        return this.meanSquaredError.calculate(this._outputLayer.errors);\n      }\n      return null;\n    }\n    _calculateDeltas(target) {\n      const layers = this.layers;\n      for (let i = layers.length - 1; i > -1; i--) {\n        layers[i].compare(target);\n      }\n    }\n    /**\r\n     *\r\n     */\n    adjustWeights() {\n      const _model = this._model;\n      for (let i = 0; i < _model.length; i++) {\n        _model[i].learn(this.trainOpts.learningRate);\n      }\n    }\n    /**\r\n     *\r\n     * @param data\r\n     * @returns {*}\r\n     */\n    formatData(data) {\n      if (!Array.isArray(data)) {\n        // turn stream datum into array\n        const tmp = [];\n        tmp.push(data);\n        data = tmp;\n      }\n      // turn sparse hash input into arrays with 0s as filler\n      const inputDatumCheck = data[0].input;\n      let formattedData;\n      if (Array.isArray(data) && !Array.isArray(inputDatumCheck) && !(inputDatumCheck instanceof Float32Array)) {\n        if (!this.inputLookup) {\n          const lookupTable = new LookupTable(data, 'input');\n          this.inputLookup = lookupTable.table;\n          this.inputLookupLength = lookupTable.length;\n        }\n        formattedData = data.map(datumParam => {\n          const array = lookup.toArray(this.inputLookup, datumParam.input, this.inputLookupLength);\n          return {\n            input: array\n          };\n        }, this);\n      } else {\n        formattedData = data;\n      }\n      const outputDatumCheck = data[0].output;\n      if (!Array.isArray(outputDatumCheck) && !(outputDatumCheck instanceof Float32Array)) {\n        if (!this.outputLookup) {\n          const lookupTable = new LookupTable(data, 'output');\n          this.outputLookup = lookupTable.table;\n          this.outputLookupLength = lookupTable.length;\n        }\n        formattedData = data.map((datumParam, index) => {\n          const array = lookup.toArray(this.outputLookup, datumParam.output, this.inputLookupLength);\n          return {\n            input: formattedData[index].input,\n            output: array\n          };\n        }, this);\n      }\n      return formattedData;\n    }\n    transferData(formattedData) {\n      const transferredData = new Array(formattedData.length);\n      const transferInput = makeKernel(function (value) {\n        return value[this.thread.x];\n      }, {\n        output: [formattedData[0].input.length],\n        immutable: true\n      });\n      const transferOutput = makeKernel(function (value) {\n        return value[this.thread.x];\n      }, {\n        output: [formattedData[0].output.length],\n        immutable: true\n      });\n      for (let i = 0; i < formattedData.length; i++) {\n        const formattedDatum = formattedData[i];\n        transferredData[i] = {\n          input: transferInput(formattedDatum.input),\n          output: transferOutput(formattedDatum.output)\n        };\n      }\n      return transferredData;\n    }\n    /**\r\n     *\r\n     * @param data\r\n     * @returns {\r\n     *  {\r\n     *    error: number,\r\n     *    misclasses: Array\r\n     *  }\r\n     * }\r\n     */\n    test() {\n      throw new Error(`${this.constructor.name}-test is not yet implemented`);\n    }\n    /**\r\n     *\r\n     */\n    toJSON() {\n      var _a;\n      if (!this.layers) {\n        this.initialize();\n      }\n      if (!this._model || !this.layers || !this._inputLayer || !this._hiddenLayers || !this._outputLayer) {\n        throw new Error('network is not initialized');\n      }\n      const jsonLayers = [];\n      for (let i = 0; i < this.layers.length; i++) {\n        const layer = this.layers[i];\n        const jsonLayer = layer.toJSON();\n        if (layer.hasOwnProperty('inputLayer')) {\n          jsonLayer.inputLayerIndex = this.layers.indexOf(layer.inputLayer);\n        } else if (layer.hasOwnProperty('inputLayer1') && layer.hasOwnProperty('inputLayer2')) {\n          jsonLayer.inputLayer1Index = this.layers.indexOf(layer.inputLayer1);\n          jsonLayer.inputLayer2Index = this.layers.indexOf(layer.inputLayer2);\n        }\n        jsonLayers.push(jsonLayer);\n      }\n      return {\n        type: this.constructor.name,\n        sizes: (_a = this.options.sizes) !== null && _a !== void 0 ? _a : [this._inputLayer.height].concat(this._hiddenLayers.map(l => l.height)).concat([this._outputLayer.height]),\n        outputLayerIndex: this.layers.indexOf(this._outputLayer),\n        layers: jsonLayers,\n        inputLayerIndex: this.layers.indexOf(this._inputLayer)\n      };\n    }\n    static fromJSON(json, getLayer) {\n      var _a, _b, _c, _d;\n      const jsonLayers = json.layers;\n      const layers = [];\n      const inputLayer = getLayer ? (_a = layerFromJSON(jsonLayers[0])) !== null && _a !== void 0 ? _a : getLayer(jsonLayers[0]) : layerFromJSON(jsonLayers[0]);\n      if (!inputLayer) throw new Error('unable to find layer');\n      layers.push(inputLayer);\n      for (let i = 1; i < jsonLayers.length; i++) {\n        const jsonLayer = jsonLayers[i];\n        if (typeof jsonLayer.inputLayerIndex === 'undefined' && typeof jsonLayer.inputLayer1Index === 'undefined' && typeof jsonLayer.inputLayer2Index === 'undefined') {\n          const layer = getLayer ? (_b = layerFromJSON(jsonLayer)) !== null && _b !== void 0 ? _b : getLayer(jsonLayer) : layerFromJSON(jsonLayer);\n          if (!layer) throw new Error('unable to find layer');\n          layers.push(layer);\n        } else if (typeof jsonLayer.inputLayerIndex === 'number') {\n          const inputLayer = layers[jsonLayer.inputLayerIndex];\n          if (!inputLayer) {\n            throw new Error('inputLayer1 not found');\n          }\n          const layer = getLayer ? (_c = layerFromJSON(jsonLayer, inputLayer)) !== null && _c !== void 0 ? _c : getLayer(jsonLayer, inputLayer) : layerFromJSON(jsonLayer, inputLayer);\n          if (!layer) throw new Error('unable to find layer');\n          layers.push(layer);\n        } else {\n          if (typeof jsonLayer.inputLayer1Index !== 'number') {\n            throw new Error('Cannot create network from provided JSON. inputLayer1Index not defined.');\n          }\n          if (typeof jsonLayer.inputLayer2Index !== 'number') {\n            throw new Error('Cannot create network from provided JSON. inputLayer2Index not defined.');\n          }\n          const inputLayer1 = layers[jsonLayer.inputLayer1Index];\n          const inputLayer2 = layers[jsonLayer.inputLayer2Index];\n          if (inputLayer1 === undefined) throw new Error(`Cannot create network from provided JSON. layer of index ${jsonLayer.inputLayer1Index} not found.`);\n          if (inputLayer2 === undefined) throw new Error(`Cannot create network from provided JSON. layer of index ${jsonLayer.inputLayer2Index} not found.`);\n          const layer = getLayer ? (_d = layerFromJSON(jsonLayer, inputLayer1, inputLayer2)) !== null && _d !== void 0 ? _d : getLayer(jsonLayer, inputLayer1, inputLayer2) : layerFromJSON(jsonLayer, inputLayer1, inputLayer2);\n          if (!layer) throw new Error('unable to find layer');\n          layers.push(layer);\n        }\n      }\n      return new this({\n        ...json,\n        layers\n      });\n    }\n    /**\r\n     *\r\n     * @returns {Function}\r\n     */\n    toFunction() {\n      throw new Error(`${this.constructor.name}-toFunction is not yet implemented`);\n    }\n  }\n  function likely(input, net) {\n    if (!net) {\n      throw new TypeError(`Required parameter 'net' is of type ${typeof net}. Must be of type 'brain.NeuralNetwork'`);\n    }\n    const output = net.run(input);\n    let maxProp = null;\n    let maxValue = -1;\n    Object.entries(output).forEach(([key, value]) => {\n      if (typeof value !== 'undefined' && typeof value === 'number' && value > maxValue) {\n        maxProp = key;\n        maxValue = value;\n      }\n    });\n    return maxProp;\n  }\n  class RecurrentConnection extends Internal {\n    constructor() {\n      super(...arguments);\n      this.settings = {};\n      this.layer = null;\n    }\n    setLayer(layer) {\n      this.layer = layer;\n    }\n    get width() {\n      if (!this.layer) throw new Error('layer not set');\n      return this.layer.width;\n    }\n    set width(value) {\n      throw new Error(`${this.constructor.name}-width is not yet implemented`);\n    }\n    get height() {\n      if (!this.layer) throw new Error('layer not set');\n      return this.layer.height;\n    }\n    set height(value) {\n      throw new Error(`${this.constructor.name}-height is not yet implemented`);\n    }\n    get deltas() {\n      if (!this.layer) throw new Error('layer not set');\n      return this.layer.deltas;\n    }\n    set deltas(deltas) {\n      if (!this.layer) throw new Error('layer not set');\n      release(this.layer.deltas);\n      this.layer.deltas = deltas;\n    }\n    get weights() {\n      if (!this.layer) throw new Error('layer not set');\n      return this.layer.weights;\n    }\n    set weights(weights) {\n      if (!this.layer) throw new Error('layer not set');\n      release(this.layer.weights);\n      this.layer.weights = weights;\n    }\n    predict() {\n      // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n    }\n    compare() {\n      // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n    }\n    learn() {\n      throw new Error('no longer using');\n    }\n    setupKernels() {\n      // throw new Error(\n      //   `${this.constructor.name}-setupKernels is not yet implemented`\n      // )\n    }\n    reuseKernels() {\n      // throw new Error(\n      //   `${this.constructor.name}-reuseKernels is not yet implemented`\n      // )\n    }\n  }\n  class Recurrent extends FeedForward {\n    // TODO: use generics in extend\n    constructor(options = {}) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      super(options);\n      this.trainOpts = {};\n      this._outputConnection = null;\n      this._layerSets = [];\n      this._hiddenLayerOutputIndices = [];\n      this._model = null;\n    }\n    _connectLayers() {\n      if (!this.options.inputLayer) {\n        throw new Error('inputLayer not found');\n      }\n      if (!this.options.outputLayer) {\n        throw new Error('outputLayer not found');\n      }\n      const inputLayer = this.options.inputLayer();\n      const hiddenLayers = this._connectHiddenLayers(inputLayer);\n      const outputLayer = this.options.outputLayer(hiddenLayers[hiddenLayers.length - 1], -1);\n      return {\n        inputLayer,\n        hiddenLayers,\n        outputLayer\n      };\n    }\n    _connectLayersDeep() {\n      const layers = [];\n      const previousLayers = this._layerSets[this._layerSets.length - 1];\n      let usedHiddenLayerOutputIndex = 0;\n      function findInputLayer(inputLayer) {\n        const index = previousLayers.indexOf(inputLayer);\n        if (index < 0) throw new Error('unable to find layer');\n        return layers[index];\n      }\n      function layerSettings(layer) {\n        return {\n          ...layer.settings,\n          weights: null,\n          deltas: null,\n          praxis: null\n        };\n      }\n      for (let i = 0; i < previousLayers.length; i++) {\n        const previousLayer = previousLayers[i];\n        let layer;\n        if (previousLayer instanceof Activation) {\n          layer = new previousLayer.constructor(findInputLayer(previousLayer.inputLayer), layerSettings(previousLayer));\n        } else if (previousLayer instanceof EntryPoint) {\n          layer = new previousLayer.constructor(layerSettings(previousLayer));\n        } else if (previousLayer instanceof Filter) {\n          layer = new previousLayer.constructor(layerSettings(previousLayer.inputLayer), findInputLayer(previousLayer.inputLayer));\n        } else if (previousLayer instanceof Internal) {\n          const previousHiddenLayerOutput = previousLayers[this._hiddenLayerOutputIndices[usedHiddenLayerOutputIndex++]];\n          if (previousLayer instanceof RecurrentConnection) {\n            throw new Error('unfinished');\n          } else if (previousLayer instanceof RecurrentInput) {\n            layer = new RecurrentInput(previousHiddenLayerOutput);\n          } else if (previousLayer instanceof RecurrentZeros) {\n            layer = new RecurrentInput(previousHiddenLayerOutput);\n          } else {\n            throw new Error(`hidden layer ${previousLayer.constructor.name} extends unknown hidden layer`);\n          }\n        } else if (previousLayer instanceof InternalModel || previousLayer instanceof Model) {\n          layer = previousLayer;\n        } else if (previousLayer instanceof Modifier) {\n          layer = new previousLayer.constructor(findInputLayer(previousLayer.inputLayer), layerSettings(previousLayer.inputLayer));\n        } else if (previousLayer instanceof Operator) {\n          layer = new previousLayer.constructor(findInputLayer(previousLayer.inputLayer1), findInputLayer(previousLayer.inputLayer2), layerSettings(previousLayer));\n        } else if (previousLayer instanceof Target) {\n          layer = new previousLayer.constructor(layerSettings(previousLayer), findInputLayer(previousLayer.inputLayer));\n        } else {\n          throw new Error(`hidden layer ${previousLayer.constructor.name} extends unknown hidden layer`);\n        }\n        layers.push(layer);\n      }\n      return layers;\n    }\n    _connectHiddenLayers(previousLayer) {\n      const hiddenLayers = [];\n      if (!this.options.hiddenLayers) throw new Error('hiddenLayers not defined');\n      for (let i = 0; i < this.options.hiddenLayers.length; i++) {\n        const recurrentInput = new RecurrentZeros();\n        const hiddenLayer = this.options.hiddenLayers[i](previousLayer, recurrentInput, i);\n        previousLayer = hiddenLayer;\n        hiddenLayers.push(hiddenLayer);\n      }\n      return hiddenLayers;\n    }\n    initialize() {\n      this._outputConnection = new RecurrentConnection();\n      let layerSet;\n      if (this.options.layers) {\n        layerSet = this._connectOptionsLayers();\n      } else {\n        const {\n          inputLayer,\n          hiddenLayers,\n          outputLayer\n        } = this._connectLayers();\n        layerSet = flattenLayers([inputLayer, ...hiddenLayers, outputLayer]);\n        this._hiddenLayerOutputIndices = hiddenLayers.map(l => layerSet.indexOf(l));\n        this._inputLayer = inputLayer;\n        this._hiddenLayers = hiddenLayers;\n        this._outputLayer = outputLayer;\n      }\n      this.layers = layerSet;\n      this._layerSets = [layerSet];\n      this._model = layerSet.filter(l => l instanceof Model || l instanceof InternalModel);\n      this.initializeLayers(layerSet);\n    }\n    initializeDeep() {\n      const layers = this._connectLayersDeep();\n      for (let i = 0; i < layers.length; i++) {\n        const layer = layers[i];\n        layer.setupKernels(true);\n        layer.reuseKernels(this._layerSets[0][i]);\n      }\n      this._layerSets.push(layers);\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    run(inputs) {\n      while (this._layerSets.length <= inputs.length) {\n        this.initializeDeep();\n      }\n      const result = this.runInputs(inputs);\n      if (result instanceof gpuBrowser.Texture) {\n        return result.toArray();\n      }\n      return result;\n    }\n    runInput(input) {\n      throw new Error('use .runInputs()');\n    }\n    runInputs(inputs) {\n      while (this._layerSets.length < inputs.length) {\n        this.initializeDeep();\n      }\n      const max = inputs.length - 1; // last output will be compared with last index\n      for (let x = 0; x <= max; x++) {\n        const layerSet = this._layerSets[x];\n        layerSet[0].predict(inputs[x]);\n        for (let i = 1; i < layerSet.length; i++) {\n          layerSet[i].predict();\n        }\n      }\n      const lastLayerUsed = this._layerSets[max];\n      const result = lastLayerUsed[lastLayerUsed.length - 1].weights;\n      this.end();\n      return result;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    train(data, options = {}) {\n      const {\n        preparedData,\n        status,\n        endTime\n      } = this._prepTraining(data, options);\n      let continueTicking = true;\n      const calculateError = () => this._calculateTrainingError(preparedData);\n      const trainPatters = () => this._trainPatterns(preparedData);\n      while (continueTicking) {\n        continueTicking = this._trainingTick(status, endTime, calculateError, trainPatters);\n      }\n      return status;\n    }\n    end() {\n      const x = this._layerSets.length - 1;\n      const lastLayerSet = this._layerSets[x];\n      lastLayerSet[0].predict([new Float32Array([0])]);\n      for (let i = 1; i < lastLayerSet.length; i++) {\n        lastLayerSet[i].predict();\n      }\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    transferData(formattedData) {\n      return formattedData;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    _prepTraining(data, options) {\n      this._updateTrainingOptions(options);\n      const endTime = this.trainOpts.timeout ? Date.now() + this.trainOpts.timeout : 0;\n      const status = {\n        error: 1,\n        iterations: 0\n      };\n      this.verifyIsInitialized();\n      return {\n        preparedData: this.transferData(data),\n        status,\n        endTime\n      };\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    _calculateTrainingError(data) {\n      if (!this.meanSquaredError) {\n        throw new Error('this.meanSquaredError not setup');\n      }\n      let sum = new Float32Array(1);\n      for (let i = 0; i < data.length; ++i) {\n        const prevSum = sum;\n        const error = this._trainPattern(data[i], true);\n        sum = this.meanSquaredError.add(sum, error);\n        release(error);\n        release(prevSum);\n      }\n      const result = this.meanSquaredError.divide(data.length, sum);\n      release(sum);\n      if (result instanceof gpuBrowser.Texture) {\n        const resultArray = result.toArray();\n        return resultArray[0];\n      }\n      return result[0];\n    }\n    // TODO: more types\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    formatData(data) {\n      return data;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    _calculateDeltas(target) {\n      const lastLayerSet = this._layerSets[this._layerSets.length - 1];\n      // Iterate from the second to last layer backwards, propagating 0's\n      for (let i = lastLayerSet.length - 2; i >= 0; i--) {\n        lastLayerSet[i].compare();\n      }\n      for (let x = target.length - 2; x >= 0; x--) {\n        const layerSet = this._layerSets[x];\n        layerSet[layerSet.length - 1].compare(target[x + 1]);\n        for (let i = layerSet.length - 2; i >= 0; i--) {\n          layerSet[i].compare();\n        }\n      }\n    }\n    adjustWeights() {\n      var _a;\n      const _model = this._model;\n      for (let i = 0; i < _model.length; i++) {\n        _model[i].learn((_a = this.options.learningRate) !== null && _a !== void 0 ? _a : 0);\n      }\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    _trainPatterns(data) {\n      for (let i = 0; i < data.length; ++i) {\n        this._trainPattern(data[i], false);\n      }\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    _trainPattern(inputs, logErrorRate) {\n      // forward propagate\n      this.runInputs(inputs);\n      // back propagate\n      this._calculateDeltas(inputs);\n      this.adjustWeights();\n      if (logErrorRate) {\n        if (!this.meanSquaredError) {\n          throw new Error('this.meanSquaredError not setup');\n        }\n        let error = new Float32Array(1);\n        for (let i = 0, max = inputs.length - 2; i <= max; i++) {\n          const layerSet = this._layerSets[i];\n          const lastLayer = layerSet[layerSet.length - 1];\n          const prevError = error;\n          error = this.meanSquaredError.addAbsolute(prevError, lastLayer.errors);\n          release(prevError);\n        }\n        return clone(this.meanSquaredError.divide(inputs.length, error));\n      }\n      return null;\n    }\n  }\n\n  /**\r\n   * A matrix\r\n   */\n  class Matrix {\n    constructor(rows, columns) {\n      this.rows = 0;\n      this.columns = 0;\n      if (rows) this.rows = rows;\n      if (columns) this.columns = columns;\n      this.weights = zeros$1(this.rows * this.columns);\n      this.deltas = zeros$1(this.rows * this.columns);\n    }\n    getWeight(row, col) {\n      // slow but careful accessor function\n      // we want row-major order\n      const ix = this.columns * row + col;\n      if (ix < 0 || ix >= this.weights.length) {\n        throw new Error('get accessor is skewed');\n      }\n      return this.weights[ix];\n    }\n    setWeight(row, col, v) {\n      // slow but careful accessor function\n      const ix = this.columns * row + col;\n      if (ix < 0 || ix >= this.weights.length) {\n        throw new Error('set accessor is skewed');\n      }\n      this.weights[ix] = v;\n      return this;\n    }\n    getDelta(row, col) {\n      // slow but careful accessor function\n      // we want row-major order\n      const ix = this.columns * row + col;\n      if (ix < 0 || ix >= this.deltas.length) {\n        throw new Error('get accessor is skewed');\n      }\n      return this.deltas[ix];\n    }\n    setDelta(row, col, v) {\n      // slow but careful accessor function\n      const ix = this.columns * row + col;\n      if (ix < 0 || ix >= this.weights.length) {\n        throw new Error('set accessor is skewed');\n      }\n      this.deltas[ix] = v;\n      return this;\n    }\n    toJSON() {\n      return {\n        rows: this.rows,\n        columns: this.columns,\n        weights: Array.from(this.weights.slice(0))\n      };\n    }\n    static fromJSON(json) {\n      const matrix = new Matrix(json.rows, json.columns);\n      for (let i = 0, max = json.rows * json.columns; i < max; i++) {\n        matrix.weights[i] = json.weights[i]; // copy over weights\n      }\n      return matrix;\n    }\n    static fromArray(weights) {\n      const matrix = new Matrix(weights.length, weights[0].length);\n      matrix.fromArray(weights);\n      return matrix;\n    }\n    deltasToArray() {\n      return this.toArray('deltas');\n    }\n    weightsToArray() {\n      return this.toArray('weights');\n    }\n    toArray(prop = 'weights') {\n      const result = new Array(this.rows);\n      this.iterate({\n        row: rowIndex => {\n          result[rowIndex] = new Array(this.columns);\n        },\n        column: (rowIndex, columnIndex) => {\n          if (prop === 'weights') {\n            result[rowIndex][columnIndex] = this.getWeight(rowIndex, columnIndex);\n          } else if (prop === 'deltas') {\n            result[rowIndex][columnIndex] = this.getDelta(rowIndex, columnIndex);\n          }\n        }\n      });\n      return result;\n    }\n    fromArray(array, prop = 'weights') {\n      if (array.length !== this.rows) {\n        throw new Error('rows do not match');\n      }\n      if (array[0].length !== this.columns) {\n        throw new Error('columns do not match');\n      }\n      this.iterate({\n        column: (rowIndex, columnIndex) => {\n          const value = array[rowIndex][columnIndex];\n          if (typeof value !== 'number') {\n            throw new Error('value not number');\n          }\n          if (prop === 'weights') {\n            this.setWeight(rowIndex, columnIndex, value);\n          } else if (prop === 'deltas') {\n            this.setDelta(rowIndex, columnIndex, value);\n          }\n        }\n      });\n      return this;\n    }\n    iterate(callbacks) {\n      const rows = this.rows;\n      const columns = this.columns;\n      for (let rowIndex = 0; rowIndex < rows; rowIndex++) {\n        if (callbacks.row) {\n          callbacks.row(rowIndex);\n        }\n        for (let columnIndex = 0; columnIndex < columns; columnIndex++) {\n          if (callbacks.column) {\n            callbacks.column(rowIndex, columnIndex);\n          }\n        }\n      }\n      return this;\n    }\n  }\n\n  /** return Matrix but filled with random numbers from gaussian\r\n   */\n  class RandomMatrix extends Matrix {\n    constructor(rows, columns, std) {\n      super(rows, columns);\n      this.std = std;\n      for (let i = 0, max = this.weights.length; i < max; i++) {\n        this.weights[i] = randomFloat(-std, std);\n      }\n    }\n  }\n  class DataFormatter {\n    constructor(values, maxThreshold = 0) {\n      this.values = values;\n      this.indexTable = {};\n      this.characterTable = {};\n      this.characters = [];\n      this.specialIndexes = [];\n      this.isSetup = false;\n      if (values === undefined) return;\n      this.setup(values, maxThreshold);\n    }\n    setup(values, maxThreshold = 0) {\n      if (this.isSetup) throw new Error('DataFormatter is already setup');\n      this.values = values;\n      // go over all characters and keep track of all unique ones seen\n      // count up all characters\n      this.buildCharactersFromIterable(values);\n      this.buildTables(maxThreshold);\n      if (values[0].input) {\n        this.addInputOutput();\n      }\n      this.addUnrecognized();\n      this.isSetup = true;\n    }\n    buildCharactersFromIterable(values) {\n      const tempCharactersTable = {};\n      for (let dataFormatterIndex = 0, dataFormatterLength = values.length; dataFormatterIndex < dataFormatterLength; dataFormatterIndex++) {\n        const characters = values[dataFormatterIndex];\n        // if (typeof characters === 'string') {\n        //   const character = characters;\n        //   if (tempCharactersTable.hasOwnProperty(character)) continue;\n        //   tempCharactersTable[character] = true;\n        //   this.characters.push(character);\n        if (characters.hasOwnProperty('length')) {\n          const iteratable = characters;\n          for (let characterIndex = 0, charactersLength = iteratable.length; characterIndex < charactersLength; characterIndex++) {\n            const character = iteratable[characterIndex];\n            if (tempCharactersTable.hasOwnProperty(character)) continue;\n            tempCharactersTable[character] = true;\n            this.characters.push(character);\n          }\n        } else if (typeof characters === 'number') {\n          if (tempCharactersTable.hasOwnProperty(characters)) continue;\n          tempCharactersTable[characters] = true;\n          this.characters.push(characters);\n        } else if (typeof characters === 'boolean') {\n          const character = characters.toString();\n          if (tempCharactersTable.hasOwnProperty(character)) continue;\n          tempCharactersTable[character] = true;\n          this.characters.push(character);\n        } else if (Array.isArray(characters) && typeof characters[0] === 'string') {\n          for (let i = 0; i < characters.length; i++) {\n            const character = characters[i];\n            if (tempCharactersTable.hasOwnProperty(character)) continue;\n            tempCharactersTable[character] = true;\n            this.characters.push(character);\n          }\n        } else if (Array.isArray(characters) && (typeof characters[0] === 'number' || typeof characters[0] === 'boolean')) {\n          for (let i = 0; i < characters.length; i++) {\n            const character = characters[i].toString();\n            if (tempCharactersTable.hasOwnProperty(dataFormatterIndex)) continue;\n            tempCharactersTable[character] = true;\n            this.characters.push(character);\n          }\n        } else if (characters.hasOwnProperty('input') && characters.hasOwnProperty('output')) {\n          const {\n            input,\n            output\n          } = characters;\n          if (Array.isArray(input)) {\n            this.addCharacters(input, tempCharactersTable);\n          } else {\n            this.addCharacters(input.toString(), tempCharactersTable);\n          }\n          if (Array.isArray(output)) {\n            this.addCharacters(output, tempCharactersTable);\n          } else {\n            this.addCharacters(output.toString(), tempCharactersTable);\n          }\n        } else {\n          throw new Error('Unhandled value');\n        }\n      }\n    }\n    addCharacters(characters, charactersTable) {\n      for (let i = 0; i < characters.length; i++) {\n        const character = characters[i].toString();\n        if (charactersTable.hasOwnProperty(character)) continue;\n        charactersTable[character] = true;\n        this.characters.push(character);\n      }\n    }\n    buildTables(maxThreshold) {\n      // filter by count threshold and create pointers\n      const charactersLength = this.characters.length;\n      for (let characterIndex = 0; characterIndex < charactersLength; characterIndex++) {\n        const character = this.characters[characterIndex];\n        if (characterIndex >= maxThreshold) {\n          // add character to dataFormatter\n          this.indexTable[character] = characterIndex;\n          this.characterTable[characterIndex] = character;\n        }\n      }\n    }\n    toIndexes(value, maxThreshold = 0) {\n      const result = [];\n      const {\n        indexTable\n      } = this;\n      switch (typeof value) {\n        case 'number':\n        case 'boolean':\n          value = value.toString();\n      }\n      for (let i = 0, max = value.length; i < max; i++) {\n        const character = value[i].toString();\n        let index = indexTable[character];\n        if (index === undefined) {\n          if (indexTable.unrecognized) {\n            index = indexTable.unrecognized;\n          } else {\n            throw new Error(`unrecognized character \"${character}\"`);\n          }\n        }\n        if (index < maxThreshold) continue;\n        result.push(index);\n      }\n      return result;\n    }\n    toIndexesInputOutput(input, output, maxThreshold = 0) {\n      const result = this.toIndexesValue(input, maxThreshold, true);\n      if (typeof output === 'undefined') return result;\n      return result.concat(this.toIndexesValue(output, maxThreshold, false));\n    }\n    toIndexesValue(value, maxThreshold, isInput) {\n      if (typeof value === 'string') {\n        value = value.split('');\n      } else if (typeof value === 'number' || typeof value === 'boolean') {\n        value = value.toString().split('');\n      } else if (Array.isArray(value) && (typeof value[0] === 'number' || typeof value[0] === 'boolean' || typeof value[0] === 'string')) {\n        value = value.map(v => v.toString());\n      } else {\n        throw new Error('unrecognized value');\n      }\n      if (isInput) {\n        value = value.concat(['stop-input', 'start-output']);\n      }\n      return this.toIndexes(value, maxThreshold);\n    }\n    toCharacters(indices, maxThreshold = 0) {\n      const result = [];\n      const {\n        indexTable,\n        characterTable\n      } = this;\n      for (let i = 0, max = indices.length; i < max; i++) {\n        const index = indices[i];\n        if (index < maxThreshold) continue;\n        let character = characterTable[index];\n        if (character === undefined) {\n          if (indexTable.unrecognized) {\n            character = characterTable[indexTable.unrecognized];\n          } else {\n            throw new Error(`unrecognized index \"${index}\"`);\n          }\n        } else if (character !== null) {\n          result.push(character.toString());\n        }\n      }\n      return result;\n    }\n    toString(indices, maxThreshold) {\n      return this.toCharacters(indices, maxThreshold).join('');\n    }\n    addInputOutput() {\n      this.addSpecial('stop-input');\n      this.addSpecial('start-output');\n    }\n    addUnrecognized() {\n      this.addSpecial('unrecognized');\n    }\n    static fromAllPrintable(maxThreshold, values = ['\\n']) {\n      for (let i = 32; i <= 126; i++) {\n        values.push(String.fromCharCode(i));\n      }\n      return new DataFormatter(values, maxThreshold);\n    }\n    static fromAllPrintableInputOutput(maxThreshold, values = ['\\n']) {\n      const dataFormatter = DataFormatter.fromAllPrintable(maxThreshold, values);\n      dataFormatter.addInputOutput();\n      dataFormatter.addUnrecognized();\n      return dataFormatter;\n    }\n    static fromStringInputOutput(string, maxThreshold) {\n      const values = Array.from(new Set(string)).join('');\n      const dataFormatter = new DataFormatter(values.split(''), maxThreshold);\n      dataFormatter.addInputOutput();\n      dataFormatter.addUnrecognized();\n      dataFormatter.isSetup = true;\n      return dataFormatter;\n    }\n    static fromArrayInputOutput(data, maxThreshold) {\n      const values = [];\n      for (let i = 0; i < data.length; i++) {\n        const datum = data[i];\n        values.push(validateAndCast(datum.input), validateAndCast(datum.output));\n      }\n      const flatArray = Array.isArray(values) ? values.flat() : values;\n      const dataFormatter = new DataFormatter(Array.from(new Set(flatArray)), maxThreshold);\n      dataFormatter.addInputOutput();\n      dataFormatter.addUnrecognized();\n      dataFormatter.isSetup = true;\n      return dataFormatter;\n    }\n    static fromString(string, maxThreshold = 0) {\n      const values = Array.from(new Set(string)).join('');\n      return new DataFormatter(values.split(''), maxThreshold);\n    }\n    toJSON() {\n      return {\n        indexTable: this.indexTable,\n        characterTable: this.characterTable,\n        values: this.values,\n        characters: this.characters,\n        specialIndexes: this.specialIndexes\n      };\n    }\n    /** TODO: Type better, The type of json is not \"string that is a valid JSON\", it is a POJO in the shape of DataFormatter.\r\n     * this method re-hydrates the the data as an instance of DataFormatter.\r\n     */\n    static fromJSON(json) {\n      const dataFormatter = new DataFormatter();\n      dataFormatter.indexTable = json.indexTable;\n      dataFormatter.characterTable = json.characterTable;\n      dataFormatter.values = json.values;\n      dataFormatter.characters = json.characters;\n      dataFormatter.specialIndexes = json.specialIndexes;\n      dataFormatter.isSetup = true;\n      return dataFormatter;\n    }\n    addSpecial(special, character = null) {\n      const specialIndex = this.indexTable[special] = this.characters.length;\n      this.characterTable[specialIndex] = character;\n      this.specialIndexes.push(this.characters.length);\n      this.characters.push(special);\n    }\n    toFunctionString() {\n      return `\nvar characterTable = ${JSON.stringify(this.characterTable)};\nvar indexTable = ${JSON.stringify(this.indexTable)};\nvar characters = ${JSON.stringify(this.characters)};\nvar dataFormatter = {\n  toIndexes: function ${this.toIndexes.toString()},\n  toIndexesInputOutput: function ${this.toIndexesInputOutput.toString()},\n  toCharacters: function ${this.toCharacters.toString()},\n  toIndexesValue: function ${this.toIndexesValue.toString()},\n};`;\n    }\n    formatDataIn(input, output) {\n      var _a;\n      if (input === undefined) return [];\n      if (Array.isArray(input) && typeof input[0] === 'number') {\n        return input;\n      }\n      if ((_a = this.indexTable) === null || _a === void 0 ? void 0 : _a.hasOwnProperty('stop-input')) {\n        return this.toIndexesInputOutput(input, output);\n      }\n      return this.toIndexes(input);\n    }\n    formatDataOut(input, output) {\n      return this.toCharacters(output).join('');\n    }\n    format(data) {\n      if (typeof data[0] === 'number' && !Array.isArray(data[0]) && (!data[0].hasOwnProperty('input') || !data[0].hasOwnProperty('output'))) {\n        return data;\n      }\n      const result = [];\n      if (typeof data[0] === 'string' || typeof data[0] === 'number' || Array.isArray(data[0])) {\n        if (!this.isSetup) {\n          this.setup(data);\n          for (let i = 0; i < data.length; i++) {\n            result.push(this.formatDataIn(validateAndCast(data[i])));\n          }\n        } else {\n          for (let i = 0, max = data.length; i < max; i++) {\n            result.push(this.formatDataIn(data[i]));\n          }\n        }\n      } else if (data[0].input && data[0].output) {\n        if (!this.isSetup) {\n          this.setup(data);\n        }\n        for (let i = 0, max = data.length; i < max; i++) {\n          result.push(this.formatDataIn(validateAndCast(data[i].input), validateAndCast(data[i].output)));\n        }\n      } else {\n        throw new Error('unrecognized data');\n      }\n      return result;\n    }\n  }\n  function validateAndCast(value) {\n    if (typeof value === 'string') return value;\n    if (typeof value === 'number') return value.toString();\n    if (typeof value === 'boolean') return value.toString();\n    if (Array.isArray(value) && typeof value[0] === 'string') return value;\n    if (typeof value[0] === 'boolean') {\n      return value.map(v => v.toString());\n    }\n    if (typeof value[0] === 'number') {\n      return value.map(v => v.toString());\n    }\n    throw new Error('unrecognized value, expected string[], string, number[], number, boolean[], or boolean');\n  }\n  function copy(product, left) {\n    product.rows = left.rows;\n    product.columns = left.columns;\n    product.weights = left.weights.slice(0);\n    product.deltas = left.deltas.slice(0);\n  }\n\n  /**\r\n   * add {left} and {right} matrix weights into {into}\r\n   */\n  function add(product, left, right) {\n    for (let i = 0; i < left.weights.length; i++) {\n      product.weights[i] = left.weights[i] + right.weights[i];\n      product.deltas[i] = 0;\n    }\n  }\n\n  /**\r\n   * adds {from} deltas to {left} and {right} deltas\r\n   */\n  function addB(product, left, right) {\n    for (let i = 0; i < product.deltas.length; i++) {\n      left.deltas[i] = product.deltas[i];\n      right.deltas[i] = product.deltas[i];\n    }\n  }\n\n  /**\r\n   * makes matrix weights and deltas all ones\r\n   */\n  function allOnes(product) {\n    for (let i = 0; i < product.weights.length; i++) {\n      product.weights[i] = 1;\n      product.deltas[i] = 0;\n    }\n  }\n  function cloneNegative(product, left) {\n    product.rows = left.rows;\n    product.columns = left.columns;\n    product.weights = left.weights.slice(0);\n    product.deltas = left.deltas.slice(0);\n    for (let i = 0; i < left.weights.length; i++) {\n      product.weights[i] = -left.weights[i];\n      product.deltas[i] = 0;\n    }\n  }\n\n  /**\r\n   * multiply {left} and {right} matrix weights to {into}\r\n   */\n  function multiply(product, left, right) {\n    const leftRows = left.rows;\n    const leftColumns = left.columns;\n    const rightColumns = right.columns;\n    // loop over rows of left\n    for (let leftRow = 0; leftRow < leftRows; leftRow++) {\n      const leftRowBase = leftColumns * leftRow;\n      const rightRowBase = rightColumns * leftRow;\n      // loop over cols of right\n      for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n        // dot product loop\n        let dot = 0;\n        // loop over columns of left\n        for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n          const rightColumnBase = rightColumns * leftColumn;\n          const leftIndex = leftRowBase + leftColumn;\n          const rightIndex = rightColumnBase + rightColumn;\n          dot += left.weights[leftIndex] * right.weights[rightIndex];\n          left.deltas[leftIndex] = 0;\n          right.deltas[rightIndex] = 0;\n        }\n        product.weights[rightRowBase + rightColumn] = dot;\n      }\n    }\n  }\n\n  /**\r\n   * multiplies {from} deltas to {left} and {right}\r\n   */\n  function multiplyB(product, left, right) {\n    const leftRows = left.rows;\n    const leftColumns = left.columns;\n    const rightColumns = right.columns;\n    // loop over rows of left\n    for (let leftRowRoot = 0; leftRowRoot < leftRows; leftRowRoot++) {\n      const leftRowBase = leftColumns * leftRowRoot;\n      const rightRowBase = rightColumns * leftRowRoot;\n      // loop over cols of right\n      for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n        // loop over columns of left\n        for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n          const rightColumnBase = rightColumns * leftColumn;\n          const leftRow = leftRowBase + leftColumn;\n          const rightRow = rightColumnBase + rightColumn;\n          const backPropagateValue = product.deltas[rightRowBase + rightColumn];\n          left.deltas[leftRow] += right.weights[rightRow] * backPropagateValue;\n          right.deltas[rightRow] += left.weights[leftRow] * backPropagateValue;\n        }\n      }\n    }\n  }\n  function multiplyElement(product, left, right) {\n    const {\n      weights\n    } = left;\n    for (let i = 0; i < weights.length; i++) {\n      product.weights[i] = left.weights[i] * right.weights[i];\n      product.deltas[i] = 0;\n    }\n  }\n\n  /**\r\n   * multiplies {left} and {right} weight by {from} deltas into {left} and {right} deltas\r\n   */\n  function multiplyElementB(product, left, right) {\n    for (let i = 0; i < left.weights.length; i++) {\n      left.deltas[i] = right.weights[i] * product.deltas[i];\n      right.deltas[i] = left.weights[i] * product.deltas[i];\n    }\n  }\n\n  /**\r\n   *\r\n   * relu {m} weights to {into} weights\r\n   */\n  function relu(product, left) {\n    for (let i = 0; i < left.weights.length; i++) {\n      product.weights[i] = Math.max(0, left.weights[i]); // relu\n      product.deltas[i] = 0;\n    }\n  }\n\n  /**\r\n   * adds {from} deltas to {m} deltas when {m} weights are above other a threshold of 0\r\n   */\n  function reluB(product, left) {\n    for (let i = 0; i < product.deltas.length; i++) {\n      left.deltas[i] = left.weights[i] > 0 ? product.deltas[i] : 0;\n    }\n  }\n  function rowPluck(product, left, rowPluckIndex) {\n    const {\n      columns\n    } = left;\n    const rowBase = columns * rowPluckIndex;\n    for (let column = 0; column < columns; column++) {\n      product.weights[column] = left.weights[rowBase + column];\n      product.deltas[column] = 0;\n    }\n  }\n\n  /**\r\n   * adds {from} deltas into {m} deltas\r\n   */\n  function rowPluckB(product, left, rowIndex) {\n    const {\n      columns\n    } = left;\n    const rowBase = columns * rowIndex;\n    for (let column = 0; column < columns; column++) {\n      left.deltas[rowBase + column] = product.deltas[column];\n    }\n  }\n  function sigmoid(product, left) {\n    // sigmoid nonlinearity\n    for (let i = 0; i < left.weights.length; i++) {\n      product.weights[i] = 1 / (1 + Math.exp(-left.weights[i]));\n      product.deltas[i] = 0;\n    }\n  }\n  // function sig(x) {\n  //   // helper function for computing sigmoid\n  //   return 1 / (1 + Math.exp(-x));\n  // }\n\n  function sigmoidB(product, left) {\n    for (let i = 0; i < product.deltas.length; i++) {\n      const mwi = product.weights[i];\n      left.deltas[i] = mwi * (1 - mwi) * product.deltas[i];\n    }\n  }\n  function softmax(matrix) {\n    // probability volume\n    const result = new Matrix(matrix.rows, matrix.columns);\n    let maxVal = -999999;\n    for (let i = 0; i < matrix.weights.length; i++) {\n      if (matrix.weights[i] > maxVal) {\n        maxVal = matrix.weights[i];\n      }\n    }\n    let s = 0;\n    for (let i = 0; i < matrix.weights.length; i++) {\n      result.weights[i] = Math.exp(matrix.weights[i] - maxVal);\n      s += result.weights[i];\n    }\n    for (let i = 0; i < matrix.weights.length; i++) {\n      result.weights[i] /= s;\n    }\n    // no backward pass here needed\n    // since we will use the computed probabilities outside\n    // to set gradients directly on m\n    return result;\n  }\n  function tanh(product, left) {\n    // tanh nonlinearity\n    for (let i = 0; i < left.weights.length; i++) {\n      product.weights[i] = Math.tanh(left.weights[i]);\n      product.deltas[i] = 0;\n    }\n  }\n  function tanhB(product, left) {\n    for (let i = 0; i < product.deltas.length; i++) {\n      // grad for z = tanh(x) is (1 - z^2)\n      const mwi = product.weights[i];\n      left.deltas[i] = (1 - mwi * mwi) * product.deltas[i];\n    }\n  }\n  class Equation {\n    constructor() {\n      this.states = [];\n      this.inputRow = 0;\n    }\n    add(left, right) {\n      if (left.weights.length !== right.weights.length) {\n        throw new Error('misaligned matrices');\n      }\n      const product = new Matrix(left.rows, left.columns);\n      this.states.push({\n        name: 'add',\n        product,\n        left,\n        right,\n        forwardFn: add,\n        backpropagationFn: addB\n      });\n      return product;\n    }\n    allOnes(rows, columns) {\n      const product = new Matrix(rows, columns);\n      this.states.push({\n        name: 'allOnes',\n        product,\n        left: product,\n        forwardFn: allOnes,\n        backpropagationFn: () => {}\n      });\n      return product;\n    }\n    cloneNegative(matrix) {\n      const product = new Matrix(matrix.rows, matrix.columns);\n      this.states.push({\n        name: 'cloneNegative',\n        product,\n        left: matrix,\n        forwardFn: cloneNegative,\n        backpropagationFn: () => {}\n      });\n      return product;\n    }\n    /**\r\n     * connects two matrices together by subtract\r\n     */\n    subtract(left, right) {\n      if (left.weights.length !== right.weights.length) {\n        throw new Error('misaligned matrices');\n      }\n      return this.add(this.add(this.allOnes(left.rows, left.columns), this.cloneNegative(left)), right);\n    }\n    /**\r\n     * connects two matrices together by multiply\r\n     */\n    multiply(left, right) {\n      if (left.columns !== right.rows) {\n        throw new Error('misaligned matrices');\n      }\n      const product = new Matrix(left.rows, right.columns);\n      this.states.push({\n        name: 'multiply',\n        product,\n        left,\n        right,\n        forwardFn: multiply,\n        backpropagationFn: multiplyB\n      });\n      return product;\n    }\n    /**\r\n     * connects two matrices together by multiplyElement\r\n     */\n    multiplyElement(left, right) {\n      if (left.weights.length !== right.weights.length) {\n        throw new Error('misaligned matrices');\n      }\n      const product = new Matrix(left.rows, left.columns);\n      this.states.push({\n        name: 'multiplyElement',\n        product,\n        left,\n        right,\n        forwardFn: multiplyElement,\n        backpropagationFn: multiplyElementB\n      });\n      return product;\n    }\n    /**\r\n     * connects a matrix to relu\r\n     */\n    relu(matrix) {\n      const product = new Matrix(matrix.rows, matrix.columns);\n      this.states.push({\n        name: 'relu',\n        product,\n        left: matrix,\n        forwardFn: relu,\n        backpropagationFn: reluB\n      });\n      return product;\n    }\n    /**\r\n     * input a matrix\r\n     */\n    input(input) {\n      this.states.push({\n        name: 'input',\n        product: input,\n        forwardFn: product => {\n          if (!this.inputValue) return;\n          if (this.inputValue.length !== product.weights.length) {\n            throw new Error('this.inputValue is of wrong dimensions');\n          }\n          product.weights = input.weights = this.inputValue;\n        },\n        backpropagationFn: () => {}\n      });\n      return input;\n    }\n    /**\r\n     * connects a matrix via a row\r\n     */\n    inputMatrixToRow(matrix) {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const self = this;\n      const product = new Matrix(matrix.columns, 1);\n      this.states.push({\n        name: 'inputMatrixToRow',\n        product,\n        left: matrix,\n        get right() {\n          return self.inputRow;\n        },\n        forwardFn: rowPluck,\n        backpropagationFn: rowPluckB\n      });\n      return product;\n    }\n    /**\r\n     * connects a matrix to sigmoid\r\n     */\n    sigmoid(matrix) {\n      const product = new Matrix(matrix.rows, matrix.columns);\n      this.states.push({\n        name: 'sigmoid',\n        product,\n        left: matrix,\n        forwardFn: sigmoid,\n        backpropagationFn: sigmoidB\n      });\n      return product;\n    }\n    /**\r\n     * connects a matrix to tanh\r\n     */\n    tanh(matrix) {\n      const product = new Matrix(matrix.rows, matrix.columns);\n      this.states.push({\n        name: 'tanh',\n        product,\n        left: matrix,\n        forwardFn: tanh,\n        backpropagationFn: tanhB\n      });\n      return product;\n    }\n    /**\r\n     *\r\n     * Observe a matrix for debugging\r\n     */\n    observe(matrix) {\n      this.states.push({\n        name: 'observe',\n        product: new Matrix(),\n        forwardFn: () => {},\n        backpropagationFn: () => {}\n      });\n      return matrix;\n    }\n    /**\r\n     * Run index through equations via forward propagation\r\n     */\n    runIndex(rowIndex = 0) {\n      this.inputRow = rowIndex;\n      let state = this.states[0];\n      for (let i = 0, max = this.states.length; i < max; i++) {\n        state = this.states[i];\n        if (!state.hasOwnProperty('forwardFn')) continue;\n        state.forwardFn(state.product, state.left, state.right);\n      }\n      return state.product;\n    }\n    /**\r\n     * Run value through equations via forward propagation\r\n     */\n    runInput(inputValue) {\n      this.inputValue = inputValue;\n      let state = this.states[0];\n      for (let i = 0, max = this.states.length; i < max; i++) {\n        state = this.states[i];\n        if (!state.hasOwnProperty('forwardFn')) continue;\n        state.forwardFn(state.product, state.left, state.right);\n      }\n      return state.product;\n    }\n    /**\r\n     * Run value through equations via back propagation\r\n     */\n    backpropagate() {\n      let i = this.states.length;\n      let state = this.states[0];\n      while (i-- > 0) {\n        state = this.states[i];\n        if (!state.hasOwnProperty('backpropagationFn')) continue;\n        state.backpropagationFn(state.product, state.left, state.right);\n      }\n      return state.product;\n    }\n    /**\r\n     * Run index through equations via back propagation\r\n     */\n    backpropagateIndex(rowIndex = 0) {\n      this.inputRow = rowIndex;\n      let i = this.states.length;\n      let state = this.states[0];\n      while (i-- > 0) {\n        state = this.states[i];\n        if (!state.hasOwnProperty('backpropagationFn')) continue;\n        state.backpropagationFn(state.product, state.left, state.right);\n      }\n      return state.product;\n    }\n    /**\r\n     * Predict a target value from equation\r\n     */\n    predictTarget(input, target) {\n      let errorSum = 0;\n      const output = this.runInput(input);\n      for (let i = 0; i < output.weights.length; i++) {\n        const error = output.weights[i] - target[i];\n        // set gradients into log probabilities\n        errorSum += Math.abs(error);\n        // write gradients into log probabilities\n        output.deltas[i] = error;\n      }\n      return errorSum;\n    }\n    /**\r\n     * Predict a target index from equation\r\n     */\n    predictTargetIndex(input, target) {\n      const output = this.runIndex(input);\n      // set gradients into log probabilities\n      const logProbabilities = output; // interpret output as log probabilities\n      const probabilities = softmax(output); // compute the softmax probabilities\n      // write gradients into log probabilities\n      logProbabilities.deltas = probabilities.weights.slice(0);\n      logProbabilities.deltas[target] -= 1;\n      // accumulate base 2 log prob and do smoothing\n      return -Math.log2(probabilities.weights[target]);\n    }\n  }\n  function maxI(matrix) {\n    // argmax of array w\n    const {\n      weights\n    } = matrix;\n    let maxv = weights[0];\n    let maxix = 0;\n    for (let i = 1; i < weights.length; i++) {\n      const v = weights[i];\n      if (v < maxv) continue;\n      maxix = i;\n      maxv = v;\n    }\n    return maxix;\n  }\n  function sampleI(matrix) {\n    // sample argmax from w, assuming w are\n    // probabilities that sum to one\n    const r = randomFloat(0, 1);\n    const w = matrix.weights;\n    let x = 0;\n    let i = 0;\n    while (true) {\n      x += w[i];\n      if (x > r) {\n        return i;\n      }\n      i++;\n    }\n  }\n  const trainDefaults$1 = {\n    iterations: 20000,\n    errorThresh: 0.005,\n    log: false,\n    logPeriod: 10,\n    learningRate: 0.01,\n    callbackPeriod: 10,\n    timeout: Infinity\n  };\n  const defaults$1 = () => {\n    return {\n      inputSize: 20,\n      inputRange: 20,\n      hiddenLayers: [20, 20],\n      outputSize: 20,\n      decayRate: 0.999,\n      smoothEps: 1e-8,\n      regc: 0.000001,\n      clipval: 5,\n      maxPredictionLength: 100,\n      dataFormatter: new DataFormatter()\n    };\n  };\n  class RNN {\n    constructor(options = {}) {\n      this.options = {\n        ...defaults$1()\n      };\n      this.trainOpts = {\n        ...trainDefaults$1\n      };\n      this.stepCache = {};\n      this.runs = 0;\n      this.ratioClipped = 0;\n      this.model = Object.seal({\n        isInitialized: false,\n        input: new Matrix(0, 0),\n        hiddenLayers: [],\n        output: new Matrix(0, 0),\n        equations: [],\n        allMatrices: [],\n        equationConnections: [],\n        outputConnector: new RandomMatrix(0, 0, 0.08)\n      });\n      this.initialLayerInputs = [];\n      this.options = {\n        ...this.options,\n        ...options\n      };\n      this.updateTrainingOptions({\n        ...trainDefaults$1\n      });\n      if (options.json) {\n        this.fromJSON(options.json);\n      }\n    }\n    initialize() {\n      const {\n        dataFormatter\n      } = this.options;\n      if (dataFormatter === null || dataFormatter === void 0 ? void 0 : dataFormatter.characters.length) {\n        this.options.inputSize = this.options.inputRange = this.options.outputSize = dataFormatter.characters.length;\n      }\n      this.model = this.mapModel();\n    }\n    createHiddenLayers() {\n      const {\n        hiddenLayers,\n        inputSize\n      } = this.options;\n      const hiddenLayersModel = [];\n      // 0 is end, so add 1 to offset\n      hiddenLayersModel.push(this.getHiddenLayer(hiddenLayers[0], inputSize));\n      let prevSize = hiddenLayers[0];\n      for (let d = 1; d < hiddenLayers.length; d++) {\n        // loop over depths\n        const hiddenSize = hiddenLayers[d];\n        hiddenLayersModel.push(this.getHiddenLayer(hiddenSize, prevSize));\n        prevSize = hiddenSize;\n      }\n      return hiddenLayersModel;\n    }\n    getHiddenLayer(hiddenSize, prevSize) {\n      return {\n        // wxh\n        weight: new RandomMatrix(hiddenSize, prevSize, 0.08),\n        // whh\n        transition: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\n        // bhh\n        bias: new Matrix(hiddenSize, 1)\n      };\n    }\n    getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n      if (!hiddenLayer.weight || !hiddenLayer.transition || !hiddenLayer.bias) {\n        throw new Error('hiddenLayer does not have expected properties');\n      }\n      const relu = equation.relu.bind(equation);\n      const add = equation.add.bind(equation);\n      const multiply = equation.multiply.bind(equation);\n      return relu(add(add(multiply(hiddenLayer.weight, inputMatrix), multiply(hiddenLayer.transition, previousResult)), hiddenLayer.bias));\n    }\n    createInputMatrix() {\n      const {\n        inputRange,\n        inputSize\n      } = this.options;\n      if (inputRange < 1) throw new Error('this.options.inputRange not an expected number');\n      if (inputSize < 1) throw new Error('this.options.inputSize not an expected number');\n      // 0 is end, so add 1 to offset\n      return new RandomMatrix(inputRange + 1, inputSize, 0.08);\n    }\n    createOutputMatrices() {\n      const {\n        outputSize,\n        hiddenLayers\n      } = this.options;\n      const lastHiddenSize = last(hiddenLayers);\n      // 0 is end, so add 1 to offset\n      return {\n        // whd\n        outputConnector: new RandomMatrix(outputSize + 1, lastHiddenSize, 0.08),\n        // 0 is end, so add 1 to offset\n        // bd\n        output: new Matrix(outputSize + 1, 1)\n      };\n    }\n    bindEquation() {\n      const {\n        model\n      } = this;\n      const {\n        hiddenLayers\n      } = this.options;\n      const equation = new Equation();\n      const outputs = [];\n      const equationConnection = model.equationConnections.length > 0 ? last(model.equationConnections) : this.initialLayerInputs;\n      // 0 index\n      let output = this.getEquation(equation, equation.inputMatrixToRow(model.input), equationConnection[0], model.hiddenLayers[0]);\n      outputs.push(output);\n      // 1+ indices\n      for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n        if (!equationConnection[i]) {\n          throw new Error(`Cannot find equation at index ${i}`);\n        }\n        output = this.getEquation(equation, output, equationConnection[i], model.hiddenLayers[i]);\n        outputs.push(output);\n      }\n      model.equationConnections.push(outputs);\n      equation.add(equation.multiply(model.outputConnector, output), model.output);\n      model.equations.push(equation);\n    }\n    mapModel() {\n      const allMatrices = [];\n      this.initialLayerInputs = this.options.hiddenLayers.map(size => new Matrix(size, 1));\n      const input = this.createInputMatrix();\n      allMatrices.push(input);\n      const hiddenLayers = this.createHiddenLayers();\n      if (!hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n      for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n        const hiddenMatrix = hiddenLayers[i];\n        for (const property in hiddenMatrix) {\n          if (!hiddenMatrix.hasOwnProperty(property)) continue;\n          allMatrices.push(hiddenMatrix[property]);\n        }\n      }\n      const {\n        output,\n        outputConnector\n      } = this.createOutputMatrices();\n      allMatrices.push(outputConnector);\n      allMatrices.push(output);\n      return Object.seal({\n        isInitialized: true,\n        input,\n        hiddenLayers,\n        output,\n        equations: [],\n        allMatrices,\n        equationConnections: [],\n        outputConnector\n      });\n    }\n    trainInput(input) {\n      this.runs++;\n      const {\n        model\n      } = this;\n      const max = input.length;\n      let log2ppl = 0;\n      let equation;\n      while (model.equations.length <= input.length + 1) {\n        // last is zero\n        this.bindEquation();\n      }\n      for (let inputIndex = -1, inputMax = input.length; inputIndex < inputMax; inputIndex++) {\n        // start and end tokens are zeros\n        const equationIndex = inputIndex + 1;\n        equation = model.equations[equationIndex];\n        const source = inputIndex === -1 ? 0 : input[inputIndex] + 1; // first step: start with START token\n        const target = inputIndex === max - 1 ? 0 : input[inputIndex + 1] + 1; // last step: end with END token\n        log2ppl += equation.predictTargetIndex(source, target);\n      }\n      return Math.pow(2, log2ppl / (max - 1)) / 100;\n    }\n    backpropagate(input) {\n      let i = input.length;\n      const {\n        model\n      } = this;\n      const {\n        equations\n      } = model;\n      while (i > 0) {\n        equations[i].backpropagateIndex(input[i - 1] + 1);\n        i--;\n      }\n      equations[0].backpropagateIndex(0);\n    }\n    adjustWeights() {\n      const {\n        regc,\n        clipval,\n        decayRate,\n        smoothEps\n      } = this.options;\n      const {\n        trainOpts,\n        model,\n        stepCache\n      } = this;\n      const {\n        learningRate\n      } = trainOpts;\n      const {\n        allMatrices\n      } = model;\n      let numClipped = 0;\n      let numTot = 0;\n      for (let matrixIndex = 0; matrixIndex < allMatrices.length; matrixIndex++) {\n        const matrix = allMatrices[matrixIndex];\n        const {\n          weights,\n          deltas\n        } = matrix;\n        if (!(matrixIndex in stepCache)) {\n          stepCache[matrixIndex] = zeros$1(matrix.rows * matrix.columns);\n        }\n        const cache = stepCache[matrixIndex];\n        for (let i = 0; i < weights.length; i++) {\n          let r = deltas[i];\n          const w = weights[i];\n          // rmsprop adaptive learning rate\n          cache[i] = cache[i] * decayRate + (1 - decayRate) * r * r;\n          // gradient clip\n          if (r > clipval) {\n            r = clipval;\n            numClipped++;\n          } else if (r < -clipval) {\n            r = -clipval;\n            numClipped++;\n          }\n          numTot++;\n          // update (and regularize)\n          weights[i] = w + -learningRate * r / Math.sqrt(cache[i] + smoothEps) - regc * w;\n        }\n      }\n      this.ratioClipped = numClipped / numTot;\n    }\n    get isRunnable() {\n      if (this.model && this.model.equations.length === 0) {\n        console.error(`No equations bound, did you run train()?`);\n        return false;\n      }\n      return true;\n    }\n    checkRunnable() {\n      if (!this.isRunnable) {\n        throw new Error('Network not runnable');\n      }\n    }\n    run(rawInput = [], isSampleI = false, temperature = 1) {\n      const maxPredictionLength = this.options.maxPredictionLength + (rawInput !== null ? rawInput.length : 0) + (this.options.dataFormatter ? this.options.dataFormatter.specialIndexes.length : 0);\n      this.checkRunnable();\n      const input = this.options.dataFormatter && rawInput.length > 0 ? this.options.dataFormatter.formatDataIn(rawInput) : rawInput;\n      const {\n        model\n      } = this;\n      const output = [];\n      let i = 0;\n      while (true) {\n        const previousIndex = i === 0 ? 0 : i < input.length ? input[i - 1] + 1 : output[i - 1];\n        while (model.equations.length <= i) {\n          this.bindEquation();\n        }\n        const equation = model.equations[i];\n        // sample predicted letter\n        const outputMatrix = equation.runIndex(previousIndex);\n        const logProbabilities = new Matrix(model.output.rows, model.output.columns);\n        copy(logProbabilities, outputMatrix);\n        if (temperature !== 1 && isSampleI) {\n          /**\r\n           * scale log probabilities by temperature and re-normalize\r\n           * if temperature is high, logProbabilities will go towards zero\r\n           * and the softmax outputs will be more diffuse. if temperature is\r\n           * very low, the softmax outputs will be more peaky\r\n           */\n          for (let j = 0, max = logProbabilities.weights.length; j < max; j++) {\n            logProbabilities.weights[j] /= temperature;\n          }\n        }\n        const probs = softmax(logProbabilities);\n        const nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\n        i++;\n        if (nextIndex === 0) {\n          // END token predicted, break out\n          break;\n        }\n        if (i >= maxPredictionLength) {\n          // something is wrong\n          break;\n        }\n        output.push(nextIndex);\n      }\n      /**\r\n       * we slice the input length here, not because output contains it, but it will be erroneous as we are sending the\r\n       * network what is contained in input, so the data is essentially guessed by the network what could be next, till it\r\n       * locks in on a value.\r\n       * Kind of like this, values are from input:\r\n       * 0 -> 4 (or in English: \"beginning on input\" -> \"I have no idea? I'll guess what they want next!\")\r\n       * 2 -> 2 (oh how interesting, I've narrowed down values...)\r\n       * 1 -> 9 (oh how interesting, I've now know what the values are...)\r\n       * then the output looks like: [4, 2, 9,...]\r\n       * so we then remove the erroneous data to get our true output\r\n       */\n      return this.options.dataFormatter.formatDataOut(input, output.slice(input.length).map(value => value - 1));\n    }\n    /**\r\n     *\r\n     * Verifies network sizes are initialized\r\n     * If they are not it will initialize them\r\n     */\n    verifyIsInitialized() {\n      if (!this.model.isInitialized) {\n        this.initialize();\n      }\n    }\n    /**\r\n     *\r\n     * @param options\r\n     *    Supports all `trainDefaults` properties\r\n     *    also supports:\r\n     *       learningRate: (number),\r\n     *       momentum: (number),\r\n     *       activation: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\r\n     */\n    updateTrainingOptions(options) {\n      var _a;\n      this.trainOpts = {\n        ...trainDefaults$1,\n        ...options\n      };\n      this.validateTrainingOptions(this.trainOpts);\n      this.setLogMethod((_a = options.log) !== null && _a !== void 0 ? _a : this.trainOpts.log);\n      // TODO: Remove this?\n      // this.activation = options.activation || this.activation;\n    }\n    validateTrainingOptions(options) {\n      const validations = {\n        iterations: () => {\n          const val = options.iterations;\n          return typeof val === 'number' && val > 0;\n        },\n        errorThresh: () => {\n          const val = options.errorThresh;\n          return typeof val === 'number' && val > 0 && val < 1;\n        },\n        log: () => {\n          const val = options.log;\n          return typeof val === 'function' || typeof val === 'boolean';\n        },\n        logPeriod: () => {\n          const val = options.logPeriod;\n          return typeof val === 'number' && val > 0;\n        },\n        learningRate: () => {\n          const val = options.learningRate;\n          return typeof val === 'number' && val > 0 && val < 1;\n        },\n        callback: () => {\n          const val = options.callback;\n          return typeof val === 'function' || val === undefined;\n        },\n        callbackPeriod: () => {\n          const val = options.callbackPeriod;\n          return typeof val === 'number' && val > 0;\n        },\n        timeout: () => {\n          const val = options.timeout;\n          return typeof val === 'number' && val > 0;\n        }\n      };\n      for (const p in validations) {\n        const v = options;\n        if (!validations[p]()) {\n          throw new Error(`[${p}, ${v[p]}] is out of normal training range, your network will probably not train.`);\n        }\n      }\n    }\n    setLogMethod(log) {\n      if (typeof log === 'function') {\n        this.trainOpts.log = log;\n      } else if (log) {\n        this.trainOpts.log = console.log;\n      } else {\n        this.trainOpts.log = false;\n      }\n    }\n    prepTraining(data, options) {\n      var _a;\n      this.updateTrainingOptions(options);\n      const preparedData = this.options.dataFormatter.format(data);\n      const endTime = Date.now() + ((_a = this.trainOpts.timeout) !== null && _a !== void 0 ? _a : 0);\n      const status = {\n        error: 1,\n        iterations: 0\n      };\n      this.verifyIsInitialized();\n      return {\n        preparedData,\n        status,\n        endTime\n      };\n    }\n    train(data, trainOpts = {}) {\n      var _a;\n      this.trainOpts = trainOpts = {\n        ...trainDefaults$1,\n        ...trainOpts\n      };\n      const {\n        iterations,\n        errorThresh,\n        logPeriod,\n        callback,\n        callbackPeriod\n      } = this.trainOpts;\n      const log = trainOpts.log === true ? console.log : trainOpts.log;\n      let error = Infinity;\n      let i;\n      let inputs;\n      if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.dataFormatter) {\n        inputs = this.options.dataFormatter.format(data);\n      } else if (Array.isArray(data) && Array.isArray(data[0]) && typeof data[0][0] === 'number') {\n        inputs = data;\n      } else {\n        throw new Error('training not in expected format of number[][]');\n      }\n      this.verifyIsInitialized();\n      for (i = 0; i < iterations && error > errorThresh; i++) {\n        let sum = 0;\n        for (let j = 0; j < inputs.length; j++) {\n          const err = this.trainPattern(inputs[j], true);\n          sum += err;\n        }\n        error = sum / data.length;\n        if (isNaN(error)) {\n          throw new Error('Network error rate is unexpected NaN, check network configurations and try again. Most probably input format is not correct or training data is not enough. ');\n        }\n        if (log && i % logPeriod === 0) {\n          log(`iterations: ${i}, training error: ${error}`);\n        }\n        if (callback && i % callbackPeriod === 0) {\n          callback({\n            error,\n            iterations: i\n          });\n        }\n      }\n      return {\n        error,\n        iterations: i\n      };\n    }\n    addFormat(data) {}\n    formatData(data) {\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push(this.options.dataFormatter.formatDataIn(data[i]));\n      }\n      return result;\n    }\n    toJSON() {\n      if (!this.model.isInitialized) {\n        this.initialize();\n      }\n      const {\n        model,\n        options\n      } = this;\n      return {\n        type: this.constructor.name,\n        options: {\n          ...options,\n          dataFormatter: options.dataFormatter.toJSON()\n        },\n        trainOpts: {\n          ...this.trainOpts,\n          timeout: this.trainOpts.timeout === Infinity ? 'Infinity' : this.trainOpts.timeout\n        },\n        input: model.input.toJSON(),\n        hiddenLayers: model.hiddenLayers.map(hiddenLayer => {\n          const layers = {};\n          for (const p in hiddenLayer) {\n            if (!hiddenLayer.hasOwnProperty(p)) continue;\n            layers[p] = hiddenLayer[p].toJSON();\n          }\n          return layers;\n        }),\n        outputConnector: this.model.outputConnector.toJSON(),\n        output: this.model.output.toJSON()\n      };\n    }\n    fromJSON(json) {\n      const {\n        options\n      } = json;\n      const allMatrices = [];\n      const input = Matrix.fromJSON(json.input);\n      allMatrices.push(input);\n      const hiddenLayers = [];\n      json.hiddenLayers.forEach(hiddenLayer => {\n        const layers = {};\n        for (const p in hiddenLayer) {\n          layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n          allMatrices.push(layers[p]);\n        }\n        hiddenLayers.push(layers);\n      });\n      const outputConnector = Matrix.fromJSON(json.outputConnector);\n      allMatrices.push(outputConnector);\n      const output = Matrix.fromJSON(json.output);\n      allMatrices.push(output);\n      if (options.dataFormatter) {\n        this.options = {\n          ...defaults$1(),\n          ...options,\n          dataFormatter: DataFormatter.fromJSON(options.dataFormatter)\n        };\n      } else {\n        this.options = {\n          ...defaults$1(),\n          ...options,\n          dataFormatter: new DataFormatter()\n        };\n      }\n      this.model = Object.seal({\n        isInitialized: true,\n        input,\n        hiddenLayers,\n        output,\n        allMatrices,\n        outputConnector,\n        equations: [],\n        equationConnections: []\n      });\n      this.initialLayerInputs = this.options.hiddenLayers.map(size => new Matrix(size, 1));\n      this.bindEquation();\n      return this;\n    }\n    toFunction(cb) {\n      const {\n        model\n      } = this;\n      const {\n        equations\n      } = this.model;\n      const equation = equations[1];\n      const {\n        states\n      } = equation;\n      const jsonString = JSON.stringify(this.toJSON());\n      function previousConnectionIndex(m) {\n        const connection = model.equationConnections[0];\n        const {\n          states\n        } = equations[0];\n        for (let i = 0, max = states.length; i < max; i++) {\n          if (states[i].product === m) {\n            return i;\n          }\n        }\n        return connection.indexOf(m);\n      }\n      function matrixOrigin(m, stateIndex) {\n        for (let i = 0, max = states.length; i < max; i++) {\n          const state = states[i];\n          if (i === stateIndex) {\n            const j = previousConnectionIndex(m);\n            if (j > -1 && (m === state.left || m === state.right)) {\n              return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${m.rows}, ${m.columns})`;\n            }\n            return `new Matrix(${m.rows}, ${m.columns})`;\n          }\n          if (m === state.product) return `states[${i}].product`;\n          if (m === state.right) return `states[${i}].right`;\n          if (m === state.left) return `states[${i}].left`;\n        }\n        return '';\n      }\n      function matrixToString(m, stateIndex) {\n        if (!m || !m.rows || !m.columns) return 'null';\n        if (m === model.input) return `json.input`;\n        if (m === model.outputConnector) return `json.outputConnector`;\n        if (m === model.output) return `json.output`;\n        for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n          const hiddenLayer = model.hiddenLayers[i];\n          for (const p in hiddenLayer) {\n            if (!hiddenLayer.hasOwnProperty(p)) continue;\n            if (hiddenLayer[p] !== m) continue;\n            return `json.hiddenLayers[${i}].${p}`;\n          }\n        }\n        return matrixOrigin(m, stateIndex);\n      }\n      function toInner(fnString) {\n        // crude, but should be sufficient for now\n        // function() { body }\n        const fnParts = fnString.toString().split('{');\n        fnParts.shift();\n        // body }\n        const fnBodyString = fnParts.join('{');\n        const fnBodyParts = fnBodyString.split('}');\n        fnBodyParts.pop();\n        // body\n        return fnBodyParts.join('}').split('\\n').join('\\n        ').replace('product.deltas[i] = 0;', '').replace('product.deltas[column] = 0;', '').replace('left.deltas[leftIndex] = 0;', '').replace('right.deltas[rightIndex] = 0;', '').replace('product.deltas = left.deltas.slice(0);', '');\n      }\n      function fileName(fnName) {\n        return `src/recurrent/matrix/${fnName.replace(/[A-Z]/g, function (value) {\n          return `-${value.toLowerCase()}`;\n        })}.js`;\n      }\n      const statesRaw = [];\n      const usedFunctionNames = {};\n      const innerFunctionsSwitch = [];\n      for (let i = 0, max = states.length; i < max; i++) {\n        const state = states[i];\n        statesRaw.push(`states[${i}] = {\n      name: '${state.forwardFn.name}',\n      left: ${state.left ? matrixToString(state.left, i) : 'undefined'},\n      right: ${state.right ? matrixToString(state.right, i) : 'undefined'},\n      product: ${matrixToString(state.product, i)}\n    }`);\n        const fnName = state.forwardFn.name;\n        if (!usedFunctionNames[fnName]) {\n          usedFunctionNames[fnName] = true;\n          innerFunctionsSwitch.push(`        case '${fnName}': //compiled from ${fileName(fnName)}\n          ${toInner(state.forwardFn.toString())}\n          break;`);\n        }\n      }\n      const src = `\n  if (typeof rawInput === 'undefined') rawInput = [];\n  if (typeof isSampleI === 'undefined') isSampleI = false;\n  if (typeof temperature === 'undefined') temperature = 1;\n  var json = ${jsonString};\n  ${this.options.dataFormatter ? `${this.options.dataFormatter.toFunctionString()};\n  Object.assign(dataFormatter, json.options.dataFormatter);` : ''}\n  ${this.options.dataFormatter && typeof this.options.dataFormatter.formatDataIn === 'function' ? `const formatDataIn = function (input, output) { ${toInner(this.options.dataFormatter.formatDataIn.toString())} }.bind(dataFormatter);` : ''}\n  ${this.options.dataFormatter !== null && typeof this.options.dataFormatter.formatDataOut === 'function' ? `const formatDataOut = function formatDataOut(input, output) { ${toInner(this.options.dataFormatter.formatDataOut.toString())} }.bind(dataFormatter);` : ''}\n  var maxPredictionLength =\n    ${this.options.maxPredictionLength} +\n    rawInput.length +\n    ${this.options.dataFormatter ? this.options.dataFormatter.specialIndexes.length : 0};\n  var input = ${this.options.dataFormatter && typeof this.options.dataFormatter.formatDataIn === 'function' ? 'formatDataIn(rawInput)' : 'rawInput'};\n  var _i = 0;\n  var output = [];\n  var states = [];\n  var prevStates;\n  while (true) {\n    var previousIndex = (_i === 0\n        ? 0\n        : _i < input.length\n          ? input[_i - 1] + 1\n          : output[_i - 1])\n          ;\n    var rowPluckIndex = previousIndex;\n    prevStates = states;\n    states = [];\n    ${statesRaw.join(';\\n    ')};\n    for (var stateIndex = 0, stateMax = ${statesRaw.length}; stateIndex < stateMax; stateIndex++) {\n      var state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      switch (state.name) {\n${innerFunctionsSwitch.join('\\n')}\n      }\n    }\n\n    var logProbabilities = state.product;\n    if (temperature !== 1 && isSampleI) {\n      for (var q = 0, nq = logProbabilities.weights.length; q < nq; q++) {\n        logProbabilities.weights[q] /= temperature;\n      }\n    }\n\n    var probs = softmax(logProbabilities);\n    var nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\n\n    _i++;\n    if (nextIndex === 0) {\n      break;\n    }\n    if (_i >= maxPredictionLength) {\n      break;\n    }\n\n    output.push(nextIndex);\n  }\n  ${this.options.dataFormatter && typeof this.options.dataFormatter.formatDataOut === 'function' ? 'return formatDataOut(input, output.slice(input.length).map(function(value) { return value - 1; }))' : 'return output.slice(input.length).map(function(value) { return value - 1; })'};\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${zeros$1.toString()}\n  ${softmax.toString().replace('_1.Matrix', 'Matrix')}\n  ${randomFloat.toString()}\n  ${sampleI.toString()}\n  ${maxI.toString()}`;\n      // eslint-disable-next-line\n      return new Function('rawInput', 'isSampleI', 'temperature', cb ? cb(src) : src);\n    }\n    trainPattern(input, logErrorRate) {\n      const error = this.trainInput(input);\n      this.backpropagate(input);\n      this.adjustWeights();\n      if (logErrorRate) {\n        return error;\n      }\n      return 0;\n    }\n  }\n  function last(values) {\n    return values[values.length - 1];\n  }\n  class GRU extends RNN {\n    getHiddenLayer(hiddenSize, prevSize) {\n      return getGRUHiddenLayer(hiddenSize, prevSize);\n    }\n    getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n      return getGRUEquation(equation, inputMatrix, previousResult, hiddenLayer);\n    }\n  }\n  function getGRUHiddenLayer(hiddenSize, prevSize) {\n    return {\n      // update Gate\n      // wzxh\n      updateGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08),\n      updateGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\n      updateGateBias: new Matrix(hiddenSize, 1),\n      // reset Gate\n      // wrxh\n      resetGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08),\n      resetGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\n      resetGateBias: new Matrix(hiddenSize, 1),\n      // cell write parameters\n      // wcxh\n      cellWriteInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08),\n      cellWriteHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\n      cellWriteBias: new Matrix(hiddenSize, 1)\n    };\n  }\n  function getGRUEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    if (!hiddenLayer.updateGateInputMatrix || !hiddenLayer.updateGateHiddenMatrix || !hiddenLayer.updateGateBias || !hiddenLayer.resetGateInputMatrix || !hiddenLayer.resetGateHiddenMatrix || !hiddenLayer.resetGateBias || !hiddenLayer.cellWriteInputMatrix || !hiddenLayer.cellWriteHiddenMatrix || !hiddenLayer.cellWriteBias) {\n      throw new Error('hiddenLayer does not have expected properties');\n    }\n    const sigmoid = equation.sigmoid.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n    const multiplyElement = equation.multiplyElement.bind(equation);\n    const tanh = equation.tanh.bind(equation);\n    const allOnes = equation.allOnes.bind(equation);\n    const cloneNegative = equation.cloneNegative.bind(equation);\n    // update gate\n    const updateGate = sigmoid(add(add(multiply(hiddenLayer.updateGateInputMatrix, inputMatrix), multiply(hiddenLayer.updateGateHiddenMatrix, previousResult)), hiddenLayer.updateGateBias));\n    // reset gate\n    const resetGate = sigmoid(add(add(multiply(hiddenLayer.resetGateInputMatrix, inputMatrix), multiply(hiddenLayer.resetGateHiddenMatrix, previousResult)), hiddenLayer.resetGateBias));\n    // cell\n    const cell = tanh(add(add(multiply(hiddenLayer.cellWriteInputMatrix, inputMatrix), multiply(hiddenLayer.cellWriteHiddenMatrix, multiplyElement(resetGate, previousResult))), hiddenLayer.cellWriteBias));\n    // compute hidden state as gated, saturated cell activations\n    // negate updateGate\n    return add(multiplyElement(add(allOnes(updateGate.rows, updateGate.columns), cloneNegative(updateGate)), cell), multiplyElement(previousResult, updateGate));\n  }\n  class ArrayLookupTable {\n    constructor(data, prop) {\n      this.prop = prop;\n      this.length = 0;\n      this.table = {};\n      for (let i = 0; i < data.length; i++) {\n        const datum = data[i];\n        const ioValue = datum[prop];\n        for (let j = 0; j < ioValue.length; j++) {\n          const value = ioValue[j];\n          for (const p in value) {\n            if (!value.hasOwnProperty(p)) continue;\n            if (this.table.hasOwnProperty(p)) continue;\n            this.table[p] = this.length++;\n          }\n        }\n      }\n    }\n  }\n  const defaults = () => {\n    return {\n      ...defaults$1(),\n      inputSize: 1,\n      hiddenLayers: [20],\n      outputSize: 1,\n      inputRange: 0\n    };\n  };\n  class RNNTimeStep extends RNN {\n    constructor(options = {}) {\n      super();\n      this.inputLookupLength = 0;\n      this.inputLookup = null;\n      this.outputLookup = null;\n      this.outputLookupLength = 0;\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      this.model = Object.seal({\n        isInitialized: false,\n        hiddenLayers: [],\n        output: new Matrix(0, 0),\n        equations: [],\n        allMatrices: [],\n        equationConnections: [],\n        outputConnector: new RandomMatrix(0, 0, 0.08)\n      });\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      this.options = defaults();\n      this.options = {\n        ...this.options,\n        ...options\n      };\n      this.updateTrainingOptions({\n        ...trainDefaults,\n        ...options\n      });\n      if (options.json) {\n        this.fromJSON(options.json);\n      }\n    }\n    createInputMatrix() {\n      throw new Error('Input Matrices do not exist on RNNTimeStep');\n    }\n    createOutputMatrices() {\n      const {\n        outputSize\n      } = this.options;\n      const lastHiddenSize = last(this.options.hiddenLayers);\n      // whd\n      const outputConnector = new RandomMatrix(outputSize, lastHiddenSize, 0.08);\n      // bd\n      const output = new RandomMatrix(outputSize, 1, 0.08);\n      return {\n        output,\n        outputConnector\n      };\n    }\n    bindEquation() {\n      const {\n        model,\n        options\n      } = this;\n      const {\n        hiddenLayers,\n        inputSize\n      } = options;\n      const layers = model.hiddenLayers;\n      const equation = new Equation();\n      const outputs = [];\n      const equationConnection = model.equationConnections.length > 0 ? model.equationConnections[model.equationConnections.length - 1] : this.initialLayerInputs;\n      // 0 index\n      let output = this.getEquation(equation, equation.input(new Matrix(inputSize, 1)), equationConnection[0], layers[0]);\n      outputs.push(output);\n      // 1+ indices\n      for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n        output = this.getEquation(equation, output, equationConnection[i], layers[i]);\n        outputs.push(output);\n      }\n      model.equationConnections.push(outputs);\n      equation.add(equation.multiply(model.outputConnector, output), model.output);\n      model.equations.push(equation);\n    }\n    initialize() {\n      this.model = this.mapModel();\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    mapModel() {\n      const allMatrices = [];\n      this.initialLayerInputs = this.options.hiddenLayers.map(size => new Matrix(size, 1));\n      const hiddenLayers = this.createHiddenLayers();\n      for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n        const hiddenMatrix = hiddenLayers[i];\n        for (const property in hiddenMatrix) {\n          if (!hiddenMatrix.hasOwnProperty(property)) continue;\n          allMatrices.push(hiddenMatrix[property]);\n        }\n      }\n      const {\n        outputConnector,\n        output\n      } = this.createOutputMatrices();\n      allMatrices.push(outputConnector);\n      allMatrices.push(output);\n      return Object.seal({\n        isInitialized: true,\n        hiddenLayers,\n        output,\n        equations: [],\n        allMatrices,\n        equationConnections: [],\n        outputConnector\n      });\n    }\n    backpropagate() {\n      for (let i = this.model.equations.length - 1; i > -1; i--) {\n        this.model.equations[i].backpropagate();\n      }\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    run(rawInput) {\n      const shape = lookup.dataShape(rawInput).join(',');\n      switch (shape) {\n        case 'array,number':\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-expect-error\n          return this.runArray(rawInput);\n        case 'array,array,number':\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-expect-error\n          return this.runArrayOfArray(rawInput);\n        case 'object,number':\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-expect-error\n          return this.runObject(rawInput);\n        // Backward compatibility, will be result of `unknown` and need casting.  Better to just use net.runObject() directly\n        case 'array,object,number':\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-expect-error\n          return this.runArrayOfObject(rawInput);\n        default:\n          throw new Error(`Unrecognized data shape ${shape}`);\n      }\n    }\n    forecast(rawInput, count = 1) {\n      const shape = lookup.dataShape(rawInput).join(',');\n      switch (shape) {\n        case 'array,number':\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-expect-error\n          return this.forecastArray(rawInput, count);\n        case 'array,array,number':\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-expect-error\n          return this.forecastArrayOfArray(rawInput, count);\n        case 'object,number':\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-expect-error\n          return this.runObject(rawInput);\n        case 'array,object,number':\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-expect-error\n          return this.forecastArrayOfObject(rawInput, count);\n        default:\n          throw new Error(`Unrecognized data shape ${shape}`);\n      }\n    }\n    forecastArray(input, count = 1) {\n      this.checkRunnable();\n      const {\n        model\n      } = this;\n      const {\n        equations\n      } = model;\n      const length = input.length + count;\n      while (equations.length <= length) {\n        this.bindEquation();\n      }\n      let lastOutput;\n      let equationIndex = 0;\n      if (this.options.inputSize === 1) {\n        for (let i = 0; i < input.length; i++) {\n          lastOutput = equations[equationIndex++].runInput(Float32Array.from([input[i]]));\n        }\n      } else {\n        for (let i = 0; i < input.length; i++) {\n          lastOutput = equations[equationIndex++].runInput(Float32Array.from([]));\n        }\n      }\n      if (!lastOutput) {\n        throw new Error('lastOutput not set');\n      }\n      const result = [lastOutput.weights[0]];\n      for (let i = 0, max = count - 1; i < max; i++) {\n        lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n        result.push(lastOutput.weights[0]);\n      }\n      this.end();\n      return Float32Array.from(result);\n    }\n    forecastArrayOfArray(input, count = 1) {\n      this.checkRunnable();\n      const {\n        model\n      } = this;\n      const {\n        equations\n      } = model;\n      const length = input.length + count;\n      while (equations.length <= length) {\n        this.bindEquation();\n      }\n      let lastOutput;\n      let equationIndex = 0;\n      for (let i = 0; i < input.length; i++) {\n        lastOutput = equations[equationIndex++].runInput(input[i]);\n      }\n      if (!lastOutput) {\n        throw new Error('lastOutput not set');\n      }\n      const result = [Float32Array.from(lastOutput.weights)];\n      for (let i = 0, max = count - 1; i < max; i++) {\n        lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n        result.push(Float32Array.from(lastOutput.weights.slice(0)));\n      }\n      this.end();\n      return result;\n    }\n    forecastArrayOfObject(input, count = 1) {\n      if (!this.inputLookup) {\n        throw new Error('this.inputLookup not set');\n      }\n      if (!this.outputLookup) {\n        throw new Error('this.outputLookup not set');\n      }\n      const formattedData = input.map(value => lookup.toArray(this.inputLookup, value, this.inputLookupLength));\n      return this.forecastArrayOfArray(formattedData, count).map(value => lookup.toObject(this.outputLookup, value));\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    train(data, trainOpts = {}) {\n      this.trainOpts = trainOpts = {\n        ...trainDefaults$1,\n        ...trainOpts\n      };\n      // Don't destructure here because this.setSize() can reset this.options.\n      if (this.options.inputSize === 1 && this.options.outputSize === 1) {\n        this.setSize(data);\n      }\n      this.verifySize();\n      const formattedData = this.formatData(data);\n      let error = Infinity;\n      let i;\n      this.verifyIsInitialized();\n      const {\n        iterations,\n        errorThresh,\n        logPeriod,\n        callback,\n        callbackPeriod\n      } = this.trainOpts;\n      const log = trainOpts.log === true ? console.log : trainOpts.log;\n      for (i = 0; i < iterations && error > errorThresh; i++) {\n        let sum = 0;\n        for (let j = 0; j < formattedData.length; j++) {\n          const err = this.trainPattern(formattedData[j], true);\n          sum += err;\n        }\n        error = sum / formattedData.length;\n        if (isNaN(error)) throw new Error('Network error rate is unexpected NaN, check network configurations and try again. Most probably input format is not correct or training data is not enough. ');\n        if (log && i % logPeriod === 0) {\n          log(`iterations: ${i}, training error: ${error}`);\n        }\n        if (callback && i % callbackPeriod === 0) {\n          callback({\n            error,\n            iterations: i\n          });\n        }\n      }\n      return {\n        error,\n        iterations: i\n      };\n    }\n    trainArrayOfArray(input) {\n      if (input.length < 2) {\n        throw new Error('input must be an array of 2 or more');\n      }\n      const {\n        equations\n      } = this.model;\n      while (equations.length < input.length) {\n        this.bindEquation();\n      }\n      let errorSum = 0;\n      for (let i = 0, max = input.length - 1; i < max; i++) {\n        errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n      }\n      this.end();\n      return errorSum / input.length;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    trainPattern(input, logErrorRate) {\n      const error = this.trainArrayOfArray(input);\n      this.backpropagate();\n      this.adjustWeights();\n      if (logErrorRate) {\n        return error;\n      }\n      return 0;\n    }\n    setSize(data) {\n      let size = 0;\n      const dataShape = lookup.dataShape(data).join(',');\n      switch (dataShape) {\n        case 'array,array,number':\n        case 'array,object,number':\n        case 'array,datum,array,number':\n        case 'array,datum,object,number':\n          size = 1;\n          // probably 1\n          break;\n        case 'array,array,array,number':\n          size = data[0][0].length;\n          break;\n        case 'array,array,object,number':\n          // inputs and outputs should match\n          size = Object.keys(lookup.toTable2D(data)).length;\n          break;\n        case 'array,datum,array,array,number':\n          size = data[0].input[0].length;\n          break;\n        case 'array,datum,array,object,number':\n          size = Object.keys(lookup.toInputTable2D(data)).length;\n          break;\n        default:\n          throw new Error('unknown data shape or configuration');\n      }\n      this.options = Object.seal({\n        ...this.options,\n        inputSize: size,\n        outputSize: size\n      });\n    }\n    verifySize() {\n      if (this.options.inputSize || this.options.outputSize) {\n        if (this.options.inputSize !== this.options.outputSize) {\n          throw new Error('manually set inputSize and outputSize mismatch');\n        }\n      }\n    }\n    runArray(input) {\n      this.checkRunnable();\n      const {\n        equations\n      } = this.model;\n      while (equations.length <= input.length) {\n        this.bindEquation();\n      }\n      let lastOutput;\n      for (let i = 0; i < input.length; i++) {\n        lastOutput = equations[i].runInput(new Float32Array([input[i]]));\n      }\n      this.end();\n      return lastOutput.weights[0];\n    }\n    runArrayOfArray(input) {\n      this.checkRunnable();\n      const {\n        model\n      } = this;\n      const {\n        equations\n      } = model;\n      while (equations.length <= input.length) {\n        this.bindEquation();\n      }\n      let lastOutput;\n      for (let i = 0; i < input.length; i++) {\n        const outputMatrix = equations[i].runInput(input[i]);\n        lastOutput = outputMatrix.weights;\n      }\n      this.end();\n      return lastOutput !== null && lastOutput !== void 0 ? lastOutput : Float32Array.from([]);\n    }\n    runObject(input) {\n      if (!this.inputLookup) {\n        throw new Error('this.inputLookup not set');\n      }\n      if (!this.outputLookup) {\n        throw new Error('this.outputLookup not set');\n      }\n      if (!this.outputLookupLength) {\n        throw new Error('this.outputLookupLength not set');\n      }\n      if (this.inputLookup === this.outputLookup) {\n        const inputArray = lookup.toArrayShort(this.inputLookup, input);\n        return lookup.toObjectPartial(this.outputLookup, this.forecastArray(inputArray, this.outputLookupLength - inputArray.length), inputArray.length);\n      }\n      return lookup.toObject(this.outputLookup, this.forecastArray(lookup.toArray(this.inputLookup, input, this.inputLookupLength), this.outputLookupLength));\n    }\n    runArrayOfObject(input) {\n      if (this.inputLookup === null) {\n        throw new Error('this.inputLookup not set');\n      }\n      if (this.outputLookup === null) {\n        throw new Error('this.outputLookup not set');\n      }\n      const formattedInput = input.map(value => lookup.toArray(this.inputLookup, value, this.inputLookupLength));\n      return this.forecastArrayOfArray(formattedInput, 1).map(value => lookup.toObject(this.outputLookup, value))[0];\n    }\n    runArrayOfObjectOfArray(input) {\n      if (!this.inputLookup) {\n        throw new Error('this.inputLookup not set');\n      }\n      if (!this.outputLookup) {\n        throw new Error('this.outputLookup not set');\n      }\n      return lookup.toObject(this.outputLookup, this.runArrayOfArray(lookup.toArrays(this.inputLookup, input, this.inputLookupLength)));\n    }\n    end() {\n      this.model.equations[this.model.equations.length - 1].runInput(new Float32Array(this.options.outputSize));\n    }\n    requireInputOutputOfOne() {\n      if (this.options.inputSize !== 1) {\n        throw new Error('inputSize must be 1 for this data size');\n      }\n      if (this.options.outputSize !== 1) {\n        throw new Error('outputSize must be 1 for this data size');\n      }\n    }\n    // Handles data shape of 'array,number'\n    formatArray(data) {\n      const result = [];\n      this.requireInputOutputOfOne();\n      for (let i = 0; i < data.length; i++) {\n        result.push(Float32Array.from([data[i]]));\n      }\n      return [result];\n    }\n    // Handles data shape of 'array,array,number'\n    formatArrayOfArray(data) {\n      const result = [];\n      const {\n        inputSize,\n        outputSize\n      } = this.options;\n      if (inputSize === 1 && outputSize === 1) {\n        for (let i = 0; i < data.length; i++) {\n          result.push(arrayToFloat32Arrays(data[i]));\n        }\n        return result;\n      }\n      if (inputSize !== data[0].length) {\n        throw new Error('inputSize must match data input size');\n      }\n      if (outputSize !== data[0].length) {\n        throw new Error('outputSize must match data output size');\n      }\n      for (let i = 0; i < data.length; i++) {\n        result.push(Float32Array.from(data[i]));\n      }\n      return [result];\n    }\n    // Handles data shape of 'array,object,number'\n    formatArrayOfObject(data) {\n      this.requireInputOutputOfOne();\n      if (!this.inputLookup) {\n        const lookupTable = new LookupTable(data);\n        this.inputLookup = this.outputLookup = lookupTable.table;\n        this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n      }\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push(objectToFloat32Arrays(data[i]));\n      }\n      return result;\n    }\n    // Handles data shape of 'array,object,number' when this.options.inputSize > 1\n    formatArrayOfObjectMulti(data) {\n      if (!this.inputLookup) {\n        const lookupTable = new LookupTable(data);\n        this.inputLookup = this.outputLookup = lookupTable.table;\n        this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n      }\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push([objectToFloat32Array(data[i], this.inputLookup, this.inputLookupLength)]);\n      }\n      return result;\n    }\n    // Handles data shape of 'array,datum,array,number'\n    formatArrayOfDatumOfArray(data) {\n      const result = [];\n      this.requireInputOutputOfOne();\n      for (let i = 0; i < data.length; i++) {\n        const datum = data[i];\n        result.push(inputOutputArrayToFloat32Arrays(datum.input, datum.output));\n      }\n      return result;\n    }\n    // Handles data shape of 'array,datum,object,number'\n    formatArrayOfDatumOfObject(data) {\n      this.requireInputOutputOfOne();\n      if (!this.inputLookup) {\n        const inputLookup = new LookupTable(data, 'input');\n        this.inputLookup = inputLookup.table;\n        this.inputLookupLength = inputLookup.length;\n      }\n      if (!this.outputLookup) {\n        const outputLookup = new LookupTable(data, 'output');\n        this.outputLookup = outputLookup.table;\n        this.outputLookupLength = outputLookup.length;\n      }\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        const datum = data[i];\n        result.push(inputOutputObjectToFloat32Arrays(datum.input, datum.output));\n      }\n      return result;\n    }\n    // Handles data shape of 'array,array,array,number'\n    formatArrayOfArrayOfArray(data) {\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push(arraysToFloat32Arrays(data[i]));\n      }\n      return result;\n    }\n    // Handles data shape of 'array,array,object,number'\n    formatArrayOfArrayOfObject(data) {\n      if (!this.inputLookup) {\n        const lookupTable = new LookupTable(data);\n        this.inputLookup = this.outputLookup = lookupTable.table;\n        this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n      }\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        const array = [];\n        for (let j = 0; j < data[i].length; j++) {\n          array.push(objectToFloat32Array(data[i][j], this.inputLookup, this.inputLookupLength));\n        }\n        result.push(array);\n      }\n      return result;\n    }\n    // Handles data shape of 'array,datum,array,array,number'\n    formatArrayOfDatumOfArrayOfArray(data) {\n      const result = [];\n      const {\n        inputSize,\n        outputSize\n      } = this.options;\n      if (inputSize !== data[0].input[0].length) {\n        throw new Error('inputSize must match data input size');\n      }\n      if (outputSize !== data[0].output[0].length) {\n        throw new Error('outputSize must match data output size');\n      }\n      for (let i = 0; i < data.length; i++) {\n        const datum = data[i];\n        result.push(inputOutputArraysToFloat32Arrays(datum.input, datum.output));\n      }\n      return result;\n    }\n    // 'Handles data shape of array,datum,array,object,number'\n    formatArrayOfDatumOfArrayOfObject(data) {\n      if (!this.inputLookup) {\n        const inputLookup = new ArrayLookupTable(data, 'input');\n        this.inputLookup = inputLookup.table;\n        this.inputLookupLength = inputLookup.length;\n      }\n      if (!this.outputLookup) {\n        const outputLookup = new ArrayLookupTable(data, 'output');\n        this.outputLookup = outputLookup.table;\n        this.outputLookupLength = outputLookup.length;\n      }\n      if (!this.outputLookupLength) {\n        throw new Error('this.outputLookupLength not set to usable number');\n      }\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        const datum = data[i];\n        result.push(inputOutputObjectsToFloat32Arrays(datum.input, datum.output, this.inputLookup, this.outputLookup, this.inputLookupLength, this.outputLookupLength));\n      }\n      return result;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    formatData(data) {\n      const dataShape = lookup.dataShape(data).join(',');\n      switch (dataShape) {\n        case 'array,number':\n          return this.formatArray(data);\n        case 'array,array,number':\n          return this.formatArrayOfArray(data);\n        case 'array,object,number':\n          if (this.options.inputSize === 1) {\n            return this.formatArrayOfObject(data);\n          } else {\n            return this.formatArrayOfObjectMulti(data);\n          }\n        case 'array,datum,array,number':\n          return this.formatArrayOfDatumOfArray(data);\n        case 'array,datum,object,number':\n          return this.formatArrayOfDatumOfObject(data);\n        case 'array,array,array,number':\n          return this.formatArrayOfArrayOfArray(data);\n        case 'array,array,object,number':\n          return this.formatArrayOfArrayOfObject(data);\n        case 'array,datum,array,array,number':\n          return this.formatArrayOfDatumOfArrayOfArray(data);\n        case 'array,datum,array,object,number':\n          return this.formatArrayOfDatumOfArrayOfObject(data);\n        default:\n          throw new Error('unknown data shape or configuration');\n      }\n    }\n    test(data) {\n      // for classification problems\n      const misclasses = [];\n      // run each pattern through the trained network and collect\n      // error and misclassification statistics\n      let errorSum = 0;\n      const formattedData = this.formatData(data);\n      for (let i = 0; i < formattedData.length; i++) {\n        const input = formattedData[i];\n        const output = this.run(input.splice(0, input.length - 1));\n        const target = input[input.length - 1];\n        let errors = 0;\n        let errorCount = 0;\n        for (let j = 0; j < output.length; j++) {\n          errorCount++;\n          const error = target[j] - output[j];\n          // mse\n          errors += error * error;\n        }\n        errorSum += errors / errorCount;\n        const errorsAbs = Math.abs(errors);\n        if (errorsAbs > this.trainOpts.errorThresh) {\n          const misclass = data[i];\n          misclasses.push({\n            value: misclass,\n            actual: output\n          });\n        }\n      }\n      return {\n        error: errorSum / formattedData.length,\n        misclasses,\n        total: formattedData.length\n      };\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    addFormat(value) {\n      var _a, _b, _c, _d, _e, _f;\n      const dataShape = lookup.dataShape(value).join(',');\n      switch (dataShape) {\n        case 'array,array,number':\n        case 'datum,array,array,number':\n        case 'array,number':\n        case 'datum,array,number':\n          return;\n        case 'datum,object,number':\n          {\n            this.inputLookup = lookup.addKeys(value.input, (_a = this.inputLookup) !== null && _a !== void 0 ? _a : {});\n            if (this.inputLookup) {\n              this.inputLookupLength = Object.keys(this.inputLookup).length;\n            }\n            this.outputLookup = lookup.addKeys(value.output, (_b = this.outputLookup) !== null && _b !== void 0 ? _b : {});\n            if (this.outputLookup) {\n              this.outputLookupLength = Object.keys(this.outputLookup).length;\n            }\n            break;\n          }\n        case 'object,number':\n          {\n            this.inputLookup = this.outputLookup = lookup.addKeys(value, (_c = this.inputLookup) !== null && _c !== void 0 ? _c : {});\n            if (this.inputLookup) {\n              this.inputLookupLength = this.outputLookupLength = Object.keys(this.inputLookup).length;\n            }\n            break;\n          }\n        case 'array,object,number':\n          {\n            const typedValue = value;\n            for (let i = 0; i < typedValue.length; i++) {\n              this.inputLookup = this.outputLookup = lookup.addKeys(typedValue[i], (_d = this.inputLookup) !== null && _d !== void 0 ? _d : {});\n              if (this.inputLookup) {\n                this.inputLookupLength = this.outputLookupLength = Object.keys(this.inputLookup).length;\n              }\n            }\n            break;\n          }\n        case 'datum,array,object,number':\n          {\n            const typedValue = value;\n            const typedInput = typedValue.input;\n            for (let i = 0; i < typedInput.length; i++) {\n              this.inputLookup = lookup.addKeys(typedInput[i], (_e = this.inputLookup) !== null && _e !== void 0 ? _e : {});\n              if (this.inputLookup) {\n                this.inputLookupLength = Object.keys(this.inputLookup).length;\n              }\n            }\n            const typedOutput = typedValue.output;\n            for (let i = 0; i < typedOutput.length; i++) {\n              this.outputLookup = lookup.addKeys(typedOutput[i], (_f = this.outputLookup) !== null && _f !== void 0 ? _f : {});\n              if (this.outputLookup) {\n                this.outputLookupLength = Object.keys(this.outputLookup).length;\n              }\n            }\n            break;\n          }\n        default:\n          throw new Error('unknown data shape or configuration');\n      }\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    toJSON() {\n      if (!this.model) {\n        this.initialize();\n      }\n      const {\n        model\n      } = this;\n      const options = {\n        ...this.options,\n        ...defaults$1\n      };\n      return {\n        type: this.constructor.name,\n        options,\n        hiddenLayers: model.hiddenLayers.map(hiddenLayer => {\n          const layers = {};\n          for (const p in hiddenLayer) {\n            if (!hiddenLayer.hasOwnProperty(p)) continue;\n            layers[p] = hiddenLayer[p].toJSON();\n          }\n          return layers;\n        }),\n        outputConnector: model.outputConnector.toJSON(),\n        output: model.output.toJSON(),\n        inputLookup: this.inputLookup,\n        inputLookupLength: this.inputLookupLength,\n        outputLookup: this.outputLookup,\n        outputLookupLength: this.outputLookupLength\n      };\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    fromJSON(json) {\n      const {\n        options\n      } = json;\n      const allMatrices = [];\n      const hiddenLayers = [];\n      // backward compatibility for hiddenSizes\n      json.hiddenLayers.forEach(hiddenLayer => {\n        const layers = {};\n        for (const p in hiddenLayer) {\n          layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n          allMatrices.push(layers[p]);\n        }\n        hiddenLayers.push(layers);\n      });\n      const outputConnector = Matrix.fromJSON(json.outputConnector);\n      allMatrices.push(outputConnector);\n      const output = Matrix.fromJSON(json.output);\n      allMatrices.push(output);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      this.options = {\n        ...defaults(),\n        ...options\n      };\n      this.inputLookup = json.inputLookup;\n      this.inputLookupLength = json.inputLookupLength;\n      this.outputLookup = json.outputLookup;\n      this.outputLookupLength = json.outputLookupLength;\n      this.model = Object.seal({\n        isInitialized: true,\n        hiddenLayers,\n        output,\n        allMatrices,\n        outputConnector,\n        equations: [],\n        equationConnections: []\n      });\n      this.initialLayerInputs = options.hiddenLayers.map(size => new Matrix(size, 1));\n      this.bindEquation();\n      return this;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    toFunction(cb) {\n      const {\n        model,\n        inputLookup,\n        inputLookupLength,\n        outputLookup,\n        outputLookupLength\n      } = this;\n      const {\n        inputSize\n      } = this.options;\n      const {\n        equations\n      } = model;\n      const equation = equations[1];\n      const {\n        states\n      } = equation;\n      const jsonString = JSON.stringify(this.toJSON());\n      function previousConnectionIndex(m) {\n        const connection = model.equationConnections[0];\n        const {\n          states\n        } = equations[0];\n        for (let i = 0, max = states.length; i < max; i++) {\n          if (states[i].product === m) {\n            return i;\n          }\n        }\n        return connection.indexOf(m);\n      }\n      function matrixOrigin(m, stateIndex) {\n        for (let i = 0, max = states.length; i < max; i++) {\n          const state = states[i];\n          if (i === stateIndex) {\n            const j = previousConnectionIndex(m);\n            switch (m) {\n              case state.left:\n                if (j > -1) {\n                  return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${m.rows}, ${m.columns})`;\n                }\n              // eslint-disable-next-line no-fallthrough\n              case state.right:\n                if (j > -1) {\n                  return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${m.rows}, ${m.columns})`;\n                }\n              // eslint-disable-next-line no-fallthrough\n              case state.product:\n                return `new Matrix(${m.rows}, ${m.columns})`;\n              default:\n                throw Error('unknown state');\n            }\n          }\n          if (m === state.product) return `states[${i}].product`;\n          if (m === state.right) return `states[${i}].right`;\n          if (m === state.left) return `states[${i}].left`;\n        }\n        return '';\n      }\n      function matrixToString(m, stateIndex) {\n        if (!m || !m.rows || !m.columns) return 'null';\n        if (m === model.outputConnector) return `json.outputConnector`;\n        if (m === model.output) return `json.output`;\n        for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n          const hiddenLayer = model.hiddenLayers[i];\n          for (const p in hiddenLayer) {\n            if (!hiddenLayer.hasOwnProperty(p)) continue;\n            if (hiddenLayer[p] !== m) continue;\n            return `json.hiddenLayers[${i}].${p}`;\n          }\n        }\n        return matrixOrigin(m, stateIndex);\n      }\n      function formatInputData() {\n        if (!inputLookup) return '';\n        if (inputSize === 1) {\n          if (inputLookup === outputLookup) {\n            return `function lookupInput(input) {\n            var table = ${JSON.stringify(inputLookup)};\n            var result = [];\n            for (var p in table) {\n              if (!input.hasOwnProperty(p)) break;\n              result.push(Float32Array.from([input[p]]));\n            }\n            return result;\n          }`;\n          }\n          return `function lookupInput(input) {\n          var table = ${JSON.stringify(inputLookup)};\n          var result = [];\n          for (var p in table) {\n            result.push(Float32Array.from([input[p]]));\n          }\n          return result;\n        }`;\n        }\n        return `function lookupInput(rawInputs) {\n        var table = ${JSON.stringify(inputLookup)};\n        var result = [];\n        for (var i = 0; i < rawInputs.length; i++) {\n          var rawInput = rawInputs[i];\n          var input = new Float32Array(${inputLookupLength});\n          for (var p in table) {\n            input[table[p]] = rawInput.hasOwnProperty(p) ? rawInput[p] : 0;\n          }\n          result.push(input);\n        }\n        return result;\n      }`;\n      }\n      function formatOutputData() {\n        if (!outputLookup) return '';\n        if (inputSize === 1) {\n          if (inputLookup === outputLookup) {\n            return `function lookupOutputPartial(output, input) {\n            var table = ${JSON.stringify(outputLookup)};\n            var offset = input.length;\n            var result = {};\n            var i = 0;\n            for (var p in table) {\n              if (i++ < offset) continue;\n              result[p] = output[table[p] - offset][0];\n            }\n            return result;\n          }`;\n          }\n          return `function lookupOutput(output) {\n          var table = ${JSON.stringify(outputLookup)};\n          var result = {};\n          for (var p in table) {\n            result[p] = output[table[p]][0];\n          }\n          return result;\n        }`;\n        }\n        return `function lookupOutput(output) {\n        var table = ${JSON.stringify(outputLookup)};\n        var result = {};\n        for (var p in table) {\n          result[p] = output[table[p]];\n        }\n        return result;\n      }`;\n      }\n      function toInner(fnString) {\n        // crude, but should be sufficient for now\n        // function() { body }\n        // crude, but should be sufficient for now\n        // function() { body }\n        const fnParts = fnString.toString().split('{');\n        fnParts.shift();\n        // body }\n        const fnBodyString = fnParts.join('{');\n        const fnBodyParts = fnBodyString.split('}');\n        fnBodyParts.pop();\n        // body\n        return fnBodyParts.join('}').split('\\n').join('\\n        ').replace('product.deltas[i] = 0;', '').replace('product.deltas[column] = 0;', '').replace('left.deltas[leftIndex] = 0;', '').replace('right.deltas[rightIndex] = 0;', '').replace('product.deltas = left.deltas.slice(0);', '');\n      }\n      function fileName(fnName) {\n        return `src/recurrent/matrix/${fnName.replace(/[A-Z]/g, function (value) {\n          return `-${value.toLowerCase()}`;\n        })}.js`;\n      }\n      const statesRaw = [];\n      const usedFunctionNames = {};\n      const innerFunctionsSwitch = [];\n      for (let i = 0, max = states.length; i < max; i++) {\n        const state = states[i];\n        statesRaw.push(`states[${i}] = {\n      name: '${state.forwardFn.name}',\n      left: ${state.left ? matrixToString(state.left, i) : 'undefined'},\n      right: ${state.right ? matrixToString(state.right, i) : 'undefined'},\n      product: ${matrixToString(state.product, i)}\n    }`);\n        const fnName = state.forwardFn.name;\n        if (!usedFunctionNames[fnName]) {\n          usedFunctionNames[fnName] = true;\n          if (state.name === 'input') {\n            innerFunctionsSwitch.push(`case '${fnName}':`);\n            innerFunctionsSwitch.push(inputLookup && inputSize === 1 ? 'product.weights = _i < input.length ? input[_i]: prevStates[prevStates.length - 1].product.weights;' : inputSize === 1 ? 'product.weights = [input[_i]];' : 'product.weights = input[_i];');\n            innerFunctionsSwitch.push('break;');\n          } else {\n            innerFunctionsSwitch.push(`        case '${fnName}':${fnName !== 'forwardFn' ? ` //compiled from ${fileName(fnName)}` : ''}\n          ${toInner(state.forwardFn.toString())}\n          break;`);\n          }\n        }\n      }\n      const forceForecast = inputSize === 1 && this.outputLookup;\n      const src = `\n  var input = ${this.inputLookup ? 'lookupInput(rawInput)' : 'rawInput'};\n  var json = ${jsonString};\n  var output = [];\n  var states = [];\n  var prevStates;\n  var state;\n  var max = ${forceForecast ? inputLookup === outputLookup ? inputLookupLength : `input.length + ${outputLookupLength - 1}` : 'input.length'};\n  for (var _i = 0; _i < max; _i++) {\n    prevStates = states;\n    states = [];\n    ${statesRaw.join(';\\n    ')};\n    for (var stateIndex = 0, stateMax = ${statesRaw.length}; stateIndex < stateMax; stateIndex++) {\n      state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n\n      switch (state.name) {\n${innerFunctionsSwitch.join('\\n')}\n      }\n    }\n    ${inputSize === 1 && inputLookup ? 'if (_i >= input.length - 1) { output.push(state.product.weights); }' : 'output = state.product.weights;'}\n  }\n  ${outputLookup ? outputLookup === inputLookup ? 'return lookupOutputPartial(output, input)' : 'return lookupOutput(output)' : inputSize === 1 ? 'return output[0]' : 'return output'};\n  ${formatInputData()}\n  ${formatOutputData()}\n\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = new Float32Array(rows * columns);\n  }\n  ${softmax.toString().replace('_2.default', 'Matrix')}\n  ${randomFloat.toString()}\n  ${sampleI.toString()}\n  ${maxI.toString()}`;\n      // eslint-disable-next-line\n      return new Function('rawInput', cb ? cb(src) : src);\n    }\n  }\n  const trainDefaults = {\n    ...trainDefaults$1\n  };\n  class GRUTimeStep extends RNNTimeStep {\n    getHiddenLayer(hiddenSize, prevSize) {\n      return getGRUHiddenLayer(hiddenSize, prevSize);\n    }\n    getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n      return getGRUEquation(equation, inputMatrix, previousResult, hiddenLayer);\n    }\n  }\n  class LSTM extends RNN {\n    getHiddenLayer(hiddenSize, prevSize) {\n      return getHiddenLSTMLayer(hiddenSize, prevSize);\n    }\n    getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n      return getLSTMEquation(equation, inputMatrix, previousResult, hiddenLayer);\n    }\n  }\n  function getHiddenLSTMLayer(hiddenSize, prevSize) {\n    return {\n      // gates parameters\n      // wix\n      inputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08),\n      inputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\n      inputBias: new Matrix(hiddenSize, 1),\n      // wfx\n      forgetMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08),\n      forgetHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\n      forgetBias: new Matrix(hiddenSize, 1),\n      // wox\n      outputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08),\n      outputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\n      outputBias: new Matrix(hiddenSize, 1),\n      // cell write params\n      // wcx\n      cellActivationMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08),\n      cellActivationHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\n      cellActivationBias: new Matrix(hiddenSize, 1)\n    };\n  }\n  function getLSTMEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    if (!hiddenLayer.inputMatrix || !hiddenLayer.inputHidden || !hiddenLayer.inputBias || !hiddenLayer.forgetMatrix || !hiddenLayer.forgetHidden || !hiddenLayer.forgetBias || !hiddenLayer.outputMatrix || !hiddenLayer.outputHidden || !hiddenLayer.outputBias || !hiddenLayer.cellActivationMatrix || !hiddenLayer.cellActivationHidden || !hiddenLayer.cellActivationBias) {\n      throw new Error('hiddenLayer does not have expected properties');\n    }\n    const sigmoid = equation.sigmoid.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n    const multiplyElement = equation.multiplyElement.bind(equation);\n    const tanh = equation.tanh.bind(equation);\n    const inputGate = sigmoid(add(add(multiply(hiddenLayer.inputMatrix, inputMatrix), multiply(hiddenLayer.inputHidden, previousResult)), hiddenLayer.inputBias));\n    const forgetGate = sigmoid(add(add(multiply(hiddenLayer.forgetMatrix, inputMatrix), multiply(hiddenLayer.forgetHidden, previousResult)), hiddenLayer.forgetBias));\n    // output gate\n    const outputGate = sigmoid(add(add(multiply(hiddenLayer.outputMatrix, inputMatrix), multiply(hiddenLayer.outputHidden, previousResult)), hiddenLayer.outputBias));\n    // write operation on cells\n    const cellWrite = tanh(add(add(multiply(hiddenLayer.cellActivationMatrix, inputMatrix), multiply(hiddenLayer.cellActivationHidden, previousResult)), hiddenLayer.cellActivationBias));\n    // compute new cell activation\n    const retainCell = multiplyElement(forgetGate, previousResult); // what do we keep from cell\n    const writeCell = multiplyElement(inputGate, cellWrite); // what do we write to cell\n    const cell = add(retainCell, writeCell); // new cell contents\n    // compute hidden state as gated, saturated cell activations\n    return multiplyElement(outputGate, tanh(cell));\n  }\n  class LSTMTimeStep extends RNNTimeStep {\n    getHiddenLayer(hiddenSize, prevSize) {\n      return getHiddenLSTMLayer(hiddenSize, prevSize);\n    }\n    getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n      return getLSTMEquation(equation, inputMatrix, previousResult, hiddenLayer);\n    }\n  }\n\n  /**\r\n   *\r\n   * @param start\r\n   * @param end\r\n   * @returns {Array}\r\n   */\n  function range(start, end) {\n    const result = [];\n    for (; start < end; start++) {\n      result.push(start);\n    }\n    return result;\n  }\n  function toArray(values) {\n    if (Array.isArray(values)) {\n      return Float32Array.from(values);\n    }\n    return Float32Array.from(Object.values(values));\n  }\n  function drawInput({\n    pixelX,\n    pixelY,\n    radius,\n    inputs,\n    row,\n    line,\n    fontSize,\n    fontClassName\n  }) {\n    let svg = `<rect\n              x=\"${pixelX / 2 - radius}\"\n              y=\"${pixelY / 2 + row * pixelY - radius}\"\n              width=\"${2 * radius}\"\n              height=\"${2 * radius}\"\n              stroke=\"black\"\n              stroke-width=\"1\"\n              fill=\"${inputs.color}\"\n              class=\"${inputs.className}\" />\n            <line\n              x1=\"${pixelX / 4}\"\n              y1=\"${pixelY / 2 + row * pixelY}\"\n              x2=\"${pixelX / 2 - radius}\"\n              y2=\"${pixelY / 2 + row * pixelY}\"\n              style=\"stroke:${line.color};stroke-width:${line.width}\"\n              class=\"${line.className}\" />`;\n    if (inputs.labels) {\n      svg += `<text\n              x=\"${pixelX / 8}\"\n              y=\"${pixelY / 2 + row * pixelY - 5}\"\n              fill=\"black\"\n              font-size=\"${fontSize}\"\n              class=\"${fontClassName}\">${inputs.labels[row]}</text>`;\n    }\n    return svg;\n  }\n  function drawNeuron({\n    pixelX,\n    pixelY,\n    row,\n    column,\n    radius,\n    hidden\n  }) {\n    return `<circle\n            cx=\"${pixelX / 2 + column * pixelX}\"\n            cy=\"${pixelY / 2 + row * pixelY}\"\n            r=\"${radius}\"\n            stroke=\"black\"\n            stroke-width=\"1\"\n            fill=\"${hidden.color}\"\n            class=\"${hidden.className}\" />`;\n  }\n  function drawOutput({\n    pixelX,\n    pixelY,\n    row,\n    column,\n    line,\n    outputs,\n    radius\n  }) {\n    return `<circle\n            cx=\"${pixelX / 2 + column * pixelX}\"\n            cy=\"${pixelY / 2 + row * pixelY}\"\n            r=\"${radius}\"\n            stroke=\"black\"\n            stroke-width=\"1\"\n            fill=\"${outputs.color}\"\n            class=\"${outputs.className}\" />\n          <line\n            x1=\"${pixelX / 2 + column * pixelX + radius}\"\n            y1=\"${pixelY / 2 + row * pixelY}\"\n            x2=\"${pixelX / 2 + column * pixelX + pixelX / 4}\"\n            y2=\"${pixelY / 2 + row * pixelY}\"\n            style=\"stroke:${line.color};stroke-width:${line.width}\"\n            class=\"${line.className}\" />`;\n  }\n  function drawBackwardConnections({\n    pixelX,\n    pixelY,\n    row,\n    column,\n    radius,\n    lineY,\n    line,\n    previousConnectionIndex\n  }) {\n    return `<line\n            x1=\"${pixelX / 2 + (column - 1) * pixelX + radius}\"\n            y1=\"${lineY / 2 + previousConnectionIndex * lineY}\"\n            x2=\"${pixelX / 2 + column * pixelX - radius}\"\n            y2=\"${pixelY / 2 + row * pixelY}\"\n            style=\"stroke:${line.color};stroke-width:${line.width}\"\n            class=\"${line.className}\" />`;\n  }\n  function neuralNetworkToInnerSVG(options) {\n    const {\n      sizes,\n      height,\n      width\n    } = options;\n    let svg = '';\n    const pixelX = width / sizes.length;\n    for (let column = 0; column < sizes.length; column++) {\n      const size = sizes[column];\n      const pixelY = height / size;\n      for (let row = 0; row < size; row++) {\n        if (column === 0) {\n          svg += drawInput({\n            pixelX,\n            pixelY,\n            row,\n            column,\n            ...options\n          });\n        } else {\n          if (column === sizes.length - 1) {\n            svg += drawOutput({\n              pixelX,\n              pixelY,\n              row,\n              column,\n              ...options\n            });\n          } else {\n            svg += drawNeuron({\n              pixelX,\n              pixelY,\n              row,\n              column,\n              ...options\n            });\n          }\n          const previousSize = sizes[column - 1];\n          const lineY = height / previousSize;\n          for (let previousConnectionIndex = 0; previousConnectionIndex < previousSize; previousConnectionIndex++) {\n            svg += drawBackwardConnections({\n              pixelX,\n              pixelY,\n              row,\n              column,\n              lineY,\n              previousConnectionIndex,\n              ...options\n            });\n          }\n        }\n      }\n    }\n    return svg;\n  }\n  function drawRecurrentConnections({\n    pixelX,\n    pixelY,\n    row,\n    column,\n    radius,\n    recurrentLine\n  }) {\n    const moveX = pixelX / 2 + column * pixelX + radius + 1;\n    const moveY = pixelY / 2 + row * pixelY;\n    const x = moveX - radius * 2 - 2;\n    const y = moveY;\n    const x1 = x + 100;\n    const y1 = y + 50;\n    const x2 = moveX - 100;\n    const y2 = moveY + 50;\n    return `<path\n              d=\"M ${moveX} ${moveY} C ${x1} ${y1}, ${x2} ${y2}, ${x} ${y}\"\n              stroke=\"${recurrentLine.color}\"\n              stroke-width=\"${recurrentLine.width}\"\n              fill=\"transparent\"\n              stroke-linecap=\"round\"\n              marker-end=\"url(#arrow)\"\n              class=\"${recurrentLine.className}\" />`;\n  }\n  function rnnToInnerSVG(options) {\n    const {\n      width,\n      height,\n      recurrentLine,\n      sizes,\n      radius\n    } = options;\n    const pixelX = width / sizes.length;\n    let svg = `<defs>\n              <marker id=\"arrow\" markerWidth=\"10\" markerHeight=\"10\" refX=\"8\" refY=\"3\" orient=\"auto\" markerUnits=\"strokeWidth\">\n                <path d=\"M0,0 L0,6 L9,3 z\" fill=\"${recurrentLine.color}\" />\n              </marker>\n            </defs>`;\n    svg += neuralNetworkToInnerSVG(options);\n    for (let column = 1; column < sizes.length; column++) {\n      const size = sizes[column];\n      const pixelY = height / size;\n      for (let row = 0; row < size; row++) {\n        svg += drawRecurrentConnections({\n          pixelX,\n          pixelY,\n          row,\n          column,\n          radius,\n          recurrentLine\n        });\n      }\n    }\n    return svg;\n  }\n  function getFeedForwardLayers(network) {\n    const {\n      options\n    } = network;\n    if (!options) {\n      throw new Error('options not defined');\n    }\n    if (!options.inputLayer) {\n      throw new Error('options.inputLater not defined');\n    }\n    if (!options.hiddenLayers) {\n      throw new Error('options.hiddenLayers not defined');\n    }\n    if (options.hiddenLayers.length < 1) {\n      throw new Error('options.hiddenLayers is empty');\n    }\n    if (!options.outputLayer) {\n      throw new Error('options.outputLayer not defined');\n    }\n    const inputLayer = options.inputLayer();\n    const hiddenLayers = [];\n    hiddenLayers.push(options.hiddenLayers[0](inputLayer, 0));\n    for (let i = 1; i < options.hiddenLayers.length; i++) {\n      hiddenLayers.push(options.hiddenLayers[i](hiddenLayers[i - 1], i));\n    }\n    const outputLayer = options.outputLayer(hiddenLayers[hiddenLayers.length - 1], hiddenLayers.length);\n    return {\n      inputSize: inputLayer.height,\n      hiddenLayers: hiddenLayers.map(hiddenLayer => hiddenLayer.height),\n      outputSize: outputLayer.height\n    };\n  }\n  function getRecurrentLayers(network) {\n    const hiddenLayers = [];\n    const {\n      options\n    } = network;\n    if (!options.inputLayer) {\n      throw new Error('inputLayer not defined');\n    }\n    if (!options.outputLayer) {\n      throw new Error('outputLayer not defined');\n    }\n    const inputLayer = options.inputLayer();\n    hiddenLayers.push(options.hiddenLayers[0](inputLayer, recurrentZeros(), 0));\n    for (let i = 1; i < options.hiddenLayers.length; i++) {\n      hiddenLayers.push(options.hiddenLayers[i](hiddenLayers[i - 1], recurrentZeros(), i));\n    }\n    const outputLayer = options.outputLayer(hiddenLayers[hiddenLayers.length - 1], -1);\n    return {\n      inputSize: inputLayer.height,\n      hiddenLayers: hiddenLayers.map(hiddenLayer => hiddenLayer.height),\n      outputSize: outputLayer.height\n    };\n  }\n  function wrapOuterSVG(svgBody, width, height) {\n    // language=html\n    return `<svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            version=\"1.1\"\n            width=\"${width}\"\n            height=\"${height}\">${svgBody}</svg>`;\n  }\n  function getNeuralNetworkJSONSizes(json) {\n    return json.sizes;\n  }\n  function getNeuralNetworkSizes(net) {\n    const {\n      options,\n      sizes\n    } = net;\n    const {\n      inputSize,\n      outputSize,\n      hiddenLayers\n    } = options;\n    if (!sizes) {\n      if (typeof inputSize === 'number' && inputSize < 1) {\n        throw new Error('inputSize not set');\n      }\n      if (typeof outputSize === 'number' && outputSize < 1) {\n        throw new Error('outputSize not set');\n      }\n      if (hiddenLayers === null || hiddenLayers === void 0 ? void 0 : hiddenLayers.some(v => v < 1)) {\n        throw new Error('hiddenLayers not set');\n      }\n    }\n    return typeof inputSize === 'number' && Array.isArray(hiddenLayers) && typeof outputSize === 'number' ? [inputSize].concat(hiddenLayers).concat([outputSize]) : sizes;\n  }\n  function getRNNSizes(net) {\n    const {\n      options\n    } = net;\n    const {\n      inputSize,\n      outputSize,\n      hiddenLayers\n    } = options;\n    return [inputSize].concat(hiddenLayers).concat([outputSize]);\n  }\n  function defaultOptions() {\n    return {\n      line: {\n        width: 0.5,\n        color: 'black',\n        className: 'connection'\n      },\n      recurrentLine: {\n        width: 1,\n        color: 'red',\n        className: 'recurrence'\n      },\n      inputs: {\n        color: 'rgba(0, 128, 0, 0.5)',\n        labels: null,\n        className: 'input'\n      },\n      outputs: {\n        color: 'rgba(100, 149, 237, 0.5)',\n        className: 'output'\n      },\n      hidden: {\n        color: 'rgba(255, 127, 80, 0.5)',\n        className: 'hidden-neuron'\n      },\n      fontSize: '14px',\n      fontClassName: 'label',\n      radius: 8,\n      width: 400,\n      height: 250,\n      sizes: []\n    };\n  }\n  function toSVG(net, options) {\n    const mergedOptions = {\n      ...defaultOptions(),\n      ...options\n    };\n    const {\n      width,\n      height,\n      inputs\n    } = mergedOptions;\n    // Get network size array for NeuralNetwork or NeuralNetworkGPU\n    let sizes = [];\n    if (net instanceof NeuralNetwork || net instanceof NeuralNetworkGPU) {\n      sizes = getNeuralNetworkSizes(net);\n    }\n    // get network size for Recurrent\n    else if (net instanceof Recurrent) {\n      const {\n        inputSize,\n        hiddenLayers,\n        outputSize\n      } = getRecurrentLayers(net);\n      sizes = [inputSize].concat(hiddenLayers).concat([outputSize]);\n    }\n    // get network size for FeedForward\n    else if (net instanceof FeedForward) {\n      const {\n        inputSize,\n        hiddenLayers,\n        outputSize\n      } = getFeedForwardLayers(net);\n      sizes = [inputSize].concat(hiddenLayers).concat([outputSize]);\n    }\n    // handle json, recurrent first\n    else if (net instanceof RNN || net instanceof LSTM || net instanceof GRU || net instanceof RNNTimeStep || net instanceof LSTMTimeStep || net instanceof GRUTimeStep) {\n      return wrapOuterSVG(rnnToInnerSVG({\n        ...mergedOptions,\n        sizes: checkSizes(getRNNSizes(net), inputs.labels)\n      }), width, height);\n    }\n    // handle json, NeuralNetwork\n    else if (net.hasOwnProperty('type')) {\n      switch (net.type) {\n        case 'NeuralNetwork':\n        case 'NeuralNetworkGPU':\n          return wrapOuterSVG(neuralNetworkToInnerSVG({\n            ...mergedOptions,\n            sizes: checkSizes(getNeuralNetworkJSONSizes(net), inputs.labels)\n          }), width, height);\n        case 'RNN':\n        case 'GRU':\n        case 'LSTM':\n        case 'RNNTimeStep':\n        case 'GRUTimeStep':\n        case 'LSTMTimeStep':\n          return wrapOuterSVG(rnnToInnerSVG({\n            ...mergedOptions,\n            sizes: checkSizes(getRNNSizes(net), inputs.labels)\n          }), width, height);\n        default:\n          throw new Error('unrecognized network');\n      }\n    } else if (net.hasOwnProperty('inputSize') && net.hasOwnProperty('hiddenLayers') && net.hasOwnProperty('outputSize')) {\n      const {\n        inputSize,\n        hiddenLayers,\n        outputSize\n      } = net;\n      sizes = [inputSize, ...hiddenLayers, outputSize];\n    } else if (net.hasOwnProperty('sizes')) {\n      sizes = net.sizes;\n    } else {\n      throw new Error('unrecognized network');\n    }\n    return wrapOuterSVG(neuralNetworkToInnerSVG({\n      ...mergedOptions,\n      sizes: checkSizes(sizes, inputs.labels)\n    }), width, height);\n  }\n  function checkSizes(sizes, labels) {\n    if (!sizes) {\n      throw new Error('sizes not set');\n    }\n    if (sizes.some(size => size < 1)) {\n      throw new Error('sizes not set correctly');\n    }\n    if (labels && labels.length !== sizes[0]) {\n      throw new Error('not enough labels for inputs');\n    }\n    return sizes;\n  }\n  const recurrent = {\n    RNNTimeStep,\n    LSTMTimeStep,\n    GRUTimeStep,\n    RNN,\n    LSTM,\n    GRU\n  };\n  const utilities = {\n    max,\n    mse: mse$1,\n    ones: ones$1,\n    ones2D,\n    random: random$1,\n    randomWeight,\n    randos,\n    range,\n    toArray,\n    DataFormatter,\n    zeros: zeros$1,\n    toSVG\n  };\n  exports.AE = AE;\n  exports.CrossValidate = CrossValidate;\n  exports.FeedForward = FeedForward;\n  exports.NeuralNetwork = NeuralNetwork;\n  exports.NeuralNetworkGPU = NeuralNetworkGPU;\n  exports.Recurrent = Recurrent;\n  exports.activation = index$1;\n  exports.layer = layer;\n  exports.layerTypes = layerTypes;\n  exports.likely = likely;\n  exports.lookup = lookup;\n  exports.praxis = index;\n  exports.recurrent = recurrent;\n  exports.utilities = utilities;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"names":["activate$3","activate","weight","Math","max","measure$3","measure","delta","activate$2","value","exp","measure$2","error","activate$1","tanh","measure$1","f","module","exports","r","e","n","t","o","i","c","commonjsRequire","u","a","Error","code","p","call","length","require","global","factory","self","acorn","reservedWords","strict","strictBind","ecma5AndLessKeywords","keywords","keywordRelationalOperator","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","set","pos","isIdentifierStart","astral","test","String","fromCharCode","isIdentifierChar","TokenType","label","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","name","prec","keywords$1","kw","options","types","num","regexp","string","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","assign","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","source","isNewLine","ecma2019String","nonASCIIwhitespace","skipWhiteSpace","ref","Object","prototype","hasOwnProperty","toString","has","obj","propName","isArray","Array","wordsRegexp","words","replace","Position","line","col","column","offset","SourceLocation","start","end","sourceFile","getLineInfo","input","cur","lastIndex","match","exec","index","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowHashBang","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","getOptions","opts","opt","tokens","token","push","pushComment","array","block","text","startLoc","endLoc","comment","type","loc","range","SCOPE_TOP","SCOPE_FUNCTION","SCOPE_VAR","SCOPE_ASYNC","SCOPE_GENERATOR","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","functionFlags","async","generator","BIND_NONE","BIND_VAR","BIND_LEXICAL","BIND_FUNCTION","BIND_SIMPLE_CATCH","BIND_OUTSIDE","Parser","startPos","reserved","v","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","lineStart","lastIndexOf","curLine","slice","split","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","yieldPos","awaitPos","awaitIdentPos","labels","undefinedExports","skipLineComment","scopeStack","enterScope","regexpState","prototypeAccessors","inFunction","configurable","inGenerator","inAsync","allowSuper","allowDirectSuper","treatFunctionsAsVar","parse","node","startNode","nextToken","parseTopLevel","get","currentVarScope","flags","currentThisScope","treatFunctionsAsVarInScope","currentScope","inNonArrowFunction","extend","plugins","len","arguments","cls","parseExpressionAt","parser","parseExpression","tokenizer","defineProperties","pp","literal","eat","next","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$1","body","stmt","parseStatement","list","keys","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","charCodeAt","ident","isAsyncFunction","charAt","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseExpressionStatement","parseImport","parseExport","maybeName","parseLabeledStatement","isBreak","parseIdent","lab","pop","parseParenExpression","awaitAt","parseFor","init$1","parseVar","declarations","await","parseForIn","init","toAssignable","checkLVal","isAsync","declarationPosition","parseFunction","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","exitScope","empty","handler","clause","param","parseBindingAtom","simple","finalizer","object","i$1","label$1","statementStart","indexOf","createNewLexicalScope","update","isForIn","id","left","right","parseMaybeAssign","isFor","decl","parseVarId","FUNC_NULLABLE_ID","statement","allowExpressionBody","initFunction","oldYieldPos","oldAwaitPos","oldAwaitIdentPos","parseFunctionParams","parseFunctionBody","params","parseBindingList","isStatement","oldStrict","parseClassId","parseClassSuper","classBody","hadConstructor","element","parseClassElement","superClass","constructorAllowsSuper","this$1","method","tryContextual","k","noLineBreak","key","computed","startNodeAt","static","isGenerator","parsePropertyName","allowsDirectSuper","parseClassMethod","parseMethod","parseExprSubscripts","parseExprAtom","checkExport","fNode","declaration","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkLocalExport","checkPatternExport","pat","properties","prop","list$1","elements","elt","decls","nodes","first","exported","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","raw","pp$2","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","declareName","pp$3","checkPropClash","propHash","shorthand","proto","other","redefinition","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","result","parseSubscripts","base","noCalls","maybeAsyncArrow","parseSubscript","property","parseExprList","parseArrowExpression","callee","tag","quasi","parseTemplate","isTagged","readRegexp","canBeArrow","parseLiteral","regex","pattern","parseParenAndDistinguishExpression","parseNew","parseExprImport","parseDynamicImport","errorPos","bigint","val","innerStartPos","innerStartLoc","lastIsComma","spreadStart","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","item","empty$1","meta","isImport","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","isArrowFunction","isMethod","isExpression","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","allowDuplicates","nameHash","re","liberal","delegate","pp$4","message","err","SyntaxError","raisedAt","pp$5","Scope","var","lexical","functions","scope","redeclared","scope$1","scope$2","scope$3","Node","pp$6","TokContext","isExpr","preserveSpace","override","types$1","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","parent","curContext","inGeneratorContext","out","statementParens","allowed","ecma9BinaryProperties","ecma10BinaryProperties","ecma11BinaryProperties","unicodeBinaryProperties","unicodeGeneralCategoryValues","ecma9ScriptValues","ecma10ScriptValues","ecma11ScriptValues","unicodeScriptValues","data","buildUnicodeData","d","binary","nonBinary","General_Category","Script","Script_Extensions","gc","sc","scx","pp$8","RegExpValidationState","validFlags","unicodeProperties","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","reset","unicode","at","s","l","nextIndex","current","lookahead","advance","ch","codePointToString","validateRegExpFlags","state","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","min","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","isSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","isRegExpIdentifierStart","isRegExpIdentifierPart","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","isDecimalDigit","isControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","isValidUnicode","isCharacterClassEscape","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","isOctalDigit","regexp_eatClassControlLetter","isHexDigit","hexToInt","regexp_eatOctalDigit","n1","n2","Token","pp$9","ignoreEscapeSequenceInKeyword","getToken","Symbol","iterator","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","finishOp","readToken_mult_modulo_exp","size","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readRadixNumber","readString","codePointToString$1","str","escaped","inClass","flagsStart","readWord1","readInt","radix","total","Infinity","BigInt","startsWithDot","octal","str$1","val$1","parseInt","parseFloat","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","substr","word","escStart","esc","version","tokTypes","keywordTypes","tokContexts","defineProperty","glWiretap","gl","contextName","throwGetError","useTrackablePrimitives","readPixelsFile","recording","variables","onReadPixels","onUnrecognizedArgumentLookup","proxy","Proxy","listen","contextVariables","entityNames","imageCount","indent","readPixelsVariableName","addComment","checkThrowError","insertVariable","setIndent","getContextVariableName","getError","variableName","extension","getExtension","tappedExtension","glExtensionWiretap","getEntity","targetVariableName","getVariableName","constructor","argumentAsStrings","join","writePPM","readPixels","apply","argumentsToString","addVariable","drawBuffers","methodCallToString","trackablePrimitive","spaces","repeat","width","height","sourceVariable","imageVariable","args","extensionEntityNames","getExtensionEntity","drawBuffersWEBGL","from","map","arg","argumentToString","hasLines","hasSingleQuotes","hasDoubleQuotes","JSON","stringify","instantiationString","window","setupArguments","newArguments","toArray","mock1D","row","Float32Array","output","x","thread","y","z","_fn","mock2D","matrix","mock2DGraphical","mock3D","cube","apiDecorate","kernel","setOutput","setupOutput","graphical","setupGraphical","toJSON","setConstants","constants","setGraphical","setCanvas","canvas","setContext","destroy","validateSettings","Promise","resolve","reject","getPixels","flip","flipPixels","_imageData","color","g","b","floor","_colorData","mockMethod","methods","createImageData","Uint8ClampedArray","gpuMock","fn","settings","pixels","halfHeight","bytesPerRow","temp","topOffset","bottomOffset","subarray","copyWithin","utils","alias","fnString","Function","getArgumentNamesFromString","getFunctionBodyFromString","FunctionNode","CPUFunctionNode","astFunction","ast","retArr","isRootKernel","argumentNames","argumentName","astGeneric","astReturnStatement","returnType","getType","leadingReturnStatement","followingReturnStatement","isSubKernel","astLiteral","isNaN","astErrorOutput","astBinaryExpression","astIdentifierExpression","idtNode","astForStatement","forNode","initArr","testArr","updateArr","bodyArr","isSafe","pushState","includes","popState","iVariableName","getInternalVariableName","astWhileStatement","whileNode","astDoWhileStatement","doWhileNode","astAssignmentExpression","assNode","getDeclaration","assignable","astBlockStatement","bNode","isState","astVariableDeclaration","varDecNode","info","valueType","astIfStatement","ifNode","astSwitchStatement","astThisExpression","tNode","astMemberExpression","mNode","signature","xProperty","yProperty","zProperty","origin","getMemberExpressionDetails","markupName","isInput","constant","constantTypes","argumentSizes","dynamicArguments","astCallExpression","functionName","astMemberExpressionUnroll","calledFunctions","isAstMathFunction","onFunctionCall","targetTypes","lookupFunctionArgumentTypes","argumentType","triggerImplyArgumentType","astArrayExpression","arrNode","arrLen","astDebuggerStatement","constantsToString","results","cpuKernelString","cpuKernel","header","thisProperties","beforeReturn","useFunctionKeyword","colorFn","flattenFunctionToString","thisLookup","propertyName","findDependency","getPixelsFn","constantKeys","argumentTypes","flattenedImageTo3DArray","_imageTo3DArray","doNotDefine","flattenedImageTo2DArray","_mediaTo2DArray","_kernelString","Kernel","FunctionBuilder","CPUKernel","getFeatures","features","freeze","kernelMap","isIntegerDivisionAccurate","isSupported","isContextMatch","mode","nativeFunctionArguments","nativeFunctionReturnType","combineKernels","combinedKernel","getSignature","mergeSettings","_prependedString","translatedSources","initCanvas","document","createElement","OffscreenCanvas","initContext","getContext","initPlugins","argType","getVariableType","strictIntegers","getDimensions","checkOutput","translateSource","subKernels","functionBuilder","fromKernel","getPrototypes","getKernelResultType","build","built","setupConstants","kernelString","getKernelString","debug","console","log","run","bind","buildSignature","kernelThreadString","filter","shift","_getLoopMaxString","injectedNative","_resultKernelHeader","_processConstants","_earlyThrows","_processArguments","_graphicalKernelBody","_resultKernelBody","loopMaxIterations","immutable","pipeline","arrayArguments","checks","checkSubKernels","_mapSubKernels","subKernel","media","videoWidth","videoHeight","ctx","pixelsData","ImageData","drawImage","getImageData","imageArray","pixel","images","imagesArray","_mutableKernel1DResults","_mutableKernel2DResults","_mutableKernel3DResults","_resultMutableKernel1DLoop","_resultImmutableKernel1DLoop","_kernelOutput","_resultMutableKernel2DLoop","_resultImmutableKernel2DLoop","_resultMutableKernel3DLoop","_resultImmutableKernel3DLoop","_graphicalKernel2DLoop","_graphicalOutput","_getKernelResultTypeConstructorString","constructorString","removeCanvasReference","destroyContext","json","functionNodes","prependString","hasPrependString","extraNodeOptions","kernelArguments","kernelConstants","argumentBitRatios","constantBitRatios","nativeFunctions","optimizeFloatMemory","precision","dynamicOutput","kernelConstant","needsArgumentType","assignArgumentType","lookupReturnType","requestingNode","lookupFunctionArgumentName","argumentIndex","lookupFunctionArgumentBitRatio","triggerImplyArgumentBitRatio","calleeFunctionName","assignArgumentBitRatio","trackFunctionCall","onNestedFunction","nestedFunction","nodeOptions","traceFunctionAST","addFunctionNode","rootNodeOptions","fromJSON","rootNode","subKernelNodes","functionMap","nativeFunctionNames","lookupChain","functionNodeDependencies","functionCalls","nativeFunction","functionNode","traceFunctionCalls","retList","nativeFunctionIndex","dependantNativeFunctionName","splice","functionIndex","dependantFunctionName","getPrototypeString","getPrototypesFromFunctionNames","reverse","getStringFromFunctionNames","functionList","ret","nativeIndex","jsonFunctionNodes","jsonFunctionNode","getString","_isNativeFunction","_lookupNativeFunctionReturnType","_isFunction","_getFunction","j","getJsAST","Boolean","_getNativeFunction","bitRatio","fnNode","calleeNode","calleeBitRatio","Set","add","getSubKernelResultType","subKernelNode","called","functionCallIndex","functionCall","getReturnTypes","FunctionTracer","getFunctionNameFromString","identifiers","contexts","states","strictTypingChecking","fixIntegerDivisionAccuracy","literalTypes","validate","_string","_internalVariableNames","isFunctionString","isIdentifierConstant","firstExpression","inParser","functionAST","inForLoopInit","inForLoopTest","dependencies","getDependencies","realType","isSafeDependencies","identifier","getLookupType","typeLookupMap","getConstantType","constantName","trim","childType","literalKey","astKey","Number","isInteger","inferArgumentTypesIfNeeded","getVariableSignature","rightType","lastType","isAstVariable","getCheckVariableType","findIdentifierOrigin","variableSignature","isAstMathVariable","lastReturn","findLastReturn","mathProperties","mathFunctions","every","dependency","isNotSafe","details","returnRawValue","unshift","signatureString","allowedExpressions","astFunctionDeclaration","astFunctionExpression","astExpressionStatement","astEmptyStatement","astBreakStatement","astContinueStatement","astVariableDeclarator","astSequenceExpression","astUnaryExpression","astUpdateExpression","astLogicalExpression","astConditionalExpression","debugString","getAstString","leadingSource","splitLines","lineBefore","isChildFunction","esNode","eNode","brNode","crNode","iVarDecNode","sNode","sequenceResult","expressionResult","uNode","unaryResult","checkAndUpconvertBitwiseUnary","logNode","astToFind","stack","atNode","separator","trackIdentifiers","memberExpression","runningContexts","functionContexts","returnStatements","trackedIdentifiers","newFunctionContext","scan","hasState","currentFunctionContext","currentContext","newContext","useFunctionContext","functionContext","getIdentifiers","previousRunningContext","suggestedType","normalizeDeclarations","testIdentifiers","toStringWithoutUtils","glKernelString","originKernel","setupContextString","destroyContextString","postResult","targetName","subKernelsResultVariableSetup","getRenderString","subKernelsResultIndex","findKernelValue","tactic","checkContext","forEach","kernelArgument","uploadValue","imageIndex","texture","flattenTo","flatten2dArrayTo","flatten3dArrayTo","flatten4dArrayTo","renderOutput","renderTexture","formatValues","varName","renderKernels","getStringValueHandler","framebufferName","framebuffer","textureName","getToArrayString","mappedTextures","subKernelResult","subKernelTextureName","rendered","getGetPixelsString","constantsUpload","readBackValue","kernelResult","flattenedFunctions","isDeclaration","kernelValues","values","uploadedValues","HTMLImageElement","kernelValue","variableIndex","variable","GLTextureArray2Float","GLTextureArray2Float2D","GLTextureArray2Float3D","GLTextureArray3Float","GLTextureArray3Float2D","GLTextureArray3Float3D","GLTextureArray4Float","GLTextureArray4Float2D","GLTextureArray4Float3D","GLTextureFloat","GLTextureFloat2D","GLTextureFloat3D","GLTextureMemoryOptimized","GLTextureMemoryOptimized2D","GLTextureMemoryOptimized3D","GLTextureUnsigned","GLTextureUnsigned2D","GLTextureUnsigned3D","GLTextureGraphical","GLKernel","getIsFloatRead","testContext","testCanvas","getIsIntegerDivisionAccurate","kernelFunction","v1","v2","getIsSpeedTacticSupported","round","isDrawBuffers","getIsDrawBuffers","isFloatRead","isSpeedTacticSupported","isTextureFloat","getIsTextureFloat","channelCount","getChannelCount","maxTextureSize","getMaxTextureSize","lowIntPrecision","getShaderPrecisionFormat","FRAGMENT_SHADER","LOW_INT","lowFloatPrecision","LOW_FLOAT","mediumIntPrecision","MEDIUM_INT","mediumFloatPrecision","MEDIUM_FLOAT","highIntPrecision","HIGH_INT","highFloatPrecision","HIGH_FLOAT","setupFeatureChecks","getVariablePrecisionString","setFixIntegerDivisionAccuracy","fix","setPrecision","setFloatTextures","warnDeprecated","floatTextures","isStartingVariableName","isVariableChar","char","nextChar","typeMap","lastKernel","texSize","threadDim","w","h","ceil","RGBA","FLOAT","bytes","Uint8Array","UNSIGNED_BYTE","buffer","splitArray","transferValues","TextureConstructor","renderRawOutput","translatedSource","compiledFragmentShader","compiledVertexShader","switchingKernels","_textureSwitched","_mappedTextureSwitched","checkTextureSize","pickRenderStrategy","readPackedPixelsToUint8Array","readPackedPixelsToFloat32Array","renderKernelsToTextures","requestFallback","renderKernelsToArrays","renderValues","erect3DPackedFloat","erect2DPackedFloat","erectPackedFloat","readFloatPixelsToFloat32Array","erectMemoryOptimized3DFloat","erectMemoryOptimized2DFloat","erectMemoryOptimizedFloat","erect3DArray2","erect2DArray2","erectArray2","erect3DArray3","erect2DArray3","erectArray3","erect3DArray4","erect2DArray4","erectArray4","erect3DFloat","erect2DFloat","erectFloat","getMainResultTexture","getMainResultNumberTexture","getMainResultArray2Texture","getMainResultArray3Texture","getMainResultArray4Texture","getMainResultKernelNumberTexture","getMainResultSubKernelNumberTexture","getMainResultKernelArray2Texture","getMainResultSubKernelArray2Texture","getMainResultKernelArray3Texture","getMainResultSubKernelArray3Texture","getMainResultKernelArray4Texture","getMainResultSubKernelArray4Texture","getMainResultGraphical","getMainResultMemoryOptimizedFloats","getMainResultPackedPixels","getMainResultString","linesToString","getFloatTacticDeclaration","variablePrecision","getIntTacticDeclaration","getSampler2DTacticDeclaration","getSampler2DArrayTacticDeclaration","clone","resetSwitchingKernels","existingValue","newOutput","toKernelOutput","newThreadDim","newTexSize","getKernelTextureSize","oldTexSize","oldPrecision","newPrecision","warn","switchKernels","needed","bindFramebuffer","FRAMEBUFFER","updateMaxTexSize","viewport","maxTexSize","delete","_setupOutputTexture","_setupSubOutputTextures","reason","textureSize","isInt","low","medium","high","requiredSize","log2","rangeMax","updateTextureArgumentRefs","prevArg","_refs","mappedTexture","onActivate","previousKernel","int","float","vec2","vec3","vec4","GLTexture","textureType","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","_deleted","Texture","beforeMutate","newTexture","cloneTexture","selectTexture","target","createTexture","texImage2D","internalFormat","textureFormat","copyTexSubImage2D","clear","bindTexture","clearColor","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","deleteTexture","_framebuffer","getRawValueFramebuffer","activeTexture","TEXTURE15","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","WebGLKernel","testExtensions","HeadlessGLKernel","preserveDrawingBuffer","STACKGL_resize_drawingbuffer","STACKGL_destroy_context","OES_texture_float","OES_texture_float_linear","OES_element_index_uint","WEBGL_draw_buffers","WEBGL_color_buffer_float","getParameter","RENDERER","MAX_DRAW_BUFFERS_WEBGL","MAX_TEXTURE_SIZE","initExtensions","extensions","fallbackRequested","resize","destroyExtensions","KernelValue","onRequestContextHandle","onUpdateValueMismatch","undefined","contextHandle","forceUploadEachRun","getSource","updateValue","Input","useLegacyEncoder","onRequestFallback","forceUploadKernelConstants","gpu","addFunction","addNativeFunction","functionToIGPUFunction","splitArgumentTypes","Int32Array","getBitRatio","needsConstantTypes","setOptimizeFloatMemory","setDebug","setLoopMaxIterations","setConstantTypes","setFunctions","setNativeFunctions","setInjectedNative","setPipeline","setDimensions","setOutputToTexture","setImmutable","setStrictIntegers","setDynamicOutput","setHardcodeConstants","setDynamicArguments","setUseLegacyEncoder","setWarnVarUsage","getCanvas","getWebGl","setArgumentTypes","setTactic","addSubKernel","removeCanvasReferences","Int8Array","Uint16Array","Int16Array","argumentsTypes","pluginNames","plugin","Constructor","getArgumentTypes","sourceString","argumentTypesObject","fragmentShader","E","WebGLFunctionNode","consequentType","alternateType","sanitizeName","castLiteralToFloat","castValueToInteger","castLiteralToInteger","checkAndUpconvertOperator","castValueToFloat","leftType","operatorMap","literalResult","literalType","bitwiseResult","checkAndUpconvertBitwiseOperators","upconvertableOperators","foundOperator","initString","initNeedsSemiColon","declarationSets","declarationSet","actualType","markupType","declarationResult","fallingThrough","defaultResult","movingDefaultToEnd","pastFirstIf","testType","cleanName","memberExpressionPropertyMarkup","memberExpressionXYZ","isMathFunction","functionMatch","functionReplace","targetType","subNode","WebGLKernelValueBoolean","WebGLKernelValueFloat","WebGLKernelValueInteger","WebGLKernelValueHTMLImage","WebGLKernelValueDynamicHTMLImage","WebGLKernelValueHTMLVideo","WebGLKernelValueDynamicHTMLVideo","WebGLKernelValueSingleInput","WebGLKernelValueDynamicSingleInput","WebGLKernelValueUnsignedInput","WebGLKernelValueDynamicUnsignedInput","WebGLKernelValueMemoryOptimizedNumberTexture","WebGLKernelValueDynamicMemoryOptimizedNumberTexture","WebGLKernelValueNumberTexture","WebGLKernelValueDynamicNumberTexture","WebGLKernelValueSingleArray","WebGLKernelValueDynamicSingleArray","WebGLKernelValueSingleArray1DI","WebGLKernelValueDynamicSingleArray1DI","WebGLKernelValueSingleArray2DI","WebGLKernelValueDynamicSingleArray2DI","WebGLKernelValueSingleArray3DI","WebGLKernelValueDynamicSingleArray3DI","WebGLKernelValueArray2","WebGLKernelValueArray3","WebGLKernelValueArray4","WebGLKernelValueUnsignedArray","WebGLKernelValueDynamicUnsignedArray","kernelValueMaps","unsigned","dynamic","single","lookupKernelValueType","WebGLKernelValue","WebGLKernelArray","checkSize","setup","requestTexture","setupTexture","defineTexture","onRequestTexture","onRequestIndex","dimensionsId","sizeId","setUniform2fv","setUniform3fv","setUniform4fv","setUniform1i","dimensions","setUniform3iv","setUniform2iv","inputTexture","getMemoryOptimizedFloatTextureSize","uploadArrayLength","setShape","getMemoryOptimizedPackedTextureSize","Type","getTransferArrayType","preUploadValue","setUniform1f","inputImage","initialValueConstructor","pixelStorei","UNPACK_FLIP_Y_WEBGL","Uint32Array","Float64Array","sameError","valueDimensions","TranserArrayType","mrud","vertexShader","canvases","maxTexSizes","WebGLRenderingContext","endianness","systemEndianness","argumentTextureCount","constantTextureCount","fragShader","vertShader","drawBuffersMap","onRequestSwitchKernel","textureCache","programUniformLocationCache","uniform1fCache","uniform1iCache","uniform2fCache","uniform2fvCache","uniform2ivCache","uniform3fvCache","uniform3ivCache","uniform4fvCache","uniform4ivCache","alpha","depth","antialias","pluginsToUse","usePlugin","some","pluginName","canvasIndex","needsArgumentTypes","textureIndexes","TEXTURE0","failureResult","enable","SCISSOR_TEST","getVertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getFragmentShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createProgram","attachShader","linkProgram","createFramebuffer","rawValueFramebuffers","vertices","texCoords","texCoordOffset","byteLength","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","bufferSubData","aPosLoc","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","aTexCoordLoc","useProgram","setupReturnTypes","scissor","setUniform2f","onBeforeRun","bindRenderbuffer","RENDERBUFFER","_replaceOutputTexture","drawArrays","TRIANGLE_STRIP","_replaceSubOutputTextures","getInternalFormat","getTextureFormat","format","cache","getUniformLocation","uniform1f","uniform1i","value1","value2","uniform2f","uniform2fv","uniform2iv","uniform3fv","uniform3iv","uniform4fv","setUniform4iv","uniform4iv","_getFragShaderArtifactMap","HEADER","_getHeaderString","LOOP_MAX","PLUGINS","_getPluginsString","CONSTANTS","_getConstantsString","DECODE32_ENDIANNESS","_getDecode32EndiannessString","ENCODE32_ENDIANNESS","_getEncode32EndiannessString","DIVIDE_WITH_INTEGER_CHECK","_getDivideWithIntegerCheckString","INJECTED_NATIVE","_getInjectedNative","MAIN_CONSTANTS","_getMainConstantsString","MAIN_ARGUMENTS","_getMainArgumentsString","KERNEL","MAIN_RESULT","FLOAT_TACTIC_DECLARATION","INT_TACTIC_DECLARATION","SAMPLER_2D_TACTIC_DECLARATION","SAMPLER_2D_ARRAY_TACTIC_DECLARATION","_getVertShaderArtifactMap","_getTextureCoordinate","getKernelResultDeclaration","getMainResultKernelPackedPixels","getMainResultSubKernelPackedPixels","channels","channel","getMainResultKernelMemoryOptimizedFloats","getMainResultSubKernelMemoryOptimizedFloats","replaceArtifacts","src","artifact","deleteBuffer","deleteFramebuffer","deleteShader","deleteProgram","textureCacheIndex","idx","kernels","loseContext","WebGL2FunctionNode","WebGL2KernelValueBoolean","WebGL2KernelValueFloat","WebGL2KernelValueInteger","WebGL2KernelValueHTMLImage","WebGL2KernelValueDynamicHTMLImage","WebGL2KernelValueHTMLImageArray","WebGL2KernelValueDynamicHTMLImageArray","WebGL2KernelValueHTMLVideo","WebGL2KernelValueDynamicHTMLVideo","WebGL2KernelValueSingleInput","WebGL2KernelValueDynamicSingleInput","WebGL2KernelValueUnsignedInput","WebGL2KernelValueDynamicUnsignedInput","WebGL2KernelValueMemoryOptimizedNumberTexture","WebGL2KernelValueDynamicMemoryOptimizedNumberTexture","WebGL2KernelValueNumberTexture","WebGL2KernelValueDynamicNumberTexture","WebGL2KernelValueSingleArray","WebGL2KernelValueDynamicSingleArray","WebGL2KernelValueSingleArray1DI","WebGL2KernelValueDynamicSingleArray1DI","WebGL2KernelValueSingleArray2DI","WebGL2KernelValueDynamicSingleArray2DI","WebGL2KernelValueSingleArray3DI","WebGL2KernelValueDynamicSingleArray3DI","WebGL2KernelValueArray2","WebGL2KernelValueArray3","WebGL2KernelValueArray4","WebGL2KernelValueUnsignedArray","WebGL2KernelValueDynamicUnsignedArray","TEXTURE_2D_ARRAY","texImage3D","xOffset","yOffset","imageDepth","texSubImage3D","RGBA32F","WebGL2Kernel","EXT_color_buffer_float","WebGL2RenderingContext","MAX_DRAW_BUFFERS","R32F","RED","RG32F","RG","REPEAT","texStorage2D","lib","GPU","bindTo","kernelRunShortcut","kernelOrder","kernelTypes","internalKernels","disableValidation","enableValidation","isGPUSupported","isKernelMapSupported","isOffscreenCanvasSupported","Worker","importScripts","isWebGLSupported","isWebGL2Supported","isHeadlessGLSupported","isCanvasSupported","HTMLCanvasElement","isGPUHTMLImageArraySupported","isSinglePrecisionSupported","chooseKernel","ExternalKernel","createKernel","isFunction","devKernel","upgradeDeprecatedCreateKernelSettings","switchableKernels","settingsCopy","fallbackKernel","kernelRun","dynamicArgument","replaceKernel","reasons","_kernel","existingKernel","newKernel","mergedSettings","createKernelMap","argument2Type","firstKernel","injectNative","setTimeout","upgradedSettings","floatOutput","outputToTexture","outputImmutable","webGLKernelValueMaps","webGL2KernelValueMaps","mathRandom","shortcut","accept","replacementKernel","bindKernelToShortcut","allPropertiesOf","substring","__defineGetter__","__defineSetter__","functionReturnType","random","FUNCTION_NAME","STRIP_COMMENTS","ARGUMENT_NAMES","_systemEndianness","getSystemEndianness","ArrayBuffer","funcObj","toLowerCase","funcStr","fnStr","isActiveClone","nodeName","ImageBitmap","texelCount","closestSquareDimensions","sqrt","totalArea","roundTo","pad","dim","part","byteOffset","lines","props","getOwnPropertyNames","getPrototypeOf","oldName","newName","yResults","xStart","xEnd","zResults","xResults","xResultsMax","XResultsMax","flattened","functionDependencies","flatten","flat","lookup","foundSource","flattenedFunctionDependencies","functionDependency","normalizedDeclarations","declarationIndex","propertyIndex","subPropertyIndex","subProperty","elementIndex","splitHTMLImageToRGB","image","rKernel","gKernel","bKernel","aKernel","splitRGBAToCanvases","rgba","visualKernelR","visualKernelG","visualKernelB","visualKernelA","getMinifySafeName","dollarSign","doubleUnderscore","singleUnderscore","toTable","hashes","hash","reduce","memo","toHash","toTable2D","objects2D","table","valueIndex","objects","toInputTable2D","tableIndex","dataIndex","toOutputTable2D","arrayLength","toArrayShort","toArrays","toObject","toObjectPartial","limit","dataShape","shape","lastData","possibleNumber","addKeys","__assign","commonjsGlobal","thaw","Block","Thaw","items","_a","defaultSettings","each","isStopped","tick","timeout","thawing","clearTimeout","thaws","delay","enumerable","stopAll","stop","makeReady","insert","addArray","concat","insertArray","before","after","count","arraysToFloat32Arrays","arrays","inputOutputArraysToFloat32Arrays","arrayToFloat32Arrays","inputOutputArrayToFloat32Arrays","arrayToFloat32Array","inputOutputObjectsToFloat32Arrays","inputTable","outputTable","inputLength","outputLength","objectToFloat32Arrays","inputOutputObjectToFloat32Arrays","objectToFloat32Array","LookupTable","datum","mse$1","mse","errors","sum","randomWeight","randomFloat","gaussRandom","returnV","vVal","randomInteger","randomN","mu","std","randos","randos2D","randos3D","zeros$1","zeros","getTypedArrayFn","defaults$8","defaults","inputSize","outputSize","binaryThresh","trainDefaults$3","trainDefaults","activation","iterations","errorThresh","logPeriod","leakyReluAlpha","learningRate","momentum","callbackPeriod","beta1","beta2","epsilon","NeuralNetwork","trainOpts","sizes","outputLayer","biases","weights","outputs","deltas","changes","errorCheckInterval","inputLookup","inputLookupLength","outputLookup","outputLookupLength","_formatInput","_formatOutput","runInput","setActivation","calculateDeltas","biasChangesLow","biasChangesHigh","changesLow","changesHigh","updateTrainingOptions","hiddenLayers","initialize","layerIndex","nodeIndex","prevSize","praxis","_setupAdam","_runInputSigmoid","_calculateDeltasSigmoid","_runInputRelu","_calculateDeltasRelu","_runInputLeakyRelu","_calculateDeltasLeakyRelu","_runInputTanh","_calculateDeltasTanh","isRunnable","formattedInput","validateInput","layer","activeLayer","activeWeights","activeBiases","activeOutputs","activeSize","verifyIsInitialized","preparedData","merged","validateTrainingOptions","setLogMethod","validations","callback","getTrainOptsJSON","logTrainingStatus","status","calculateTrainingError","trainPattern","trainPatterns","trainingTick","endTime","Date","now","prepTraining","formatData","validateData","train","trainAsync","thawedTrain","browser","trainError","logErrorRate","adjustWeights","activeOutput","activeError","activeDeltas","nextLayer","currentSize","currentOutputs","nextWeights","nextDeltas","currentErrors","currentDeltas","incoming","activeDelta","activeChanges","change","_adjustWeightsAdam","currentChangesLow","currentChangesHigh","currentWeights","currentBiases","currentBiasChangesLow","currentBiasChangesHigh","gradient","changeLow","changeHigh","momentumCorrection","pow","gradientCorrection","biasGradient","biasChangeLow","biasChangeHigh","biasMomentumCorrection","biasGradientCorrection","addFormat","_b","isBinary","misclasses","errorSum","falsePos","falseNeg","truePos","trueNeg","actual","expected","misclass","recall","accuracy","jsonLayerWeights","layerWeights","jsonLayerBiases","layerBiases","jsonLayers","layers","toFunction","cb","needsVar","nodeHandle","bias","weightsArray","subNodeIndex","checkKeys","find","layersAsMath","gpuInstance","makeKernel","_gpuInstance","gpuBrowser","makeKernelMap","kernelInput","release","possibleTexture","fill","weightedSumSigmoid","inputs","weightedSumRelu","weightedSumLeakyRelu","weightedSumTanh","calcErrorOutput","calcDeltasSigmoid","calcDeltasRelu","calcDeltasLeakyRelu","calcDeltasTanh","calcError","calcChanges","previousChange","previousOutput","addWeights","addBiases","NeuralNetworkGPU","texturizeInputData","forwardPropagate","backwardPropagate","changesPropagate","biasesPropagate","getMSE","_addMSE","_divideMSESum","buildRunInput","buildCalculateDeltas","buildGetChanges","buildChangeBiases","buildGetMSE","prevSum","getChanges","changeBiases","weightedSum","calcDeltas","targets","previousOutputs","previousChanges","mseSum","outputTextures","texturizeOutputData","UntrainedNeuralNetworkError","neuralNetwork","AE","decodedSize","denoiser","denoise","decode","decoder","encode","encodedInput","encodedLayer","likelyIncludesAnomalies","anomalyThreshold","anomalies","denoised","abs","previousValue","mean","preprocessedData","createDecoder","encodedLayerIndex","CrossValidate","initClassifier","avgs","testTime","trainTime","stats","testSize","trainSize","sets","testPartition","trainSet","testSet","classifier","beginTrain","trainingStats","beginTest","testStats","endTest","network","shuffleArray","binaryStats","dclone","isBinaryStats","isBinaryPartitionResults","toNeuralNetwork","crossValidateJson","winningJSON","prev","isBinaryResults","mse2d","MeanSquaredError","calculate","addAbsolute","prevError","prevLayerErrors","divide","baseLayerDefaultSettings","praxisOpts","cleanupDeltas","BaseLayer","predictKernel","compareKernel","setupPraxis","title","initPraxis","setupKernels","isTraining","reuseKernels","predict","compare","targetValues","learn","toUntypedArray","zeros2D","zeros3D","Activation","inputLayer","Filter","filterCount","filterWidth","filterHeight","filters","filterDeltas","Internal","Modifier","Operator","inputLayer1","inputLayer2","compare1D","compare2D$5","compare2D","Target","InternalModel","EntryPoint","Model","oldWeights","BasePraxis","layerTemplate","update$2","defaultSettings$1","ArthurDeviationBiases","arthurDeviationBiases","updateChange","update$1","incomingWeights","inputDeltas","lastChange","inputDelta","weightsLayer","incomingLayer","deltaLayer","ArthurDeviationWeights","arthurDeviationWeights","getMomentum","decay","previousMomentum","clipByValue","previousMomenta","clippedDelta","clipValue","decayRate","smoothEps","regularizationStrength","defaults$7","MomentumRootMeanSquaredPropagation","momenta","momentumRootMeanSquaredPropagation","MRmsProp","mRmsProp","traverseLayersFrom","flattenLayers","checkSameSize","layer1","layer2","predict$8","inputWeights1","inputWeights2","Add","add$1","defaults$6","Random","predict$7","weights1","weights2","compareFromX","inputWeights","compareFromY","Multiply","compareKernel1","compareKernel2","inputLayer1Deltas","inputLayer2Deltas","newDeltas1","newDeltas2","multiply$1","multiply","predict2D$4","predict2D","predict3D$5","predict3D","compare2D$4","compare3D$4","compare3D","Sigmoid","sigmoid$1","sigmoid","arthurFeedForward","initWeightsPraxis","initBiasesPraxis","biasesLayer","multiplyLayer","addLayer","sigmoidLayer","weightsPraxis","getStride","stride","strideX","strideY","getPadding","padding","paddingX","paddingY","predict$6","startFilterX","startInputX","endFilterX","inputWidth","startFilterY","startInputY","endFilterY","inputHeight","inputDepth","filterY","inputY","filterX","inputX","compareFilterDeltas$1","compareFilterDeltas","startDeltaX","endDeltaX","deltaWidth","startDeltaY","endDeltaY","deltaHeight","deltaY","deltaX","deltaZ","compareInputDeltas$1","compareInputDeltas","compareBiases$1","compareBiases","biasDeltas","defaults$5","Convolution","compareFilterDeltasKernel","compareInputDeltasKernel","compareBiasesKernel","_c","convolution","setDropout","dropout","trainingPredict","probability","predict$5","compare$3","dropouts","dropoutDefaults","Dropout","predictKernelMap","feedForward","predict$4","predict3D$4","compareInputDeltas3D","compareFilterDeltas3D","inputZ","FullyConnected","connectionCount","inputLayerDeltas","fullyConnected","predict$3","Negative","negative","predict$2","inputLayerWeights1","inputLayerWeights2","compare$2","MultiplyElement","multiplyElement$1","multiplyElement","ones$1","ones","ones2D","Ones","predict2D$3","predict3D$3","compare2D$3","compare3D$3","Tanh","tanh$1","Zeros","gru","recurrentInput","updateGateWeights","updateGatePeepholes","updateGateBias","updateGate","resetGateWeights","resetGatePeepholes","resetGateBias","resetGate","cellWeights","cellPeepholes","cellBias","cell","defaults$4","reshapeInput","predict1D","predict2D$2","predict3D$2","compare2D$2","compare3D$2","LeakyRelu","leakyRelu","lstmCell","inputGateWeights","inputGatePeepholes","inputGateBias","inputGate","forgetGateWeights","forgetGatePeepholes","forgetGateBias","forgetGate","outputGateWeights","outputGatePeepholes","outputGateBias","outputGate","memoryWeights","memoryPeepholes","memoryBias","memory","retainCell","writeCell","outputGateConnector","setSwitchY","setSwitchX","predict$1","unclippedStartInputX","unclippedStartInputY","unclippedEndInputX","unclippedEndInputY","endInputX","endInputY","largestValue","compare$1","switchX","switchY","xCenter","yCenter","invStrideX","invStrideY","startSourceX","startSourceY","endSourceX","outputWidth","endSourceY","outputHeight","backY","backX","switchXValue","switchYValue","defaults$3","Pool","pool","RecurrentInput","recurrentInputDeltas","recurrentInputWeights","RecurrentZeros","recurrentZeros","predict2D$1","compare2D$1","predict3D$1","compare3D$1","Relu","relu$1","relu","rnnCell","transition","Regression","regression","getMaxValue2D","maxInput","getMaxValue3D","getSum2D","getSum3D","getExponentials","getExponentials3D","exponentials","exponentialsSum","indicator","SoftMax","getExponentialsKernel","getMaxValueKernel","getSumKernel","maxValue","softMax","SVM","svm","Transpose","transpose","layerTypes","layerNameTypes","layerFromJSON","jsonLayer","layerNameType","Layer","defaults$2","trainDefaults$2","FeedForward","_inputLayer","_hiddenLayers","_outputLayer","_model","meanSquaredError","_updateTrainingOptions","_validateTrainingOptions","_setLogMethod","_connectOptionsLayers","inputLayerIndex","outputLayerIndex","_connectNewLayers","_connectHiddenLayers","previousLayer","hiddenLayer","initializeLayers","lastLayer","typeSafeInput","_prepTraining","continueTicking","calculateError","_calculateTrainingError","_trainPatterns","_trainingTick","formattedData","transferData","_trainPattern","resultArray","_calculateDeltas","tmp","inputDatumCheck","lookupTable","datumParam","outputDatumCheck","transferredData","transferInput","transferOutput","formattedDatum","inputLayer1Index","inputLayer2Index","getLayer","_d","likely","net","TypeError","maxProp","entries","RecurrentConnection","setLayer","Recurrent","_outputConnection","_layerSets","_hiddenLayerOutputIndices","_connectLayers","_connectLayersDeep","previousLayers","usedHiddenLayerOutputIndex","findInputLayer","layerSettings","previousHiddenLayerOutput","layerSet","initializeDeep","runInputs","lastLayerUsed","trainPatters","lastLayerSet","Matrix","rows","columns","getWeight","ix","setWeight","getDelta","setDelta","fromArray","deltasToArray","weightsToArray","iterate","rowIndex","columnIndex","callbacks","RandomMatrix","DataFormatter","maxThreshold","indexTable","characterTable","characters","specialIndexes","isSetup","buildCharactersFromIterable","buildTables","addInputOutput","addUnrecognized","tempCharactersTable","dataFormatterIndex","dataFormatterLength","iteratable","characterIndex","charactersLength","character","addCharacters","charactersTable","toIndexes","unrecognized","toIndexesInputOutput","toIndexesValue","toCharacters","indices","addSpecial","fromAllPrintable","fromAllPrintableInputOutput","dataFormatter","fromStringInputOutput","fromArrayInputOutput","validateAndCast","flatArray","fromString","special","specialIndex","toFunctionString","formatDataIn","formatDataOut","copy","product","addB","allOnes","cloneNegative","leftRows","leftColumns","rightColumns","leftRow","leftRowBase","rightRowBase","rightColumn","leftColumn","rightColumnBase","leftIndex","rightIndex","multiplyB","leftRowRoot","rightRow","backPropagateValue","multiplyElementB","reluB","rowPluck","rowPluckIndex","rowBase","rowPluckB","sigmoidB","mwi","softmax","maxVal","tanhB","Equation","inputRow","forwardFn","backpropagationFn","subtract","inputValue","inputMatrixToRow","observe","runIndex","backpropagate","backpropagateIndex","predictTarget","predictTargetIndex","logProbabilities","probabilities","maxI","maxv","maxix","sampleI","trainDefaults$1","defaults$1","inputRange","regc","clipval","maxPredictionLength","RNN","stepCache","runs","ratioClipped","model","seal","isInitialized","equations","allMatrices","equationConnections","outputConnector","initialLayerInputs","mapModel","createHiddenLayers","hiddenLayersModel","getHiddenLayer","hiddenSize","getEquation","equation","inputMatrix","previousResult","createInputMatrix","createOutputMatrices","lastHiddenSize","bindEquation","equationConnection","hiddenMatrix","trainInput","log2ppl","inputIndex","inputMax","equationIndex","numClipped","numTot","matrixIndex","checkRunnable","rawInput","isSampleI","temperature","previousIndex","outputMatrix","probs","jsonString","previousConnectionIndex","m","connection","matrixOrigin","stateIndex","matrixToString","toInner","fnParts","fnBodyString","fnBodyParts","fileName","fnName","statesRaw","usedFunctionNames","innerFunctionsSwitch","GRU","getGRUHiddenLayer","getGRUEquation","updateGateInputMatrix","updateGateHiddenMatrix","resetGateInputMatrix","resetGateHiddenMatrix","cellWriteInputMatrix","cellWriteHiddenMatrix","cellWriteBias","ArrayLookupTable","ioValue","RNNTimeStep","runArray","runArrayOfArray","runObject","runArrayOfObject","forecast","forecastArray","forecastArrayOfArray","forecastArrayOfObject","lastOutput","setSize","verifySize","trainArrayOfArray","inputArray","runArrayOfObjectOfArray","requireInputOutputOfOne","formatArray","formatArrayOfArray","formatArrayOfObject","formatArrayOfObjectMulti","formatArrayOfDatumOfArray","formatArrayOfDatumOfObject","formatArrayOfArrayOfArray","formatArrayOfArrayOfObject","formatArrayOfDatumOfArrayOfArray","formatArrayOfDatumOfArrayOfObject","errorCount","errorsAbs","typedValue","typedInput","_e","typedOutput","_f","formatInputData","formatOutputData","forceForecast","GRUTimeStep","LSTM","getHiddenLSTMLayer","getLSTMEquation","inputHidden","inputBias","forgetMatrix","forgetHidden","forgetBias","outputHidden","outputBias","cellActivationMatrix","cellActivationHidden","cellActivationBias","cellWrite","LSTMTimeStep","drawInput","pixelX","pixelY","radius","fontSize","fontClassName","svg","className","drawNeuron","hidden","drawOutput","drawBackwardConnections","lineY","neuralNetworkToInnerSVG","previousSize","drawRecurrentConnections","recurrentLine","moveX","moveY","x1","y1","x2","y2","rnnToInnerSVG","getFeedForwardLayers","getRecurrentLayers","wrapOuterSVG","svgBody","getNeuralNetworkJSONSizes","getNeuralNetworkSizes","getRNNSizes","toSVG","mergedOptions","checkSizes","recurrent","utilities","random$1"],"sources":["C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\activation\\relu.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\activation\\sigmoid.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\activation\\tanh.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\activation\\leaky-relu.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\node_modules\\gpu.js\\dist\\gpu-browser.js","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\lookup.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\node_modules\\thaw.js\\browser.js","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\cast.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\lookup-table.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\max.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\mse.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\random-weight.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\random.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\randos.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\zeros.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\neural-network.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\kernel.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\neural-network-gpu.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\errors\\untrained-neural-network-error.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\autoencoder.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\cross-validate.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\estimator\\mean-squared-error.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\base-layer.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\zeros-2d.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\zeros-3d.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\activation.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\filter.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\internal.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\modifier.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\operator.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\target.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\types.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\praxis\\base-praxis.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\praxis\\arthur-deviation-biases.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\praxis\\arthur-deviation-weights.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\praxis\\momentum-root-mean-squared-propagation.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\traverse-layers-from.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\flatten-layers.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\layer-size.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\add.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\random.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\multiply.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\sigmoid.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\arthur-feed-forward.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\layer-setup.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\values.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\convolution.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\dropout.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\feed-forward.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\fully-connected.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\negative.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\multiply-element.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\ones.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\ones.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\tanh.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\zeros.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\gru.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\input.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\leaky-relu.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\lstm-cell.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\output.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\pool.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\recurrent-input.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\recurrent-zeros.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\relu.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\rnn-cell.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\regression.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\soft-max.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\svm.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\transpose.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\index.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\layer-from-json.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\feed-forward.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\likely.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\layer\\recurrent-connection.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\index.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\random-matrix.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\data-formatter.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\copy.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\add.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\add-b.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\all-ones.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\clone-negative.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\multiply.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\multiply-b.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\multiply-element.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\multiply-element-b.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\relu.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\relu-b.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\row-pluck.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\row-pluck-b.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\sigmoid.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\sigmoid-b.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\softmax.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\tanh.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\tanh-b.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\equation.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\max-i.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\matrix\\sample-i.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\rnn.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\gru.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\array-lookup-table.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\rnn-time-step.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\gru-time-step.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\lstm.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\recurrent\\lstm-time-step.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\range.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\to-array.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\utilities\\to-svg.ts","C:\\Users\\sebas\\boulangerie-app\\node_modules\\brain.js\\src\\index.ts"],"sourcesContent":["/**\n * Relu Activation, aka Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n */\nexport function activate(weight: number): number {\n  return Math.max(0, weight);\n}\n\n/**\n * Relu derivative\n */\nexport function measure(weight: number, delta: number): number {\n  if (weight <= 0) {\n    return 0;\n  }\n  return delta;\n}\n","/**\n * sigmoid activation\n */\nexport function activate(value: number): number {\n  return 1 / (1 + Math.exp(-value));\n}\n\n/**\n * sigmoid derivative\n */\nexport function measure(weight: number, error: number): number {\n  return weight * (1 - weight) * error;\n}\n","/**\n * Hyperbolic tan\n */\nexport function activate(weight: number): number {\n  return Math.tanh(weight);\n}\n\n/**\n * @description grad for z = tanh(x) is (1 - z^2)\n */\nexport function measure(weight: number, error: number): number {\n  return (1 - weight * weight) * error;\n}\n","/**\n * Leaky Relu Activation, aka Leaky Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n */\nexport function activate(weight: number): number {\n  return weight > 0 ? weight : 0.01 * weight;\n}\n\n/**\n * Leaky Relu derivative\n */\nexport function measure(weight: number, error: number): number {\n  return weight > 0 ? error : 0.01 * error;\n}\n","/**\n * gpu.js\n * http://gpu.rocks/\n *\n * GPU Accelerated JavaScript\n *\n * @version 2.16.0\n * @date Wed Nov 16 2022 15:48:37 GMT-0500 (Eastern Standard Time)\n *\n * @license MIT\n * The MIT License\n *\n * Copyright (c) 2022 gpu.js Team\n */(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.GPU = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.acorn = {}));\n}(this, function (exports) { 'use strict';\n\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  };\n\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var keywords = {\n    5: ecma5AndLessKeywords,\n    \"5module\": ecma5AndLessKeywords + \" export import\",\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n\n  var keywordRelationalOperator = /^in(stanceof)?$/;\n\n\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n  var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n\n  var astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,155,22,13,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,0,33,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,0,161,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,754,9486,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];\n\n  var astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,232,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,792487,239];\n\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n      if (pos > code) { return false }\n      pos += set[i + 1];\n      if (pos >= code) { return true }\n    }\n  }\n\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) { return code === 36 }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes)\n  }\n\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) { return code === 36 }\n    if (code < 58) { return true }\n    if (code < 65) { return false }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n  }\n\n\n\n\n\n  var TokenType = function TokenType(label, conf) {\n    if ( conf === void 0 ) conf = {};\n\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {beforeExpr: true, binop: prec})\n  }\n  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n\n  var keywords$1 = {};\n\n  function kw(name, options) {\n    if ( options === void 0 ) options = {};\n\n    options.keyword = name;\n    return keywords$1[name] = new TokenType(name, options)\n  }\n\n  var types = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    eof: new TokenType(\"eof\"),\n\n    bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n\n    eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n    assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n    incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n    prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {isLoop: true}),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {isLoop: true}),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\", startsExpr),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n    _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n    _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n  };\n\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code, ecma2019String) {\n    return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString;\n\n\n  function has(obj, propName) {\n    return hasOwnProperty.call(obj, propName)\n  }\n\n  var isArray = Array.isArray || (function (obj) { return (\n    toString.call(obj) === \"[object Array]\"\n  ); });\n\n  function wordsRegexp(words) {\n    return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n  }\n\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset (n) {\n    return new Position(this.line, this.column + n)\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\n  };\n\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      lineBreakG.lastIndex = cur;\n      var match = lineBreakG.exec(input);\n      if (match && match.index < offset) {\n        ++line;\n        cur = match.index + match[0].length;\n      } else {\n        return new Position(line, offset - cur)\n      }\n    }\n  }\n\n\n  var defaultOptions = {\n    ecmaVersion: 10,\n    sourceType: \"script\",\n    onInsertedSemicolon: null,\n    onTrailingComma: null,\n    allowReserved: null,\n    allowReturnOutsideFunction: false,\n    allowImportExportEverywhere: false,\n    allowAwaitOutsideFunction: false,\n    allowHashBang: false,\n    locations: false,\n    onToken: null,\n    onComment: null,\n    ranges: false,\n    program: null,\n    sourceFile: null,\n    directSourceFile: null,\n    preserveParens: false\n  };\n\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions)\n      { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n    if (options.ecmaVersion >= 2015)\n      { options.ecmaVersion -= 2009; }\n\n    if (options.allowReserved == null)\n      { options.allowReserved = options.ecmaVersion < 5; }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) { return tokens.push(token); };\n    }\n    if (isArray(options.onComment))\n      { options.onComment = pushComment(options, options.onComment); }\n\n    return options\n  }\n\n  function pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n      if (options.locations)\n        { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n      if (options.ranges)\n        { comment.range = [start, end]; }\n      array.push(comment);\n    }\n  }\n\n  var\n      SCOPE_TOP = 1,\n      SCOPE_FUNCTION = 2,\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION,\n      SCOPE_ASYNC = 4,\n      SCOPE_GENERATOR = 8,\n      SCOPE_ARROW = 16,\n      SCOPE_SIMPLE_CATCH = 32,\n      SCOPE_SUPER = 64,\n      SCOPE_DIRECT_SUPER = 128;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n  }\n\n  var\n      BIND_NONE = 0, \n      BIND_VAR = 1, \n      BIND_LEXICAL = 2, \n      BIND_FUNCTION = 3, \n      BIND_SIMPLE_CATCH = 4, \n      BIND_OUTSIDE = 5; \n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n      for (var v = options.ecmaVersion;; v--)\n        { if (reserved = reservedWords[v]) { break } }\n      if (options.sourceType === \"module\") { reserved += \" await\"; }\n    }\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input);\n\n    this.containsEsc = false;\n\n\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    this.type = types.eof;\n    this.value = null;\n    this.start = this.end = this.pos;\n    this.startLoc = this.endLoc = this.curPosition();\n\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n\n    this.potentialArrowAt = -1;\n\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    this.labels = [];\n    this.undefinedExports = {};\n\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n      { this.skipLineComment(2); }\n\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP);\n\n    this.regexpState = null;\n  };\n\n  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true } };\n\n  Parser.prototype.parse = function parse () {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node)\n  };\n\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };\n  prototypeAccessors.allowSuper.get = function () { return (this.currentThisScope().flags & SCOPE_SUPER) > 0 };\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n  Parser.prototype.inNonArrowFunction = function inNonArrowFunction () { return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0 };\n\n  Parser.extend = function extend () {\n      var plugins = [], len = arguments.length;\n      while ( len-- ) plugins[ len ] = arguments[ len ];\n\n    var cls = this;\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n    return cls\n  };\n\n  Parser.parse = function parse (input, options) {\n    return new this(options, input).parse()\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression()\n  };\n\n  Parser.tokenizer = function tokenizer (input, options) {\n    return new this(options, input)\n  };\n\n  Object.defineProperties( Parser.prototype, prototypeAccessors );\n\n  var pp = Parser.prototype;\n\n\n  var literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\")/;\n  pp.strictDirective = function(start) {\n    for (;;) {\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      var match = literal.exec(this.input.slice(start));\n      if (!match) { return false }\n      if ((match[1] || match[2]) === \"use strict\") { return true }\n      start += match[0].length;\n\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      if (this.input[start] === \";\")\n        { start++; }\n    }\n  };\n\n\n  pp.eat = function(type) {\n    if (this.type === type) {\n      this.next();\n      return true\n    } else {\n      return false\n    }\n  };\n\n\n  pp.isContextual = function(name) {\n    return this.type === types.name && this.value === name && !this.containsEsc\n  };\n\n\n  pp.eatContextual = function(name) {\n    if (!this.isContextual(name)) { return false }\n    this.next();\n    return true\n  };\n\n\n  pp.expectContextual = function(name) {\n    if (!this.eatContextual(name)) { this.unexpected(); }\n  };\n\n\n  pp.canInsertSemicolon = function() {\n    return this.type === types.eof ||\n      this.type === types.braceR ||\n      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  pp.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon)\n        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n      return true\n    }\n  };\n\n\n  pp.semicolon = function() {\n    if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n  };\n\n  pp.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma)\n        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n      if (!notNext)\n        { this.next(); }\n      return true\n    }\n  };\n\n\n  pp.expect = function(type) {\n    this.eat(type) || this.unexpected();\n  };\n\n\n  pp.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  function DestructuringErrors() {\n    this.shorthandAssign =\n    this.trailingComma =\n    this.parenthesizedAssign =\n    this.parenthesizedBind =\n    this.doubleProto =\n      -1;\n  }\n\n  pp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) { return }\n    if (refDestructuringErrors.trailingComma > -1)\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n  };\n\n  pp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) { return false }\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n    if (shorthandAssign >= 0)\n      { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n    if (doubleProto >= 0)\n      { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n  };\n\n  pp.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n      { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n    if (this.awaitPos)\n      { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n  };\n\n  pp.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\")\n      { return this.isSimpleAssignTarget(expr.expression) }\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n  };\n\n  var pp$1 = Parser.prototype;\n\n\n\n  pp$1.parseTopLevel = function(node) {\n    var exports = {};\n    if (!node.body) { node.body = []; }\n    while (this.type !== types.eof) {\n      var stmt = this.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n    if (this.inModule)\n      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n        {\n          var name = list[i];\n\n          this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n        } }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\")\n  };\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  pp$1.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) { return true } \n    if (context) { return false }\n\n    if (nextCh === 123) { return true } \n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n      var ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) { return true }\n    }\n    return false\n  };\n\n  pp$1.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length;\n    return !lineBreak.test(this.input.slice(this.pos, next)) &&\n      this.input.slice(next, next + 8) === \"function\" &&\n      (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n  };\n\n\n  pp$1.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n\n    switch (starttype) {\n    case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n    case types._debugger: return this.parseDebuggerStatement(node)\n    case types._do: return this.parseDoStatement(node)\n    case types._for: return this.parseForStatement(node)\n    case types._function:\n      if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n      return this.parseFunctionStatement(node, false, !context)\n    case types._class:\n      if (context) { this.unexpected(); }\n      return this.parseClass(node, true)\n    case types._if: return this.parseIfStatement(node)\n    case types._return: return this.parseReturnStatement(node)\n    case types._switch: return this.parseSwitchStatement(node)\n    case types._throw: return this.parseThrowStatement(node)\n    case types._try: return this.parseTryStatement(node)\n    case types._const: case types._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") { this.unexpected(); }\n      return this.parseVarStatement(node, kind)\n    case types._while: return this.parseWhileStatement(node)\n    case types._with: return this.parseWithStatement(node)\n    case types.braceL: return this.parseBlock(true, node)\n    case types.semi: return this.parseEmptyStatement(node)\n    case types._export:\n    case types._import:\n      if (this.options.ecmaVersion > 10 && starttype === types._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40) \n          { return this.parseExpressionStatement(node, this.parseExpression()) }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel)\n          { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n        if (!this.inModule)\n          { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n      }\n      return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) { this.unexpected(); }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context)\n      }\n\n      var maybeName = this.value, expr = this.parseExpression();\n      if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n        { return this.parseLabeledStatement(node, maybeName, expr, context) }\n      else { return this.parseExpressionStatement(node, expr) }\n    }\n  };\n\n  pp$1.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n    else if (this.type !== types.name) { this.unexpected(); }\n    else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    }\n\n    var i = 0;\n    for (; i < this.labels.length; ++i) {\n      var lab = this.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n        if (node.label && isBreak) { break }\n      }\n    }\n    if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n  };\n\n  pp$1.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n  };\n\n  pp$1.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6)\n      { this.eat(types.semi); }\n    else\n      { this.semicolon(); }\n    return this.finishNode(node, \"DoWhileStatement\")\n  };\n\n\n  pp$1.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types.parenL);\n    if (this.type === types.semi) {\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, null)\n    }\n    var isLet = this.isLet();\n    if (this.type === types._var || this.type === types._const || isLet) {\n      var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n      if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n        if (this.options.ecmaVersion >= 9) {\n          if (this.type === types._in) {\n            if (awaitAt > -1) { this.unexpected(awaitAt); }\n          } else { node.await = awaitAt > -1; }\n        }\n        return this.parseForIn(node, init$1)\n      }\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, init$1)\n    }\n    var refDestructuringErrors = new DestructuringErrors;\n    var init = this.parseExpression(true, refDestructuringErrors);\n    if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLVal(init);\n      return this.parseForIn(node, init)\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  pp$1.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n  };\n\n  pp$1.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\")\n  };\n\n  pp$1.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n      { this.raise(this.start, \"'return' outside of function\"); }\n    this.next();\n\n\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n  };\n\n  pp$1.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0);\n\n\n    var cur;\n    for (var sawDefault = false; this.type !== types.braceR;) {\n      if (this.type === types._case || this.type === types._default) {\n        var isCase = this.type === types._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(types.colon);\n      } else {\n        if (!cur) { this.unexpected(); }\n        cur.consequent.push(this.parseStatement(null));\n      }\n    }\n    this.exitScope();\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.next(); \n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\")\n  };\n\n  pp$1.parseThrowStatement = function(node) {\n    this.next();\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n      { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n  };\n\n\n  var empty = [];\n\n  pp$1.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === types._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(types.parenL)) {\n        clause.param = this.parseBindingAtom();\n        var simple = clause.param.type === \"Identifier\";\n        this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n        this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n        this.expect(types.parenR);\n      } else {\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\n        clause.param = null;\n        this.enterScope(0);\n      }\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      { this.raise(node.start, \"Missing catch or finally clause\"); }\n    return this.finishNode(node, \"TryStatement\")\n  };\n\n  pp$1.parseVarStatement = function(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\")\n  };\n\n  pp$1.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\")\n  };\n\n  pp$1.parseWithStatement = function(node) {\n    if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\")\n  };\n\n  pp$1.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n  };\n\n  pp$1.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n      {\n      var label = list[i$1];\n\n      if (label.name === maybeName)\n        { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    } }\n    var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this.labels[i];\n      if (label$1.statementStart === node.start) {\n        label$1.statementStart = this.start;\n        label$1.kind = kind;\n      } else { break }\n    }\n    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\")\n  };\n\n  pp$1.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\")\n  };\n\n\n  pp$1.parseBlock = function(createNewLexicalScope, node) {\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n    if ( node === void 0 ) node = this.startNode();\n\n    node.body = [];\n    this.expect(types.braceL);\n    if (createNewLexicalScope) { this.enterScope(0); }\n    while (!this.eat(types.braceR)) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    if (createNewLexicalScope) { this.exitScope(); }\n    return this.finishNode(node, \"BlockStatement\")\n  };\n\n\n  pp$1.parseFor = function(node, init) {\n    node.init = init;\n    this.expect(types.semi);\n    node.test = this.type === types.semi ? null : this.parseExpression();\n    this.expect(types.semi);\n    node.update = this.type === types.parenR ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\")\n  };\n\n\n  pp$1.parseForIn = function(node, init) {\n    var isForIn = this.type === types._in;\n    this.next();\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (\n        !isForIn ||\n        this.options.ecmaVersion < 8 ||\n        this.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\"\n      )\n    ) {\n      this.raise(\n        init.start,\n        ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, \"Invalid left-hand side in for-loop\");\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n  };\n\n\n  pp$1.parseVar = function(node, isFor, kind) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(types.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else if (kind === \"const\" && !(this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n        this.unexpected();\n      } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types._in || this.isContextual(\"of\")))) {\n        this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n      node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) { break }\n    }\n    return node\n  };\n\n  pp$1.parseVarId = function(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n\n  pp$1.parseFunction = function(node, statement, allowExpressionBody, isAsync) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types.star && (statement & FUNC_HANGING_STATEMENT))\n        { this.unexpected(); }\n      node.generator = this.eat(types.star);\n    }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types.name ? null : this.parseIdent();\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n        { this.checkLVal(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n    }\n\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT))\n      { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n  };\n\n  pp$1.parseFunctionParams = function(node) {\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  };\n\n\n  pp$1.parseClass = function(node, isStatement) {\n    this.next();\n\n    var oldStrict = this.strict;\n    this.strict = true;\n\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      var element = this.parseClassElement(node.superClass !== null);\n      if (element) {\n        classBody.body.push(element);\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n          hadConstructor = true;\n        }\n      }\n    }\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    this.strict = oldStrict;\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n  };\n\n  pp$1.parseClassElement = function(constructorAllowsSuper) {\n    var this$1 = this;\n\n    if (this.eat(types.semi)) { return null }\n\n    var method = this.startNode();\n    var tryContextual = function (k, noLineBreak) {\n      if ( noLineBreak === void 0 ) noLineBreak = false;\n\n      var start = this$1.start, startLoc = this$1.startLoc;\n      if (!this$1.eatContextual(k)) { return false }\n      if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n      if (method.key) { this$1.unexpected(); }\n      method.computed = false;\n      method.key = this$1.startNodeAt(start, startLoc);\n      method.key.name = k;\n      this$1.finishNode(method.key, \"Identifier\");\n      return false\n    };\n\n    method.kind = \"method\";\n    method.static = tryContextual(\"static\");\n    var isGenerator = this.eat(types.star);\n    var isAsync = false;\n    if (!isGenerator) {\n      if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n        isAsync = true;\n        isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      } else if (tryContextual(\"get\")) {\n        method.kind = \"get\";\n      } else if (tryContextual(\"set\")) {\n        method.kind = \"set\";\n      }\n    }\n    if (!method.key) { this.parsePropertyName(method); }\n    var key = method.key;\n    var allowsDirectSuper = false;\n    if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n        key.type === \"Literal\" && key.value === \"constructor\")) {\n      if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n      if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n      if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n      method.kind = \"constructor\";\n      allowsDirectSuper = constructorAllowsSuper;\n    } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n    this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);\n    if (method.kind === \"get\" && method.value.params.length !== 0)\n      { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n    if (method.kind === \"set\" && method.value.params.length !== 1)\n      { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n    if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n    return method\n  };\n\n  pp$1.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n    return this.finishNode(method, \"MethodDefinition\")\n  };\n\n  pp$1.parseClassId = function(node, isStatement) {\n    if (this.type === types.name) {\n      node.id = this.parseIdent();\n      if (isStatement)\n        { this.checkLVal(node.id, BIND_LEXICAL, false); }\n    } else {\n      if (isStatement === true)\n        { this.unexpected(); }\n      node.id = null;\n    }\n  };\n\n  pp$1.parseClassSuper = function(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  };\n\n\n  pp$1.parseExport = function(node, exports) {\n    this.next();\n    if (this.eat(types.star)) {\n      this.expectContextual(\"from\");\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n      this.semicolon();\n      return this.finishNode(node, \"ExportAllDeclaration\")\n    }\n    if (this.eat(types._default)) { \n      this.checkExport(exports, \"default\", this.lastTokStart);\n      var isAsync;\n      if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n        var fNode = this.startNode();\n        this.next();\n        if (isAsync) { this.next(); }\n        node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n      } else if (this.type === types._class) {\n        var cNode = this.startNode();\n        node.declaration = this.parseClass(cNode, \"nullableID\");\n      } else {\n        node.declaration = this.parseMaybeAssign();\n        this.semicolon();\n      }\n      return this.finishNode(node, \"ExportDefaultDeclaration\")\n    }\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseStatement(null);\n      if (node.declaration.type === \"VariableDeclaration\")\n        { this.checkVariableExport(exports, node.declaration.declarations); }\n      else\n        { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n      node.specifiers = [];\n      node.source = null;\n    } else { \n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          var spec = list[i];\n\n          this.checkUnreserved(spec.local);\n          this.checkLocalExport(spec.local);\n        }\n\n        node.source = null;\n      }\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\")\n  };\n\n  pp$1.checkExport = function(exports, name, pos) {\n    if (!exports) { return }\n    if (has(exports, name))\n      { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n    exports[name] = true;\n  };\n\n  pp$1.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\")\n      { this.checkExport(exports, pat.name, pat.start); }\n    else if (type === \"ObjectPattern\")\n      { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n        {\n          var prop = list[i];\n\n          this.checkPatternExport(exports, prop);\n        } }\n    else if (type === \"ArrayPattern\")\n      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n          if (elt) { this.checkPatternExport(exports, elt); }\n      } }\n    else if (type === \"Property\")\n      { this.checkPatternExport(exports, pat.value); }\n    else if (type === \"AssignmentPattern\")\n      { this.checkPatternExport(exports, pat.left); }\n    else if (type === \"RestElement\")\n      { this.checkPatternExport(exports, pat.argument); }\n    else if (type === \"ParenthesizedExpression\")\n      { this.checkPatternExport(exports, pat.expression); }\n  };\n\n  pp$1.checkVariableExport = function(exports, decls) {\n    if (!exports) { return }\n    for (var i = 0, list = decls; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      this.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$1.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" ||\n      this.type.keyword === \"const\" ||\n      this.type.keyword === \"class\" ||\n      this.type.keyword === \"function\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n  };\n\n\n  pp$1.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node = this.startNode();\n      node.local = this.parseIdent(true);\n      node.exported = this.eatContextual(\"as\") ? this.parseIdent(true) : node.local;\n      this.checkExport(exports, node.exported.name, node.exported.start);\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n    return nodes\n  };\n\n\n  pp$1.parseImport = function(node) {\n    this.next();\n    if (this.type === types.string) {\n      node.specifiers = empty;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n    }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\")\n  };\n\n\n  pp$1.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === types.name) {\n      var node = this.startNode();\n      node.local = this.parseIdent();\n      this.checkLVal(node.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n      if (!this.eat(types.comma)) { return nodes }\n    }\n    if (this.type === types.star) {\n      var node$1 = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      node$1.local = this.parseIdent();\n      this.checkLVal(node$1.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n      return nodes\n    }\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node$2 = this.startNode();\n      node$2.imported = this.parseIdent(true);\n      if (this.eatContextual(\"as\")) {\n        node$2.local = this.parseIdent();\n      } else {\n        this.checkUnreserved(node$2.imported);\n        node$2.local = node$2.imported;\n      }\n      this.checkLVal(node$2.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n    }\n    return nodes\n  };\n\n  pp$1.adaptDirectivePrologue = function(statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n  pp$1.isDirectiveCandidate = function(statement) {\n    return (\n      statement.type === \"ExpressionStatement\" &&\n      statement.expression.type === \"Literal\" &&\n      typeof statement.expression.value === \"string\" &&\n      (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n    )\n  };\n\n  var pp$2 = Parser.prototype;\n\n\n  pp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\")\n          { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n        break\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"RestElement\":\n        break\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n\n        this.toAssignable(prop, isBinding);\n          if (\n            prop.type === \"RestElement\" &&\n            (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n          ) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break\n\n      case \"Property\":\n        if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n        this.toAssignable(node.value, isBinding);\n        break\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        this.toAssignableList(node.elements, isBinding);\n        break\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\")\n          { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n        break\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n\n      case \"AssignmentPattern\":\n        break\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break\n\n      case \"MemberExpression\":\n        if (!isBinding) { break }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n    return node\n  };\n\n\n  pp$2.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n      if (elt) { this.toAssignable(elt, isBinding); }\n    }\n    if (end) {\n      var last = exprList[end - 1];\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n        { this.unexpected(last.argument.start); }\n    }\n    return exprList\n  };\n\n\n  pp$2.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\")\n  };\n\n  pp$2.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n\n    if (this.options.ecmaVersion === 6 && this.type !== types.name)\n      { this.unexpected(); }\n\n    node.argument = this.parseBindingAtom();\n\n    return this.finishNode(node, \"RestElement\")\n  };\n\n\n  pp$2.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n      case types.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\")\n\n      case types.braceL:\n        return this.parseObj(true)\n      }\n    }\n    return this.parseIdent()\n  };\n\n  pp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (first) { first = false; }\n      else { this.expect(types.comma); }\n      if (allowEmpty && this.type === types.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break\n      } else if (this.type === types.ellipsis) {\n        var rest = this.parseRestBinding();\n        this.parseBindingListItem(rest);\n        elts.push(rest);\n        if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        this.expect(close);\n        break\n      } else {\n        var elem = this.parseMaybeDefault(this.start, this.startLoc);\n        this.parseBindingListItem(elem);\n        elts.push(elem);\n      }\n    }\n    return elts\n  };\n\n  pp$2.parseBindingListItem = function(param) {\n    return param\n  };\n\n\n  pp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\")\n  };\n\n\n  pp$2.checkLVal = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"Identifier\":\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n        { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n      if (checkClashes) {\n        if (has(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n      break\n\n    case \"MemberExpression\":\n      if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n      break\n\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1)\n        {\n      var prop = list[i];\n\n      this.checkLVal(prop, bindingType, checkClashes);\n    }\n      break\n\n    case \"Property\":\n      this.checkLVal(expr.value, bindingType, checkClashes);\n      break\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n      if (elem) { this.checkLVal(elem, bindingType, checkClashes); }\n      }\n      break\n\n    case \"AssignmentPattern\":\n      this.checkLVal(expr.left, bindingType, checkClashes);\n      break\n\n    case \"RestElement\":\n      this.checkLVal(expr.argument, bindingType, checkClashes);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.checkLVal(expr.expression, bindingType, checkClashes);\n      break\n\n    default:\n      this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n\n\n  var pp$3 = Parser.prototype;\n\n\n  pp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n      { return }\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n      { return }\n    var key = prop.key;\n    var name;\n    switch (key.type) {\n    case \"Identifier\": name = key.name; break\n    case \"Literal\": name = String(key.value); break\n    default: return\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors) {\n            if (refDestructuringErrors.doubleProto < 0)\n              { refDestructuringErrors.doubleProto = key.start; }\n          } else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n        }\n        propHash.proto = true;\n      }\n      return\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n      var redefinition;\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n      if (redefinition)\n        { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  };\n\n\n\n\n  pp$3.parseExpression = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n    if (this.type === types.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(types.comma)) { node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors)); }\n      return this.finishNode(node, \"SequenceExpression\")\n    }\n    return expr\n  };\n\n\n  pp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) { return this.parseYield(noIn) }\n      else { this.exprAllowed = false; }\n    }\n\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors;\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === types.parenL || this.type === types.name)\n      { this.potentialArrowAt = this.start; }\n    var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n      if (!ownDestructuringErrors) {\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n      }\n      if (refDestructuringErrors.shorthandAssign >= node.left.start)\n        { refDestructuringErrors.shorthandAssign = -1; } \n      this.checkLVal(left);\n      this.next();\n      node.right = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"AssignmentExpression\")\n    } else {\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n    }\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n    return left\n  };\n\n\n  pp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(noIn, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    if (this.eat(types.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"ConditionalExpression\")\n    }\n    return expr\n  };\n\n\n  pp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n  };\n\n\n  pp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n    var prec = this.type.binop;\n    if (prec != null && (!noIn || this.type !== types._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n        var op = this.value;\n        this.next();\n        var startPos = this.start, startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n      }\n    }\n    return left\n  };\n\n  pp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n  };\n\n\n  pp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n      expr = this.parseAwait();\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(), update = this.type === types.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      if (update) { this.checkLVal(node.argument); }\n      else if (this.strict && node.operator === \"delete\" &&\n               node.argument.type === \"Identifier\")\n        { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n      else { sawUnary = true; }\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors);\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.operator = this.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this.checkLVal(expr);\n        this.next();\n        expr = this.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!sawUnary && this.eat(types.starstar))\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n    else\n      { return expr }\n  };\n\n\n  pp$3.parseExprSubscripts = function(refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors);\n    if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n      { return expr }\n    var result = this.parseSubscripts(expr, startPos, startLoc);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    }\n    return result\n  };\n\n  pp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n    while (true) {\n      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow);\n      if (element === base || element.type === \"ArrowFunctionExpression\") { return element }\n      base = element;\n    }\n  };\n\n  pp$3.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow) {\n    var computed = this.eat(types.bracketL);\n    if (computed || this.eat(types.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this.parseExpression() : this.parseIdent(this.options.allowReserved !== \"never\");\n      node.computed = !!computed;\n      if (computed) { this.expect(types.bracketR); }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        if (this.awaitIdentPos > 0)\n          { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types.backQuote) {\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({isTagged: true});\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base\n  };\n\n\n  pp$3.parseExprAtom = function(refDestructuringErrors) {\n    if (this.type === types.slash) { this.readRegexp(); }\n\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch (this.type) {\n    case types._super:\n      if (!this.allowSuper)\n        { this.raise(this.start, \"'super' keyword outside a method\"); }\n      node = this.startNode();\n      this.next();\n      if (this.type === types.parenL && !this.allowDirectSuper)\n        { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n      if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n        { this.unexpected(); }\n      return this.finishNode(node, \"Super\")\n\n    case types._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\")\n\n    case types.name:\n      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n        { return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true) }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types.arrow))\n          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types.arrow))\n            { this.unexpected(); }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n        }\n      }\n      return id\n\n    case types.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {pattern: value.pattern, flags: value.flags};\n      return node\n\n    case types.num: case types.string:\n      return this.parseLiteral(this.value)\n\n    case types._null: case types._true: case types._false:\n      node = this.startNode();\n      node.value = this.type === types._null ? null : this.type === types._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\")\n\n    case types.parenL:\n      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n          { refDestructuringErrors.parenthesizedAssign = start; }\n        if (refDestructuringErrors.parenthesizedBind < 0)\n          { refDestructuringErrors.parenthesizedBind = start; }\n      }\n      return expr\n\n    case types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\")\n\n    case types.braceL:\n      return this.parseObj(false, refDestructuringErrors)\n\n    case types._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0)\n\n    case types._class:\n      return this.parseClass(this.startNode(), false)\n\n    case types._new:\n      return this.parseNew()\n\n    case types.backQuote:\n      return this.parseTemplate()\n\n    case types._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport()\n      } else {\n        return this.unexpected()\n      }\n\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseExprImport = function() {\n    var node = this.startNode();\n    this.next(); \n    switch (this.type) {\n    case types.parenL:\n      return this.parseDynamicImport(node)\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseDynamicImport = function(node) {\n    this.next(); \n\n    node.source = this.parseMaybeAssign();\n\n    if (!this.eat(types.parenR)) {\n      var errorPos = this.start;\n      if (this.eat(types.comma) && this.eat(types.parenR)) {\n        this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n      } else {\n        this.unexpected(errorPos);\n      }\n    }\n\n    return this.finishNode(node, \"ImportExpression\")\n  };\n\n  pp$3.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n  };\n\n  pp$3.parseParenExpression = function() {\n    this.expect(types.parenL);\n    var val = this.parseExpression();\n    this.expect(types.parenR);\n    return val\n  };\n\n  pp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n\n      var innerStartPos = this.start, innerStartLoc = this.startLoc;\n      var exprList = [], first = true, lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      while (this.type !== types.parenR) {\n        first ? first = false : this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(types.parenR, true)) {\n          lastIsComma = true;\n          break\n        } else if (this.type === types.ellipsis) {\n          spreadStart = this.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\n          if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n          break\n        } else {\n          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n      }\n      var innerEndPos = this.start, innerEndLoc = this.startLoc;\n      this.expect(types.parenR);\n\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList)\n      }\n\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n      if (spreadStart) { this.unexpected(spreadStart); }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\")\n    } else {\n      return val\n    }\n  };\n\n  pp$3.parseParenItem = function(item) {\n    return item\n  };\n\n  pp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n  };\n\n\n  var empty$1 = [];\n\n  pp$3.parseNew = function() {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n    var node = this.startNode();\n    var meta = this.parseIdent(true);\n    if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n      node.meta = meta;\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n      if (node.property.name !== \"target\" || containsEsc)\n        { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n      if (!this.inNonArrowFunction())\n        { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n      return this.finishNode(node, \"MetaProperty\")\n    }\n    var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types._import;\n    node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n    if (isImport && node.callee.type === \"ImportExpression\") {\n      this.raise(startPos, \"Cannot use new with import()\");\n    }\n    if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n    else { node.arguments = empty$1; }\n    return this.finishNode(node, \"NewExpression\")\n  };\n\n\n  pp$3.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n\n    var elem = this.startNode();\n    if (this.type === types.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n      elem.value = {\n        raw: this.value,\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n    this.next();\n    elem.tail = this.type === types.backQuote;\n    return this.finishNode(elem, \"TemplateElement\")\n  };\n\n  pp$3.parseTemplate = function(ref) {\n    if ( ref === void 0 ) ref = {};\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      if (this.type === types.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\")\n  };\n\n  pp$3.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n      (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n\n  pp$3.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var prop = this.parseProperty(isPattern, refDestructuringErrors);\n      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n      node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  };\n\n  pp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n        if (this.type === types.comma) {\n          this.raise(this.start, \"Comma is not permitted after the rest element\");\n        }\n        return this.finishNode(prop, \"RestElement\")\n      }\n      if (this.type === types.parenL && refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0) {\n          refDestructuringErrors.parenthesizedAssign = this.start;\n        }\n        if (refDestructuringErrors.parenthesizedBind < 0) {\n          refDestructuringErrors.parenthesizedBind = this.start;\n        }\n      }\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n      if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n      return this.finishNode(prop, \"SpreadElement\")\n    }\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this.eat(types.star); }\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      this.parsePropertyName(prop, refDestructuringErrors);\n    } else {\n      isAsync = false;\n    }\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\")\n  };\n\n  pp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types.colon)\n      { this.unexpected(); }\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n      if (isPattern) { this.unexpected(); }\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (!isPattern && !containsEsc &&\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type !== types.comma && this.type !== types.braceR)) {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop);\n      prop.value = this.parseMethod(false);\n      var paramCount = prop.kind === \"get\" ? 0 : 1;\n      if (prop.value.params.length !== paramCount) {\n        var start = prop.value.start;\n        if (prop.kind === \"get\")\n          { this.raiseRecoverable(start, \"getter should have no params\"); }\n        else\n          { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n      } else {\n        if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n          { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n      }\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.checkUnreserved(prop.key);\n      if (prop.key.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = startPos; }\n      prop.kind = \"init\";\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else if (this.type === types.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0)\n          { refDestructuringErrors.shorthandAssign = this.start; }\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else {\n        prop.value = prop.key;\n      }\n      prop.shorthand = true;\n    } else { this.unexpected(); }\n  };\n\n  pp$3.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types.bracketR);\n        return prop.key\n      } else {\n        prop.computed = false;\n      }\n    }\n    return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n  };\n\n\n  pp$3.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\n  };\n\n\n  pp$3.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6)\n      { node.generator = isGenerator; }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\")\n  };\n\n\n  pp$3.parseArrowExpression = function(node, params, isAsync) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\")\n  };\n\n\n  pp$3.parseFunctionBody = function(node, isArrowFunction, isMethod) {\n    var isExpression = isArrowFunction && this.type !== types.braceL;\n    var oldStrict = this.strict, useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end);\n        if (useStrict && nonSimple)\n          { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n      }\n      var oldLabels = this.labels;\n      this.labels = [];\n      if (useStrict) { this.strict = true; }\n\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      node.body = this.parseBlock(false);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n    this.exitScope();\n\n    if (this.strict && node.id) { this.checkLVal(node.id, BIND_OUTSIDE); }\n    this.strict = oldStrict;\n  };\n\n  pp$3.isSimpleParamList = function(params) {\n    for (var i = 0, list = params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") { return false\n    } }\n    return true\n  };\n\n\n  pp$3.checkParams = function(node, allowDuplicates) {\n    var nameHash = {};\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      this.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  };\n\n\n  pp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n      } else { first = false; }\n\n      var elt = (void 0);\n      if (allowEmpty && this.type === types.comma)\n        { elt = null; }\n      else if (this.type === types.ellipsis) {\n        elt = this.parseSpread(refDestructuringErrors);\n        if (refDestructuringErrors && this.type === types.comma && refDestructuringErrors.trailingComma < 0)\n          { refDestructuringErrors.trailingComma = this.start; }\n      } else {\n        elt = this.parseMaybeAssign(false, refDestructuringErrors);\n      }\n      elts.push(elt);\n    }\n    return elts\n  };\n\n  pp$3.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\")\n      { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n    if (this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n    if (this.keywords.test(name))\n      { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n    if (this.options.ecmaVersion < 6 &&\n      this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\")\n        { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n      this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n    }\n  };\n\n\n  pp$3.parseIdent = function(liberal, isBinding) {\n    var node = this.startNode();\n    if (this.type === types.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword;\n\n      if ((node.name === \"class\" || node.name === \"function\") &&\n          (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n    } else {\n      this.unexpected();\n    }\n    this.next(!!liberal);\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n      this.checkUnreserved(node);\n      if (node.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = node.start; }\n    }\n    return node\n  };\n\n\n  pp$3.parseYield = function(noIn) {\n    if (!this.yieldPos) { this.yieldPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign(noIn);\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  };\n\n  pp$3.parseAwait = function() {\n    if (!this.awaitPos) { this.awaitPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, false);\n    return this.finishNode(node, \"AwaitExpression\")\n  };\n\n  var pp$4 = Parser.prototype;\n\n\n  pp$4.raise = function(pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n    throw err\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function() {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart)\n    }\n  };\n\n  var pp$5 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n  };\n\n\n  pp$5.enterScope = function(flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$5.exitScope = function() {\n    this.scopeStack.pop();\n  };\n\n  pp$5.treatFunctionsAsVarInScope = function(scope) {\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n  };\n\n  pp$5.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      scope.lexical.push(name);\n      if (this.inModule && (scope.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n      if (this.treatFunctionsAsVar)\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\n      else\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break\n        }\n        scope$3.var.push(name);\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\n          { delete this.undefinedExports[name]; }\n        if (scope$3.flags & SCOPE_VAR) { break }\n      }\n    }\n    if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n  };\n\n  pp$5.checkLocalExport = function(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$5.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1]\n  };\n\n  pp$5.currentVarScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) { return scope }\n    }\n  };\n\n  pp$5.currentThisScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations)\n      { this.loc = new SourceLocation(parser, loc); }\n    if (parser.options.directSourceFile)\n      { this.sourceFile = parser.options.directSourceFile; }\n    if (parser.options.ranges)\n      { this.range = [pos, 0]; }\n  };\n\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.startNode = function() {\n    return new Node(this, this.start, this.startLoc)\n  };\n\n  pp$6.startNodeAt = function(pos, loc) {\n    return new Node(this, pos, loc)\n  };\n\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations)\n      { node.loc.end = loc; }\n    if (this.options.ranges)\n      { node.range[1] = pos; }\n    return node\n  }\n\n  pp$6.finishNode = function(node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n  };\n\n\n  pp$6.finishNodeAt = function(node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc)\n  };\n\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types$1 = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n\n  var pp$7 = Parser.prototype;\n\n  pp$7.initialContext = function() {\n    return [types$1.b_stat]\n  };\n\n  pp$7.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === types$1.f_expr || parent === types$1.f_stat)\n      { return true }\n    if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n      { return !parent.isExpr }\n\n    if (prevType === types._return || prevType === types.name && this.exprAllowed)\n      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n      { return true }\n    if (prevType === types.braceL)\n      { return parent === types$1.b_stat }\n    if (prevType === types._var || prevType === types._const || prevType === types.name)\n      { return false }\n    return !this.exprAllowed\n  };\n\n  pp$7.inGeneratorContext = function() {\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this.context[i];\n      if (context.token === \"function\")\n        { return context.generator }\n    }\n    return false\n  };\n\n  pp$7.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === types.dot)\n      { this.exprAllowed = false; }\n    else if (update = type.updateContext)\n      { update.call(this, prevType); }\n    else\n      { this.exprAllowed = type.beforeExpr; }\n  };\n\n\n  types.parenR.updateContext = types.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return\n    }\n    var out = this.context.pop();\n    if (out === types$1.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types.dollarBraceL.updateContext = function() {\n    this.context.push(types$1.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n    this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types.incDec.updateContext = function() {\n  };\n\n  types._function.updateContext = types._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n        !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n        !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n      { this.context.push(types$1.f_expr); }\n    else\n      { this.context.push(types$1.f_stat); }\n    this.exprAllowed = false;\n  };\n\n  types.backQuote.updateContext = function() {\n    if (this.curContext() === types$1.q_tmpl)\n      { this.context.pop(); }\n    else\n      { this.context.push(types$1.q_tmpl); }\n    this.exprAllowed = false;\n  };\n\n  types.star.updateContext = function(prevType) {\n    if (prevType === types._function) {\n      var index = this.context.length - 1;\n      if (this.context[index] === types$1.f_expr)\n        { this.context[index] = types$1.f_expr_gen; }\n      else\n        { this.context[index] = types$1.f_gen; }\n    }\n    this.exprAllowed = true;\n  };\n\n  types.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n      if (this.value === \"of\" && !this.exprAllowed ||\n          this.value === \"yield\" && this.inGeneratorContext())\n        { allowed = true; }\n    }\n    this.exprAllowed = allowed;\n  };\n\n\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n  var ecma11BinaryProperties = ecma10BinaryProperties;\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma10BinaryProperties,\n    11: ecma11BinaryProperties\n  };\n\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n  var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma10ScriptValues,\n    11: ecma11ScriptValues\n  };\n\n  var data = {};\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n  buildUnicodeData(9);\n  buildUnicodeData(10);\n  buildUnicodeData(11);\n\n  var pp$8 = Parser.prototype;\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = [];\n    this.backReferenceNames = [];\n  };\n\n  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n  };\n\n  RegExpValidationState.prototype.raise = function raise (message) {\n    this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n  };\n\n  RegExpValidationState.prototype.at = function at (i) {\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return -1\n    }\n    var c = s.charCodeAt(i);\n    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c\n    }\n    var next = s.charCodeAt(i + 1);\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i) {\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return l\n    }\n    var c = s.charCodeAt(i), next;\n    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n      return i + 1\n    }\n    return i + 2\n  };\n\n  RegExpValidationState.prototype.current = function current () {\n    return this.at(this.pos)\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead () {\n    return this.at(this.nextIndex(this.pos))\n  };\n\n  RegExpValidationState.prototype.advance = function advance () {\n    this.pos = this.nextIndex(this.pos);\n  };\n\n  RegExpValidationState.prototype.eat = function eat (ch) {\n    if (this.current() === ch) {\n      this.advance();\n      return true\n    }\n    return false\n  };\n\n  function codePointToString(ch) {\n    if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n    ch -= 0x10000;\n    return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n  }\n\n  pp$8.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n      if (validFlags.indexOf(flag) === -1) {\n        this.raise(state.start, \"Invalid regular expression flag\");\n      }\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this.raise(state.start, \"Duplicate regular expression flag\");\n      }\n    }\n  };\n\n  pp$8.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n\n    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  };\n\n  pp$8.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames.length = 0;\n    state.backReferenceNames.length = 0;\n\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      if (state.eat(0x29 )) {\n        state.raise(\"Unmatched ')'\");\n      }\n      if (state.eat(0x5D ) || state.eat(0x7D )) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (state.groupNames.indexOf(name) === -1) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  };\n\n  pp$8.regexp_disjunction = function(state) {\n    this.regexp_alternative(state);\n    while (state.eat(0x7C )) {\n      this.regexp_alternative(state);\n    }\n\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    if (state.eat(0x7B )) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  };\n\n  pp$8.regexp_alternative = function(state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state))\n      { }\n  };\n\n  pp$8.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n      return true\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n\n    if (state.eat(0x5E ) || state.eat(0x24 )) {\n      return true\n    }\n\n    if (state.eat(0x5C )) {\n      if (state.eat(0x42 ) || state.eat(0x62 )) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    if (state.eat(0x28 ) && state.eat(0x3F )) {\n      var lookbehind = false;\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C );\n      }\n      if (state.eat(0x3D ) || state.eat(0x21 )) {\n        this.regexp_disjunction(state);\n        if (!state.eat(0x29 )) {\n          state.raise(\"Unterminated group\");\n        }\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true\n      }\n    }\n\n    state.pos = start;\n    return false\n  };\n\n  pp$8.regexp_eatQuantifier = function(state, noError) {\n    if ( noError === void 0 ) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F );\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatQuantifierPrefix = function(state, noError) {\n    return (\n      state.eat(0x2A ) ||\n      state.eat(0x2B ) ||\n      state.eat(0x3F ) ||\n      this.regexp_eatBracedQuantifier(state, noError)\n    )\n  };\n  pp$8.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B )) {\n      var min = 0, max = -1;\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n        if (state.eat(0x2C ) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n        if (state.eat(0x7D )) {\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n          return true\n        }\n      }\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$8.regexp_eatAtom = function(state) {\n    return (\n      this.regexp_eatPatternCharacters(state) ||\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state)\n    )\n  };\n  pp$8.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 )) {\n      if (state.eat(0x3F ) && state.eat(0x3A )) {\n        this.regexp_disjunction(state);\n        if (state.eat(0x29 )) {\n          return true\n        }\n        state.raise(\"Unterminated group\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 )) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F ) {\n        state.raise(\"Invalid group\");\n      }\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 )) {\n        state.numCapturingParens += 1;\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatExtendedAtom = function(state) {\n    return (\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state) ||\n      this.regexp_eatInvalidBracedQuantifier(state) ||\n      this.regexp_eatExtendedPatternCharacter(state)\n    )\n  };\n\n  pp$8.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isSyntaxCharacter(ch) {\n    return (\n      ch === 0x24  ||\n      ch >= 0x28  && ch <= 0x2B  ||\n      ch === 0x2E  ||\n      ch === 0x3F  ||\n      ch >= 0x5B  && ch <= 0x5E  ||\n      ch >= 0x7B  && ch <= 0x7D \n    )\n  }\n\n  pp$8.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n    return state.pos !== start\n  };\n\n  pp$8.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (\n      ch !== -1 &&\n      ch !== 0x24  &&\n      !(ch >= 0x28  && ch <= 0x2B ) &&\n      ch !== 0x2E  &&\n      ch !== 0x3F  &&\n      ch !== 0x5B  &&\n      ch !== 0x5E  &&\n      ch !== 0x7C \n    ) {\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F )) {\n      if (this.regexp_eatGroupName(state)) {\n        if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n          state.raise(\"Duplicate capture group name\");\n        }\n        state.groupNames.push(state.lastStringValue);\n        return\n      }\n      state.raise(\"Invalid group\");\n    }\n  };\n\n  pp$8.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C )) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E )) {\n        return true\n      }\n      state.raise(\"Invalid capture group name\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString(state.lastIntValue);\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var ch = state.current();\n    state.advance();\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24  || ch === 0x5F \n  }\n\n  pp$8.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var ch = state.current();\n    state.advance();\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24  || ch === 0x5F  || ch === 0x200C  || ch === 0x200D \n  }\n\n  pp$8.regexp_eatAtomEscape = function(state) {\n    if (\n      this.regexp_eatBackReference(state) ||\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state) ||\n      (state.switchN && this.regexp_eatKGroupName(state))\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      if (state.current() === 0x63 ) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    return false\n  };\n  pp$8.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n      if (state.switchU) {\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n        return true\n      }\n      if (n <= state.numCapturingParens) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B )) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true\n      }\n      state.raise(\"Invalid named reference\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatCharacterEscape = function(state) {\n    return (\n      this.regexp_eatControlEscape(state) ||\n      this.regexp_eatCControlLetter(state) ||\n      this.regexp_eatZero(state) ||\n      this.regexp_eatHexEscapeSequence(state) ||\n      this.regexp_eatRegExpUnicodeEscapeSequence(state) ||\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n      this.regexp_eatIdentityEscape(state)\n    )\n  };\n  pp$8.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 )) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatZero = function(state) {\n    if (state.current() === 0x30  && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 ) {\n      state.lastIntValue = 0x09; \n      state.advance();\n      return true\n    }\n    if (ch === 0x6E ) {\n      state.lastIntValue = 0x0A; \n      state.advance();\n      return true\n    }\n    if (ch === 0x76 ) {\n      state.lastIntValue = 0x0B; \n      state.advance();\n      return true\n    }\n    if (ch === 0x66 ) {\n      state.lastIntValue = 0x0C; \n      state.advance();\n      return true\n    }\n    if (ch === 0x72 ) {\n      state.lastIntValue = 0x0D; \n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isControlLetter(ch) {\n    return (\n      (ch >= 0x41  && ch <= 0x5A ) ||\n      (ch >= 0x61  && ch <= 0x7A )\n    )\n  }\n\n  pp$8.regexp_eatRegExpUnicodeEscapeSequence = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x75 )) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n        if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n          if (state.eat(0x5C ) && state.eat(0x75 ) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true\n            }\n          }\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n        return true\n      }\n      if (\n        state.switchU &&\n        state.eat(0x7B ) &&\n        this.regexp_eatHexDigits(state) &&\n        state.eat(0x7D ) &&\n        isValidUnicode(state.lastIntValue)\n      ) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.pos = start;\n    }\n\n    return false\n  };\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF\n  }\n\n  pp$8.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true\n      }\n      if (state.eat(0x2F )) {\n        state.lastIntValue = 0x2F; \n        return true\n      }\n      return false\n    }\n\n    var ch = state.current();\n    if (ch !== 0x63  && (!state.switchN || ch !== 0x6B )) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31  && ch <= 0x39 ) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n        state.advance();\n      } while ((ch = state.current()) >= 0x30  && ch <= 0x39 )\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return true\n    }\n\n    if (\n      state.switchU &&\n      this.options.ecmaVersion >= 9 &&\n      (ch === 0x50  || ch === 0x70 )\n    ) {\n      state.lastIntValue = -1;\n      state.advance();\n      if (\n        state.eat(0x7B ) &&\n        this.regexp_eatUnicodePropertyValueExpression(state) &&\n        state.eat(0x7D )\n      ) {\n        return true\n      }\n      state.raise(\"Invalid property name\");\n    }\n\n    return false\n  };\n  function isCharacterClassEscape(ch) {\n    return (\n      ch === 0x64  ||\n      ch === 0x44  ||\n      ch === 0x73  ||\n      ch === 0x53  ||\n      ch === 0x77  ||\n      ch === 0x57 \n    )\n  }\n\n  pp$8.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D )) {\n      var name = state.lastStringValue;\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return true\n      }\n    }\n    state.pos = start;\n\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n      return true\n    }\n    return false\n  };\n  pp$8.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!has(state.unicodeProperties.nonBinary, name))\n      { state.raise(\"Invalid property name\"); }\n    if (!state.unicodeProperties.nonBinary[name].test(value))\n      { state.raise(\"Invalid property value\"); }\n  };\n  pp$8.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (!state.unicodeProperties.binary.test(nameOrValue))\n      { state.raise(\"Invalid property name\"); }\n  };\n\n  pp$8.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F \n  }\n\n  pp$8.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n  }\n\n  pp$8.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state)\n  };\n\n  pp$8.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B )) {\n      state.eat(0x5E );\n      this.regexp_classRanges(state);\n      if (state.eat(0x5D )) {\n        return true\n      }\n      state.raise(\"Unterminated character class\");\n    }\n    return false\n  };\n\n  pp$8.regexp_classRanges = function(state) {\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D ) && this.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  };\n\n  pp$8.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true\n      }\n      if (state.switchU) {\n        var ch$1 = state.current();\n        if (ch$1 === 0x63  || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n\n    var ch = state.current();\n    if (ch !== 0x5D ) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x62 )) {\n      state.lastIntValue = 0x08; \n      return true\n    }\n\n    if (state.switchU && state.eat(0x2D )) {\n      state.lastIntValue = 0x2D; \n      return true\n    }\n\n    if (!state.switchU && state.eat(0x63 )) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    return (\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state)\n    )\n  };\n\n  pp$8.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if (isDecimalDigit(ch) || ch === 0x5F ) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 )) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$8.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isDecimalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x39 \n  }\n\n  pp$8.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isHexDigit(ch) {\n    return (\n      (ch >= 0x30  && ch <= 0x39 ) ||\n      (ch >= 0x41  && ch <= 0x46 ) ||\n      (ch >= 0x61  && ch <= 0x66 )\n    )\n  }\n  function hexToInt(ch) {\n    if (ch >= 0x41  && ch <= 0x46 ) {\n      return 10 + (ch - 0x41 )\n    }\n    if (ch >= 0x61  && ch <= 0x66 ) {\n      return 10 + (ch - 0x61 )\n    }\n    return ch - 0x30 \n  }\n\n  pp$8.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30; \n      state.advance();\n      return true\n    }\n    state.lastIntValue = 0;\n    return false\n  };\n  function isOctalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x37 \n  }\n\n  pp$8.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false\n      }\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return true\n  };\n\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations)\n      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n    if (p.options.ranges)\n      { this.range = [p.start, p.end]; }\n  };\n\n\n  var pp$9 = Parser.prototype;\n\n\n  pp$9.next = function(ignoreEscapeSequenceInKeyword) {\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n      { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n    if (this.options.onToken)\n      { this.options.onToken(new Token(this)); }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp$9.getToken = function() {\n    this.next();\n    return new Token(this)\n  };\n\n  if (typeof Symbol !== \"undefined\")\n    { pp$9[Symbol.iterator] = function() {\n      var this$1 = this;\n\n      return {\n        next: function () {\n          var token = this$1.getToken();\n          return {\n            done: token.type === types.eof,\n            value: token\n          }\n        }\n      }\n    }; }\n\n\n  pp$9.curContext = function() {\n    return this.context[this.context.length - 1]\n  };\n\n\n  pp$9.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n    this.start = this.pos;\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\n    if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n    if (curContext.override) { return curContext.override(this) }\n    else { this.readToken(this.fullCharCodeAtPos()); }\n  };\n\n  pp$9.readToken = function(code) {\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 )\n      { return this.readWord() }\n\n    return this.getTokenFromCode(code)\n  };\n\n  pp$9.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xe000) { return code }\n    var next = this.input.charCodeAt(this.pos + 1);\n    return (code << 10) + next - 0x35fdc00\n  };\n\n  pp$9.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n    this.pos = end + 2;\n    if (this.options.locations) {\n      lineBreakG.lastIndex = start;\n      var match;\n      while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n        ++this.curLine;\n        this.lineStart = match.index + match[0].length;\n      }\n    }\n    if (this.options.onComment)\n      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  pp$9.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this.input.charCodeAt(++this.pos);\n    }\n    if (this.options.onComment)\n      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n\n  pp$9.skipSpace = function() {\n    loop: while (this.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.pos);\n      switch (ch) {\n      case 32: case 160: \n        ++this.pos;\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break\n      case 47: \n        switch (this.input.charCodeAt(this.pos + 1)) {\n        case 42: \n          this.skipBlockComment();\n          break\n        case 47:\n          this.skipLineComment(2);\n          break\n        default:\n          break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop\n        }\n      }\n    }\n  };\n\n\n  pp$9.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n\n    this.updateContext(prevType);\n  };\n\n\n  pp$9.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { \n      this.pos += 3;\n      return this.finishToken(types.ellipsis)\n    } else {\n      ++this.pos;\n      return this.finishToken(types.dot)\n    }\n  };\n\n  pp$9.readToken_slash = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.slash, 1)\n  };\n\n  pp$9.readToken_mult_modulo_exp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types.star : types.modulo;\n\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(tokentype, size)\n  };\n\n  pp$9.readToken_pipe_amp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n  };\n\n  pp$9.readToken_caret = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.bitwiseXOR, 1)\n  };\n\n  pp$9.readToken_plus_min = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken()\n      }\n      return this.finishOp(types.incDec, 2)\n    }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.plusMin, 1)\n  };\n\n  pp$9.readToken_lt_gt = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n      return this.finishOp(types.bitShift, size)\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n        this.input.charCodeAt(this.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    if (next === 61) { size = 2; }\n    return this.finishOp(types.relational, size)\n  };\n\n  pp$9.readToken_eq_excl = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { \n      this.pos += 2;\n      return this.finishToken(types.arrow)\n    }\n    return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n  };\n\n  pp$9.getTokenFromCode = function(code) {\n    switch (code) {\n    case 46: \n      return this.readToken_dot()\n\n    case 40: ++this.pos; return this.finishToken(types.parenL)\n    case 41: ++this.pos; return this.finishToken(types.parenR)\n    case 59: ++this.pos; return this.finishToken(types.semi)\n    case 44: ++this.pos; return this.finishToken(types.comma)\n    case 91: ++this.pos; return this.finishToken(types.bracketL)\n    case 93: ++this.pos; return this.finishToken(types.bracketR)\n    case 123: ++this.pos; return this.finishToken(types.braceL)\n    case 125: ++this.pos; return this.finishToken(types.braceR)\n    case 58: ++this.pos; return this.finishToken(types.colon)\n    case 63: ++this.pos; return this.finishToken(types.question)\n\n    case 96: \n      if (this.options.ecmaVersion < 6) { break }\n      ++this.pos;\n      return this.finishToken(types.backQuote)\n\n    case 48: \n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } \n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } \n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } \n      }\n\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: \n      return this.readNumber(false)\n\n    case 34: case 39: \n      return this.readString(code)\n\n\n    case 47: \n      return this.readToken_slash()\n\n    case 37: case 42: \n      return this.readToken_mult_modulo_exp(code)\n\n    case 124: case 38: \n      return this.readToken_pipe_amp(code)\n\n    case 94: \n      return this.readToken_caret()\n\n    case 43: case 45: \n      return this.readToken_plus_min(code)\n\n    case 60: case 62: \n      return this.readToken_lt_gt(code)\n\n    case 61: case 33: \n      return this.readToken_eq_excl(code)\n\n    case 126: \n      return this.finishOp(types.prefix, 1)\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString$1(code) + \"'\");\n  };\n\n  pp$9.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str)\n  };\n\n  pp$9.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n      var ch = this.input.charAt(this.pos);\n      if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n      if (!escaped) {\n        if (ch === \"[\") { inClass = true; }\n        else if (ch === \"]\" && inClass) { inClass = false; }\n        else if (ch === \"/\" && !inClass) { break }\n        escaped = ch === \"\\\\\";\n      } else { escaped = false; }\n      ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) { this.unexpected(flagsStart); }\n\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n\n    var value = null;\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {\n    }\n\n    return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n  };\n\n\n  pp$9.readInt = function(radix, len) {\n    var start = this.pos, total = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      var code = this.input.charCodeAt(this.pos), val = (void 0);\n      if (code >= 97) { val = code - 97 + 10; } \n      else if (code >= 65) { val = code - 65 + 10; } \n      else if (code >= 48 && code <= 57) { val = code - 48; } \n      else { val = Infinity; }\n      if (val >= radix) { break }\n      ++this.pos;\n      total = total * radix + val;\n    }\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n    return total\n  };\n\n  pp$9.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; \n    var val = this.readInt(radix);\n    if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n      val = typeof BigInt !== \"undefined\" ? BigInt(this.input.slice(start, this.pos)) : null;\n      ++this.pos;\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types.num, val)\n  };\n\n\n  pp$9.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n      var str$1 = this.input.slice(start, this.pos);\n      var val$1 = typeof BigInt !== \"undefined\" ? BigInt(str$1) : null;\n      ++this.pos;\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n      return this.finishToken(types.num, val$1)\n    }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n    if (next === 46 && !octal) { \n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) { \n      next = this.input.charCodeAt(++this.pos);\n      if (next === 43 || next === 45) { ++this.pos; } \n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n    var str = this.input.slice(start, this.pos);\n    var val = octal ? parseInt(str, 8) : parseFloat(str);\n    return this.finishToken(types.num, val)\n  };\n\n\n  pp$9.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n\n    if (ch === 123) { \n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code\n  };\n\n  function codePointToString$1(code) {\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n  }\n\n  pp$9.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) { break }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.pos;\n      } else {\n        if (isNewLine(ch, this.options.ecmaVersion >= 10)) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types.string, out)\n  };\n\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp$9.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp$9.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp$9.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { \n        if (this.pos === this.start && (this.type === types.template || this.type === types.invalidTemplate)) {\n          if (ch === 36) {\n            this.pos += 2;\n            return this.finishToken(types.dollarBraceL)\n          } else {\n            ++this.pos;\n            return this.finishToken(types.backQuote)\n          }\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(types.template, out)\n      }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        ++this.pos;\n        switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n        case 10:\n          out += \"\\n\";\n          break\n        default:\n          out += String.fromCharCode(ch);\n          break\n        }\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n  };\n\n  pp$9.readInvalidTemplateToken = function() {\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break\n\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") {\n          break\n        }\n\n      case \"`\":\n        return this.finishToken(types.invalidTemplate, this.input.slice(this.start, this.pos))\n\n      }\n    }\n    this.raise(this.start, \"Unterminated template\");\n  };\n\n\n  pp$9.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch (ch) {\n    case 110: return \"\\n\" \n    case 114: return \"\\r\" \n    case 120: return String.fromCharCode(this.readHexChar(2)) \n    case 117: return codePointToString$1(this.readCodePoint()) \n    case 116: return \"\\t\" \n    case 98: return \"\\b\" \n    case 118: return \"\\u000b\" \n    case 102: return \"\\f\" \n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } \n    case 10: \n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    case 56:\n    case 57:\n      if (inTemplate) {\n        var codePos = this.pos - 1;\n\n        this.invalidStringToken(\n          codePos,\n          \"Invalid escape sequence in template string\"\n        );\n\n        return null\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(\n            this.pos - 1 - octalStr.length,\n            inTemplate\n              ? \"Octal literal in template string\"\n              : \"Octal literal in strict mode\"\n          );\n        }\n        return String.fromCharCode(octal)\n      }\n      if (isNewLine(ch)) {\n        return \"\"\n      }\n      return String.fromCharCode(ch)\n    }\n  };\n\n\n  pp$9.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n    return n\n  };\n\n\n  pp$9.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while (this.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch, astral)) {\n        this.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) { \n        this.containsEsc = true;\n        word += this.input.slice(chunkStart, this.pos);\n        var escStart = this.pos;\n        if (this.input.charCodeAt(++this.pos) !== 117) \n          { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n        ++this.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n          { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n        word += codePointToString$1(esc);\n        chunkStart = this.pos;\n      } else {\n        break\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos)\n  };\n\n\n  pp$9.readWord = function() {\n    var word = this.readWord1();\n    var type = types.name;\n    if (this.keywords.test(word)) {\n      type = keywords$1[word];\n    }\n    return this.finishToken(type, word)\n  };\n\n\n  var version = \"7.1.0\";\n\n  Parser.acorn = {\n    Parser: Parser,\n    version: version,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types,\n    keywordTypes: keywords$1,\n    TokContext: TokContext,\n    tokContexts: types$1,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  };\n\n\n  function parse(input, options) {\n    return Parser.parse(input, options)\n  }\n\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options)\n  }\n\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options)\n  }\n\n  exports.Node = Node;\n  exports.Parser = Parser;\n  exports.Position = Position;\n  exports.SourceLocation = SourceLocation;\n  exports.TokContext = TokContext;\n  exports.Token = Token;\n  exports.TokenType = TokenType;\n  exports.defaultOptions = defaultOptions;\n  exports.getLineInfo = getLineInfo;\n  exports.isIdentifierChar = isIdentifierChar;\n  exports.isIdentifierStart = isIdentifierStart;\n  exports.isNewLine = isNewLine;\n  exports.keywordTypes = keywords$1;\n  exports.lineBreak = lineBreak;\n  exports.lineBreakG = lineBreakG;\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\n  exports.parse = parse;\n  exports.parseExpressionAt = parseExpressionAt;\n  exports.tokContexts = types$1;\n  exports.tokTypes = types;\n  exports.tokenizer = tokenizer;\n  exports.version = version;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n},{}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\nfunction glWiretap(gl, options = {}) {\n  const {\n    contextName = 'gl',\n    throwGetError,\n    useTrackablePrimitives,\n    readPixelsFile,\n    recording = [],\n    variables = {},\n    onReadPixels,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  const proxy = new Proxy(gl, { get: listen });\n  const contextVariables = [];\n  const entityNames = {};\n  let imageCount = 0;\n  let indent = '';\n  let readPixelsVariableName;\n  return proxy;\n  function listen(obj, property) {\n    switch (property) {\n      case 'addComment': return addComment;\n      case 'checkThrowError': return checkThrowError;\n      case 'getReadPixelsVariableName': return readPixelsVariableName;\n      case 'insertVariable': return insertVariable;\n      case 'reset': return reset;\n      case 'setIndent': return setIndent;\n      case 'toString': return toString;\n      case 'getContextVariableName': return getContextVariableName;\n    }\n    if (typeof gl[property] === 'function') {\n      return function() { \n        switch (property) {\n          case 'getError':\n            if (throwGetError) {\n              recording.push(`${indent}if (${contextName}.getError() !== ${contextName}.NONE) throw new Error('error');`);\n            } else {\n              recording.push(`${indent}${contextName}.getError();`); \n            }\n            return gl.getError();\n          case 'getExtension': {\n            const variableName = `${contextName}Variables${contextVariables.length}`;\n            recording.push(`${indent}const ${variableName} = ${contextName}.getExtension('${arguments[0]}');`);\n            const extension = gl.getExtension(arguments[0]);\n            if (extension && typeof extension === 'object') {\n              const tappedExtension = glExtensionWiretap(extension, {\n                getEntity,\n                useTrackablePrimitives,\n                recording,\n                contextName: variableName,\n                contextVariables,\n                variables,\n                indent,\n                onUnrecognizedArgumentLookup,\n              });\n              contextVariables.push(tappedExtension);\n              return tappedExtension;\n            } else {\n              contextVariables.push(null);\n            }\n            return extension;\n          }\n          case 'readPixels':\n            const i = contextVariables.indexOf(arguments[6]);\n            let targetVariableName;\n            if (i === -1) {\n              const variableName = getVariableName(arguments[6]);\n              if (variableName) {\n                targetVariableName = variableName;\n                recording.push(`${indent}${variableName}`);\n              } else {\n                targetVariableName = `${contextName}Variable${contextVariables.length}`;\n                contextVariables.push(arguments[6]);\n                recording.push(`${indent}const ${targetVariableName} = new ${arguments[6].constructor.name}(${arguments[6].length});`);\n              }\n            } else {\n              targetVariableName = `${contextName}Variable${i}`;\n            }\n            readPixelsVariableName = targetVariableName;\n            const argumentAsStrings = [\n              arguments[0],\n              arguments[1],\n              arguments[2],\n              arguments[3],\n              getEntity(arguments[4]),\n              getEntity(arguments[5]),\n              targetVariableName\n            ];\n            recording.push(`${indent}${contextName}.readPixels(${argumentAsStrings.join(', ')});`);\n            if (readPixelsFile) {\n              writePPM(arguments[2], arguments[3]);\n            }\n            if (onReadPixels) {\n              onReadPixels(targetVariableName, argumentAsStrings);\n            }\n            return gl.readPixels.apply(gl, arguments);\n          case 'drawBuffers':\n            recording.push(`${indent}${contextName}.drawBuffers([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup } )}]);`);\n            return gl.drawBuffers(arguments[0]);\n        }\n        let result = gl[property].apply(gl, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n              break;\n            }\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n\n            contextVariables.push(result);\n        }\n        return result;\n      }\n    }\n    entityNames[gl[property]] = property;\n    return gl[property];\n  }\n  function toString() {\n    return recording.join('\\n');\n  }\n  function reset() {\n    while (recording.length > 0) {\n      recording.pop();\n    }\n  }\n  function insertVariable(name, value) {\n    variables[name] = value;\n  }\n  function getEntity(value) {\n    const name = entityNames[value];\n    if (name) {\n      return contextName + '.' + name;\n    }\n    return value;\n  }\n  function setIndent(spaces) {\n    indent = ' '.repeat(spaces);\n  }\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    contextVariables.push(value);\n    return variableName;\n  }\n  function writePPM(width, height) {\n    const sourceVariable = `${contextName}Variable${contextVariables.length}`;\n    const imageVariable = `imageDatum${imageCount}`;\n    recording.push(`${indent}let ${imageVariable} = [\"P3\\\\n# ${readPixelsFile}.ppm\\\\n\", ${width}, ' ', ${height}, \"\\\\n255\\\\n\"].join(\"\");`);\n    recording.push(`${indent}for (let i = 0; i < ${imageVariable}.length; i += 4) {`);\n    recording.push(`${indent}  ${imageVariable} += ${sourceVariable}[i] + ' ' + ${sourceVariable}[i + 1] + ' ' + ${sourceVariable}[i + 2] + ' ';`);\n    recording.push(`${indent}}`);\n    recording.push(`${indent}if (typeof require !== \"undefined\") {`);\n    recording.push(`${indent}  require('fs').writeFileSync('./${readPixelsFile}.ppm', ${imageVariable});`);\n    recording.push(`${indent}}`);\n    imageCount++;\n  }\n  function addComment(value) {\n    recording.push(`${indent}// ${value}`);\n  }\n  function checkThrowError() {\n    recording.push(`${indent}(() => {\n${indent}const error = ${contextName}.getError();\n${indent}if (error !== ${contextName}.NONE) {\n${indent}  const names = Object.getOwnPropertyNames(gl);\n${indent}  for (let i = 0; i < names.length; i++) {\n${indent}    const name = names[i];\n${indent}    if (${contextName}[name] === error) {\n${indent}      throw new Error('${contextName} threw ' + name);\n${indent}    }\n${indent}  }\n${indent}}\n${indent}})();`);\n  }\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    return null;\n  }\n\n  function getContextVariableName(value) {\n    const i = contextVariables.indexOf(value);\n    if (i !== -1) {\n      return `${contextName}Variable${i}`;\n    }\n    return null;\n  }\n}\n\nfunction glExtensionWiretap(extension, options) {\n  const proxy = new Proxy(extension, { get: listen });\n  const extensionEntityNames = {};\n  const {\n    contextName,\n    contextVariables,\n    getEntity,\n    useTrackablePrimitives,\n    recording,\n    variables,\n    indent,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  return proxy;\n  function listen(obj, property) {\n    if (typeof obj[property] === 'function') {\n      return function() {\n        switch (property) {\n          case 'drawBuffersWEBGL':\n            recording.push(`${indent}${contextName}.drawBuffersWEBGL([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })}]);`);\n            return extension.drawBuffersWEBGL(arguments[0]);\n        }\n        let result = extension[property].apply(extension, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result);\n            }\n            break;\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n            contextVariables.push(result);\n        }\n        return result;\n      };\n    }\n    extensionEntityNames[extension[property]] = property;\n    return extension[property];\n  }\n\n  function getExtensionEntity(value) {\n    if (extensionEntityNames.hasOwnProperty(value)) {\n      return `${contextName}.${extensionEntityNames[value]}`;\n    }\n    return getEntity(value);\n  }\n\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    contextVariables.push(value);\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    return variableName;\n  }\n}\n\nfunction argumentsToString(args, options) {\n  const { variables, onUnrecognizedArgumentLookup } = options;\n  return (Array.from(args).map((arg) => {\n    const variableName = getVariableName(arg);\n    if (variableName) {\n      return variableName;\n    }\n    return argumentToString(arg, options);\n  }).join(', '));\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (!variables.hasOwnProperty(name)) continue;\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    if (onUnrecognizedArgumentLookup) {\n      return onUnrecognizedArgumentLookup(value);\n    }\n    return null;\n  }\n}\n\nfunction argumentToString(arg, options) {\n  const { contextName, contextVariables, getEntity, addVariable, onUnrecognizedArgumentLookup } = options;\n  if (typeof arg === 'undefined') {\n    return 'undefined';\n  }\n  if (arg === null) {\n    return 'null';\n  }\n  const i = contextVariables.indexOf(arg);\n  if (i > -1) {\n    return `${contextName}Variable${i}`;\n  }\n  switch (arg.constructor.name) {\n    case 'String':\n      const hasLines = /\\n/.test(arg);\n      const hasSingleQuotes = /'/.test(arg);\n      const hasDoubleQuotes = /\"/.test(arg);\n      if (hasLines) {\n        return '`' + arg + '`';\n      } else if (hasSingleQuotes && !hasDoubleQuotes) {\n        return '\"' + arg + '\"';\n      } else if (!hasSingleQuotes && hasDoubleQuotes) {\n        return \"'\" + arg + \"'\";\n      } else {\n        return '\\'' + arg + '\\'';\n      }\n    case 'Number': return getEntity(arg);\n    case 'Boolean': return getEntity(arg);\n    case 'Array':\n      return addVariable(arg, `new ${arg.constructor.name}([${Array.from(arg).join(',')}])`);\n    case 'Float32Array':\n    case 'Uint8Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n      return addVariable(arg, `new ${arg.constructor.name}(${JSON.stringify(Array.from(arg))})`);\n    default:\n      if (onUnrecognizedArgumentLookup) {\n        const instantiationString = onUnrecognizedArgumentLookup(arg);\n        if (instantiationString) {\n          return instantiationString;\n        }\n      }\n      throw new Error(`unrecognized argument type ${arg.constructor.name}`);\n  }\n}\n\nfunction trackablePrimitive(value) {\n  return new value.constructor(value);\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = { glWiretap, glExtensionWiretap };\n}\n\nif (typeof window !== 'undefined') {\n  glWiretap.glExtensionWiretap = glExtensionWiretap;\n  window.glWiretap = glWiretap;\n}\n\n},{}],4:[function(require,module,exports){\nfunction setupArguments(args) {\n  const newArguments = new Array(args.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i];\n    if (arg.toArray) {\n      newArguments[i] = arg.toArray();\n    } else {\n      newArguments[i] = arg;\n    }\n  }\n  return newArguments;\n}\n\nfunction mock1D() {\n  const args = setupArguments(arguments);\n  const row = new Float32Array(this.output.x);\n  for (let x = 0; x < this.output.x; x++) {\n    this.thread.x = x;\n    this.thread.y = 0;\n    this.thread.z = 0;\n    row[x] = this._fn.apply(this, args);\n  }\n  return row;\n}\n\nfunction mock2D() {\n  const args = setupArguments(arguments);\n  const matrix = new Array(this.output.y);\n  for (let y = 0; y < this.output.y; y++) {\n    const row = new Float32Array(this.output.x);\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      row[x] = this._fn.apply(this, args);\n    }\n    matrix[y] = row;\n  }\n  return matrix;\n}\n\nfunction mock2DGraphical() {\n  const args = setupArguments(arguments);\n  for (let y = 0; y < this.output.y; y++) {\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      this._fn.apply(this, args);\n    }\n  }\n}\n\nfunction mock3D() {\n  const args = setupArguments(arguments);\n  const cube = new Array(this.output.z);\n  for (let z = 0; z < this.output.z; z++) {\n    const matrix = new Array(this.output.y);\n    for (let y = 0; y < this.output.y; y++) {\n      const row = new Float32Array(this.output.x);\n      for (let x = 0; x < this.output.x; x++) {\n        this.thread.x = x;\n        this.thread.y = y;\n        this.thread.z = z;\n        row[x] = this._fn.apply(this, args);\n      }\n      matrix[y] = row;\n    }\n    cube[z] = matrix;\n  }\n  return cube;\n}\n\nfunction apiDecorate(kernel) {\n  kernel.setOutput = (output) => {\n    kernel.output = setupOutput(output);\n    if (kernel.graphical) {\n      setupGraphical(kernel);\n    }\n  };\n  kernel.toJSON = () => {\n    throw new Error('Not usable with gpuMock');\n  };\n  kernel.setConstants = (flag) => {\n    kernel.constants = flag;\n    return kernel;\n  };\n  kernel.setGraphical = (flag) => {\n    kernel.graphical = flag;\n    return kernel;\n  };\n  kernel.setCanvas = (flag) => {\n    kernel.canvas = flag;\n    return kernel;\n  };\n  kernel.setContext = (flag) => {\n    kernel.context = flag;\n    return kernel;\n  };\n  kernel.destroy = () => {};\n  kernel.validateSettings = () => {};\n  if (kernel.graphical && kernel.output) {\n    setupGraphical(kernel);\n  }\n  kernel.exec = function() {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(kernel.apply(kernel, arguments));\n      } catch(e) {\n        reject(e);\n      }\n    });\n  };\n  kernel.getPixels = (flip) => {\n    const {x, y} = kernel.output;\n    return flip ? flipPixels(kernel._imageData.data, x, y) : kernel._imageData.data.slice(0);\n  };\n  kernel.color = function(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = kernel.output.x;\n    const height = kernel.output.y;\n\n    const x = kernel.thread.x;\n    const y = height - kernel.thread.y - 1;\n\n    const index = x + y * width;\n\n    kernel._colorData[index * 4 + 0] = r;\n    kernel._colorData[index * 4 + 1] = g;\n    kernel._colorData[index * 4 + 2] = b;\n    kernel._colorData[index * 4 + 3] = a;\n  };\n\n  const mockMethod = () => kernel;\n  const methods = [\n    'setWarnVarUsage',\n    'setArgumentTypes',\n    'setTactic',\n    'setOptimizeFloatMemory',\n    'setDebug',\n    'setLoopMaxIterations',\n    'setConstantTypes',\n    'setFunctions',\n    'setNativeFunctions',\n    'setInjectedNative',\n    'setPipeline',\n    'setPrecision',\n    'setOutputToTexture',\n    'setImmutable',\n    'setStrictIntegers',\n    'setDynamicOutput',\n    'setHardcodeConstants',\n    'setDynamicArguments',\n    'setUseLegacyEncoder',\n    'setWarnVarUsage',\n    'addSubKernel',\n  ];\n  for (let i = 0; i < methods.length; i++) {\n    kernel[methods[i]] = mockMethod;\n  }\n  return kernel;\n}\n\nfunction setupGraphical(kernel) {\n  const {x, y} = kernel.output;\n  if (kernel.context && kernel.context.createImageData) {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = kernel.context.createImageData(x, y);\n    kernel._colorData = data;\n  } else {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = { data };\n    kernel._colorData = data;\n  }\n}\n\nfunction setupOutput(output) {\n  let result = null;\n  if (output.length) {\n    if (output.length === 3) {\n      const [x,y,z] = output;\n      result = { x, y, z };\n    } else if (output.length === 2) {\n      const [x,y] = output;\n      result = { x, y };\n    } else {\n      const [x] = output;\n      result = { x };\n    }\n  } else {\n    result = output;\n  }\n  return result;\n}\n\nfunction gpuMock(fn, settings = {}) {\n  const output = settings.output ? setupOutput(settings.output) : null;\n  function kernel() {\n    if (kernel.output.z) {\n      return mock3D.apply(kernel, arguments);\n    } else if (kernel.output.y) {\n      if (kernel.graphical) {\n        return mock2DGraphical.apply(kernel, arguments);\n      }\n      return mock2D.apply(kernel, arguments);\n    } else {\n      return mock1D.apply(kernel, arguments);\n    }\n  }\n  kernel._fn = fn;\n  kernel.constants = settings.constants || null;\n  kernel.context = settings.context || null;\n  kernel.canvas = settings.canvas || null;\n  kernel.graphical = settings.graphical || false;\n  kernel._imageData = null;\n  kernel._colorData = null;\n  kernel.output = output;\n  kernel.thread = {\n    x: 0,\n    y: 0,\n    z: 0\n  };\n  return apiDecorate(kernel);\n}\n\nfunction flipPixels(pixels, width, height) {\n  const halfHeight = height / 2 | 0; \n  const bytesPerRow = width * 4;\n  const temp = new Uint8ClampedArray(width * 4);\n  const result = pixels.slice(0);\n  for (let y = 0; y < halfHeight; ++y) {\n    const topOffset = y * bytesPerRow;\n    const bottomOffset = (height - y - 1) * bytesPerRow;\n\n    temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n    result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n    result.set(temp, bottomOffset);\n  }\n  return result;\n}\n\nmodule.exports = {\n  gpuMock\n};\n\n},{}],5:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction alias(name, source) {\n  const fnString = source.toString();\n  return new Function(`return function ${ name } (${ utils.getArgumentNamesFromString(fnString).join(', ') }) {\n  ${ utils.getFunctionBodyFromString(fnString) }\n}`)();\n}\n\nmodule.exports = {\n  alias\n};\n},{\"./utils\":114}],6:[function(require,module,exports){\nconst { FunctionNode } = require('../function-node');\n\nclass CPUFunctionNode extends FunctionNode {\n  astFunction(ast, retArr) {\n\n    if (!this.isRootKernel) {\n      retArr.push('function');\n      retArr.push(' ');\n      retArr.push(this.name);\n      retArr.push('(');\n\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        retArr.push('user_');\n        retArr.push(argumentName);\n      }\n\n      retArr.push(') {\\n');\n    }\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    if (!this.isRootKernel) {\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    const type = this.returnType || this.getType(ast.argument);\n\n    if (!this.returnType) {\n      this.returnType = type;\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(this.leadingReturnStatement);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';\\n');\n      retArr.push(this.followingReturnStatement);\n      retArr.push('continue;\\n');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = `);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push('return ');\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    retArr.push(ast.value);\n\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    retArr.push('(');\n    this.astGeneric(ast.left, retArr);\n    retArr.push(ast.operator);\n    this.astGeneric(ast.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    switch (idtNode.name) {\n      case 'Infinity':\n        retArr.push('Infinity');\n        break;\n      default:\n        if (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n          retArr.push('constants_' + idtNode.name);\n        } else {\n          retArr.push('user_' + idtNode.name);\n        }\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      this.pushState('in-for-loop-init');\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < initArr.length; i++) {\n        if (initArr[i].includes && initArr[i].includes(',')) {\n          isSafe = false;\n        }\n      }\n      this.popState('in-for-loop-init');\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), ';\\n');\n      }\n      retArr.push(`for (let ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        whileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    retArr.push('if (');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') {\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('} else {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        doWhileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n\n  }\n\n  astAssignmentExpression(assNode, retArr) {\n    const declaration = this.getDeclaration(assNode.left);\n    if (declaration && !declaration.assignable) {\n      throw this.astErrorOutput(`Variable ${assNode.left.name} is not assignable here`, assNode);\n    }\n    this.astGeneric(assNode.left, retArr);\n    retArr.push(assNode.operator);\n    this.astGeneric(assNode.right, retArr);\n    return retArr;\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    retArr.push(`${varDecNode.kind} `);\n    const { declarations } = varDecNode;\n    for (let i = 0; i < declarations.length; i++) {\n      if (i > 0) {\n        retArr.push(',');\n      }\n      const declaration = declarations[i];\n      const info = this.getDeclaration(declaration.id);\n      if (!info.valueType) {\n        info.valueType = this.getType(declaration.init);\n      }\n      this.astGeneric(declaration, retArr);\n    }\n    if (!this.isState('in-for-loop-init')) {\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n\n  }\n\n  astSwitchStatement(ast, retArr) {\n    const { discriminant, cases } = ast;\n    retArr.push('switch (');\n    this.astGeneric(discriminant, retArr);\n    retArr.push(') {\\n');\n    for (let i = 0; i < cases.length; i++) {\n      if (cases[i].test === null) {\n        retArr.push('default:\\n');\n        this.astGeneric(cases[i].consequent, retArr);\n        if (cases[i].consequent && cases[i].consequent.length > 0) {\n          retArr.push('break;\\n');\n        }\n        continue;\n      }\n      retArr.push('case ');\n      this.astGeneric(cases[i].test, retArr);\n      retArr.push(':\\n');\n      if (cases[i].consequent && cases[i].consequent.length > 0) {\n        this.astGeneric(cases[i].consequent, retArr);\n        retArr.push('break;\\n');\n      }\n    }\n    retArr.push('\\n}');\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('_this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      signature,\n      type,\n      property,\n      xProperty,\n      yProperty,\n      zProperty,\n      name,\n      origin\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'this.thread.value':\n        retArr.push(`_this.thread.${ name }`);\n        return retArr;\n      case 'this.output.value':\n        switch (name) {\n          case 'x':\n            retArr.push('outputX');\n            break;\n          case 'y':\n            retArr.push('outputY');\n            break;\n          case 'z':\n            retArr.push('outputZ');\n            break;\n          default:\n            throw this.astErrorOutput('Unexpected expression', mNode);\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ name }[0]`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ name }[1]`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ name }[2]`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ name }[3]`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n      case 'this.constants.value[]':\n      case 'this.constants.value[][]':\n      case 'this.constants.value[][][]':\n        break;\n      case 'fn()[]':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        this.astGeneric(mNode.property, retArr);\n        retArr.push(']');\n        return retArr;\n      case 'fn()[][]':\n        this.astGeneric(mNode.object.object, retArr);\n        retArr.push('[');\n        this.astGeneric(mNode.object.property, retArr);\n        retArr.push(']');\n        retArr.push('[');\n        this.astGeneric(mNode.property, retArr);\n        retArr.push(']');\n        return retArr;\n      default:\n        throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (!mNode.computed) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${name}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${name}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n      case 'HTMLImageArray':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n      case 'HTMLImage':\n      default:\n        let size;\n        let isInput;\n        if (origin === 'constants') {\n          const constant = this.constants[name];\n          isInput = this.constantTypes[name] === 'Input';\n          size = isInput ? constant.size : null;\n        } else {\n          isInput = this.isInput(name);\n          size = isInput ? this.argumentSizes[this.argumentNames.indexOf(name)] : null;\n        }\n        retArr.push(`${ markupName }`);\n        if (zProperty && yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? '(outputY * outputX)' : size[1] * size[0] })+(`);\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (typeof xProperty !== 'undefined') {\n          retArr.push('[');\n          this.astGeneric(xProperty, retArr);\n          retArr.push(']');\n        }\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (ast.type !== 'CallExpression') {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n    let functionName = this.astMemberExpressionUnroll(ast.callee);\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n    const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n    for (let i = 0; i < ast.arguments.length; ++i) {\n      const argument = ast.arguments[i];\n\n      let argumentType = this.getType(argument);\n      if (!targetTypes[i]) {\n        this.triggerImplyArgumentType(functionName, i, argumentType, this);\n      }\n\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      this.astGeneric(argument, retArr);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const returnType = this.getType(arrNode);\n    const arrLen = arrNode.elements.length;\n    const elements = [];\n    for (let i = 0; i < arrLen; ++i) {\n      const element = [];\n      this.astGeneric(arrNode.elements[i], element);\n      elements.push(element.join(''));\n    }\n    switch (returnType) {\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`[${elements.join(', ')}]`);\n        break;\n      default:\n        retArr.push(`new Float32Array([${elements.join(', ')}])`);\n    }\n    return retArr;\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    retArr.push('debugger;');\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  CPUFunctionNode\n};\n},{\"../function-node\":10}],7:[function(require,module,exports){\nconst { utils } = require('../../utils');\n\nfunction constantsToString(constants, types) {\n  const results = [];\n  for (const name in types) {\n    if (!types.hasOwnProperty(name)) continue;\n    const type = types[name];\n    const constant = constants[name];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n        results.push(`${name}:${constant}`);\n        break;\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        results.push(`${name}:new ${constant.constructor.name}(${JSON.stringify(Array.from(constant))})`);\n        break;\n    }\n  }\n  return `{ ${ results.join() } }`;\n}\n\nfunction cpuKernelString(cpuKernel, name) {\n  const header = [];\n  const thisProperties = [];\n  const beforeReturn = [];\n\n  const useFunctionKeyword = !/^function/.test(cpuKernel.color.toString());\n\n  header.push(\n    '  const { context, canvas, constants: incomingConstants } = settings;',\n    `  const output = new Int32Array(${JSON.stringify(Array.from(cpuKernel.output))});`,\n    `  const _constantTypes = ${JSON.stringify(cpuKernel.constantTypes)};`,\n    `  const _constants = ${constantsToString(cpuKernel.constants, cpuKernel.constantTypes)};`\n  );\n\n  thisProperties.push(\n    '    constants: _constants,',\n    '    context,',\n    '    output,',\n    '    thread: {x: 0, y: 0, z: 0},'\n  );\n\n  if (cpuKernel.graphical) {\n    header.push(`  const _imageData = context.createImageData(${cpuKernel.output[0]}, ${cpuKernel.output[1]});`);\n    header.push(`  const _colorData = new Uint8ClampedArray(${cpuKernel.output[0]} * ${cpuKernel.output[1]} * 4);`);\n\n    const colorFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.color.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: (object, name) => {\n        return null;\n      }\n    });\n\n    const getPixelsFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.getPixels.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: () => {\n        return null;\n      }\n    });\n\n    thisProperties.push(\n      '    _imageData,',\n      '    _colorData,',\n      `    color: ${colorFn},`\n    );\n\n    beforeReturn.push(\n      `  kernel.getPixels = ${getPixelsFn};`\n    );\n  }\n\n  const constantTypes = [];\n  const constantKeys = Object.keys(cpuKernel.constantTypes);\n  for (let i = 0; i < constantKeys.length; i++) {\n    constantTypes.push(cpuKernel.constantTypes[constantKeys]);\n  }\n  if (cpuKernel.argumentTypes.indexOf('HTMLImageArray') !== -1 || constantTypes.indexOf('HTMLImageArray') !== -1) {\n    const flattenedImageTo3DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo3DArray.toString(), {\n      doNotDefine: ['canvas'],\n      findDependency: (object, name) => {\n        if (object === 'this') {\n          return (useFunctionKeyword ? 'function ' : '') + cpuKernel[name].toString();\n        }\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return;\n          case 'context':\n            return 'context';\n        }\n      }\n    });\n    beforeReturn.push(flattenedImageTo3DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n    thisProperties.push(`    _imageTo3DArray,`);\n  } else if (cpuKernel.argumentTypes.indexOf('HTMLImage') !== -1 || constantTypes.indexOf('HTMLImage') !== -1) {\n    const flattenedImageTo2DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._mediaTo2DArray.toString(), {\n      findDependency: (object, name) => {\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return 'settings.canvas';\n          case 'context':\n            return 'settings.context';\n        }\n        throw new Error('unhandled thisLookup');\n      }\n    });\n    beforeReturn.push(flattenedImageTo2DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n  }\n\n  return `function(settings) {\n${ header.join('\\n') }\n  for (const p in _constantTypes) {\n    if (!_constantTypes.hasOwnProperty(p)) continue;\n    const type = _constantTypes[p];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        if (incomingConstants.hasOwnProperty(p)) {\n          console.warn('constant ' + p + ' of type ' + type + ' cannot be resigned');\n        }\n        continue;\n    }\n    if (!incomingConstants.hasOwnProperty(p)) {\n      throw new Error('constant ' + p + ' not found');\n    }\n    _constants[p] = incomingConstants[p];\n  }\n  const kernel = (function() {\n${cpuKernel._kernelString}\n  })\n    .apply({ ${thisProperties.join('\\n')} });\n  ${ beforeReturn.join('\\n') }\n  return kernel;\n}`;\n}\n\nmodule.exports = {\n  cpuKernelString\n};\n},{\"../../utils\":114}],8:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { CPUFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst { cpuKernelString } = require('./kernel-string');\n\nclass CPUKernel extends Kernel {\n  static getFeatures() {\n    return this.features;\n  }\n  static get features() {\n    return Object.freeze({\n      kernelMap: true,\n      isIntegerDivisionAccurate: true\n    });\n  }\n  static get isSupported() {\n    return true;\n  }\n  static isContextMatch(context) {\n    return false;\n  }\n  static get mode() {\n    return 'cpu';\n  }\n\n  static nativeFunctionArguments() {\n    return null;\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`Looking up native function return type not supported on ${this.name}`);\n  }\n\n  static combineKernels(combinedKernel) {\n    return combinedKernel;\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    return 'cpu' + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.mergeSettings(source.settings || settings);\n\n    this._imageData = null;\n    this._colorData = null;\n    this._kernelString = null;\n    this._prependedString = [];\n    this.thread = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n    this.translatedSources = null;\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      return document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    if (!this.canvas) return null;\n    return this.canvas.getContext('2d');\n  }\n\n  initPlugins(settings) {\n    return [];\n  }\n\n  validateSettings(args) {\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      if (argType === 'Array') {\n        this.output = utils.getDimensions(argType);\n      } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n        this.output = args[0].output;\n      } else {\n        throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n    }\n\n    this.checkOutput();\n  }\n\n  translateSource() {\n    this.leadingReturnStatement = this.output.length > 1 ? 'resultX[x] = ' : 'result[x] = ';\n    if (this.subKernels) {\n      const followingReturnStatement = [];\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const {\n          name\n        } = this.subKernels[i];\n        followingReturnStatement.push(this.output.length > 1 ? `resultX_${ name }[x] = subKernelResult_${ name };\\n` : `result_${ name }[x] = subKernelResult_${ name };\\n`);\n      }\n      this.followingReturnStatement = followingReturnStatement.join('');\n    }\n    const functionBuilder = FunctionBuilder.fromKernel(this, CPUFunctionNode);\n    this.translatedSources = functionBuilder.getPrototypes('kernel');\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n  }\n\n  build() {\n    if (this.built) return;\n    this.setupConstants();\n    this.setupArguments(arguments);\n    this.validateSettings(arguments);\n    this.translateSource();\n\n    if (this.graphical) {\n      const {\n        canvas,\n        output\n      } = this;\n      if (!canvas) {\n        throw new Error('no canvas available for using graphical output');\n      }\n      const width = output[0];\n      const height = output[1] || 1;\n      canvas.width = width;\n      canvas.height = height;\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n\n    const kernelString = this.getKernelString();\n    this.kernelString = kernelString;\n\n    if (this.debug) {\n      console.log('Function output:');\n      console.log(kernelString);\n    }\n\n    try {\n      this.run = new Function([], kernelString).bind(this)();\n    } catch (e) {\n      console.error('An error occurred compiling the javascript: ', e);\n    }\n    this.buildSignature(arguments);\n    this.built = true;\n  }\n\n  color(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = this.output[0];\n    const height = this.output[1];\n\n    const x = this.thread.x;\n    const y = height - this.thread.y - 1;\n\n    const index = x + y * width;\n\n    this._colorData[index * 4 + 0] = r;\n    this._colorData[index * 4 + 1] = g;\n    this._colorData[index * 4 + 2] = b;\n    this._colorData[index * 4 + 3] = a;\n  }\n\n  getKernelString() {\n    if (this._kernelString !== null) return this._kernelString;\n\n    let kernelThreadString = null;\n    let {\n      translatedSources\n    } = this;\n    if (translatedSources.length > 1) {\n      translatedSources = translatedSources.filter(fn => {\n        if (/^function/.test(fn)) return fn;\n        kernelThreadString = fn;\n        return false;\n      });\n    } else {\n      kernelThreadString = translatedSources.shift();\n    }\n    return this._kernelString = `  const LOOP_MAX = ${ this._getLoopMaxString() };\n  ${ this.injectedNative || '' }\n  const _this = this;\n  ${ this._resultKernelHeader() }\n  ${ this._processConstants() }\n  return (${ this.argumentNames.map(argumentName => 'user_' + argumentName).join(', ') }) => {\n    ${ this._prependedString.join('') }\n    ${ this._earlyThrows() }\n    ${ this._processArguments() }\n    ${ this.graphical ? this._graphicalKernelBody(kernelThreadString) : this._resultKernelBody(kernelThreadString) }\n    ${ translatedSources.length > 0 ? translatedSources.join('\\n') : '' }\n  };`;\n  }\n\n  toString() {\n    return cpuKernelString(this);\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${ parseInt(this.loopMaxIterations) };` :\n      ' 1000;'\n    );\n  }\n\n  _processConstants() {\n    if (!this.constants) return '';\n\n    const result = [];\n    for (let p in this.constants) {\n      const type = this.constantTypes[p];\n      switch (type) {\n        case 'HTMLCanvas':\n        case 'OffscreenCanvas':\n        case 'HTMLImage':\n        case 'ImageBitmap':\n        case 'ImageData':\n        case 'HTMLVideo':\n          result.push(`    const constants_${p} = this._mediaTo2DArray(this.constants.${p});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    const constants_${p} = this._imageTo3DArray(this.constants.${p});\\n`);\n          break;\n        case 'Input':\n          result.push(`    const constants_${p} = this.constants.${p}.value;\\n`);\n          break;\n        default:\n          result.push(`    const constants_${p} = this.constants.${p};\\n`);\n      }\n    }\n    return result.join('');\n  }\n\n  _earlyThrows() {\n    if (this.graphical) return '';\n    if (this.immutable) return '';\n    if (!this.pipeline) return '';\n    const arrayArguments = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      if (this.argumentTypes[i] === 'Array') {\n        arrayArguments.push(this.argumentNames[i]);\n      }\n    }\n    if (arrayArguments.length === 0) return '';\n    const checks = [];\n    for (let i = 0; i < arrayArguments.length; i++) {\n      const argumentName = arrayArguments[i];\n      const checkSubKernels = this._mapSubKernels(subKernel => `user_${argumentName} === result_${subKernel.name}`).join(' || ');\n      checks.push(`user_${argumentName} === result${checkSubKernels ? ` || ${checkSubKernels}` : ''}`);\n    }\n    return `if (${checks.join(' || ')}) throw new Error('Source and destination arrays are the same.  Use immutable = true');`;\n  }\n\n  _processArguments() {\n    const result = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      const variableName = `user_${this.argumentNames[i]}`;\n      switch (this.argumentTypes[i]) {\n        case 'HTMLCanvas':\n        case 'OffscreenCanvas':\n        case 'HTMLImage':\n        case 'ImageBitmap':\n        case 'ImageData':\n        case 'HTMLVideo':\n          result.push(`    ${variableName} = this._mediaTo2DArray(${variableName});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    ${variableName} = this._imageTo3DArray(${variableName});\\n`);\n          break;\n        case 'Input':\n          result.push(`    ${variableName} = ${variableName}.value;\\n`);\n          break;\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n          result.push(`\n    if (${variableName}.toArray) {\n      if (!_this.textureCache) {\n        _this.textureCache = [];\n        _this.arrayCache = [];\n      }\n      const textureIndex = _this.textureCache.indexOf(${variableName});\n      if (textureIndex !== -1) {\n        ${variableName} = _this.arrayCache[textureIndex];\n      } else {\n        _this.textureCache.push(${variableName});\n        ${variableName} = ${variableName}.toArray();\n        _this.arrayCache.push(${variableName});\n      }\n    }`);\n          break;\n      }\n    }\n    return result.join('');\n  }\n\n  _mediaTo2DArray(media) {\n    const canvas = this.canvas;\n    const width = media.width > 0 ? media.width : media.videoWidth;\n    const height = media.height > 0 ? media.height : media.videoHeight;\n    if (canvas.width < width) {\n      canvas.width = width;\n    }\n    if (canvas.height < height) {\n      canvas.height = height;\n    }\n    const ctx = this.context;\n    let pixelsData;\n    if (media.constructor === ImageData) {\n      pixelsData = media.data;\n    } else {\n      ctx.drawImage(media, 0, 0, width, height);\n      pixelsData = ctx.getImageData(0, 0, width, height).data;\n    }\n    const imageArray = new Array(height);\n    let index = 0;\n    for (let y = height - 1; y >= 0; y--) {\n      const row = imageArray[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        const pixel = new Float32Array(4);\n        pixel[0] = pixelsData[index++] / 255; \n        pixel[1] = pixelsData[index++] / 255; \n        pixel[2] = pixelsData[index++] / 255; \n        pixel[3] = pixelsData[index++] / 255; \n        row[x] = pixel;\n      }\n    }\n    return imageArray;\n  }\n\n  getPixels(flip) {\n    const [width, height] = this.output;\n    return flip ? utils.flipPixels(this._imageData.data, width, height) : this._imageData.data.slice(0);\n  }\n\n  _imageTo3DArray(images) {\n    const imagesArray = new Array(images.length);\n    for (let i = 0; i < images.length; i++) {\n      imagesArray[i] = this._mediaTo2DArray(images[i]);\n    }\n    return imagesArray;\n  }\n\n  _resultKernelHeader() {\n    if (this.graphical) return '';\n    if (this.immutable) return '';\n    if (!this.pipeline) return '';\n    switch (this.output.length) {\n      case 1:\n        return this._mutableKernel1DResults();\n      case 2:\n        return this._mutableKernel2DResults();\n      case 3:\n        return this._mutableKernel3DResults();\n    }\n  }\n\n  _resultKernelBody(kernelString) {\n    switch (this.output.length) {\n      case 1:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel1DLoop(kernelString) : this._resultImmutableKernel1DLoop(kernelString)) + this._kernelOutput();\n      case 2:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel2DLoop(kernelString) : this._resultImmutableKernel2DLoop(kernelString)) + this._kernelOutput();\n      case 3:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel3DLoop(kernelString) : this._resultImmutableKernel3DLoop(kernelString)) + this._kernelOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalKernelBody(kernelThreadString) {\n    switch (this.output.length) {\n      case 2:\n        return this._graphicalKernel2DLoop(kernelThreadString) + this._graphicalOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalOutput() {\n    return `\n    this._imageData.data.set(this._colorData);\n    this.context.putImageData(this._imageData, 0, 0);\n    return;`\n  }\n\n  _getKernelResultTypeConstructorString() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return 'Float32Array';\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        return 'Array';\n      default:\n        if (this.graphical) {\n          return 'Float32Array';\n        }\n        throw new Error(`unhandled returnType ${ this.returnType }`);\n    }\n  }\n\n  _resultImmutableKernel1DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _mutableKernel1DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }`;\n  }\n\n  _resultMutableKernel1DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _resultImmutableKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _mutableKernel2DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n    }`;\n  }\n\n  _resultMutableKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y];\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _graphicalKernel2DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _resultImmutableKernel3DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _mutableKernel3DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n      }\n    }`;\n  }\n\n  _resultMutableKernel3DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z];\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y];\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _kernelOutput() {\n    if (!this.subKernels) {\n      return '\\n    return result;';\n    }\n    return `\\n    return {\n      result: result,\n      ${ this.subKernels.map(subKernel => `${ subKernel.property }: result_${ subKernel.name }`).join(',\\n      ') }\n    };`;\n  }\n\n  _mapSubKernels(fn) {\n    return this.subKernels === null ? [''] :\n      this.subKernels.map(fn);\n  }\n\n  destroy(removeCanvasReference) {\n    if (removeCanvasReference) {\n      delete this.canvas;\n    }\n  }\n\n  static destroyContext(context) {}\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, CPUFunctionNode).toJSON();\n    return json;\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    const [width, height] = this.output;\n    if (this.graphical) {\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n  }\n\n  prependString(value) {\n    if (this._kernelString) throw new Error('Kernel already built');\n    this._prependedString.push(value);\n  }\n\n  hasPrependString(value) {\n    return this._prependedString.indexOf(value) > -1;\n  }\n}\n\nmodule.exports = {\n  CPUKernel\n};\n},{\"../../utils\":114,\"../function-builder\":9,\"../kernel\":36,\"./function-node\":6,\"./kernel-string\":7}],9:[function(require,module,exports){\nclass FunctionBuilder {\n  static fromKernel(kernel, FunctionNode, extraNodeOptions) {\n    const {\n      kernelArguments,\n      kernelConstants,\n      argumentNames,\n      argumentSizes,\n      argumentBitRatios,\n      constants,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      nativeFunctions,\n      output,\n      optimizeFloatMemory,\n      precision,\n      plugins,\n      source,\n      subKernels,\n      functions,\n      leadingReturnStatement,\n      followingReturnStatement,\n      dynamicArguments,\n      dynamicOutput,\n    } = kernel;\n\n    const argumentTypes = new Array(kernelArguments.length);\n    const constantTypes = {};\n\n    for (let i = 0; i < kernelArguments.length; i++) {\n      argumentTypes[i] = kernelArguments[i].type;\n    }\n\n    for (let i = 0; i < kernelConstants.length; i++) {\n      const kernelConstant = kernelConstants[i];\n      constantTypes[kernelConstant.name] = kernelConstant.type;\n    }\n\n    const needsArgumentType = (functionName, index) => {\n      return functionBuilder.needsArgumentType(functionName, index);\n    };\n\n    const assignArgumentType = (functionName, index, type) => {\n      functionBuilder.assignArgumentType(functionName, index, type);\n    };\n\n    const lookupReturnType = (functionName, ast, requestingNode) => {\n      return functionBuilder.lookupReturnType(functionName, ast, requestingNode);\n    };\n\n    const lookupFunctionArgumentTypes = (functionName) => {\n      return functionBuilder.lookupFunctionArgumentTypes(functionName);\n    };\n\n    const lookupFunctionArgumentName = (functionName, argumentIndex) => {\n      return functionBuilder.lookupFunctionArgumentName(functionName, argumentIndex);\n    };\n\n    const lookupFunctionArgumentBitRatio = (functionName, argumentName) => {\n      return functionBuilder.lookupFunctionArgumentBitRatio(functionName, argumentName);\n    };\n\n    const triggerImplyArgumentType = (functionName, i, argumentType, requestingNode) => {\n      functionBuilder.assignArgumentType(functionName, i, argumentType, requestingNode);\n    };\n\n    const triggerImplyArgumentBitRatio = (functionName, argumentName, calleeFunctionName, argumentIndex) => {\n      functionBuilder.assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex);\n    };\n\n    const onFunctionCall = (functionName, calleeFunctionName, args) => {\n      functionBuilder.trackFunctionCall(functionName, calleeFunctionName, args);\n    };\n\n    const onNestedFunction = (ast, source) => {\n      const argumentNames = [];\n      for (let i = 0; i < ast.params.length; i++) {\n        argumentNames.push(ast.params[i].name);\n      }\n      const nestedFunction = new FunctionNode(source, Object.assign({}, nodeOptions, {\n        returnType: null,\n        ast,\n        name: ast.id.name,\n        argumentNames,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n      }));\n      nestedFunction.traceFunctionAST(ast);\n      functionBuilder.addFunctionNode(nestedFunction);\n    };\n\n    const nodeOptions = Object.assign({\n      isRootKernel: false,\n      onNestedFunction,\n      lookupReturnType,\n      lookupFunctionArgumentTypes,\n      lookupFunctionArgumentName,\n      lookupFunctionArgumentBitRatio,\n      needsArgumentType,\n      assignArgumentType,\n      triggerImplyArgumentType,\n      triggerImplyArgumentBitRatio,\n      onFunctionCall,\n      optimizeFloatMemory,\n      precision,\n      constants,\n      constantTypes,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      output,\n      plugins,\n      dynamicArguments,\n      dynamicOutput,\n    }, extraNodeOptions || {});\n\n    const rootNodeOptions = Object.assign({}, nodeOptions, {\n      isRootKernel: true,\n      name: 'kernel',\n      argumentNames,\n      argumentTypes,\n      argumentSizes,\n      argumentBitRatios,\n      leadingReturnStatement,\n      followingReturnStatement,\n    });\n\n    if (typeof source === 'object' && source.functionNodes) {\n      return new FunctionBuilder().fromJSON(source.functionNodes, FunctionNode);\n    }\n\n    const rootNode = new FunctionNode(source, rootNodeOptions);\n\n    let functionNodes = null;\n    if (functions) {\n      functionNodes = functions.map((fn) => new FunctionNode(fn.source, {\n        returnType: fn.returnType,\n        argumentTypes: fn.argumentTypes,\n        output,\n        plugins,\n        constants,\n        constantTypes,\n        constantBitRatios,\n        optimizeFloatMemory,\n        precision,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n        onNestedFunction,\n      }));\n    }\n\n    let subKernelNodes = null;\n    if (subKernels) {\n      subKernelNodes = subKernels.map((subKernel) => {\n        const { name, source } = subKernel;\n        return new FunctionNode(source, Object.assign({}, nodeOptions, {\n          name,\n          isSubKernel: true,\n          isRootKernel: false,\n        }));\n      });\n    }\n\n    const functionBuilder = new FunctionBuilder({\n      kernel,\n      rootNode,\n      functionNodes,\n      nativeFunctions,\n      subKernelNodes\n    });\n\n    return functionBuilder;\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.kernel = settings.kernel;\n    this.rootNode = settings.rootNode;\n    this.functionNodes = settings.functionNodes || [];\n    this.subKernelNodes = settings.subKernelNodes || [];\n    this.nativeFunctions = settings.nativeFunctions || [];\n    this.functionMap = {};\n    this.nativeFunctionNames = [];\n    this.lookupChain = [];\n    this.functionNodeDependencies = {};\n    this.functionCalls = {};\n\n    if (this.rootNode) {\n      this.functionMap['kernel'] = this.rootNode;\n    }\n\n    if (this.functionNodes) {\n      for (let i = 0; i < this.functionNodes.length; i++) {\n        this.functionMap[this.functionNodes[i].name] = this.functionNodes[i];\n      }\n    }\n\n    if (this.subKernelNodes) {\n      for (let i = 0; i < this.subKernelNodes.length; i++) {\n        this.functionMap[this.subKernelNodes[i].name] = this.subKernelNodes[i];\n      }\n    }\n\n    if (this.nativeFunctions) {\n      for (let i = 0; i < this.nativeFunctions.length; i++) {\n        const nativeFunction = this.nativeFunctions[i];\n        this.nativeFunctionNames.push(nativeFunction.name);\n      }\n    }\n  }\n\n  addFunctionNode(functionNode) {\n    if (!functionNode.name) throw new Error('functionNode.name needs set');\n    this.functionMap[functionNode.name] = functionNode;\n    if (functionNode.isRootKernel) {\n      this.rootNode = functionNode;\n    }\n  }\n\n  traceFunctionCalls(functionName, retList) {\n    functionName = functionName || 'kernel';\n    retList = retList || [];\n\n    if (this.nativeFunctionNames.indexOf(functionName) > -1) {\n      const nativeFunctionIndex = retList.indexOf(functionName);\n      if (nativeFunctionIndex === -1) {\n        retList.push(functionName);\n      } else {\n        const dependantNativeFunctionName = retList.splice(nativeFunctionIndex, 1)[0];\n        retList.push(dependantNativeFunctionName);\n      }\n      return retList;\n    }\n\n    const functionNode = this.functionMap[functionName];\n    if (functionNode) {\n      const functionIndex = retList.indexOf(functionName);\n      if (functionIndex === -1) {\n        retList.push(functionName);\n        functionNode.toString(); \n        for (let i = 0; i < functionNode.calledFunctions.length; ++i) {\n          this.traceFunctionCalls(functionNode.calledFunctions[i], retList);\n        }\n      } else {\n        const dependantFunctionName = retList.splice(functionIndex, 1)[0];\n        retList.push(dependantFunctionName);\n      }\n    }\n\n    return retList;\n  }\n\n  getPrototypeString(functionName) {\n    return this.getPrototypes(functionName).join('\\n');\n  }\n\n  getPrototypes(functionName) {\n    if (this.rootNode) {\n      this.rootNode.toString();\n    }\n    if (functionName) {\n      return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n    }\n    return this.getPrototypesFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  getStringFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const node = this.functionMap[functionList[i]];\n      if (node) {\n        ret.push(this.functionMap[functionList[i]].toString());\n      }\n    }\n    return ret.join('\\n');\n  }\n\n  getPrototypesFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const functionName = functionList[i];\n      const functionIndex = this.nativeFunctionNames.indexOf(functionName);\n      if (functionIndex > -1) {\n        ret.push(this.nativeFunctions[functionIndex].source);\n        continue;\n      }\n      const node = this.functionMap[functionName];\n      if (node) {\n        ret.push(node.toString());\n      }\n    }\n    return ret;\n  }\n\n  toJSON() {\n    return this.traceFunctionCalls(this.rootNode.name).reverse().map(name => {\n      const nativeIndex = this.nativeFunctions.indexOf(name);\n      if (nativeIndex > -1) {\n        return {\n          name,\n          source: this.nativeFunctions[nativeIndex].source\n        };\n      } else if (this.functionMap[name]) {\n        return this.functionMap[name].toJSON();\n      } else {\n        throw new Error(`function ${ name } not found`);\n      }\n    });\n  }\n\n  fromJSON(jsonFunctionNodes, FunctionNode) {\n    this.functionMap = {};\n    for (let i = 0; i < jsonFunctionNodes.length; i++) {\n      const jsonFunctionNode = jsonFunctionNodes[i];\n      this.functionMap[jsonFunctionNode.settings.name] = new FunctionNode(jsonFunctionNode.ast, jsonFunctionNode.settings);\n    }\n    return this;\n  }\n\n  getString(functionName) {\n    if (functionName) {\n      return this.getStringFromFunctionNames(this.traceFunctionCalls(functionName).reverse());\n    }\n    return this.getStringFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  lookupReturnType(functionName, ast, requestingNode) {\n    if (ast.type !== 'CallExpression') {\n      throw new Error(`expected ast type of \"CallExpression\", but is ${ ast.type }`);\n    }\n    if (this._isNativeFunction(functionName)) {\n      return this._lookupNativeFunctionReturnType(functionName);\n    } else if (this._isFunction(functionName)) {\n      const node = this._getFunction(functionName);\n      if (node.returnType) {\n        return node.returnType;\n      } else {\n        for (let i = 0; i < this.lookupChain.length; i++) {\n          if (this.lookupChain[i].ast === ast) {\n            if (node.argumentTypes.length === 0 && ast.arguments.length > 0) {\n              const args = ast.arguments;\n              for (let j = 0; j < args.length; j++) {\n                this.lookupChain.push({\n                  name: requestingNode.name,\n                  ast: args[i],\n                  requestingNode\n                });\n                node.argumentTypes[j] = requestingNode.getType(args[j]);\n                this.lookupChain.pop();\n              }\n              return node.returnType = node.getType(node.getJsAST());\n            }\n\n            throw new Error('circlical logic detected!');\n          }\n        }\n        this.lookupChain.push({\n          name: requestingNode.name,\n          ast,\n          requestingNode\n        });\n        const type = node.getType(node.getJsAST());\n        this.lookupChain.pop();\n        return node.returnType = type;\n      }\n    }\n\n    return null;\n  }\n\n  _getFunction(functionName) {\n    if (!this._isFunction(functionName)) {\n      new Error(`Function ${functionName} not found`);\n    }\n    return this.functionMap[functionName];\n  }\n\n  _isFunction(functionName) {\n    return Boolean(this.functionMap[functionName]);\n  }\n\n  _getNativeFunction(functionName) {\n    for (let i = 0; i < this.nativeFunctions.length; i++) {\n      if (this.nativeFunctions[i].name === functionName) return this.nativeFunctions[i];\n    }\n    return null;\n  }\n\n  _isNativeFunction(functionName) {\n    return Boolean(this._getNativeFunction(functionName));\n  }\n\n  _lookupNativeFunctionReturnType(functionName) {\n    let nativeFunction = this._getNativeFunction(functionName);\n    if (nativeFunction) {\n      return nativeFunction.returnType;\n    }\n    throw new Error(`Native function ${ functionName } not found`);\n  }\n\n  lookupFunctionArgumentTypes(functionName) {\n    if (this._isNativeFunction(functionName)) {\n      return this._getNativeFunction(functionName).argumentTypes;\n    } else if (this._isFunction(functionName)) {\n      return this._getFunction(functionName).argumentTypes;\n    }\n    return null;\n  }\n\n  lookupFunctionArgumentName(functionName, argumentIndex) {\n    return this._getFunction(functionName).argumentNames[argumentIndex];\n  }\n\n  lookupFunctionArgumentBitRatio(functionName, argumentName) {\n    if (!this._isFunction(functionName)) {\n      throw new Error('function not found');\n    }\n    if (this.rootNode.name === functionName) {\n      const i = this.rootNode.argumentNames.indexOf(argumentName);\n      if (i !== -1) {\n        return this.rootNode.argumentBitRatios[i];\n      }\n    }\n    const node = this._getFunction(functionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error('argument not found');\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error('argument bit ratio not found');\n    }\n    return bitRatio;\n  }\n\n  needsArgumentType(functionName, i) {\n    if (!this._isFunction(functionName)) return false;\n    const fnNode = this._getFunction(functionName);\n    return !fnNode.argumentTypes[i];\n  }\n\n  assignArgumentType(functionName, i, argumentType, requestingNode) {\n    if (!this._isFunction(functionName)) return;\n    const fnNode = this._getFunction(functionName);\n    if (!fnNode.argumentTypes[i]) {\n      fnNode.argumentTypes[i] = argumentType;\n    }\n  }\n\n  assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex) {\n    const node = this._getFunction(functionName);\n    if (this._isNativeFunction(calleeFunctionName)) return null;\n    const calleeNode = this._getFunction(calleeFunctionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error(`Argument ${argumentName} not found in arguments from function ${functionName}`);\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error(`Bit ratio for argument ${argumentName} not found in function ${functionName}`);\n    }\n    if (!calleeNode.argumentBitRatios) {\n      calleeNode.argumentBitRatios = new Array(calleeNode.argumentNames.length);\n    }\n    const calleeBitRatio = calleeNode.argumentBitRatios[i];\n    if (typeof calleeBitRatio === 'number') {\n      if (calleeBitRatio !== bitRatio) {\n        throw new Error(`Incompatible bit ratio found at function ${functionName} at argument ${argumentName}`);\n      }\n      return calleeBitRatio;\n    }\n    calleeNode.argumentBitRatios[i] = bitRatio;\n    return bitRatio;\n  }\n\n  trackFunctionCall(functionName, calleeFunctionName, args) {\n    if (!this.functionNodeDependencies[functionName]) {\n      this.functionNodeDependencies[functionName] = new Set();\n      this.functionCalls[functionName] = [];\n    }\n    this.functionNodeDependencies[functionName].add(calleeFunctionName);\n    this.functionCalls[functionName].push(args);\n  }\n\n  getKernelResultType() {\n    return this.rootNode.returnType || this.rootNode.getType(this.rootNode.ast);\n  }\n\n  getSubKernelResultType(index) {\n    const subKernelNode = this.subKernelNodes[index];\n    let called = false;\n    for (let functionCallIndex = 0; functionCallIndex < this.rootNode.functionCalls.length; functionCallIndex++) {\n      const functionCall = this.rootNode.functionCalls[functionCallIndex];\n      if (functionCall.ast.callee.name === subKernelNode.name) {\n        called = true;\n      }\n    }\n    if (!called) {\n      throw new Error(`SubKernel ${ subKernelNode.name } never called by kernel`);\n    }\n    return subKernelNode.returnType || subKernelNode.getType(subKernelNode.getJsAST());\n  }\n\n  getReturnTypes() {\n    const result = {\n      [this.rootNode.name]: this.rootNode.getType(this.rootNode.ast),\n    };\n    const list = this.traceFunctionCalls(this.rootNode.name);\n    for (let i = 0; i < list.length; i++) {\n      const functionName = list[i];\n      const functionNode = this.functionMap[functionName];\n      result[functionName] = functionNode.getType(functionNode.ast);\n    }\n    return result;\n  }\n}\n\nmodule.exports = {\n  FunctionBuilder\n};\n},{}],10:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { utils } = require('../utils');\nconst { FunctionTracer } = require('./function-tracer');\n\nclass FunctionNode {\n  constructor(source, settings) {\n    if (!source && !settings.ast) {\n      throw new Error('source parameter is missing');\n    }\n    settings = settings || {};\n    this.source = source;\n    this.ast = null;\n    this.name = typeof source === 'string' ? settings.isRootKernel ?\n      'kernel' :\n      (settings.name || utils.getFunctionNameFromString(source)) : null;\n    this.calledFunctions = [];\n    this.constants = {};\n    this.constantTypes = {};\n    this.constantBitRatios = {};\n    this.isRootKernel = false;\n    this.isSubKernel = false;\n    this.debug = null;\n    this.functions = null;\n    this.identifiers = null;\n    this.contexts = null;\n    this.functionCalls = null;\n    this.states = [];\n    this.needsArgumentType = null;\n    this.assignArgumentType = null;\n    this.lookupReturnType = null;\n    this.lookupFunctionArgumentTypes = null;\n    this.lookupFunctionArgumentBitRatio = null;\n    this.triggerImplyArgumentType = null;\n    this.triggerImplyArgumentBitRatio = null;\n    this.onNestedFunction = null;\n    this.onFunctionCall = null;\n    this.optimizeFloatMemory = null;\n    this.precision = null;\n    this.loopMaxIterations = null;\n    this.argumentNames = (typeof this.source === 'string' ? utils.getArgumentNamesFromString(this.source) : null);\n    this.argumentTypes = [];\n    this.argumentSizes = [];\n    this.argumentBitRatios = null;\n    this.returnType = null;\n    this.output = [];\n    this.plugins = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.dynamicOutput = null;\n    this.dynamicArguments = null;\n    this.strictTypingChecking = false;\n    this.fixIntegerDivisionAccuracy = null;\n\n    if (settings) {\n      for (const p in settings) {\n        if (!settings.hasOwnProperty(p)) continue;\n        if (!this.hasOwnProperty(p)) continue;\n        this[p] = settings[p];\n      }\n    }\n\n    this.literalTypes = {};\n\n    this.validate();\n    this._string = null;\n    this._internalVariableNames = {};\n  }\n\n  validate() {\n    if (typeof this.source !== 'string' && !this.ast) {\n      throw new Error('this.source not a string');\n    }\n\n    if (!this.ast && !utils.isFunctionString(this.source)) {\n      throw new Error('this.source not a function string');\n    }\n\n    if (!this.name) {\n      throw new Error('this.name could not be set');\n    }\n\n    if (this.argumentTypes.length > 0 && this.argumentTypes.length !== this.argumentNames.length) {\n      throw new Error(`argumentTypes count of ${ this.argumentTypes.length } exceeds ${ this.argumentNames.length }`);\n    }\n\n    if (this.output.length < 1) {\n      throw new Error('this.output is not big enough');\n    }\n  }\n\n  isIdentifierConstant(name) {\n    if (!this.constants) return false;\n    return this.constants.hasOwnProperty(name);\n  }\n\n  isInput(argumentName) {\n    return this.argumentTypes[this.argumentNames.indexOf(argumentName)] === 'Input';\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.state !== state) {\n      throw new Error(`Cannot popState ${ state } when in ${ this.state }`);\n    }\n    this.states.pop();\n  }\n\n  isState(state) {\n    return this.state === state;\n  }\n\n  get state() {\n    return this.states[this.states.length - 1];\n  }\n\n  astMemberExpressionUnroll(ast) {\n    if (ast.type === 'Identifier') {\n      return ast.name;\n    } else if (ast.type === 'ThisExpression') {\n      return 'this';\n    }\n\n    if (ast.type === 'MemberExpression') {\n      if (ast.object && ast.property) {\n        if (ast.object.hasOwnProperty('name') && ast.object.name !== 'Math') {\n          return this.astMemberExpressionUnroll(ast.property);\n        }\n\n        return (\n          this.astMemberExpressionUnroll(ast.object) +\n          '.' +\n          this.astMemberExpressionUnroll(ast.property)\n        );\n      }\n    }\n\n    if (ast.hasOwnProperty('expressions')) {\n      const firstExpression = ast.expressions[0];\n      if (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n        return this.astMemberExpressionUnroll(ast.expressions[1]);\n      }\n    }\n\n    throw this.astErrorOutput('Unknown astMemberExpressionUnroll', ast);\n  }\n\n  getJsAST(inParser) {\n    if (this.ast) {\n      return this.ast;\n    }\n    if (typeof this.source === 'object') {\n      this.traceFunctionAST(this.source);\n      return this.ast = this.source;\n    }\n\n    inParser = inParser || acorn;\n    if (inParser === null) {\n      throw new Error('Missing JS to AST parser');\n    }\n\n    const ast = Object.freeze(inParser.parse(`const parser_${ this.name } = ${ this.source };`, {\n      locations: true\n    }));\n    const functionAST = ast.body[0].declarations[0].init;\n    this.traceFunctionAST(functionAST);\n\n    if (!ast) {\n      throw new Error('Failed to parse JS code');\n    }\n\n    return this.ast = functionAST;\n  }\n\n  traceFunctionAST(ast) {\n    const { contexts, declarations, functions, identifiers, functionCalls } = new FunctionTracer(ast);\n    this.contexts = contexts;\n    this.identifiers = identifiers;\n    this.functionCalls = functionCalls;\n    this.functions = functions;\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const { ast, inForLoopInit, inForLoopTest } = declaration;\n      const { init } = ast;\n      const dependencies = this.getDependencies(init);\n      let valueType = null;\n\n      if (inForLoopInit && inForLoopTest) {\n        valueType = 'Integer';\n      } else {\n        if (init) {\n          const realType = this.getType(init);\n          switch (realType) {\n            case 'Integer':\n            case 'Float':\n            case 'Number':\n              if (init.type === 'MemberExpression') {\n                valueType = realType;\n              } else {\n                valueType = 'Number';\n              }\n              break;\n            case 'LiteralInteger':\n              valueType = 'Number';\n              break;\n            default:\n              valueType = realType;\n          }\n        }\n      }\n      declaration.valueType = valueType;\n      declaration.dependencies = dependencies;\n      declaration.isSafe = this.isSafeDependencies(dependencies);\n    }\n\n    for (let i = 0; i < functions.length; i++) {\n      this.onNestedFunction(functions[i], this.source);\n    }\n  }\n\n  getDeclaration(ast) {\n    for (let i = 0; i < this.identifiers.length; i++) {\n      const identifier = this.identifiers[i];\n      if (ast === identifier.ast) {\n        return identifier.declaration;\n      }\n    }\n    return null;\n  }\n\n  getVariableType(ast) {\n    if (ast.type !== 'Identifier') {\n      throw new Error(`ast of ${ast.type} not \"Identifier\"`);\n    }\n    let type = null;\n    const argumentIndex = this.argumentNames.indexOf(ast.name);\n    if (argumentIndex === -1) {\n      const declaration = this.getDeclaration(ast);\n      if (declaration) {\n        return declaration.valueType;\n      }\n    } else {\n      const argumentType = this.argumentTypes[argumentIndex];\n      if (argumentType) {\n        type = argumentType;\n      }\n    }\n    if (!type && this.strictTypingChecking) {\n      throw new Error(`Declaration of ${name} not found`);\n    }\n    return type;\n  }\n\n  getLookupType(type) {\n    if (!typeLookupMap.hasOwnProperty(type)) {\n      throw new Error(`unknown typeLookupMap ${ type }`);\n    }\n    return typeLookupMap[type];\n  }\n\n  getConstantType(constantName) {\n    if (this.constantTypes[constantName]) {\n      const type = this.constantTypes[constantName];\n      if (type === 'Float') {\n        return 'Number';\n      } else {\n        return type;\n      }\n    }\n    throw new Error(`Type for constant \"${ constantName }\" not declared`);\n  }\n\n  toString() {\n    if (this._string) return this._string;\n    return this._string = this.astGeneric(this.getJsAST(), []).join('').trim();\n  }\n\n  toJSON() {\n    const settings = {\n      source: this.source,\n      name: this.name,\n      constants: this.constants,\n      constantTypes: this.constantTypes,\n      isRootKernel: this.isRootKernel,\n      isSubKernel: this.isSubKernel,\n      debug: this.debug,\n      output: this.output,\n      loopMaxIterations: this.loopMaxIterations,\n      argumentNames: this.argumentNames,\n      argumentTypes: this.argumentTypes,\n      argumentSizes: this.argumentSizes,\n      returnType: this.returnType,\n      leadingReturnStatement: this.leadingReturnStatement,\n      followingReturnStatement: this.followingReturnStatement,\n    };\n\n    return {\n      ast: this.ast,\n      settings\n    };\n  }\n\n  getType(ast) {\n    if (Array.isArray(ast)) {\n      return this.getType(ast[ast.length - 1]);\n    }\n    switch (ast.type) {\n      case 'BlockStatement':\n        return this.getType(ast.body);\n      case 'ArrayExpression':\n        const childType = this.getType(ast.elements[0]);\n        switch (childType) {\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            return `Matrix(${ast.elements.length})`;\n        }\n        return `Array(${ ast.elements.length })`;\n      case 'Literal':\n        const literalKey = this.astKey(ast);\n        if (this.literalTypes[literalKey]) {\n          return this.literalTypes[literalKey];\n        }\n        if (Number.isInteger(ast.value)) {\n          return 'LiteralInteger';\n        } else if (ast.value === true || ast.value === false) {\n          return 'Boolean';\n        } else {\n          return 'Number';\n        }\n        case 'AssignmentExpression':\n          return this.getType(ast.left);\n        case 'CallExpression':\n          if (this.isAstMathFunction(ast)) {\n            return 'Number';\n          }\n          if (!ast.callee || !ast.callee.name) {\n            if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[ast.callee.expressions.length - 1].property.name) {\n              const functionName = ast.callee.expressions[ast.callee.expressions.length - 1].property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n            if (this.getVariableSignature(ast.callee, true) === 'this.color') {\n              return null;\n            }\n            if (ast.callee.type === 'MemberExpression' && ast.callee.object && ast.callee.property && ast.callee.property.name && ast.arguments) {\n              const functionName = ast.callee.property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n            throw this.astErrorOutput('Unknown call expression', ast);\n          }\n          if (ast.callee && ast.callee.name) {\n            const functionName = ast.callee.name;\n            this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n            return this.lookupReturnType(functionName, ast, this);\n          }\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n        case 'LogicalExpression':\n          return 'Boolean';\n        case 'BinaryExpression':\n          switch (ast.operator) {\n            case '%':\n            case '/':\n              if (this.fixIntegerDivisionAccuracy) {\n                return 'Number';\n              } else {\n                break;\n              }\n              case '>':\n              case '<':\n                return 'Boolean';\n              case '&':\n              case '|':\n              case '^':\n              case '<<':\n              case '>>':\n              case '>>>':\n                return 'Integer';\n          }\n          const type = this.getType(ast.left);\n          if (this.isState('skip-literal-correction')) return type;\n          if (type === 'LiteralInteger') {\n            const rightType = this.getType(ast.right);\n            if (rightType === 'LiteralInteger') {\n              if (ast.left.value % 1 === 0) {\n                return 'Integer';\n              } else {\n                return 'Float';\n              }\n            }\n            return rightType;\n          }\n          return typeLookupMap[type] || type;\n        case 'UpdateExpression':\n          return this.getType(ast.argument);\n        case 'UnaryExpression':\n          if (ast.operator === '~') {\n            return 'Integer';\n          }\n          return this.getType(ast.argument);\n        case 'VariableDeclaration': {\n          const declarations = ast.declarations;\n          let lastType;\n          for (let i = 0; i < declarations.length; i++) {\n            const declaration = declarations[i];\n            lastType = this.getType(declaration);\n          }\n          if (!lastType) {\n            throw this.astErrorOutput(`Unable to find type for declaration`, ast);\n          }\n          return lastType;\n        }\n        case 'VariableDeclarator':\n          const declaration = this.getDeclaration(ast.id);\n          if (!declaration) {\n            throw this.astErrorOutput(`Unable to find declarator`, ast);\n          }\n\n          if (!declaration.valueType) {\n            throw this.astErrorOutput(`Unable to find declarator valueType`, ast);\n          }\n\n          return declaration.valueType;\n        case 'Identifier':\n          if (ast.name === 'Infinity') {\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const signature = this.getVariableSignature(ast);\n            if (signature === 'value') {\n              return this.getCheckVariableType(ast);\n            }\n          }\n          const origin = this.findIdentifierOrigin(ast);\n          if (origin && origin.init) {\n            return this.getType(origin.init);\n          }\n          return null;\n        case 'ReturnStatement':\n          return this.getType(ast.argument);\n        case 'MemberExpression':\n          if (this.isAstMathFunction(ast)) {\n            switch (ast.property.name) {\n              case 'ceil':\n                return 'Integer';\n              case 'floor':\n                return 'Integer';\n              case 'round':\n                return 'Integer';\n            }\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const variableSignature = this.getVariableSignature(ast);\n            switch (variableSignature) {\n              case 'value[]':\n                return this.getLookupType(this.getCheckVariableType(ast.object));\n              case 'value[][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object));\n              case 'value[][][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object.object));\n              case 'value[][][][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object.object.object));\n              case 'value.thread.value':\n              case 'this.thread.value':\n                return 'Integer';\n              case 'this.output.value':\n                return this.dynamicOutput ? 'Integer' : 'LiteralInteger';\n              case 'this.constants.value':\n                return this.getConstantType(ast.property.name);\n              case 'this.constants.value[]':\n                return this.getLookupType(this.getConstantType(ast.object.property.name));\n              case 'this.constants.value[][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.property.name));\n              case 'this.constants.value[][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.property.name));\n              case 'this.constants.value[][][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.object.property.name));\n              case 'fn()[]':\n              case 'fn()[][]':\n              case 'fn()[][][]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'value.value':\n                if (this.isAstMathVariable(ast)) {\n                  return 'Number';\n                }\n                switch (ast.property.name) {\n                  case 'r':\n                  case 'g':\n                  case 'b':\n                  case 'a':\n                    return this.getLookupType(this.getCheckVariableType(ast.object));\n                }\n                case '[][]':\n                  return 'Number';\n            }\n            throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n          }\n          throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n        case 'ConditionalExpression':\n          return this.getType(ast.consequent);\n        case 'FunctionDeclaration':\n        case 'FunctionExpression':\n          const lastReturn = this.findLastReturn(ast.body);\n          if (lastReturn) {\n            return this.getType(lastReturn);\n          }\n          return null;\n        case 'IfStatement':\n          return this.getType(ast.consequent);\n        case 'SequenceExpression':\n          return this.getType(ast.expressions[ast.expressions.length - 1]);\n        default:\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n    }\n  }\n\n  getCheckVariableType(ast) {\n    const type = this.getVariableType(ast);\n    if (!type) {\n      throw this.astErrorOutput(`${ast.type} is not defined`, ast);\n    }\n    return type;\n  }\n\n  inferArgumentTypesIfNeeded(functionName, args) {\n    for (let i = 0; i < args.length; i++) {\n      if (!this.needsArgumentType(functionName, i)) continue;\n      const type = this.getType(args[i]);\n      if (!type) {\n        throw this.astErrorOutput(`Unable to infer argument ${i}`, args[i]);\n      }\n      this.assignArgumentType(functionName, i, type);\n    }\n  }\n\n  isAstMathVariable(ast) {\n    const mathProperties = [\n      'E',\n      'PI',\n      'SQRT2',\n      'SQRT1_2',\n      'LN2',\n      'LN10',\n      'LOG2E',\n      'LOG10E',\n    ];\n    return ast.type === 'MemberExpression' &&\n      ast.object && ast.object.type === 'Identifier' &&\n      ast.object.name === 'Math' &&\n      ast.property &&\n      ast.property.type === 'Identifier' &&\n      mathProperties.indexOf(ast.property.name) > -1;\n  }\n\n  isAstMathFunction(ast) {\n    const mathFunctions = [\n      'abs',\n      'acos',\n      'acosh',\n      'asin',\n      'asinh',\n      'atan',\n      'atan2',\n      'atanh',\n      'cbrt',\n      'ceil',\n      'clz32',\n      'cos',\n      'cosh',\n      'expm1',\n      'exp',\n      'floor',\n      'fround',\n      'imul',\n      'log',\n      'log2',\n      'log10',\n      'log1p',\n      'max',\n      'min',\n      'pow',\n      'random',\n      'round',\n      'sign',\n      'sin',\n      'sinh',\n      'sqrt',\n      'tan',\n      'tanh',\n      'trunc',\n    ];\n    return ast.type === 'CallExpression' &&\n      ast.callee &&\n      ast.callee.type === 'MemberExpression' &&\n      ast.callee.object &&\n      ast.callee.object.type === 'Identifier' &&\n      ast.callee.object.name === 'Math' &&\n      ast.callee.property &&\n      ast.callee.property.type === 'Identifier' &&\n      mathFunctions.indexOf(ast.callee.property.name) > -1;\n  }\n\n  isAstVariable(ast) {\n    return ast.type === 'Identifier' || ast.type === 'MemberExpression';\n  }\n\n  isSafe(ast) {\n    return this.isSafeDependencies(this.getDependencies(ast));\n  }\n\n  isSafeDependencies(dependencies) {\n    return dependencies && dependencies.every ? dependencies.every(dependency => dependency.isSafe) : true;\n  }\n\n  getDependencies(ast, dependencies, isNotSafe) {\n    if (!dependencies) {\n      dependencies = [];\n    }\n    if (!ast) return null;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.getDependencies(ast[i], dependencies, isNotSafe);\n      }\n      return dependencies;\n    }\n    switch (ast.type) {\n      case 'AssignmentExpression':\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'ConditionalExpression':\n        this.getDependencies(ast.test, dependencies, isNotSafe);\n        this.getDependencies(ast.alternate, dependencies, isNotSafe);\n        this.getDependencies(ast.consequent, dependencies, isNotSafe);\n        return dependencies;\n      case 'Literal':\n        dependencies.push({\n          origin: 'literal',\n          value: ast.value,\n          isSafe: isNotSafe === true ? false : ast.value > -Infinity && ast.value < Infinity && !isNaN(ast.value)\n        });\n        break;\n      case 'VariableDeclarator':\n        return this.getDependencies(ast.init, dependencies, isNotSafe);\n      case 'Identifier':\n        const declaration = this.getDeclaration(ast);\n        if (declaration) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'declaration',\n            isSafe: isNotSafe ? false : this.isSafeDependencies(declaration.dependencies),\n          });\n        } else if (this.argumentNames.indexOf(ast.name) > -1) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'argument',\n            isSafe: false,\n          });\n        } else if (this.strictTypingChecking) {\n          throw new Error(`Cannot find identifier origin \"${ast.name}\"`);\n        }\n        break;\n      case 'FunctionDeclaration':\n        return this.getDependencies(ast.body.body[ast.body.body.length - 1], dependencies, isNotSafe);\n      case 'ReturnStatement':\n        return this.getDependencies(ast.argument, dependencies);\n      case 'BinaryExpression':\n      case 'LogicalExpression':\n        isNotSafe = (ast.operator === '/' || ast.operator === '*');\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'UnaryExpression':\n      case 'UpdateExpression':\n        return this.getDependencies(ast.argument, dependencies, isNotSafe);\n      case 'VariableDeclaration':\n        return this.getDependencies(ast.declarations, dependencies, isNotSafe);\n      case 'ArrayExpression':\n        dependencies.push({\n          origin: 'declaration',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'CallExpression':\n        dependencies.push({\n          origin: 'function',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'MemberExpression':\n        const details = this.getMemberExpressionDetails(ast);\n        switch (details.signature) {\n          case 'value[]':\n            this.getDependencies(ast.object, dependencies, isNotSafe);\n            break;\n          case 'value[][]':\n            this.getDependencies(ast.object.object, dependencies, isNotSafe);\n            break;\n          case 'value[][][]':\n            this.getDependencies(ast.object.object.object, dependencies, isNotSafe);\n            break;\n          case 'this.output.value':\n            if (this.dynamicOutput) {\n              dependencies.push({\n                name: details.name,\n                origin: 'output',\n                isSafe: false,\n              });\n            }\n            break;\n        }\n        if (details) {\n          if (details.property) {\n            this.getDependencies(details.property, dependencies, isNotSafe);\n          }\n          if (details.xProperty) {\n            this.getDependencies(details.xProperty, dependencies, isNotSafe);\n          }\n          if (details.yProperty) {\n            this.getDependencies(details.yProperty, dependencies, isNotSafe);\n          }\n          if (details.zProperty) {\n            this.getDependencies(details.zProperty, dependencies, isNotSafe);\n          }\n          return dependencies;\n        }\n        case 'SequenceExpression':\n          return this.getDependencies(ast.expressions, dependencies, isNotSafe);\n        default:\n          throw this.astErrorOutput(`Unhandled type ${ ast.type } in getDependencies`, ast);\n    }\n    return dependencies;\n  }\n\n  getVariableSignature(ast, returnRawValue) {\n    if (!this.isAstVariable(ast)) {\n      throw new Error(`ast of type \"${ ast.type }\" is not a variable signature`);\n    }\n    if (ast.type === 'Identifier') {\n      return 'value';\n    }\n    const signature = [];\n    while (true) {\n      if (!ast) break;\n      if (ast.computed) {\n        signature.push('[]');\n      } else if (ast.type === 'ThisExpression') {\n        signature.unshift('this');\n      } else if (ast.property && ast.property.name) {\n        if (\n          ast.property.name === 'x' ||\n          ast.property.name === 'y' ||\n          ast.property.name === 'z'\n        ) {\n          signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n        } else if (\n          ast.property.name === 'constants' ||\n          ast.property.name === 'thread' ||\n          ast.property.name === 'output'\n        ) {\n          signature.unshift('.' + ast.property.name);\n        } else {\n          signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n        }\n      } else if (ast.name) {\n        signature.unshift(returnRawValue ? ast.name : 'value');\n      } else if (ast.callee && ast.callee.name) {\n        signature.unshift(returnRawValue ? ast.callee.name + '()' : 'fn()');\n      } else if (ast.elements) {\n        signature.unshift('[]');\n      } else {\n        signature.unshift('unknown');\n      }\n      ast = ast.object;\n    }\n\n    const signatureString = signature.join('');\n    if (returnRawValue) {\n      return signatureString;\n    }\n\n    const allowedExpressions = [\n      'value',\n      'value[]',\n      'value[][]',\n      'value[][][]',\n      'value[][][][]',\n      'value.value',\n      'value.thread.value',\n      'this.thread.value',\n      'this.output.value',\n      'this.constants.value',\n      'this.constants.value[]',\n      'this.constants.value[][]',\n      'this.constants.value[][][]',\n      'this.constants.value[][][][]',\n      'fn()[]',\n      'fn()[][]',\n      'fn()[][][]',\n      '[][]',\n    ];\n    if (allowedExpressions.indexOf(signatureString) > -1) {\n      return signatureString;\n    }\n    return null;\n  }\n\n  build() {\n    return this.toString().length > 0;\n  }\n\n  astGeneric(ast, retArr) {\n    if (ast === null) {\n      throw this.astErrorOutput('NULL ast', ast);\n    } else {\n      if (Array.isArray(ast)) {\n        for (let i = 0; i < ast.length; i++) {\n          this.astGeneric(ast[i], retArr);\n        }\n        return retArr;\n      }\n\n      switch (ast.type) {\n        case 'FunctionDeclaration':\n          return this.astFunctionDeclaration(ast, retArr);\n        case 'FunctionExpression':\n          return this.astFunctionExpression(ast, retArr);\n        case 'ReturnStatement':\n          return this.astReturnStatement(ast, retArr);\n        case 'Literal':\n          return this.astLiteral(ast, retArr);\n        case 'BinaryExpression':\n          return this.astBinaryExpression(ast, retArr);\n        case 'Identifier':\n          return this.astIdentifierExpression(ast, retArr);\n        case 'AssignmentExpression':\n          return this.astAssignmentExpression(ast, retArr);\n        case 'ExpressionStatement':\n          return this.astExpressionStatement(ast, retArr);\n        case 'EmptyStatement':\n          return this.astEmptyStatement(ast, retArr);\n        case 'BlockStatement':\n          return this.astBlockStatement(ast, retArr);\n        case 'IfStatement':\n          return this.astIfStatement(ast, retArr);\n        case 'SwitchStatement':\n          return this.astSwitchStatement(ast, retArr);\n        case 'BreakStatement':\n          return this.astBreakStatement(ast, retArr);\n        case 'ContinueStatement':\n          return this.astContinueStatement(ast, retArr);\n        case 'ForStatement':\n          return this.astForStatement(ast, retArr);\n        case 'WhileStatement':\n          return this.astWhileStatement(ast, retArr);\n        case 'DoWhileStatement':\n          return this.astDoWhileStatement(ast, retArr);\n        case 'VariableDeclaration':\n          return this.astVariableDeclaration(ast, retArr);\n        case 'VariableDeclarator':\n          return this.astVariableDeclarator(ast, retArr);\n        case 'ThisExpression':\n          return this.astThisExpression(ast, retArr);\n        case 'SequenceExpression':\n          return this.astSequenceExpression(ast, retArr);\n        case 'UnaryExpression':\n          return this.astUnaryExpression(ast, retArr);\n        case 'UpdateExpression':\n          return this.astUpdateExpression(ast, retArr);\n        case 'LogicalExpression':\n          return this.astLogicalExpression(ast, retArr);\n        case 'MemberExpression':\n          return this.astMemberExpression(ast, retArr);\n        case 'CallExpression':\n          return this.astCallExpression(ast, retArr);\n        case 'ArrayExpression':\n          return this.astArrayExpression(ast, retArr);\n        case 'DebuggerStatement':\n          return this.astDebuggerStatement(ast, retArr);\n        case 'ConditionalExpression':\n          return this.astConditionalExpression(ast, retArr);\n      }\n\n      throw this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\n    }\n  }\n  astErrorOutput(error, ast) {\n    if (typeof this.source !== 'string') {\n      return new Error(error);\n    }\n\n    const debugString = utils.getAstString(this.source, ast);\n    const leadingSource = this.source.substr(ast.start);\n    const splitLines = leadingSource.split(/\\n/);\n    const lineBefore = splitLines.length > 0 ? splitLines[splitLines.length - 1] : 0;\n    return new Error(`${error} on line ${ splitLines.length }, position ${ lineBefore.length }:\\n ${ debugString }`);\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    return retArr;\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astFunction(ast, retArr) {\n    throw new Error(`\"astFunction\" not defined on ${ this.constructor.name }`);\n  }\n\n  astFunctionDeclaration(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  astFunctionExpression(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  isChildFunction(ast) {\n    for (let i = 0; i < this.functions.length; i++) {\n      if (this.functions[i] === ast) {\n        return true;\n      }\n    }\n    return false;\n  }\n  astReturnStatement(ast, retArr) {\n    return retArr;\n  }\n  astLiteral(ast, retArr) {\n    this.literalTypes[this.astKey(ast)] = 'Number';\n    return retArr;\n  }\n  astBinaryExpression(ast, retArr) {\n    return retArr;\n  }\n  astIdentifierExpression(ast, retArr) {\n    return retArr;\n  }\n  astAssignmentExpression(ast, retArr) {\n    return retArr;\n  }\n  astExpressionStatement(esNode, retArr) {\n    this.astGeneric(esNode.expression, retArr);\n    retArr.push(';');\n    return retArr;\n  }\n  astEmptyStatement(eNode, retArr) {\n    return retArr;\n  }\n  astBlockStatement(ast, retArr) {\n    return retArr;\n  }\n  astIfStatement(ast, retArr) {\n    return retArr;\n  }\n  astSwitchStatement(ast, retArr) {\n    return retArr;\n  }\n  astBreakStatement(brNode, retArr) {\n    retArr.push('break;');\n    return retArr;\n  }\n  astContinueStatement(crNode, retArr) {\n    retArr.push('continue;\\n');\n    return retArr;\n  }\n  astForStatement(ast, retArr) {\n    return retArr;\n  }\n  astWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astDoWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astVariableDeclarator(iVarDecNode, retArr) {\n    this.astGeneric(iVarDecNode.id, retArr);\n    if (iVarDecNode.init !== null) {\n      retArr.push('=');\n      this.astGeneric(iVarDecNode.init, retArr);\n    }\n    return retArr;\n  }\n  astThisExpression(ast, retArr) {\n    return retArr;\n  }\n  astSequenceExpression(sNode, retArr) {\n    const { expressions } = sNode;\n    const sequenceResult = [];\n    for (let i = 0; i < expressions.length; i++) {\n      const expression = expressions[i];\n      const expressionResult = [];\n      this.astGeneric(expression, expressionResult);\n      sequenceResult.push(expressionResult.join(''));\n    }\n    if (sequenceResult.length > 1) {\n      retArr.push('(', sequenceResult.join(','), ')');\n    } else {\n      retArr.push(sequenceResult[0]);\n    }\n    return retArr;\n  }\n  astUnaryExpression(uNode, retArr) {\n    const unaryResult = this.checkAndUpconvertBitwiseUnary(uNode, retArr);\n    if (unaryResult) {\n      return retArr;\n    }\n\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(uNode, retArr) {}\n\n  astUpdateExpression(uNode, retArr) {\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n  astLogicalExpression(logNode, retArr) {\n    retArr.push('(');\n    this.astGeneric(logNode.left, retArr);\n    retArr.push(logNode.operator);\n    this.astGeneric(logNode.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n  astMemberExpression(ast, retArr) {\n    return retArr;\n  }\n  astCallExpression(ast, retArr) {\n    return retArr;\n  }\n  astArrayExpression(ast, retArr) {\n    return retArr;\n  }\n\n  getMemberExpressionDetails(ast) {\n    if (ast.type !== 'MemberExpression') {\n      throw this.astErrorOutput(`Expression ${ ast.type } not a MemberExpression`, ast);\n    }\n    let name = null;\n    let type = null;\n    const variableSignature = this.getVariableSignature(ast);\n    switch (variableSignature) {\n      case 'value':\n        return null;\n      case 'value.thread.value':\n      case 'this.thread.value':\n      case 'this.output.value':\n        return {\n          signature: variableSignature,\n            type: 'Integer',\n            name: ast.property.name\n        };\n      case 'value[]':\n        if (typeof ast.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object),\n            xProperty: ast.property\n        };\n      case 'value[][]':\n        if (typeof ast.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object),\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][]':\n        if (typeof ast.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][][]':\n        if (typeof ast.object.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value.value':\n        if (typeof ast.property.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        if (this.isAstMathVariable(ast)) {\n          name = ast.property.name;\n          return {\n            name,\n            origin: 'Math',\n            type: 'Number',\n            signature: variableSignature,\n          };\n        }\n        switch (ast.property.name) {\n          case 'r':\n          case 'g':\n          case 'b':\n          case 'a':\n            name = ast.object.name;\n            return {\n              name,\n              property: ast.property.name,\n                origin: 'user',\n                signature: variableSignature,\n                type: 'Number'\n            };\n          default:\n            throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        case 'this.constants.value':\n          if (typeof ast.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n          };\n        case 'this.constants.value[]':\n          if (typeof ast.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n              xProperty: ast.property,\n          };\n        case 'this.constants.value[][]': {\n          if (typeof ast.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'this.constants.value[][][]': {\n          if (typeof ast.object.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'fn()[]':\n        case 'fn()[][]':\n        case '[][]':\n          return {\n            signature: variableSignature,\n              property: ast.property,\n          };\n        default:\n          throw this.astErrorOutput('Unexpected expression', ast);\n    }\n  }\n\n  findIdentifierOrigin(astToFind) {\n    const stack = [this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack[0];\n      if (atNode.type === 'VariableDeclarator' && atNode.id && atNode.id.name && atNode.id.name === astToFind.name) {\n        return atNode;\n      }\n      stack.shift();\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      }\n    }\n    return null;\n  }\n\n  findLastReturn(ast) {\n    const stack = [ast || this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack.pop();\n      if (atNode.type === 'ReturnStatement') {\n        return atNode;\n      }\n      if (atNode.type === 'FunctionDeclaration') {\n        continue;\n      }\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      } else if (atNode.consequent) {\n        stack.push(atNode.consequent);\n      } else if (atNode.cases) {\n        stack.push(atNode.cases);\n      }\n    }\n    return null;\n  }\n\n  getInternalVariableName(name) {\n    if (!this._internalVariableNames.hasOwnProperty(name)) {\n      this._internalVariableNames[name] = 0;\n    }\n    this._internalVariableNames[name]++;\n    if (this._internalVariableNames[name] === 1) {\n      return name;\n    }\n    return name + this._internalVariableNames[name];\n  }\n\n  astKey(ast, separator = ',') {\n    if (!ast.start || !ast.end) throw new Error('AST start and end needed');\n    return `${ast.start}${separator}${ast.end}`;\n  }\n}\n\nconst typeLookupMap = {\n  'Number': 'Number',\n  'Float': 'Float',\n  'Integer': 'Integer',\n  'Array': 'Number',\n  'Array(2)': 'Number',\n  'Array(3)': 'Number',\n  'Array(4)': 'Number',\n  'Matrix(2)': 'Number',\n  'Matrix(3)': 'Number',\n  'Matrix(4)': 'Number',\n  'Array2D': 'Number',\n  'Array3D': 'Number',\n  'Input': 'Number',\n  'HTMLCanvas': 'Array(4)',\n  'OffscreenCanvas': 'Array(4)',\n  'HTMLImage': 'Array(4)',\n  'ImageBitmap': 'Array(4)',\n  'ImageData': 'Array(4)',\n  'HTMLVideo': 'Array(4)',\n  'HTMLImageArray': 'Array(4)',\n  'NumberTexture': 'Number',\n  'MemoryOptimizedNumberTexture': 'Number',\n  'Array1D(2)': 'Array(2)',\n  'Array1D(3)': 'Array(3)',\n  'Array1D(4)': 'Array(4)',\n  'Array2D(2)': 'Array(2)',\n  'Array2D(3)': 'Array(3)',\n  'Array2D(4)': 'Array(4)',\n  'Array3D(2)': 'Array(2)',\n  'Array3D(3)': 'Array(3)',\n  'Array3D(4)': 'Array(4)',\n  'ArrayTexture(1)': 'Number',\n  'ArrayTexture(2)': 'Array(2)',\n  'ArrayTexture(3)': 'Array(3)',\n  'ArrayTexture(4)': 'Array(4)',\n};\n\nmodule.exports = {\n  FunctionNode\n};\n},{\"../utils\":114,\"./function-tracer\":11,\"acorn\":1}],11:[function(require,module,exports){\nconst { utils } = require('../utils');\n\nfunction last(array) {\n  return array.length > 0 ? array[array.length - 1] : null;\n}\n\nconst states = {\n  trackIdentifiers: 'trackIdentifiers',\n  memberExpression: 'memberExpression',\n  inForLoopInit: 'inForLoopInit'\n};\n\nclass FunctionTracer {\n  constructor(ast) {\n    this.runningContexts = [];\n    this.functionContexts = [];\n    this.contexts = [];\n    this.functionCalls = [];\n    this.declarations = [];\n    this.identifiers = [];\n    this.functions = [];\n    this.returnStatements = [];\n    this.trackedIdentifiers = null;\n    this.states = [];\n    this.newFunctionContext();\n    this.scan(ast);\n  }\n\n  isState(state) {\n    return this.states[this.states.length - 1] === state;\n  }\n\n  hasState(state) {\n    return this.states.indexOf(state) > -1;\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.isState(state)) {\n      this.states.pop();\n    } else {\n      throw new Error(`Cannot pop the non-active state \"${state}\"`);\n    }\n  }\n\n  get currentFunctionContext() {\n    return last(this.functionContexts);\n  }\n\n  get currentContext() {\n    return last(this.runningContexts);\n  }\n\n  newFunctionContext() {\n    const newContext = { '@contextType': 'function' };\n    this.contexts.push(newContext);\n    this.functionContexts.push(newContext);\n  }\n\n  newContext(run) {\n    const newContext = Object.assign({ '@contextType': 'const/let' }, this.currentContext);\n    this.contexts.push(newContext);\n    this.runningContexts.push(newContext);\n    run();\n    const { currentFunctionContext } = this;\n    for (const p in currentFunctionContext) {\n      if (!currentFunctionContext.hasOwnProperty(p) || newContext.hasOwnProperty(p)) continue;\n      newContext[p] = currentFunctionContext[p];\n    }\n    this.runningContexts.pop();\n    return newContext;\n  }\n\n  useFunctionContext(run) {\n    const functionContext = last(this.functionContexts);\n    this.runningContexts.push(functionContext);\n    run();\n    this.runningContexts.pop();\n  }\n\n  getIdentifiers(run) {\n    const trackedIdentifiers = this.trackedIdentifiers = [];\n    this.pushState(states.trackIdentifiers);\n    run();\n    this.trackedIdentifiers = null;\n    this.popState(states.trackIdentifiers);\n    return trackedIdentifiers;\n  }\n\n  getDeclaration(name) {\n    const { currentContext, currentFunctionContext, runningContexts } = this;\n    const declaration = currentContext[name] || currentFunctionContext[name] || null;\n\n    if (\n      !declaration &&\n      currentContext === currentFunctionContext &&\n      runningContexts.length > 0\n    ) {\n      const previousRunningContext = runningContexts[runningContexts.length - 2];\n      if (previousRunningContext[name]) {\n        return previousRunningContext[name];\n      }\n    }\n\n    return declaration;\n  }\n\n  scan(ast) {\n    if (!ast) return;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.scan(ast[i]);\n      }\n      return;\n    }\n    switch (ast.type) {\n      case 'Program':\n        this.useFunctionContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'BlockStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'AssignmentExpression':\n      case 'LogicalExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'BinaryExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'UpdateExpression':\n        if (ast.operator === '++') {\n          const declaration = this.getDeclaration(ast.argument.name);\n          if (declaration) {\n            declaration.suggestedType = 'Integer';\n          }\n        }\n        this.scan(ast.argument);\n        break;\n      case 'UnaryExpression':\n        this.scan(ast.argument);\n        break;\n      case 'VariableDeclaration':\n        if (ast.kind === 'var') {\n          this.useFunctionContext(() => {\n            ast.declarations = utils.normalizeDeclarations(ast);\n            this.scan(ast.declarations);\n          });\n        } else {\n          ast.declarations = utils.normalizeDeclarations(ast);\n          this.scan(ast.declarations);\n        }\n        break;\n      case 'VariableDeclarator': {\n        const { currentContext } = this;\n        const inForLoopInit = this.hasState(states.inForLoopInit);\n        const declaration = {\n          ast: ast,\n          context: currentContext,\n          name: ast.id.name,\n          origin: 'declaration',\n          inForLoopInit,\n          inForLoopTest: null,\n          assignable: currentContext === this.currentFunctionContext || (!inForLoopInit && !currentContext.hasOwnProperty(ast.id.name)),\n          suggestedType: null,\n          valueType: null,\n          dependencies: null,\n          isSafe: null,\n        };\n        if (!currentContext[ast.id.name]) {\n          currentContext[ast.id.name] = declaration;\n        }\n        this.declarations.push(declaration);\n        this.scan(ast.id);\n        this.scan(ast.init);\n        break;\n      }\n      case 'FunctionExpression':\n      case 'FunctionDeclaration':\n        if (this.runningContexts.length === 0) {\n          this.scan(ast.body);\n        } else {\n          this.functions.push(ast);\n        }\n        break;\n      case 'IfStatement':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        if (ast.alternate) this.scan(ast.alternate);\n        break;\n      case 'ForStatement': {\n        let testIdentifiers;\n        const context = this.newContext(() => {\n          this.pushState(states.inForLoopInit);\n          this.scan(ast.init);\n          this.popState(states.inForLoopInit);\n\n          testIdentifiers = this.getIdentifiers(() => {\n            this.scan(ast.test);\n          });\n\n          this.scan(ast.update);\n          this.newContext(() => {\n            this.scan(ast.body);\n          });\n        });\n\n        if (testIdentifiers) {\n          for (const p in context) {\n            if (p === '@contextType') continue;\n            if (testIdentifiers.indexOf(p) > -1) {\n              context[p].inForLoopTest = true;\n            }\n          }\n        }\n        break;\n      }\n      case 'DoWhileStatement':\n      case 'WhileStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n          this.scan(ast.test);\n        });\n        break;\n      case 'Identifier': {\n        if (this.isState(states.trackIdentifiers)) {\n          this.trackedIdentifiers.push(ast.name);\n        }\n        this.identifiers.push({\n          context: this.currentContext,\n          declaration: this.getDeclaration(ast.name),\n          ast,\n        });\n        break;\n      }\n      case 'ReturnStatement':\n        this.returnStatements.push(ast);\n        this.scan(ast.argument);\n        break;\n      case 'MemberExpression':\n        this.pushState(states.memberExpression);\n        this.scan(ast.object);\n        this.scan(ast.property);\n        this.popState(states.memberExpression);\n        break;\n      case 'ExpressionStatement':\n        this.scan(ast.expression);\n        break;\n      case 'SequenceExpression':\n        this.scan(ast.expressions);\n        break;\n      case 'CallExpression':\n        this.functionCalls.push({\n          context: this.currentContext,\n          ast,\n        });\n        this.scan(ast.arguments);\n        break;\n      case 'ArrayExpression':\n        this.scan(ast.elements);\n        break;\n      case 'ConditionalExpression':\n        this.scan(ast.test);\n        this.scan(ast.alternate);\n        this.scan(ast.consequent);\n        break;\n      case 'SwitchStatement':\n        this.scan(ast.discriminant);\n        this.scan(ast.cases);\n        break;\n      case 'SwitchCase':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        break;\n\n      case 'ThisExpression':\n      case 'Literal':\n      case 'DebuggerStatement':\n      case 'EmptyStatement':\n      case 'BreakStatement':\n      case 'ContinueStatement':\n        break;\n      default:\n        throw new Error(`unhandled type \"${ast.type}\"`);\n    }\n  }\n}\n\nmodule.exports = {\n  FunctionTracer,\n};\n},{\"../utils\":114}],12:[function(require,module,exports){\nconst { glWiretap } = require('gl-wiretap');\nconst { utils } = require('../../utils');\n\nfunction toStringWithoutUtils(fn) {\n  return fn.toString()\n    .replace('=>', '')\n    .replace(/^function /, '')\n    .replace(/utils[.]/g, '/*utils.*/');\n}\n\nfunction glKernelString(Kernel, args, originKernel, setupContextString, destroyContextString) {\n  if (!originKernel.built) {\n    originKernel.build.apply(originKernel, args);\n  }\n  args = args ? Array.from(args).map(arg => {\n    switch (typeof arg) {\n      case 'boolean':\n        return new Boolean(arg);\n      case 'number':\n        return new Number(arg);\n      default:\n        return arg;\n    }\n  }) : null;\n  const uploadedValues = [];\n  const postResult = [];\n  const context = glWiretap(originKernel.context, {\n    useTrackablePrimitives: true,\n    onReadPixels: (targetName) => {\n      if (kernel.subKernels) {\n        if (!subKernelsResultVariableSetup) {\n          postResult.push(`    const result = { result: ${getRenderString(targetName, kernel)} };`);\n          subKernelsResultVariableSetup = true;\n        } else {\n          const property = kernel.subKernels[subKernelsResultIndex++].property;\n          postResult.push(`    result${isNaN(property) ? '.' + property : `[${property}]`} = ${getRenderString(targetName, kernel)};`);\n        }\n        if (subKernelsResultIndex === kernel.subKernels.length) {\n          postResult.push('    return result;');\n        }\n        return;\n      }\n      if (targetName) {\n        postResult.push(`    return ${getRenderString(targetName, kernel)};`);\n      } else {\n        postResult.push(`    return null;`);\n      }\n    },\n    onUnrecognizedArgumentLookup: (argument) => {\n      const argumentName = findKernelValue(argument, kernel.kernelArguments, [], context, uploadedValues);\n      if (argumentName) {\n        return argumentName;\n      }\n      const constantName = findKernelValue(argument, kernel.kernelConstants, constants ? Object.keys(constants).map(key => constants[key]) : [], context, uploadedValues);\n      if (constantName) {\n        return constantName;\n      }\n      return null;\n    }\n  });\n  let subKernelsResultVariableSetup = false;\n  let subKernelsResultIndex = 0;\n  const {\n    source,\n    canvas,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    kernelArguments,\n    kernelConstants,\n    tactic,\n  } = originKernel;\n  const kernel = new Kernel(source, {\n    canvas,\n    context,\n    checkContext: false,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    tactic,\n  });\n  let result = [];\n  context.setIndent(2);\n  kernel.build.apply(kernel, args);\n  result.push(context.toString());\n  context.reset();\n\n  kernel.kernelArguments.forEach((kernelArgument, i) => {\n    switch (kernelArgument.type) {\n      case 'Integer':\n      case 'Boolean':\n      case 'Number':\n      case 'Float':\n      case 'Array':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'HTMLCanvas':\n      case 'HTMLImage':\n      case 'HTMLVideo':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'HTMLImageArray':\n        for (let imageIndex = 0; imageIndex < args[i].length; imageIndex++) {\n          const arg = args[i];\n          context.insertVariable(`uploadValue_${kernelArgument.name}[${imageIndex}]`, arg[imageIndex]);\n        }\n        break;\n      case 'Input':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'MemoryOptimizedNumberTexture':\n      case 'NumberTexture':\n      case 'Array1D(2)':\n      case 'Array1D(3)':\n      case 'Array1D(4)':\n      case 'Array2D(2)':\n      case 'Array2D(3)':\n      case 'Array2D(4)':\n      case 'Array3D(2)':\n      case 'Array3D(3)':\n      case 'Array3D(4)':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, args[i].texture);\n        break;\n      default:\n        throw new Error(`unhandled kernelArgumentType insertion for glWiretap of type ${kernelArgument.type}`);\n    }\n  });\n  result.push('/** start of injected functions **/');\n  result.push(`function ${toStringWithoutUtils(utils.flattenTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten2dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten3dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten4dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.isArray)}`);\n  if (kernel.renderOutput !== kernel.renderTexture && kernel.formatValues) {\n    result.push(\n      `  const renderOutput = function ${toStringWithoutUtils(kernel.formatValues)};`\n    );\n  }\n  result.push('/** end of injected functions **/');\n  result.push(`  const innerKernel = function (${kernel.kernelArguments.map(kernelArgument => kernelArgument.varName).join(', ')}) {`);\n  context.setIndent(4);\n  kernel.run.apply(kernel, args);\n  if (kernel.renderKernels) {\n    kernel.renderKernels();\n  } else if (kernel.renderOutput) {\n    kernel.renderOutput();\n  }\n  result.push('    /** start setup uploads for kernel values **/');\n  kernel.kernelArguments.forEach(kernelArgument => {\n    result.push('    ' + kernelArgument.getStringValueHandler().split('\\n').join('\\n    '));\n  });\n  result.push('    /** end setup uploads for kernel values **/');\n  result.push(context.toString());\n  if (kernel.renderOutput === kernel.renderTexture) {\n    context.reset();\n    const framebufferName = context.getContextVariableName(kernel.framebuffer);\n    if (kernel.renderKernels) {\n      const results = kernel.renderKernels();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n      result: {\n        texture: ${ textureName },\n        type: '${ results.result.type }',\n        toArray: ${ getToArrayString(results.result, textureName, framebufferName) }\n      },`);\n      const { subKernels, mappedTextures } = kernel;\n      for (let i = 0; i < subKernels.length; i++) {\n        const texture = mappedTextures[i];\n        const subKernel = subKernels[i];\n        const subKernelResult = results[subKernel.property];\n        const subKernelTextureName = context.getContextVariableName(texture.texture);\n        result.push(`\n      ${subKernel.property}: {\n        texture: ${ subKernelTextureName },\n        type: '${ subKernelResult.type }',\n        toArray: ${ getToArrayString(subKernelResult, subKernelTextureName, framebufferName) }\n      },`);\n      }\n      result.push(`    };`);\n    } else {\n      const rendered = kernel.renderOutput();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n        texture: ${ textureName },\n        type: '${ rendered.type }',\n        toArray: ${ getToArrayString(rendered, textureName, framebufferName) }\n      };`);\n    }\n  }\n  result.push(`    ${destroyContextString ? '\\n' + destroyContextString + '    ': ''}`);\n  result.push(postResult.join('\\n'));\n  result.push('  };');\n  if (kernel.graphical) {\n    result.push(getGetPixelsString(kernel));\n    result.push(`  innerKernel.getPixels = getPixels;`);\n  }\n  result.push('  return innerKernel;');\n\n  let constantsUpload = [];\n  kernelConstants.forEach((kernelConstant) => {\n    constantsUpload.push(`${kernelConstant.getStringValueHandler()}`);\n  });\n  return `function kernel(settings) {\n  const { context, constants } = settings;\n  ${constantsUpload.join('')}\n  ${setupContextString ? setupContextString : ''}\n${result.join('\\n')}\n}`;\n}\n\nfunction getRenderString(targetName, kernel) {\n  const readBackValue = kernel.precision === 'single' ? targetName : `new Float32Array(${targetName}.buffer)`;\n  if (kernel.output[2]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]}, ${kernel.output[2]})`;\n  }\n  if (kernel.output[1]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]})`;\n  }\n\n  return `renderOutput(${readBackValue}, ${kernel.output[0]})`;\n}\n\nfunction getGetPixelsString(kernel) {\n  const getPixels = kernel.getPixels.toString();\n  const useFunctionKeyword = !/^function/.test(getPixels);\n  return utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ getPixels }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      }\n      return null;\n    },\n    thisLookup: (property) => {\n      if (property === 'context') {\n        return null;\n      }\n      if (kernel.hasOwnProperty(property)) {\n        return JSON.stringify(kernel[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n}\n\nfunction getToArrayString(kernelResult, textureName, framebufferName) {\n  const toArray = kernelResult.toArray.toString();\n  const useFunctionKeyword = !/^function/.test(toArray);\n  const flattenedFunctions = utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ toArray }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      } else if (object === 'this') {\n        if (name === 'framebuffer') {\n          return '';\n        }\n        return `${useFunctionKeyword ? 'function ' : ''}${kernelResult[name].toString()}`;\n      } else {\n        throw new Error('unhandled fromObject');\n      }\n    },\n    thisLookup: (property, isDeclaration) => {\n      if (property === 'texture') {\n        return textureName;\n      }\n      if (property === 'context') {\n        if (isDeclaration) return null;\n        return 'gl';\n      }\n      if (kernelResult.hasOwnProperty(property)) {\n        return JSON.stringify(kernelResult[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n  return `() => {\n  function framebuffer() { return ${framebufferName}; };\n  ${flattenedFunctions}\n  return toArray();\n  }`;\n}\n\nfunction findKernelValue(argument, kernelValues, values, context, uploadedValues) {\n  if (argument === null) return null;\n  if (kernelValues === null) return null;\n  switch (typeof argument) {\n    case 'boolean':\n    case 'number':\n      return null;\n  }\n  if (\n    typeof HTMLImageElement !== 'undefined' &&\n    argument instanceof HTMLImageElement\n  ) {\n    for (let i = 0; i < kernelValues.length; i++) {\n      const kernelValue = kernelValues[i];\n      if (kernelValue.type !== 'HTMLImageArray' && kernelValue) continue;\n      if (kernelValue.uploadValue !== argument) continue;\n      const variableIndex = values[i].indexOf(argument);\n      if (variableIndex === -1) continue;\n      const variableName = `uploadValue_${kernelValue.name}[${variableIndex}]`;\n      context.insertVariable(variableName, argument);\n      return variableName;\n    }\n  }\n\n  for (let i = 0; i < kernelValues.length; i++) {\n    const kernelValue = kernelValues[i];\n    if (argument !== kernelValue.uploadValue) continue;\n    const variable = `uploadValue_${kernelValue.name}`;\n    context.insertVariable(variable, kernelValue);\n    return variable;\n  }\n  return null;\n}\n\nmodule.exports = {\n  glKernelString\n};\n},{\"../../utils\":114,\"gl-wiretap\":3}],13:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { utils } = require('../../utils');\nconst { GLTextureArray2Float } = require('./texture/array-2-float');\nconst { GLTextureArray2Float2D } = require('./texture/array-2-float-2d');\nconst { GLTextureArray2Float3D } = require('./texture/array-2-float-3d');\nconst { GLTextureArray3Float } = require('./texture/array-3-float');\nconst { GLTextureArray3Float2D } = require('./texture/array-3-float-2d');\nconst { GLTextureArray3Float3D } = require('./texture/array-3-float-3d');\nconst { GLTextureArray4Float } = require('./texture/array-4-float');\nconst { GLTextureArray4Float2D } = require('./texture/array-4-float-2d');\nconst { GLTextureArray4Float3D } = require('./texture/array-4-float-3d');\nconst { GLTextureFloat } = require('./texture/float');\nconst { GLTextureFloat2D } = require('./texture/float-2d');\nconst { GLTextureFloat3D } = require('./texture/float-3d');\nconst { GLTextureMemoryOptimized } = require('./texture/memory-optimized');\nconst { GLTextureMemoryOptimized2D } = require('./texture/memory-optimized-2d');\nconst { GLTextureMemoryOptimized3D } = require('./texture/memory-optimized-3d');\nconst { GLTextureUnsigned } = require('./texture/unsigned');\nconst { GLTextureUnsigned2D } = require('./texture/unsigned-2d');\nconst { GLTextureUnsigned3D } = require('./texture/unsigned-3d');\nconst { GLTextureGraphical } = require('./texture/graphical');\n\nclass GLKernel extends Kernel {\n  static get mode() {\n    return 'gpu';\n  }\n\n  static getIsFloatRead() {\n    const kernelString = `function kernelFunction() {\n      return 1;\n    }`;\n    const kernel = new this(kernelString, {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [1],\n      precision: 'single',\n      returnType: 'Number',\n      tactic: 'speed',\n    });\n    kernel.build();\n    kernel.run();\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 1;\n  }\n\n  static getIsIntegerDivisionAccurate() {\n    function kernelFunction(v1, v2) {\n      return v1[this.thread.x] / v2[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [2],\n      returnType: 'Number',\n      precision: 'unsigned',\n      tactic: 'speed',\n    });\n    const args = [\n      [6, 6030401],\n      [3, 3991]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 2 && result[1] === 1511;\n  }\n\n  static getIsSpeedTacticSupported() {\n    function kernelFunction(value) {\n      return value[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [4],\n      returnType: 'Number',\n      precision: 'unsigned',\n      tactic: 'speed',\n    });\n    const args = [\n      [0, 1, 2, 3]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return Math.round(result[0]) === 0 && Math.round(result[1]) === 1 && Math.round(result[2]) === 2 && Math.round(result[3]) === 3;\n  }\n\n  static get testCanvas() {\n    throw new Error(`\"testCanvas\" not defined on ${ this.name }`);\n  }\n\n  static get testContext() {\n    throw new Error(`\"testContext\" not defined on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    const isDrawBuffers = this.getIsDrawBuffers();\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isSpeedTacticSupported: this.getIsSpeedTacticSupported(),\n      isTextureFloat: this.getIsTextureFloat(),\n      isDrawBuffers,\n      kernelMap: isDrawBuffers,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static setupFeatureChecks() {\n    throw new Error(`\"setupFeatureChecks\" not defined on ${ this.name }`);\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    return kernel.getVariablePrecisionString() + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n  }\n\n  setFixIntegerDivisionAccuracy(fix) {\n    this.fixIntegerDivisionAccuracy = fix;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setFloatTextures(flag) {\n    utils.warnDeprecated('method', 'setFloatTextures', 'setOptimizeFloatMemory');\n    this.floatTextures = flag;\n    return this;\n  }\n\n  static nativeFunctionArguments(source) {\n    const argumentTypes = [];\n    const argumentNames = [];\n    const states = [];\n    const isStartingVariableName = /^[a-zA-Z_]/;\n    const isVariableChar = /[a-zA-Z_0-9]/;\n    let i = 0;\n    let argumentName = null;\n    let argumentType = null;\n    while (i < source.length) {\n      const char = source[i];\n      const nextChar = source[i + 1];\n      const state = states.length > 0 ? states[states.length - 1] : null;\n\n      if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '*') {\n        states.push('MULTI_LINE_COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'MULTI_LINE_COMMENT' && char === '*' && nextChar === '/') {\n        states.pop();\n        i += 2;\n        continue;\n      }\n\n      else if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '/') {\n        states.push('COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'COMMENT' && char === '\\n') {\n        states.pop();\n        i++;\n        continue;\n      }\n\n      else if (state === null && char === '(') {\n        states.push('FUNCTION_ARGUMENTS');\n        i++;\n        continue;\n      } else if (state === 'FUNCTION_ARGUMENTS') {\n        if (char === ')') {\n          states.pop();\n          break;\n        }\n        if (char === 'f' && nextChar === 'l' && source[i + 2] === 'o' && source[i + 3] === 'a' && source[i + 4] === 't' && source[i + 5] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'float';\n          argumentName = '';\n          i += 6;\n          continue;\n        } else if (char === 'i' && nextChar === 'n' && source[i + 2] === 't' && source[i + 3] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'int';\n          argumentName = '';\n          i += 4;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '2' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec2';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '3' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec3';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '4' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec4';\n          argumentName = '';\n          i += 5;\n          continue;\n        }\n      }\n\n      else if (state === 'DECLARE_VARIABLE') {\n        if (argumentName === '') {\n          if (char === ' ') {\n            i++;\n            continue;\n          }\n          if (!isStartingVariableName.test(char)) {\n            throw new Error('variable name is not expected string');\n          }\n        }\n        argumentName += char;\n        if (!isVariableChar.test(nextChar)) {\n          states.pop();\n          argumentNames.push(argumentName);\n          argumentTypes.push(typeMap[argumentType]);\n        }\n      }\n\n      i++;\n    }\n    if (states.length > 0) {\n      throw new Error('GLSL function was not parsable');\n    }\n    return {\n      argumentNames,\n      argumentTypes,\n    };\n  }\n\n  static nativeFunctionReturnType(source) {\n    return typeMap[source.match(/int|float|vec[2-4]/)[0]];\n  }\n\n  static combineKernels(combinedKernel, lastKernel) {\n    combinedKernel.apply(null, arguments);\n    const {\n      texSize,\n      context,\n      threadDim\n    } = lastKernel.texSize;\n    let result;\n    if (lastKernel.precision === 'single') {\n      const w = texSize[0];\n      const h = Math.ceil(texSize[1] / 4);\n      result = new Float32Array(w * h * 4 * 4);\n      context.readPixels(0, 0, w, h * 4, context.RGBA, context.FLOAT, result);\n    } else {\n      const bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n      context.readPixels(0, 0, texSize[0], texSize[1], context.RGBA, context.UNSIGNED_BYTE, bytes);\n      result = new Float32Array(bytes.buffer);\n    }\n\n    result = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n    if (lastKernel.output.length === 1) {\n      return result;\n    } else if (lastKernel.output.length === 2) {\n      return utils.splitArray(result, lastKernel.output[0]);\n    } else if (lastKernel.output.length === 3) {\n      const cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n      return cube.map(function(x) {\n        return utils.splitArray(x, lastKernel.output[0]);\n      });\n    }\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.transferValues = null;\n    this.formatValues = null;\n    this.TextureConstructor = null;\n    this.renderOutput = null;\n    this.renderRawOutput = null;\n    this.texSize = null;\n    this.translatedSource = null;\n    this.compiledFragmentShader = null;\n    this.compiledVertexShader = null;\n    this.switchingKernels = null;\n    this._textureSwitched = null;\n    this._mappedTextureSwitched = null;\n  }\n\n  checkTextureSize() {\n    const { features } = this.constructor;\n    if (this.texSize[0] > features.maxTextureSize || this.texSize[1] > features.maxTextureSize) {\n      throw new Error(`Texture size [${this.texSize[0]},${this.texSize[1]}] generated by kernel is larger than supported size [${features.maxTextureSize},${features.maxTextureSize}]`);\n    }\n  }\n\n  translateSource() {\n    throw new Error(`\"translateSource\" not defined on ${this.constructor.name}`);\n  }\n\n  pickRenderStrategy(args) {\n    if (this.graphical) {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = (pixels) => pixels;\n      this.TextureConstructor = GLTextureGraphical;\n      return null;\n    }\n    if (this.precision === 'unsigned') {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = this.readPackedPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      } else {\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToArrays;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            this.renderOutput = this.renderValues;\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              this.formatValues = utils.erect3DPackedFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              this.formatValues = utils.erect2DPackedFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              this.formatValues = utils.erectPackedFloat;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      }\n    } else if (this.precision === 'single') {\n      this.renderRawOutput = this.readFloatPixelsToFloat32Array;\n      this.transferValues = this.readFloatPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.optimizeFloatMemory) {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureMemoryOptimized;\n                return null;\n              }\n            } else {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureFloat3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureFloat2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureFloat;\n                return null;\n              }\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              return null;\n            }\n          }\n        }\n      }\n      this.renderOutput = this.renderValues;\n      if (this.subKernels !== null) {\n        this.renderKernels = this.renderKernelsToArrays;\n      }\n      if (this.optimizeFloatMemory) {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized3D;\n              this.formatValues = utils.erectMemoryOptimized3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized2D;\n              this.formatValues = utils.erectMemoryOptimized2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureMemoryOptimized;\n              this.formatValues = utils.erectMemoryOptimizedFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      } else {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureFloat3D;\n              this.formatValues = utils.erect3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureFloat2D;\n              this.formatValues = utils.erect2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureFloat;\n              this.formatValues = utils.erectFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      }\n    } else {\n      throw new Error(`unhandled precision of \"${this.precision}\"`);\n    }\n\n    throw new Error(`unhandled return type \"${this.returnType}\"`);\n  }\n\n  getKernelString() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultTexture() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Integer':\n      case 'Number':\n        return this.getMainResultNumberTexture();\n      case 'Array(2)':\n        return this.getMainResultArray2Texture();\n      case 'Array(3)':\n        return this.getMainResultArray3Texture();\n      case 'Array(4)':\n        return this.getMainResultArray4Texture();\n      default:\n        throw new Error(`unhandled returnType type ${ this.returnType }`);\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultGraphical() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultMemoryOptimizedFloats() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultPackedPixels() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultString() {\n    if (this.graphical) {\n      return this.getMainResultGraphical();\n    } else if (this.precision === 'single') {\n      if (this.optimizeFloatMemory) {\n        return this.getMainResultMemoryOptimizedFloats();\n      }\n      return this.getMainResultTexture();\n    } else {\n      return this.getMainResultPackedPixels();\n    }\n  }\n\n  getMainResultNumberTexture() {\n    return utils.linesToString(this.getMainResultKernelNumberTexture()) +\n      utils.linesToString(this.getMainResultSubKernelNumberTexture());\n  }\n\n  getMainResultArray2Texture() {\n    return utils.linesToString(this.getMainResultKernelArray2Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray2Texture());\n  }\n\n  getMainResultArray3Texture() {\n    return utils.linesToString(this.getMainResultKernelArray3Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray3Texture());\n  }\n\n  getMainResultArray4Texture() {\n    return utils.linesToString(this.getMainResultKernelArray4Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray4Texture());\n  }\n\n  getFloatTacticDeclaration() {\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    return `precision ${variablePrecision} float;\\n`;\n  }\n\n  getIntTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic, true)} int;\\n`;\n  }\n\n  getSampler2DTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2D;\\n`;\n  }\n\n  getSampler2DArrayTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2DArray;\\n`;\n  }\n\n  renderTexture() {\n    return this.immutable ? this.texture.clone() : this.texture;\n  }\n  readPackedPixelsToUint8Array() {\n    if (this.precision !== 'unsigned') throw new Error('Requires this.precision to be \"unsigned\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const result = new Uint8Array(texSize[0] * texSize[1] * 4);\n    gl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n\n  readPackedPixelsToFloat32Array() {\n    return new Float32Array(this.readPackedPixelsToUint8Array().buffer);\n  }\n\n  readFloatPixelsToFloat32Array() {\n    if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const w = texSize[0];\n    const h = texSize[1];\n    const result = new Float32Array(w * h * 4);\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n\n  getPixels(flip) {\n    const {\n      context: gl,\n      output\n    } = this;\n    const [width, height] = output;\n    const pixels = new Uint8Array(width * height * 4);\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    return new Uint8ClampedArray((flip ? pixels : utils.flipPixels(pixels, width, height)).buffer);\n  }\n\n  renderKernelsToArrays() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    for (let i = 0; i < this.subKernels.length; i++) {\n      result[this.subKernels[i].property] = this.mappedTextures[i].toArray();\n    }\n    return result;\n  }\n\n  renderKernelsToTextures() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    if (this.immutable) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        result[this.subKernels[i].property] = this.mappedTextures[i].clone();\n      }\n    } else {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        result[this.subKernels[i].property] = this.mappedTextures[i];\n      }\n    }\n    return result;\n  }\n\n  resetSwitchingKernels() {\n    const existingValue = this.switchingKernels;\n    this.switchingKernels = null;\n    return existingValue;\n  }\n\n  setOutput(output) {\n    const newOutput = this.toKernelOutput(output);\n    if (this.program) {\n      if (!this.dynamicOutput) {\n        throw new Error('Resizing a kernel with dynamicOutput: false is not possible');\n      }\n      const newThreadDim = [newOutput[0], newOutput[1] || 1, newOutput[2] || 1];\n      const newTexSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, newThreadDim);\n      const oldTexSize = this.texSize;\n      if (oldTexSize) {\n        const oldPrecision = this.getVariablePrecisionString(oldTexSize, this.tactic);\n        const newPrecision = this.getVariablePrecisionString(newTexSize, this.tactic);\n        if (oldPrecision !== newPrecision) {\n          if (this.debug) {\n            console.warn('Precision requirement changed, asking GPU instance to recompile');\n          }\n          this.switchKernels({\n            type: 'outputPrecisionMismatch',\n            precision: newPrecision,\n            needed: output\n          });\n          return;\n        }\n      }\n      this.output = newOutput;\n      this.threadDim = newThreadDim;\n      this.texSize = newTexSize;\n      const { context: gl } = this;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n      this.updateMaxTexSize();\n      this.framebuffer.width = this.texSize[0];\n      this.framebuffer.height = this.texSize[1];\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      this.canvas.width = this.maxTexSize[0];\n      this.canvas.height = this.maxTexSize[1];\n      if (this.texture) {\n        this.texture.delete();\n      }\n      this.texture = null;\n      this._setupOutputTexture();\n      if (this.mappedTextures && this.mappedTextures.length > 0) {\n        for (let i = 0; i < this.mappedTextures.length; i++) {\n          this.mappedTextures[i].delete();\n        }\n        this.mappedTextures = null;\n        this._setupSubOutputTextures();\n      }\n    } else {\n      this.output = newOutput;\n    }\n    return this;\n  }\n  renderValues() {\n    return this.formatValues(\n      this.transferValues(),\n      this.output[0],\n      this.output[1],\n      this.output[2]\n    );\n  }\n  switchKernels(reason) {\n    if (this.switchingKernels) {\n      this.switchingKernels.push(reason);\n    } else {\n      this.switchingKernels = [reason];\n    }\n  }\n  getVariablePrecisionString(textureSize = this.texSize, tactic = this.tactic, isInt = false) {\n    if (!tactic) {\n      if (!this.constructor.features.isSpeedTacticSupported) return 'highp';\n      const low = this.constructor.features[isInt ? 'lowIntPrecision' : 'lowFloatPrecision'];\n      const medium = this.constructor.features[isInt ? 'mediumIntPrecision' : 'mediumFloatPrecision'];\n      const high = this.constructor.features[isInt ? 'highIntPrecision' : 'highFloatPrecision'];\n      const requiredSize = Math.log2(textureSize[0] * textureSize[1]);\n      if (requiredSize <= low.rangeMax) {\n        return 'lowp';\n      } else if (requiredSize <= medium.rangeMax) {\n        return 'mediump';\n      } else if (requiredSize <= high.rangeMax) {\n        return 'highp';\n      } else {\n        throw new Error(`The required size exceeds that of the ability of your system`);\n      }\n    }\n    switch (tactic) {\n      case 'speed':\n        return 'lowp';\n      case 'balanced':\n        return 'mediump';\n      case 'precision':\n        return 'highp';\n      default:\n        throw new Error(`Unknown tactic \"${tactic}\" use \"speed\", \"balanced\", \"precision\", or empty for auto`);\n    }\n  }\n\n  updateTextureArgumentRefs(kernelValue, arg) {\n    if (!this.immutable) return;\n    if (this.texture.texture === arg.texture) {\n      const { prevArg } = kernelValue;\n      if (prevArg) {\n        if (prevArg.texture._refs === 1) {\n          this.texture.delete();\n          this.texture = prevArg.clone();\n          this._textureSwitched = true;\n        }\n        prevArg.delete();\n      }\n      kernelValue.prevArg = arg.clone();\n    } else if (this.mappedTextures && this.mappedTextures.length > 0) {\n      const { mappedTextures } = this;\n      for (let i = 0; i < mappedTextures.length; i++) {\n        const mappedTexture = mappedTextures[i];\n        if (mappedTexture.texture === arg.texture) {\n          const { prevArg } = kernelValue;\n          if (prevArg) {\n            if (prevArg.texture._refs === 1) {\n              mappedTexture.delete();\n              mappedTextures[i] = prevArg.clone();\n              this._mappedTextureSwitched[i] = true;\n            }\n            prevArg.delete();\n          }\n          kernelValue.prevArg = arg.clone();\n          return;\n        }\n      }\n    }\n  }\n\n  onActivate(previousKernel) {\n    this._textureSwitched = true;\n    this.texture = previousKernel.texture;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        this._mappedTextureSwitched[i] = true;\n      }\n      this.mappedTextures = previousKernel.mappedTextures;\n    }\n  }\n\n  initCanvas() {}\n}\n\nconst typeMap = {\n  int: 'Integer',\n  float: 'Number',\n  vec2: 'Array(2)',\n  vec3: 'Array(3)',\n  vec4: 'Array(4)',\n};\n\nmodule.exports = {\n  GLKernel\n};\n},{\"../../utils\":114,\"../kernel\":36,\"./texture/array-2-float\":16,\"./texture/array-2-float-2d\":14,\"./texture/array-2-float-3d\":15,\"./texture/array-3-float\":19,\"./texture/array-3-float-2d\":17,\"./texture/array-3-float-3d\":18,\"./texture/array-4-float\":22,\"./texture/array-4-float-2d\":20,\"./texture/array-4-float-3d\":21,\"./texture/float\":25,\"./texture/float-2d\":23,\"./texture/float-3d\":24,\"./texture/graphical\":26,\"./texture/memory-optimized\":30,\"./texture/memory-optimized-2d\":28,\"./texture/memory-optimized-3d\":29,\"./texture/unsigned\":33,\"./texture/unsigned-2d\":31,\"./texture/unsigned-3d\":32}],14:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect2DArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],15:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect3DArray2(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],16:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erectArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float\n};\n},{\"../../../utils\":114,\"./float\":25}],17:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect2DArray3(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],18:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect3DArray3(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],19:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erectArray3(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float\n};\n},{\"../../../utils\":114,\"./float\":25}],20:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect2DArray4(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],21:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect3DArray4(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],22:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erectArray4(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float\n};\n},{\"../../../utils\":114,\"./float\":25}],23:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat2D\n};\n},{\"../../../utils\":114,\"./float\":25}],24:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat3D\n};\n},{\"../../../utils\":114,\"./float\":25}],25:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureFloat extends GLTexture {\n  get textureType() {\n    return this.context.FLOAT;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  renderRawOutput() {\n    const gl = this.context;\n    const size = this.size;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Float32Array(size[0] * size[1] * 4);\n    gl.readPixels(0, 0, size[0], size[1], gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return this.renderRawOutput();\n  }\n  toArray() {\n    return utils.erectFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat\n};\n},{\"../../../utils\":114,\"./index\":27}],26:[function(require,module,exports){\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureGraphical extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return this.renderValues();\n  }\n}\n\nmodule.exports = {\n  GLTextureGraphical\n};\n},{\"./unsigned\":33}],27:[function(require,module,exports){\nconst { Texture } = require('../../../texture');\n\nclass GLTexture extends Texture {\n  get textureType() {\n    throw new Error(`\"textureType\" not implemented on ${ this.name }`);\n  }\n\n  clone() {\n    return new this.constructor(this);\n  }\n\n  beforeMutate() {\n    if (this.texture._refs > 1) {\n      this.newTexture();\n      return true;\n    }\n    return false;\n  }\n\n  cloneTexture() {\n    this.texture._refs--;\n    const { context: gl, size, texture, kernel } = this;\n    if (kernel.debug) {\n      console.warn('cloning internal texture');\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    selectTexture(gl, texture);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    const target = gl.createTexture();\n    selectTexture(gl, target);\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    gl.copyTexSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 0, 0, size[0], size[1]);\n    target._refs = 1;\n    this.texture = target;\n  }\n\n  newTexture() {\n    this.texture._refs--;\n    const gl = this.context;\n    const size = this.size;\n    const kernel = this.kernel;\n    if (kernel.debug) {\n      console.warn('new internal texture');\n    }\n    const target = gl.createTexture();\n    selectTexture(gl, target);\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    target._refs = 1;\n    this.texture = target;\n  }\n\n  clear() {\n    if (this.texture._refs) {\n      this.texture._refs--;\n      const gl = this.context;\n      const target = this.texture = gl.createTexture();\n      selectTexture(gl, target);\n      const size = this.size;\n      target._refs = 1;\n      gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    }\n    const { context: gl, texture } = this;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    selectTexture(gl, texture);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  }\n\n  delete() {\n    if (this._deleted) return;\n    this._deleted = true;\n    if (this.texture._refs) {\n      this.texture._refs--;\n      if (this.texture._refs) return;\n    }\n    this.context.deleteTexture(this.texture);\n  }\n\n  framebuffer() {\n    if (!this._framebuffer) {\n      this._framebuffer = this.kernel.getRawValueFramebuffer(this.size[0], this.size[1]);\n    }\n    return this._framebuffer;\n  }\n}\n\nfunction selectTexture(gl, texture) {\n  gl.activeTexture(gl.TEXTURE15);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n}\n\nmodule.exports = { GLTexture };\n},{\"../../../texture\":113}],28:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized2D\n};\n},{\"../../../utils\":114,\"./float\":25}],29:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized3D\n};\n},{\"../../../utils\":114,\"./float\":25}],30:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimizedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized\n};\n},{\"../../../utils\":114,\"./float\":25}],31:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned2D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect2DPackedFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned2D\n};\n},{\"../../../utils\":114,\"./unsigned\":33}],32:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned3D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect3DPackedFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned3D\n};\n},{\"../../../utils\":114,\"./unsigned\":33}],33:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureUnsigned extends GLTexture {\n  get textureType() {\n    return this.context.UNSIGNED_BYTE;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  renderRawOutput() {\n    const { context: gl } = this;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Uint8Array(this.size[0] * this.size[1] * 4);\n    gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return new Float32Array(this.renderRawOutput().buffer);\n  }\n  toArray() {\n    return utils.erectPackedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned\n};\n},{\"../../../utils\":114,\"./index\":27}],34:[function(require,module,exports){\nconst getContext = require('gl');\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { glKernelString } = require('../gl/kernel-string');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nclass HeadlessGLKernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) return isSupported;\n    this.setupFeatureChecks();\n    isSupported = testContext !== null;\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    testCanvas = null;\n    testExtensions = null;\n    if (typeof getContext !== 'function') return;\n    try { \n      testContext = getContext(2, 2, {\n        preserveDrawingBuffer: true\n      });\n      if (!testContext || !testContext.getExtension) return;\n      testExtensions = {\n        STACKGL_resize_drawingbuffer: testContext.getExtension('STACKGL_resize_drawingbuffer'),\n        STACKGL_destroy_context: testContext.getExtension('STACKGL_destroy_context'),\n        OES_texture_float: testContext.getExtension('OES_texture_float'),\n        OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n        OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n        WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n        WEBGL_color_buffer_float: testContext.getExtension('WEBGL_color_buffer_float'),\n      };\n      features = this.getFeatures();\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  static isContextMatch(context) {\n    try {\n      return context.getParameter(context.RENDERER) === 'ANGLE';\n    } catch (e) {\n      return false;\n    }\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  initCanvas() {\n    return {};\n  }\n\n  initContext() {\n    return getContext(2, 2, {\n      preserveDrawingBuffer: true\n    });\n  }\n\n  initExtensions() {\n    this.extensions = {\n      STACKGL_resize_drawingbuffer: this.context.getExtension('STACKGL_resize_drawingbuffer'),\n      STACKGL_destroy_context: this.context.getExtension('STACKGL_destroy_context'),\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n    };\n  }\n\n  build() {\n    super.build.apply(this, arguments);\n    if (!this.fallbackRequested) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n  }\n\n  destroyExtensions() {\n    this.extensions.STACKGL_resize_drawingbuffer = null;\n    this.extensions.STACKGL_destroy_context = null;\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('STACKGL_destroy_context');\n    if (extension && extension.destroy) {\n      extension.destroy();\n    }\n  }\n\n  toString() {\n    const setupContextString = `const gl = context || require('gl')(1, 1);\\n`;\n    const destroyContextString = `    if (!context) { gl.getExtension('STACKGL_destroy_context').destroy(); }\\n`;\n    return glKernelString(this.constructor, arguments, this, setupContextString, destroyContextString);\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    if (this.graphical && this.extensions.STACKGL_resize_drawingbuffer) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n    return this;\n  }\n}\n\nmodule.exports = {\n  HeadlessGLKernel\n};\n},{\"../gl/kernel-string\":12,\"../web-gl/kernel\":70,\"gl\":2}],35:[function(require,module,exports){\nclass KernelValue {\n  constructor(value, settings) {\n    const {\n      name,\n      kernel,\n      context,\n      checkContext,\n      onRequestContextHandle,\n      onUpdateValueMismatch,\n      origin,\n      strictIntegers,\n      type,\n      tactic,\n    } = settings;\n    if (!name) {\n      throw new Error('name not set');\n    }\n    if (!type) {\n      throw new Error('type not set');\n    }\n    if (!origin) {\n      throw new Error('origin not set');\n    }\n    if (origin !== 'user' && origin !== 'constants') {\n      throw new Error(`origin must be \"user\" or \"constants\" value is \"${ origin }\"`);\n    }\n    if (!onRequestContextHandle) {\n      throw new Error('onRequestContextHandle is not set');\n    }\n    this.name = name;\n    this.origin = origin;\n    this.tactic = tactic;\n    this.varName = origin === 'constants' ? `constants.${name}` : name;\n    this.kernel = kernel;\n    this.strictIntegers = strictIntegers;\n    this.type = value.type || type;\n    this.size = value.size || null;\n    this.index = null;\n    this.context = context;\n    this.checkContext = checkContext !== null && checkContext !== undefined ? checkContext : true;\n    this.contextHandle = null;\n    this.onRequestContextHandle = onRequestContextHandle;\n    this.onUpdateValueMismatch = onUpdateValueMismatch;\n    this.forceUploadEachRun = null;\n  }\n\n  get id() {\n    return `${this.origin}_${name}`;\n  }\n\n  getSource() {\n    throw new Error(`\"getSource\" not defined on ${ this.constructor.name }`);\n  }\n\n  updateValue(value) {\n    throw new Error(`\"updateValue\" not defined on ${ this.constructor.name }`);\n  }\n}\n\nmodule.exports = {\n  KernelValue\n};\n},{}],36:[function(require,module,exports){\nconst { utils } = require('../utils');\nconst { Input } = require('../input');\n\nclass Kernel {\n  static get isSupported() {\n    throw new Error(`\"isSupported\" not implemented on ${ this.name }`);\n  }\n\n  static isContextMatch(context) {\n    throw new Error(`\"isContextMatch\" not implemented on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    throw new Error(`\"getFeatures\" not implemented on ${ this.name }`);\n  }\n\n  static destroyContext(context) {\n    throw new Error(`\"destroyContext\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionArguments() {\n    throw new Error(`\"nativeFunctionArguments\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`\"nativeFunctionReturnType\" called on ${ this.name }`);\n  }\n\n  static combineKernels() {\n    throw new Error(`\"combineKernels\" called on ${ this.name }`);\n  }\n\n  constructor(source, settings) {\n    if (typeof source !== 'object') {\n      if (typeof source !== 'string') {\n        throw new Error('source not a string');\n      }\n      if (!utils.isFunctionString(source)) {\n        throw new Error('source not a function string');\n      }\n    }\n    this.useLegacyEncoder = false;\n    this.fallbackRequested = false;\n    this.onRequestFallback = null;\n\n    this.argumentNames = typeof source === 'string' ? utils.getArgumentNamesFromString(source) : null;\n    this.argumentTypes = null;\n    this.argumentSizes = null;\n    this.argumentBitRatios = null;\n    this.kernelArguments = null;\n    this.kernelConstants = null;\n    this.forceUploadKernelConstants = null;\n\n\n    this.source = source;\n\n    this.output = null;\n\n    this.debug = false;\n\n    this.graphical = false;\n\n    this.loopMaxIterations = 0;\n\n    this.constants = null;\n\n    this.constantTypes = null;\n\n    this.constantBitRatios = null;\n\n    this.dynamicArguments = false;\n\n    this.dynamicOutput = false;\n\n    this.canvas = null;\n\n    this.context = null;\n\n    this.checkContext = null;\n\n    this.gpu = null;\n\n    this.functions = null;\n\n    this.nativeFunctions = null;\n\n    this.injectedNative = null;\n\n    this.subKernels = null;\n\n    this.validate = true;\n\n    this.immutable = false;\n\n    this.pipeline = false;\n\n    this.precision = null;\n\n    this.tactic = null;\n\n    this.plugins = null;\n\n    this.returnType = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.optimizeFloatMemory = null;\n    this.strictIntegers = false;\n    this.fixIntegerDivisionAccuracy = null;\n    this.built = false;\n    this.signature = null;\n  }\n\n  mergeSettings(settings) {\n    for (let p in settings) {\n      if (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\n      switch (p) {\n        case 'output':\n          if (!Array.isArray(settings.output)) {\n            this.setOutput(settings.output); \n            continue;\n          }\n          break;\n        case 'functions':\n          this.functions = [];\n          for (let i = 0; i < settings.functions.length; i++) {\n            this.addFunction(settings.functions[i]);\n          }\n          continue;\n        case 'graphical':\n          if (settings[p] && !settings.hasOwnProperty('precision')) {\n            this.precision = 'unsigned';\n          }\n          this[p] = settings[p];\n          continue;\n        case 'nativeFunctions':\n          if (!settings.nativeFunctions) continue;\n          this.nativeFunctions = [];\n          for (let i = 0; i < settings.nativeFunctions.length; i++) {\n            const s = settings.nativeFunctions[i];\n            const { name, source } = s;\n            this.addNativeFunction(name, source, s);\n          }\n          continue;\n      }\n      this[p] = settings[p];\n    }\n\n    if (!this.canvas) this.canvas = this.initCanvas();\n    if (!this.context) this.context = this.initContext();\n    if (!this.plugins) this.plugins = this.initPlugins(settings);\n  }\n  build() {\n    throw new Error(`\"build\" not defined on ${ this.constructor.name }`);\n  }\n\n  run() {\n    throw new Error(`\"run\" not defined on ${ this.constructor.name }`)\n  }\n\n  initCanvas() {\n    throw new Error(`\"initCanvas\" not defined on ${ this.constructor.name }`);\n  }\n\n  initContext() {\n    throw new Error(`\"initContext\" not defined on ${ this.constructor.name }`);\n  }\n\n  initPlugins(settings) {\n    throw new Error(`\"initPlugins\" not defined on ${ this.constructor.name }`);\n  }\n\n  addFunction(source, settings = {}) {\n    if (source.name && source.source && source.argumentTypes && 'returnType' in source) {\n      this.functions.push(source);\n    } else if ('settings' in source && 'source' in source) {\n      this.functions.push(this.functionToIGPUFunction(source.source, source.settings));\n    } else if (typeof source === 'string' || typeof source === 'function') {\n      this.functions.push(this.functionToIGPUFunction(source, settings));\n    } else {\n      throw new Error(`function not properly defined`);\n    }\n    return this;\n  }\n\n  addNativeFunction(name, source, settings = {}) {\n    const { argumentTypes, argumentNames } = settings.argumentTypes ?\n      splitArgumentTypes(settings.argumentTypes) :\n      this.constructor.nativeFunctionArguments(source) || {};\n    this.nativeFunctions.push({\n      name,\n      source,\n      settings,\n      argumentTypes,\n      argumentNames,\n      returnType: settings.returnType || this.constructor.nativeFunctionReturnType(source)\n    });\n    return this;\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    if (!this.argumentTypes) {\n      if (!this.argumentTypes) {\n        this.argumentTypes = [];\n        for (let i = 0; i < args.length; i++) {\n          const argType = utils.getVariableType(args[i], this.strictIntegers);\n          const type = argType === 'Integer' ? 'Number' : argType;\n          this.argumentTypes.push(type);\n          this.kernelArguments.push({\n            type\n          });\n        }\n      }\n    } else {\n      for (let i = 0; i < this.argumentTypes.length; i++) {\n        this.kernelArguments.push({\n          type: this.argumentTypes[i]\n        });\n      }\n    }\n\n    this.argumentSizes = new Array(args.length);\n    this.argumentBitRatios = new Int32Array(args.length);\n\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      this.argumentSizes[i] = arg.constructor === Input ? arg.size : null;\n      this.argumentBitRatios[i] = this.getBitRatio(arg);\n    }\n\n    if (this.argumentNames.length !== args.length) {\n      throw new Error(`arguments are miss-aligned`);\n    }\n  }\n\n  setupConstants() {\n    this.kernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    if (this.constants) {\n      for (let name in this.constants) {\n        if (needsConstantTypes) {\n          const type = utils.getVariableType(this.constants[name], this.strictIntegers);\n          this.constantTypes[name] = type;\n          this.kernelConstants.push({\n            name,\n            type\n          });\n        } else {\n          this.kernelConstants.push({\n            name,\n            type: this.constantTypes[name]\n          });\n        }\n        this.constantBitRatios[name] = this.getBitRatio(this.constants[name]);\n      }\n    }\n  }\n\n  setOptimizeFloatMemory(flag) {\n    this.optimizeFloatMemory = flag;\n    return this;\n  }\n\n  toKernelOutput(output) {\n    if (output.hasOwnProperty('x')) {\n      if (output.hasOwnProperty('y')) {\n        if (output.hasOwnProperty('z')) {\n          return [output.x, output.y, output.z];\n        } else {\n          return [output.x, output.y];\n        }\n      } else {\n        return [output.x];\n      }\n    } else {\n      return output;\n    }\n  }\n\n  setOutput(output) {\n    this.output = this.toKernelOutput(output);\n    return this;\n  }\n\n  setDebug(flag) {\n    this.debug = flag;\n    return this;\n  }\n\n  setGraphical(flag) {\n    this.graphical = flag;\n    this.precision = 'unsigned';\n    return this;\n  }\n\n  setLoopMaxIterations(max) {\n    this.loopMaxIterations = max;\n    return this;\n  }\n\n  setConstants(constants) {\n    this.constants = constants;\n    return this;\n  }\n\n  setConstantTypes(constantTypes) {\n    this.constantTypes = constantTypes;\n    return this;\n  }\n\n  setFunctions(functions) {\n    for (let i = 0; i < functions.length; i++) {\n      this.addFunction(functions[i]);\n    }\n    return this;\n  }\n\n  setNativeFunctions(nativeFunctions) {\n    for (let i = 0; i < nativeFunctions.length; i++) {\n      const settings = nativeFunctions[i];\n      const { name, source } = settings;\n      this.addNativeFunction(name, source, settings);\n    }\n    return this;\n  }\n\n  setInjectedNative(injectedNative) {\n    this.injectedNative = injectedNative;\n    return this;\n  }\n\n  setPipeline(flag) {\n    this.pipeline = flag;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setDimensions(flag) {\n    utils.warnDeprecated('method', 'setDimensions', 'setOutput');\n    this.output = flag;\n    return this;\n  }\n\n  setOutputToTexture(flag) {\n    utils.warnDeprecated('method', 'setOutputToTexture', 'setPipeline');\n    this.pipeline = flag;\n    return this;\n  }\n\n  setImmutable(flag) {\n    this.immutable = flag;\n    return this;\n  }\n\n  setCanvas(canvas) {\n    this.canvas = canvas;\n    return this;\n  }\n\n  setStrictIntegers(flag) {\n    this.strictIntegers = flag;\n    return this;\n  }\n\n  setDynamicOutput(flag) {\n    this.dynamicOutput = flag;\n    return this;\n  }\n\n  setHardcodeConstants(flag) {\n    utils.warnDeprecated('method', 'setHardcodeConstants');\n    this.setDynamicOutput(flag);\n    this.setDynamicArguments(flag);\n    return this;\n  }\n\n  setDynamicArguments(flag) {\n    this.dynamicArguments = flag;\n    return this;\n  }\n\n  setUseLegacyEncoder(flag) {\n    this.useLegacyEncoder = flag;\n    return this;\n  }\n\n  setWarnVarUsage(flag) {\n    utils.warnDeprecated('method', 'setWarnVarUsage');\n    return this;\n  }\n\n  getCanvas() {\n    utils.warnDeprecated('method', 'getCanvas');\n    return this.canvas;\n  }\n\n  getWebGl() {\n    utils.warnDeprecated('method', 'getWebGl');\n    return this.context;\n  }\n\n  setContext(context) {\n    this.context = context;\n    return this;\n  }\n\n  setArgumentTypes(argumentTypes) {\n    if (Array.isArray(argumentTypes)) {\n      this.argumentTypes = argumentTypes;\n    } else {\n      this.argumentTypes = [];\n      for (const p in argumentTypes) {\n        if (!argumentTypes.hasOwnProperty(p)) continue;\n        const argumentIndex = this.argumentNames.indexOf(p);\n        if (argumentIndex === -1) throw new Error(`unable to find argument ${ p }`);\n        this.argumentTypes[argumentIndex] = argumentTypes[p];\n      }\n    }\n    return this;\n  }\n\n  setTactic(tactic) {\n    this.tactic = tactic;\n    return this;\n  }\n\n  requestFallback(args) {\n    if (!this.onRequestFallback) {\n      throw new Error(`\"onRequestFallback\" not defined on ${ this.constructor.name }`);\n    }\n    this.fallbackRequested = true;\n    return this.onRequestFallback(args);\n  }\n\n  validateSettings() {\n    throw new Error(`\"validateSettings\" not defined on ${ this.constructor.name }`);\n  }\n\n  addSubKernel(subKernel) {\n    if (this.subKernels === null) {\n      this.subKernels = [];\n    }\n    if (!subKernel.source) throw new Error('subKernel missing \"source\" property');\n    if (!subKernel.property && isNaN(subKernel.property)) throw new Error('subKernel missing \"property\" property');\n    if (!subKernel.name) throw new Error('subKernel missing \"name\" property');\n    this.subKernels.push(subKernel);\n    return this;\n  }\n\n  destroy(removeCanvasReferences) {\n    throw new Error(`\"destroy\" called on ${ this.constructor.name }`);\n  }\n\n  getBitRatio(value) {\n    if (this.precision === 'single') {\n      return 4;\n    } else if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  getPixels(flip) {\n    throw new Error(`\"getPixels\" called on ${ this.constructor.name }`);\n  }\n\n  checkOutput() {\n    if (!this.output || !utils.isArray(this.output)) throw new Error('kernel.output not an array');\n    if (this.output.length < 1) throw new Error('kernel.output is empty, needs at least 1 value');\n    for (let i = 0; i < this.output.length; i++) {\n      if (isNaN(this.output[i]) || this.output[i] < 1) {\n        throw new Error(`${ this.constructor.name }.output[${ i }] incorrectly defined as \\`${ this.output[i] }\\`, needs to be numeric, and greater than 0`);\n      }\n    }\n  }\n\n  prependString(value) {\n    throw new Error(`\"prependString\" called on ${ this.constructor.name }`);\n  }\n\n  hasPrependString(value) {\n    throw new Error(`\"hasPrependString\" called on ${ this.constructor.name }`);\n  }\n\n  toJSON() {\n    return {\n      settings: {\n        output: this.output,\n        pipeline: this.pipeline,\n        argumentNames: this.argumentNames,\n        argumentsTypes: this.argumentTypes,\n        constants: this.constants,\n        pluginNames: this.plugins ? this.plugins.map(plugin => plugin.name) : null,\n        returnType: this.returnType,\n      }\n    };\n  }\n\n  buildSignature(args) {\n    const Constructor = this.constructor;\n    this.signature = Constructor.getSignature(this, Constructor.getArgumentTypes(this, args));\n  }\n\n  static getArgumentTypes(kernel, args) {\n    const argumentTypes = new Array(args.length);\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      const type = kernel.argumentTypes[i];\n      if (arg.type) {\n        argumentTypes[i] = arg.type;\n      } else {\n        switch (type) {\n          case 'Number':\n          case 'Integer':\n          case 'Float':\n          case 'ArrayTexture(1)':\n            argumentTypes[i] = utils.getVariableType(arg);\n            break;\n          default:\n            argumentTypes[i] = type;\n        }\n      }\n    }\n    return argumentTypes;\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    throw new Error(`\"getSignature\" not implemented on ${ this.name }`);\n  }\n\n  functionToIGPUFunction(source, settings = {}) {\n    if (typeof source !== 'string' && typeof source !== 'function') throw new Error('source not a string or function');\n    const sourceString = typeof source === 'string' ? source : source.toString();\n    let argumentTypes = [];\n\n    if (Array.isArray(settings.argumentTypes)) {\n      argumentTypes = settings.argumentTypes;\n    } else if (typeof settings.argumentTypes === 'object') {\n      argumentTypes = utils.getArgumentNamesFromString(sourceString)\n        .map(name => settings.argumentTypes[name]) || [];\n    } else {\n      argumentTypes = settings.argumentTypes || [];\n    }\n\n    return {\n      name: utils.getFunctionNameFromString(sourceString) || null,\n      source: sourceString,\n      argumentTypes,\n      returnType: settings.returnType || null,\n    };\n  }\n\n  onActivate(previousKernel) {}\n}\n\nfunction splitArgumentTypes(argumentTypesObject) {\n  const argumentNames = Object.keys(argumentTypesObject);\n  const argumentTypes = [];\n  for (let i = 0; i < argumentNames.length; i++) {\n    const argumentName = argumentNames[i];\n    argumentTypes.push(argumentTypesObject[argumentName]);\n  }\n  return { argumentTypes, argumentNames };\n}\n\nmodule.exports = {\n  Kernel\n};\n},{\"../input\":110,\"../utils\":114}],37:[function(require,module,exports){\nconst fragmentShader = `__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nvarying vec2 vTexCoord;\n\nfloat acosh(float x) {\n  return log(x + sqrt(x * x - 1.0));\n}\n\nfloat sinh(float x) {\n  return (pow(${Math.E}, x) - pow(${Math.E}, -x)) / 2.0;\n}\n\nfloat asinh(float x) {\n  return log(x + sqrt(x * x + 1.0));\n}\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat atanh(float x) {\n  x = (x + 1.0) / (x - 1.0);\n  if (x < 0.0) {\n    return 0.5 * log(-x);\n  }\n  return 0.5 * log(x);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat cosh(float x) {\n  return (pow(${Math.E}, x) + pow(${Math.E}, -x)) / 2.0; \n}\n\nfloat expm1(float x) {\n  return pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat tanh(float x) {\n  float e = exp(2.0 * x);\n  return (e - 1.0) / (e + 1.0);\n}\n\nfloat trunc(float x) {\n  if (x >= 0.0) {\n    return floor(x); \n  } else {\n    return ceil(x);\n  }\n}\n\nvec4 _round(vec4 x) {\n  return floor(x + 0.5);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x / y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(_round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(_round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;\n  if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;\n  return 0.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  if (channel == 0) return texel.r * 255.0;\n  if (channel == 1) return texel.g * 255.0;\n  if (channel == 2) return texel.b * 255.0;\n  if (channel == 3) return texel.a * 255.0;\n  return 0.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return texel.r;\n  if (channel == 1) return texel.g;\n  if (channel == 2) return texel.b;\n  if (channel == 3) return texel.a;\n  return 0.0;\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture2D(tex, st / vec2(texSize));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n  \n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nvoid color(sampler2D image) {\n  actualColor = texture2D(image, vTexCoord);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],38:[function(require,module,exports){\nconst { utils } = require('../../utils');\nconst { FunctionNode } = require('../function-node');\n\nclass WebGLFunctionNode extends FunctionNode {\n  constructor(source, settings) {\n    super(source, settings);\n    if (settings && settings.hasOwnProperty('fixIntegerDivisionAccuracy')) {\n      this.fixIntegerDivisionAccuracy = settings.fixIntegerDivisionAccuracy;\n    }\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    const consequentType = this.getType(ast.consequent);\n    const alternateType = this.getType(ast.alternate);\n    if (consequentType === null && alternateType === null) {\n      retArr.push('if (');\n      this.astGeneric(ast.test, retArr);\n      retArr.push(') {');\n      this.astGeneric(ast.consequent, retArr);\n      retArr.push(';');\n      retArr.push('} else {');\n      this.astGeneric(ast.alternate, retArr);\n      retArr.push(';');\n      retArr.push('}');\n      return retArr;\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astFunction(ast, retArr) {\n    if (this.isRootKernel) {\n      retArr.push('void');\n    } else {\n      if (!this.returnType) {\n        const lastReturn = this.findLastReturn();\n        if (lastReturn) {\n          this.returnType = this.getType(ast.body);\n          if (this.returnType === 'LiteralInteger') {\n            this.returnType = 'Number';\n          }\n        }\n      }\n\n      const { returnType } = this;\n      if (!returnType) {\n        retArr.push('void');\n      } else {\n        const type = typeMap[returnType];\n        if (!type) {\n          throw new Error(`unknown type ${returnType}`);\n        }\n        retArr.push(type);\n      }\n    }\n    retArr.push(' ');\n    retArr.push(this.name);\n    retArr.push('(');\n\n    if (!this.isRootKernel) {\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        let argumentType = this.argumentTypes[this.argumentNames.indexOf(argumentName)];\n        if (!argumentType) {\n          throw this.astErrorOutput(`Unknown argument ${argumentName} type`, ast);\n        }\n        if (argumentType === 'LiteralInteger') {\n          this.argumentTypes[i] = argumentType = 'Number';\n        }\n        const type = typeMap[argumentType];\n        if (!type) {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        const name = utils.sanitizeName(argumentName);\n        if (type === 'sampler2D' || type === 'sampler2DArray') {\n          retArr.push(`${type} user_${name},ivec2 user_${name}Size,ivec3 user_${name}Dim`);\n        } else {\n          retArr.push(`${type} user_${name}`);\n        }\n      }\n    }\n\n    retArr.push(') {\\n');\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    retArr.push('}\\n');\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    if (!ast.argument) throw this.astErrorOutput('Unexpected return statement', ast);\n    this.pushState('skip-literal-correction');\n    const type = this.getType(ast.argument);\n    this.popState('skip-literal-correction');\n\n    const result = [];\n\n    if (!this.returnType) {\n      if (type === 'LiteralInteger' || type === 'Integer') {\n        this.returnType = 'Number';\n      } else {\n        this.returnType = type;\n      }\n    }\n\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Float':\n        switch (type) {\n          case 'Integer':\n            result.push('float(');\n            this.astGeneric(ast.argument, result);\n            result.push(')');\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToFloat(ast.argument, result);\n\n            if (this.getType(ast) === 'Integer') {\n              result.unshift('float(');\n              result.push(')');\n            }\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Integer':\n        switch (type) {\n          case 'Float':\n          case 'Number':\n            this.castValueToInteger(ast.argument, result);\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToInteger(ast.argument, result);\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Array(4)':\n      case 'Array(3)':\n      case 'Array(2)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n      case 'Input':\n        this.astGeneric(ast.argument, result);\n        break;\n      default:\n        throw this.astErrorOutput(`unhandled return type ${this.returnType}`, ast);\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(`kernelResult = ${ result.join('') };`);\n      retArr.push('return;');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = ${ result.join('') };`);\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push(`return ${ result.join('') };`);\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    const key = this.astKey(ast);\n    if (Number.isInteger(ast.value)) {\n      if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n        this.literalTypes[key] = 'Integer';\n        retArr.push(`${ast.value}`);\n      } else if (this.isState('casting-to-float') || this.isState('building-float')) {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      } else {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      }\n    } else if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n      this.literalTypes[key] = 'Integer';\n      retArr.push(Math.round(ast.value));\n    } else {\n      this.literalTypes[key] = 'Number';\n      retArr.push(`${ast.value}`);\n    }\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    if (this.checkAndUpconvertOperator(ast, retArr)) {\n      return retArr;\n    }\n\n    if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {\n      retArr.push('divWithIntCheck(');\n      this.pushState('building-float');\n      switch (this.getType(ast.left)) {\n        case 'Integer':\n          this.castValueToFloat(ast.left, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.left, retArr);\n          break;\n        default:\n          this.astGeneric(ast.left, retArr);\n      }\n      retArr.push(', ');\n      switch (this.getType(ast.right)) {\n        case 'Integer':\n          this.castValueToFloat(ast.right, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.right, retArr);\n          break;\n        default:\n          this.astGeneric(ast.right, retArr);\n      }\n      this.popState('building-float');\n      retArr.push(')');\n      return retArr;\n    }\n\n    retArr.push('(');\n    const leftType = this.getType(ast.left) || 'Number';\n    const rightType = this.getType(ast.right) || 'Number';\n    if (!leftType || !rightType) {\n      throw this.astErrorOutput(`Unhandled binary expression`, ast);\n    }\n    const key = leftType + ' & ' + rightType;\n    switch (key) {\n      case 'Integer & Integer':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n      case 'Number & Float':\n      case 'Float & Number':\n      case 'Float & Float':\n      case 'Number & Number':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & LiteralInteger':\n        if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n          this.pushState('building-integer');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.astGeneric(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.castLiteralToFloat(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castLiteralToFloat(ast.right, retArr);\n          this.popState('building-float');\n        }\n        break;\n\n      case 'Integer & Float':\n      case 'Integer & Number':\n        if (ast.operator === '>' || ast.operator === '<' && ast.right.type === 'Literal') {\n          if (!Number.isInteger(ast.right.value)) {\n            this.pushState('building-float');\n            this.castValueToFloat(ast.left, retArr);\n            retArr.push(operatorMap[ast.operator] || ast.operator);\n            this.astGeneric(ast.right, retArr);\n            this.popState('building-float');\n            break;\n          }\n        }\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.pushState('casting-to-integer');\n        if (ast.right.type === 'Literal') {\n          const literalResult = [];\n          this.astGeneric(ast.right, literalResult);\n          const literalType = this.getType(ast.right);\n          if (literalType === 'Integer') {\n            retArr.push(literalResult.join(''));\n          } else {\n            throw this.astErrorOutput(`Unhandled binary expression with literal`, ast);\n          }\n        } else {\n          retArr.push('int(');\n          this.astGeneric(ast.right, retArr);\n          retArr.push(')');\n        }\n        this.popState('casting-to-integer');\n        this.popState('building-integer');\n        break;\n      case 'Integer & LiteralInteger':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToInteger(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Number & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'Float & LiteralInteger':\n      case 'Number & LiteralInteger':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & Float':\n      case 'LiteralInteger & Number':\n        if (this.isState('casting-to-integer')) {\n          this.pushState('building-integer');\n          this.castLiteralToInteger(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castValueToInteger(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.pushState('casting-to-float');\n          this.astGeneric(ast.right, retArr);\n          this.popState('casting-to-float');\n          this.popState('building-float');\n        }\n        break;\n      case 'LiteralInteger & Integer':\n        this.pushState('building-integer');\n        this.castLiteralToInteger(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Boolean & Boolean':\n        this.pushState('building-boolean');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-boolean');\n        break;\n\n      case 'Float & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n\n      default:\n        throw this.astErrorOutput(`Unhandled binary expression between ${key}`, ast);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  checkAndUpconvertOperator(ast, retArr) {\n    const bitwiseResult = this.checkAndUpconvertBitwiseOperators(ast, retArr);\n    if (bitwiseResult) {\n      return bitwiseResult;\n    }\n    const upconvertableOperators = {\n      '%': this.fixIntegerDivisionAccuracy ? 'integerCorrectionModulo' : 'modulo',\n      '**': 'pow',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.left)) {\n      case 'Integer':\n        this.castValueToFloat(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    switch (this.getType(ast.right)) {\n      case 'Integer':\n        this.castValueToFloat(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseOperators(ast, retArr) {\n    const upconvertableOperators = {\n      '&': 'bitwiseAnd',\n      '|': 'bitwiseOr',\n      '^': 'bitwiseXOR',\n      '<<': 'bitwiseZeroFillLeftShift',\n      '>>': 'bitwiseSignedRightShift',\n      '>>>': 'bitwiseZeroFillRightShift',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    const leftType = this.getType(ast.left);\n    switch (leftType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    const rightType = this.getType(ast.right);\n    switch (rightType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(ast, retArr) {\n    const upconvertableOperators = {\n      '~': 'bitwiseNot',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.argument)) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.argument, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.argument, retArr);\n        break;\n      default:\n        this.astGeneric(ast.argument, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  castLiteralToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castLiteralToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  castValueToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    retArr.push('int(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castValueToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    retArr.push('float(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n    }\n\n    const type = this.getType(idtNode);\n\n    const name = utils.sanitizeName(idtNode.name);\n    if (idtNode.name === 'Infinity') {\n      retArr.push('3.402823466e+38');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(name) > -1) {\n        retArr.push(`bool(user_${name})`);\n      } else {\n        retArr.push(`user_${name}`);\n      }\n    } else {\n      retArr.push(`user_${name}`);\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      const { declarations } = forNode.init;\n      if (declarations.length > 1) {\n        isSafe = false;\n      }\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < declarations.length; i++) {\n        if (declarations[i].init && declarations[i].init.type !== 'Literal') {\n          isSafe = false;\n        }\n      }\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      const initString = initArr.join('');\n      const initNeedsSemiColon = initString[initString.length - 1] !== ';';\n      retArr.push(`for (${initString}${initNeedsSemiColon ? ';' : ''}${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), '\\n');\n      }\n      retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', whileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    retArr.push('if (!');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') break;\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', doWhileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') break;\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n\n  astAssignmentExpression(assNode, retArr) {\n    if (assNode.operator === '%=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('mod(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else if (assNode.operator === '**=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('pow(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else {\n      const leftType = this.getType(assNode.left);\n      const rightType = this.getType(assNode.right);\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(assNode.operator);\n      if (leftType !== 'Integer' && rightType === 'Integer') {\n        retArr.push('float(');\n        this.astGeneric(assNode.right, retArr);\n        retArr.push(')');\n      } else {\n        this.astGeneric(assNode.right, retArr);\n      }\n      return retArr;\n    }\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    const declarations = varDecNode.declarations;\n    if (!declarations || !declarations[0] || !declarations[0].init) {\n      throw this.astErrorOutput('Unexpected expression', varDecNode);\n    }\n    const result = [];\n    let lastType = null;\n    const declarationSets = [];\n    let declarationSet = [];\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const init = declaration.init;\n      const info = this.getDeclaration(declaration.id);\n      const actualType = this.getType(declaration.init);\n      let type = actualType;\n      if (type === 'LiteralInteger') {\n        if (info.suggestedType === 'Integer') {\n          type = 'Integer';\n        } else {\n          type = 'Number';\n        }\n      }\n      const markupType = typeMap[type];\n      if (!markupType) {\n        throw this.astErrorOutput(`Markup type ${ type } not handled`, varDecNode);\n      }\n      const declarationResult = [];\n      if (actualType === 'Integer' && type === 'Integer') {\n        info.valueType = 'Number';\n        if (i === 0 || lastType === null) {\n          declarationResult.push('float ');\n        } else if (type !== lastType) {\n          throw new Error('Unhandled declaration');\n        }\n        lastType = type;\n        declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);\n        declarationResult.push('float(');\n        this.astGeneric(init, declarationResult);\n        declarationResult.push(')');\n      } else {\n        info.valueType = type;\n        if (i === 0 || lastType === null) {\n          declarationResult.push(`${markupType} `);\n        } else if (type !== lastType) {\n          declarationSets.push(declarationSet.join(','));\n          declarationSet = [];\n          declarationResult.push(`${markupType} `);\n        }\n        lastType = type;\n        declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);\n        if (actualType === 'Number' && type === 'Integer') {\n          if (init.left && init.left.type === 'Literal') {\n            this.astGeneric(init, declarationResult);\n          } else {\n            declarationResult.push('int(');\n            this.astGeneric(init, declarationResult);\n            declarationResult.push(')');\n          }\n        } else if (actualType === 'LiteralInteger' && type === 'Integer') {\n          this.castLiteralToInteger(init, declarationResult);\n        } else {\n          this.astGeneric(init, declarationResult);\n        }\n      }\n      declarationSet.push(declarationResult.join(''));\n    }\n\n    if (declarationSet.length > 0) {\n      declarationSets.push(declarationSet.join(','));\n    }\n\n    result.push(declarationSets.join(';'));\n\n    retArr.push(result.join(''));\n    retArr.push(';');\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n  }\n\n  astSwitchStatement(ast, retArr) {\n    if (ast.type !== 'SwitchStatement') {\n      throw this.astErrorOutput('Invalid switch statement', ast);\n    }\n    const { discriminant, cases } = ast;\n    const type = this.getType(discriminant);\n    const varName = `switchDiscriminant${this.astKey(ast, '_')}`;\n    switch (type) {\n      case 'Float':\n      case 'Number':\n        retArr.push(`float ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n      case 'Integer':\n        retArr.push(`int ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n    }\n    if (cases.length === 1 && !cases[0].test) {\n      this.astGeneric(cases[0].consequent, retArr);\n      return retArr;\n    }\n\n    let fallingThrough = false;\n    let defaultResult = [];\n    let movingDefaultToEnd = false;\n    let pastFirstIf = false;\n    for (let i = 0; i < cases.length; i++) {\n      if (!cases[i].test) {\n        if (cases.length > i + 1) {\n          movingDefaultToEnd = true;\n          this.astGeneric(cases[i].consequent, defaultResult);\n          continue;\n        } else {\n          retArr.push(' else {\\n');\n        }\n      } else {\n        if (i === 0 || !pastFirstIf) {\n          pastFirstIf = true;\n          retArr.push(`if (${varName} == `);\n        } else {\n          if (fallingThrough) {\n            retArr.push(`${varName} == `);\n            fallingThrough = false;\n          } else {\n            retArr.push(` else if (${varName} == `);\n          }\n        }\n        if (type === 'Integer') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'Number':\n            case 'Float':\n              this.castValueToInteger(cases[i].test, retArr);\n              break;\n            case 'LiteralInteger':\n              this.castLiteralToInteger(cases[i].test, retArr);\n              break;\n          }\n        } else if (type === 'Float') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'LiteralInteger':\n              this.castLiteralToFloat(cases[i].test, retArr);\n              break;\n            case 'Integer':\n              this.castValueToFloat(cases[i].test, retArr);\n              break;\n          }\n        } else {\n          throw new Error('unhanlded');\n        }\n        if (!cases[i].consequent || cases[i].consequent.length === 0) {\n          fallingThrough = true;\n          retArr.push(' || ');\n          continue;\n        }\n        retArr.push(`) {\\n`);\n      }\n      this.astGeneric(cases[i].consequent, retArr);\n      retArr.push('\\n}');\n    }\n    if (movingDefaultToEnd) {\n      retArr.push(' else {');\n      retArr.push(defaultResult.join(''));\n      retArr.push('}');\n    }\n    return retArr;\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      property,\n      name,\n      signature,\n      origin,\n      type,\n      xProperty,\n      yProperty,\n      zProperty\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'value.thread.value':\n      case 'this.thread.value':\n        if (name !== 'x' && name !== 'y' && name !== 'z') {\n          throw this.astErrorOutput('Unexpected expression, expected `this.thread.x`, `this.thread.y`, or `this.thread.z`', mNode);\n        }\n        retArr.push(`threadId.${name}`);\n        return retArr;\n      case 'this.output.value':\n        if (this.dynamicOutput) {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.x)');\n              } else {\n                retArr.push('uOutputDim.x');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.y)');\n              } else {\n                retArr.push('uOutputDim.y');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.z)');\n              } else {\n                retArr.push('uOutputDim.z');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        } else {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[0]);\n              } else {\n                retArr.push(this.output[0], '.0');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[1]);\n              } else {\n                retArr.push(this.output[1], '.0');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[2]);\n              } else {\n                retArr.push(this.output[2], '.0');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value[][][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        const cleanName = utils.sanitizeName(name);\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ cleanName }.r`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ cleanName }.g`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ cleanName }.b`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ cleanName }.a`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n        if (typeof xProperty === 'undefined') {\n          switch (type) {\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              retArr.push(`constants_${ utils.sanitizeName(name) }`);\n              return retArr;\n          }\n        }\n        case 'this.constants.value[]':\n        case 'this.constants.value[][]':\n        case 'this.constants.value[][][]':\n        case 'this.constants.value[][][][]':\n          break;\n        case 'fn()[]':\n          this.astCallExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        case 'fn()[][]':\n          this.astCallExpression(mNode.object.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(mNode.object.property));\n          retArr.push(']');\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(mNode.property));\n          retArr.push(']');\n          return retArr;\n        case '[][]':\n          this.astArrayExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        default:\n          throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (mNode.computed === false) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${utils.sanitizeName(name)}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${utils.sanitizeName(name)}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        retArr.push(this.memberExpressionPropertyMarkup(xProperty));\n        retArr.push(']');\n        break;\n      case 'HTMLImageArray':\n        retArr.push(`getImage3D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(1)':\n        retArr.push(`getFloatFromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(2)':\n      case 'Array2D(2)':\n      case 'Array3D(2)':\n        retArr.push(`getMemoryOptimizedVec2(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(2)':\n        retArr.push(`getVec2FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(3)':\n      case 'Array2D(3)':\n      case 'Array3D(3)':\n        retArr.push(`getMemoryOptimizedVec3(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(3)':\n        retArr.push(`getVec3FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(4)':\n      case 'Array2D(4)':\n      case 'Array3D(4)':\n        retArr.push(`getMemoryOptimizedVec4(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(4)':\n      case 'HTMLCanvas':\n      case 'OffscreenCanvas':\n      case 'HTMLImage':\n      case 'ImageBitmap':\n      case 'ImageData':\n      case 'HTMLVideo':\n        retArr.push(`getVec4FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'NumberTexture':\n      case 'Array':\n      case 'Array2D':\n      case 'Array3D':\n      case 'Array4D':\n      case 'Input':\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        if (this.precision === 'single') {\n          retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        } else {\n          const bitRatio = (origin === 'user' ?\n            this.lookupFunctionArgumentBitRatio(this.name, name) :\n            this.constantBitRatios[name]\n          );\n          switch (bitRatio) {\n            case 1:\n              retArr.push(`get8(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 2:\n              retArr.push(`get16(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 4:\n            case 0:\n              retArr.push(`get32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            default:\n              throw new Error(`unhandled bit ratio of ${bitRatio}`);\n          }\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        }\n        break;\n      case 'MemoryOptimizedNumberTexture':\n        retArr.push(`getMemoryOptimized32(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`${markupName}[${this.memberExpressionPropertyMarkup(yProperty)}]`);\n        if (yProperty) {\n          retArr.push(`[${this.memberExpressionPropertyMarkup(xProperty)}]`);\n        }\n        break;\n      default:\n        throw new Error(`unhandled member expression \"${ type }\"`);\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (!ast.callee) {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n\n    let functionName = null;\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (isMathFunction || (ast.callee.object && ast.callee.object.type === 'ThisExpression')) {\n      functionName = ast.callee.property.name;\n    }\n    else if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[0].type === 'Literal' && !isNaN(ast.callee.expressions[0].raw)) {\n      functionName = ast.callee.expressions[1].property.name;\n    } else {\n      functionName = ast.callee.name;\n    }\n\n    if (!functionName) {\n      throw this.astErrorOutput(`Unhandled function, couldn't find name`, ast);\n    }\n\n    switch (functionName) {\n      case 'pow':\n        functionName = '_pow';\n        break;\n      case 'round':\n        functionName = '_round';\n        break;\n    }\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    if (functionName === 'random' && this.plugins && this.plugins.length > 0) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.functionMatch === 'Math.random()' && plugin.functionReplace) {\n          retArr.push(plugin.functionReplace);\n          return retArr;\n        }\n      }\n    }\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n\n    if (isMathFunction) {\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        const argumentType = this.getType(argument);\n        if (i > 0) {\n          retArr.push(', ');\n        }\n\n        switch (argumentType) {\n          case 'Integer':\n            this.castValueToFloat(argument, retArr);\n            break;\n          default:\n            this.astGeneric(argument, retArr);\n            break;\n        }\n      }\n    } else {\n      const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        let targetType = targetTypes[i];\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        const argumentType = this.getType(argument);\n        if (!targetType) {\n          this.triggerImplyArgumentType(functionName, i, argumentType, this);\n          targetType = argumentType;\n        }\n        switch (argumentType) {\n          case 'Boolean':\n            this.astGeneric(argument, retArr);\n            continue;\n          case 'Number':\n          case 'Float':\n            if (targetType === 'Integer') {\n              retArr.push('int(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.astGeneric(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Integer':\n            if (targetType === 'Number' || targetType === 'Float') {\n              retArr.push('float(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Integer') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'LiteralInteger':\n            if (targetType === 'Integer') {\n              this.castLiteralToInteger(argument, retArr);\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            if (targetType === argumentType) {\n              if (argument.type === 'Identifier') {\n                retArr.push(`user_${utils.sanitizeName(argument.name)}`);\n              } else if (argument.type === 'ArrayExpression' || argument.type === 'MemberExpression' || argument.type === 'CallExpression') {\n                this.astGeneric(argument, retArr);\n              } else {\n                throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              }\n              continue;\n            }\n            break;\n          case 'HTMLCanvas':\n          case 'OffscreenCanvas':\n          case 'HTMLImage':\n          case 'ImageBitmap':\n          case 'ImageData':\n          case 'HTMLImageArray':\n          case 'HTMLVideo':\n          case 'ArrayTexture(1)':\n          case 'ArrayTexture(2)':\n          case 'ArrayTexture(3)':\n          case 'ArrayTexture(4)':\n          case 'Array':\n          case 'Input':\n            if (targetType === argumentType) {\n              if (argument.type !== 'Identifier') throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              this.triggerImplyArgumentBitRatio(this.name, argument.name, functionName, i);\n              const name = utils.sanitizeName(argument.name);\n              retArr.push(`user_${name},user_${name}Size,user_${name}Dim`);\n              continue;\n            }\n            break;\n        }\n        throw this.astErrorOutput(`Unhandled argument combination of ${ argumentType } and ${ targetType } for argument named \"${ argument.name }\"`, ast);\n      }\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const returnType = this.getType(arrNode);\n\n    const arrLen = arrNode.elements.length;\n\n    switch (returnType) {\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`mat${arrLen}(`);\n        break;\n      default:\n        retArr.push(`vec${arrLen}(`);\n    }\n    for (let i = 0; i < arrLen; ++i) {\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      const subNode = arrNode.elements[i];\n      this.astGeneric(subNode, retArr)\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  memberExpressionXYZ(x, y, z, retArr) {\n    if (z) {\n      retArr.push(this.memberExpressionPropertyMarkup(z), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    if (y) {\n      retArr.push(this.memberExpressionPropertyMarkup(y), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    retArr.push(this.memberExpressionPropertyMarkup(x));\n    return retArr;\n  }\n\n  memberExpressionPropertyMarkup(property) {\n    if (!property) {\n      throw new Error('Property not set');\n    }\n    const type = this.getType(property);\n    const result = [];\n    switch (type) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(property, result);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(property, result);\n        break;\n      default:\n        this.astGeneric(property, result);\n    }\n    return result.join('');\n  }\n}\n\nconst typeMap = {\n  'Array': 'sampler2D',\n  'Array(2)': 'vec2',\n  'Array(3)': 'vec3',\n  'Array(4)': 'vec4',\n  'Matrix(2)': 'mat2',\n  'Matrix(3)': 'mat3',\n  'Matrix(4)': 'mat4',\n  'Array2D': 'sampler2D',\n  'Array3D': 'sampler2D',\n  'Boolean': 'bool',\n  'Float': 'float',\n  'Input': 'sampler2D',\n  'Integer': 'int',\n  'Number': 'float',\n  'LiteralInteger': 'float',\n  'NumberTexture': 'sampler2D',\n  'MemoryOptimizedNumberTexture': 'sampler2D',\n  'ArrayTexture(1)': 'sampler2D',\n  'ArrayTexture(2)': 'sampler2D',\n  'ArrayTexture(3)': 'sampler2D',\n  'ArrayTexture(4)': 'sampler2D',\n  'HTMLVideo': 'sampler2D',\n  'HTMLCanvas': 'sampler2D',\n  'OffscreenCanvas': 'sampler2D',\n  'HTMLImage': 'sampler2D',\n  'ImageBitmap': 'sampler2D',\n  'ImageData': 'sampler2D',\n  'HTMLImageArray': 'sampler2DArray',\n};\n\nconst operatorMap = {\n  '===': '==',\n  '!==': '!='\n};\n\nmodule.exports = {\n  WebGLFunctionNode\n};\n},{\"../../utils\":114,\"../function-node\":10}],39:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGLKernelValueFloat } = require('./kernel-value/float');\nconst { WebGLKernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGLKernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGLKernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGLKernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGLKernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGLKernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGLKernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGLKernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGLKernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGLKernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGLKernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGLKernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGLKernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGLKernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGLKernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGLKernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGLKernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGLKernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGLKernelValueArray2 } = require('./kernel-value/array2');\nconst { WebGLKernelValueArray3 } = require('./kernel-value/array3');\nconst { WebGLKernelValueArray4 } = require('./kernel-value/array4');\n\nconst { WebGLKernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicUnsignedArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGLKernelValueDynamicHTMLImage,\n      'ImageData': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueUnsignedArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueUnsignedInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueHTMLImage,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'ImageBitmap': WebGLKernelValueHTMLImage,\n      'ImageData': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicSingleArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueDynamicSingleArray3DI,\n      'Input': WebGLKernelValueDynamicSingleInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGLKernelValueDynamicHTMLImage,\n      'ImageData': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueSingleArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': WebGLKernelValueSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueSingleArray3DI,\n      'Input': WebGLKernelValueSingleInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueHTMLImage,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'ImageBitmap': WebGLKernelValueHTMLImage,\n      'ImageData': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  lookupKernelValueType,\n  kernelValueMaps,\n};\n},{\"./kernel-value/array2\":41,\"./kernel-value/array3\":42,\"./kernel-value/array4\":43,\"./kernel-value/boolean\":44,\"./kernel-value/dynamic-html-image\":45,\"./kernel-value/dynamic-html-video\":46,\"./kernel-value/dynamic-memory-optimized-number-texture\":47,\"./kernel-value/dynamic-number-texture\":48,\"./kernel-value/dynamic-single-array\":49,\"./kernel-value/dynamic-single-array1d-i\":50,\"./kernel-value/dynamic-single-array2d-i\":51,\"./kernel-value/dynamic-single-array3d-i\":52,\"./kernel-value/dynamic-single-input\":53,\"./kernel-value/dynamic-unsigned-array\":54,\"./kernel-value/dynamic-unsigned-input\":55,\"./kernel-value/float\":56,\"./kernel-value/html-image\":57,\"./kernel-value/html-video\":58,\"./kernel-value/integer\":60,\"./kernel-value/memory-optimized-number-texture\":61,\"./kernel-value/number-texture\":62,\"./kernel-value/single-array\":63,\"./kernel-value/single-array1d-i\":64,\"./kernel-value/single-array2d-i\":65,\"./kernel-value/single-array3d-i\":66,\"./kernel-value/single-input\":67,\"./kernel-value/unsigned-array\":68,\"./kernel-value/unsigned-input\":69}],40:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\nconst { Input } = require('../../../input');\n\nclass WebGLKernelArray extends WebGLKernelValue {\n  checkSize(width, height) {\n    if (!this.kernel.validate) return;\n    const { maxTextureSize } = this.kernel.constructor.features;\n    if (width > maxTextureSize || height > maxTextureSize) {\n      if (width > height) {\n        throw new Error(`Argument texture width of ${width} larger than maximum size of ${maxTextureSize} for your GPU`);\n      } else if (width < height) {\n        throw new Error(`Argument texture height of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n      } else {\n        throw new Error(`Argument texture height and width of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n      }\n    }\n  }\n\n  setup() {\n    this.requestTexture();\n    this.setupTexture();\n    this.defineTexture();\n  }\n\n  requestTexture() {\n    this.texture = this.onRequestTexture();\n  }\n\n  defineTexture() {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  }\n\n  setupTexture() {\n    this.contextHandle = this.onRequestContextHandle();\n    this.index = this.onRequestIndex();\n    this.dimensionsId = this.id + 'Dim';\n    this.sizeId = this.id + 'Size';\n  }\n\n  getBitRatio(value) {\n    if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  destroy() {\n    if (this.prevArg) {\n      this.prevArg.delete();\n    }\n    this.context.deleteTexture(this.texture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelArray\n};\n},{\"../../../input\":110,\"./index\":59}],41:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueArray2 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec2 ${this.id} = vec2(${value[0]},${value[1]});\\n`;\n    }\n    return `uniform vec2 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform2fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueArray2\n};\n},{\"./index\":59}],42:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueArray3 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec3 ${this.id} = vec3(${value[0]},${value[1]},${value[2]});\\n`;\n    }\n    return `uniform vec3 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform3fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueArray3\n};\n},{\"./index\":59}],43:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueArray4 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec4 ${this.id} = vec4(${value[0]},${value[1]},${value[2]},${value[3]});\\n`;\n    }\n    return `uniform vec4 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform4fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueArray4\n};\n},{\"./index\":59}],44:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueBoolean extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const bool ${this.id} = ${value};\\n`;\n    }\n    return `uniform bool ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueBoolean\n};\n},{\"../../../utils\":114,\"./index\":59}],45:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueDynamicHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":114,\"./html-image\":57}],46:[function(require,module,exports){\nconst { WebGLKernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGLKernelValueDynamicHTMLVideo extends WebGLKernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLVideo\n};\n},{\"./dynamic-html-image\":45}],47:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    this.dimensions = inputTexture.dimensions;\n    this.checkSize(inputTexture.size[0], inputTexture.size[1]);\n    this.textureSize = inputTexture.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(inputTexture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"./memory-optimized-number-texture\":61}],48:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('./number-texture');\n\nclass WebGLKernelValueDynamicNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = value.dimensions;\n    this.checkSize(value.size[0], value.size[1]);\n    this.textureSize = value.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":114,\"./number-texture\":62}],49:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('./single-array');\n\nclass WebGLKernelValueDynamicSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray\n};\n},{\"../../../utils\":114,\"./single-array\":63}],50:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('./single-array1d-i');\n\nclass WebGLKernelValueDynamicSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":114,\"./single-array1d-i\":64}],51:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('./single-array2d-i');\n\nclass WebGLKernelValueDynamicSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":114,\"./single-array2d-i\":65}],52:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('./single-array3d-i');\n\nclass WebGLKernelValueDynamicSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":114,\"./single-array3d-i\":66}],53:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('./single-input');\n\nclass WebGLKernelValueDynamicSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleInput\n};\n},{\"../../../utils\":114,\"./single-input\":67}],54:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('./unsigned-array');\n\nclass WebGLKernelValueDynamicUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    const Type = this.getTransferArrayType(value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":114,\"./unsigned-array\":68}],55:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('./unsigned-input');\n\nclass WebGLKernelValueDynamicUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    const Type = this.getTransferArrayType(value.value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":114,\"./unsigned-input\":69}],56:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueFloat extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      if (Number.isInteger(value)) {\n        return `const float ${this.id} = ${value}.0;\\n`;\n      }\n      return `const float ${this.id} = ${value};\\n`;\n    }\n    return `uniform float ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1f(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueFloat\n};\n},{\"../../../utils\":114,\"./index\":59}],57:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueHTMLImage extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.uploadValue = value;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputImage) {\n    if (inputImage.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputImage.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = inputImage);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueHTMLImage\n};\n},{\"../../../utils\":114,\"./array\":40}],58:[function(require,module,exports){\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueHTMLVideo extends WebGLKernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueHTMLVideo\n};\n},{\"./html-image\":57}],59:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { KernelValue } = require('../../kernel-value');\n\nclass WebGLKernelValue extends KernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.dimensionsId = null;\n    this.sizeId = null;\n    this.initialValueConstructor = value.constructor;\n    this.onRequestTexture = settings.onRequestTexture;\n    this.onRequestIndex = settings.onRequestIndex;\n    this.uploadValue = null;\n    this.textureSize = null;\n    this.bitRatio = null;\n    this.prevArg = null;\n  }\n\n  get id() {\n    return `${this.origin}_${utils.sanitizeName(this.name)}`;\n  }\n\n  setup() {}\n\n  getTransferArrayType(value) {\n    if (Array.isArray(value[0])) {\n      return this.getTransferArrayType(value[0]);\n    }\n    switch (value.constructor) {\n      case Array:\n      case Int32Array:\n      case Int16Array:\n      case Int8Array:\n        return Float32Array;\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Uint16Array:\n      case Uint32Array:\n      case Float32Array:\n      case Float64Array:\n        return value.constructor;\n    }\n    console.warn('Unfamiliar constructor type.  Will go ahead and use, but likley this may result in a transfer of zeros');\n    return value.constructor;\n  }\n\n  getStringValueHandler() {\n    throw new Error(`\"getStringValueHandler\" not implemented on ${this.constructor.name}`);\n  }\n\n  getVariablePrecisionString() {\n    return this.kernel.getVariablePrecisionString(this.textureSize || undefined, this.tactic || undefined);\n  }\n\n  destroy() {}\n}\n\nmodule.exports = {\n  WebGLKernelValue\n};\n},{\"../../../utils\":114,\"../../kernel-value\":35}],60:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueInteger extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueInteger\n};\n},{\"../../../utils\":114,\"./index\":59}],61:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nconst sameError = `Source and destination textures are the same.  Use immutable = true and manually cleanup kernel output texture memory with texture.delete()`;\n\nclass WebGLKernelValueMemoryOptimizedNumberTexture extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    this.dimensions = value.dimensions;\n    this.textureSize = value.size;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  setup() {\n    this.setupTexture();\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n\n    const { kernel, context: gl } = this;\n    if (kernel.pipeline) {\n      if (kernel.immutable) {\n        kernel.updateTextureArgumentRefs(this, inputTexture);\n      } else {\n        if (kernel.texture && kernel.texture.texture === inputTexture.texture) {\n          throw new Error(sameError);\n        } else if (kernel.mappedTextures) {\n          const { mappedTextures } = kernel;\n          for (let i = 0; i < mappedTextures.length; i++) {\n            if (mappedTextures[i].texture === inputTexture.texture) {\n              throw new Error(sameError);\n            }\n          }\n        }\n      }\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueMemoryOptimizedNumberTexture,\n  sameError\n};\n},{\"../../../utils\":114,\"./array\":40}],62:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\nconst { sameError } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueNumberTexture extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    const { size: textureSize, dimensions } = value;\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = dimensions;\n    this.textureSize = textureSize;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  setup() {\n    this.setupTexture();\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n\n    const { kernel, context: gl } = this;\n    if (kernel.pipeline) {\n      if (kernel.immutable) {\n        kernel.updateTextureArgumentRefs(this, inputTexture);\n      } else {\n        if (kernel.texture && kernel.texture.texture === inputTexture.texture) {\n          throw new Error(sameError);\n        } else if (kernel.mappedTextures) {\n          const { mappedTextures } = kernel;\n          for (let i = 0; i < mappedTextures.length; i++) {\n            if (mappedTextures[i].texture === inputTexture.texture) {\n              throw new Error(sameError);\n            }\n          }\n        }\n      }\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueNumberTexture\n};\n},{\"../../../utils\":114,\"./array\":40,\"./memory-optimized-number-texture\":61}],63:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray\n};\n},{\"../../../utils\":114,\"./array\":40}],64:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray1DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], 1, 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten2dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray1DI\n};\n},{\"../../../utils\":114,\"./array\":40}],65:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray2DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten3dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2DI\n};\n},{\"../../../utils\":114,\"./array\":40}],66:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray3DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], valueDimensions[3]]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten4dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3DI\n};\n},{\"../../../utils\":114,\"./array\":40}],67:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleInput extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}.value, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(input.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleInput\n};\n},{\"../../../utils\":114,\"./array\":40}],68:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueUnsignedArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.TranserArrayType = this.getTransferArrayType(value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedArray\n};\n},{\"../../../utils\":114,\"./array\":40}],69:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueUnsignedInput extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = this.getBitRatio(value);\n    const [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.TranserArrayType = this.getTransferArrayType(value.value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}.value, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedInput\n};\n},{\"../../../utils\":114,\"./array\":40}],70:[function(require,module,exports){\nconst { GLKernel } = require('../gl/kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { WebGLFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst mrud = require('../../plugins/math-random-uniformly-distributed');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { glKernelString } = require('../gl/kernel-string');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nconst plugins = [mrud];\nconst canvases = [];\nconst maxTexSizes = {};\n\n\nclass WebGLKernel extends GLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl') || testCanvas.getContext('experimental-webgl');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      OES_texture_float: testContext.getExtension('OES_texture_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGLRenderingContext !== 'undefined') {\n      return context instanceof WebGLRenderingContext;\n    }\n    return false;\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.program = null;\n    this.pipeline = settings.pipeline;\n    this.endianness = utils.systemEndianness();\n    this.extensions = {};\n    this.argumentTextureCount = 0;\n    this.constantTextureCount = 0;\n    this.fragShader = null;\n    this.vertShader = null;\n    this.drawBuffersMap = null;\n\n    this.maxTexSize = null;\n    this.onRequestSwitchKernel = null;\n\n    this.texture = null;\n    this.mappedTextures = null;\n    this.mergeSettings(source.settings || settings);\n\n    this.threadDim = null;\n    this.framebuffer = null;\n    this.buffer = null;\n\n    this.textureCache = [];\n    this.programUniformLocationCache = {};\n    this.uniform1fCache = {};\n    this.uniform1iCache = {};\n    this.uniform2fCache = {};\n    this.uniform2fvCache = {};\n    this.uniform2ivCache = {};\n    this.uniform3fvCache = {};\n    this.uniform3ivCache = {};\n    this.uniform4fvCache = {};\n    this.uniform4ivCache = {};\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      const canvas = document.createElement('canvas');\n      canvas.width = 2;\n      canvas.height = 2;\n      return canvas;\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl', settings) || this.canvas.getContext('experimental-webgl', settings);\n  }\n\n  initPlugins(settings) {\n    const pluginsToUse = [];\n    const { source } = this;\n    if (typeof source === 'string') {\n      for (let i = 0; i < plugins.length; i++) {\n        const plugin = plugins[i];\n        if (source.match(plugin.functionMatch)) {\n          pluginsToUse.push(plugin);\n        }\n      }\n    } else if (typeof source === 'object') {\n      if (settings.pluginNames) { \n        for (let i = 0; i < plugins.length; i++) {\n          const plugin = plugins[i];\n          const usePlugin = settings.pluginNames.some(pluginName => pluginName === plugin.name);\n          if (usePlugin) {\n            pluginsToUse.push(plugin);\n          }\n        }\n      }\n    }\n    return pluginsToUse;\n  }\n\n  initExtensions() {\n    this.extensions = {\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n      WEBGL_color_buffer_float: this.context.getExtension('WEBGL_color_buffer_float'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n\n    if (this.optimizeFloatMemory === true && !features.isTextureFloat) {\n      throw new Error('Float textures are not supported');\n    } else if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Single precision not supported');\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.subKernels && this.subKernels.length > 0 && !this.extensions.WEBGL_draw_buffers) {\n      throw new Error('could not instantiate draw buffers extension');\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'precision') {\n        this.precision = 'unsigned';\n        console.warn('Cannot use graphical mode and single precision at the same time');\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  updateMaxTexSize() {\n    const { texSize, canvas } = this;\n    if (this.maxTexSize === null) {\n      let canvasIndex = canvases.indexOf(canvas);\n      if (canvasIndex === -1) {\n        canvasIndex = canvases.length;\n        canvases.push(canvas);\n        maxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\n      }\n      this.maxTexSize = maxTexSizes[canvasIndex];\n    }\n    if (this.maxTexSize[0] < texSize[0]) {\n      this.maxTexSize[0] = texSize[0];\n    }\n    if (this.maxTexSize[1] < texSize[1]) {\n      this.maxTexSize[1] = texSize[1];\n    }\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    this.argumentTextureCount = 0;\n    const needsArgumentTypes = this.argumentTypes === null;\n    if (needsArgumentTypes) {\n      this.argumentTypes = [];\n    }\n    this.argumentSizes = [];\n    this.argumentBitRatios = [];\n\n    if (args.length < this.argumentNames.length) {\n      throw new Error('not enough arguments for kernel');\n    } else if (args.length > this.argumentNames.length) {\n      throw new Error('too many arguments for kernel');\n    }\n\n    const { context: gl } = this;\n    let textureIndexes = 0;\n\n    const onRequestTexture = () => {\n      return this.createTexture();\n    };\n    const onRequestIndex = () => {\n      return this.constantTextureCount + textureIndexes++;\n    };\n    const onUpdateValueMismatch = (constructor) => {\n      this.switchKernels({\n        type: 'argumentMismatch',\n        needed: constructor\n      });\n    };\n    const onRequestContextHandle = () => {\n      return gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount++;\n    };\n\n    for (let index = 0; index < args.length; index++) {\n      const value = args[index];\n      const name = this.argumentNames[index];\n      let type;\n      if (needsArgumentTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.argumentTypes.push(type);\n      } else {\n        type = this.argumentTypes[index];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, this.dynamicArguments ? 'dynamic' : 'static', this.precision, args[index]);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelArgument = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'user',\n        context: gl,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture,\n        onRequestIndex,\n        onUpdateValueMismatch,\n        onRequestContextHandle,\n      });\n      this.kernelArguments.push(kernelArgument);\n      kernelArgument.setup();\n      this.argumentSizes.push(kernelArgument.textureSize);\n      this.argumentBitRatios[index] = kernelArgument.bitRatio;\n    }\n  }\n\n  createTexture() {\n    const texture = this.context.createTexture();\n    this.textureCache.push(texture);\n    return texture;\n  }\n\n  setupConstants(args) {\n    const { context: gl } = this;\n    this.kernelConstants = [];\n    this.forceUploadKernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    let textureIndexes = 0;\n    for (const name in this.constants) {\n      const value = this.constants[name];\n      let type;\n      if (needsConstantTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.constantTypes[name] = type;\n      } else {\n        type = this.constantTypes[name];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, 'static', this.precision, value);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelValue = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'constants',\n        context: this.context,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture: () => {\n          return this.createTexture();\n        },\n        onRequestIndex: () => {\n          return textureIndexes++;\n        },\n        onRequestContextHandle: () => {\n          return gl.TEXTURE0 + this.constantTextureCount++;\n        }\n      });\n      this.constantBitRatios[name] = kernelValue.bitRatio;\n      this.kernelConstants.push(kernelValue);\n      kernelValue.setup();\n      if (kernelValue.forceUploadEachRun) {\n        this.forceUploadKernelConstants.push(kernelValue);\n      }\n    }\n  }\n\n  build() {\n    if (this.built) return;\n    this.initExtensions();\n    this.validateSettings(arguments);\n    this.setupConstants(arguments);\n    if (this.fallbackRequested) return;\n    this.setupArguments(arguments);\n    if (this.fallbackRequested) return;\n    this.updateMaxTexSize();\n    this.translateSource();\n    const failureResult = this.pickRenderStrategy(arguments);\n    if (failureResult) {\n      return failureResult;\n    }\n    const { texSize, context: gl, canvas } = this;\n    gl.enable(gl.SCISSOR_TEST);\n    if (this.pipeline && this.precision === 'single') {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    } else {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    }\n    const threadDim = this.threadDim = Array.from(this.output);\n    while (threadDim.length < 3) {\n      threadDim.push(1);\n    }\n\n    const compiledVertexShader = this.getVertexShader(arguments);\n    const vertShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertShader, compiledVertexShader);\n    gl.compileShader(vertShader);\n    this.vertShader = vertShader;\n\n    const compiledFragmentShader = this.getFragmentShader(arguments);\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragShader, compiledFragmentShader);\n    gl.compileShader(fragShader);\n    this.fragShader = fragShader;\n\n    if (this.debug) {\n      console.log('GLSL Shader Output:');\n      console.log(compiledFragmentShader);\n    }\n\n    if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling vertex shader: ' + gl.getShaderInfoLog(vertShader));\n    }\n    if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling fragment shader: ' + gl.getShaderInfoLog(fragShader));\n    }\n\n    const program = this.program = gl.createProgram();\n    gl.attachShader(program, vertShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    this.framebuffer = gl.createFramebuffer();\n    this.framebuffer.width = texSize[0];\n    this.framebuffer.height = texSize[1];\n    this.rawValueFramebuffers = {};\n\n    const vertices = new Float32Array([-1, -1,\n      1, -1, -1, 1,\n      1, 1\n    ]);\n    const texCoords = new Float32Array([\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1\n    ]);\n\n    const texCoordOffset = vertices.byteLength;\n\n    let buffer = this.buffer;\n    if (!buffer) {\n      buffer = this.buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    }\n\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n    gl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\n\n    const aPosLoc = gl.getAttribLocation(this.program, 'aPos');\n    gl.enableVertexAttribArray(aPosLoc);\n    gl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, false, 0, 0);\n    const aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\n    gl.enableVertexAttribArray(aTexCoordLoc);\n    gl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, false, 0, texCoordOffset);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n    let i = 0;\n    gl.useProgram(this.program);\n    for (let p in this.constants) {\n      this.kernelConstants[i++].updateValue(this.constants[p]);\n    }\n\n    this._setupOutputTexture();\n    if (\n      this.subKernels !== null &&\n      this.subKernels.length > 0\n    ) {\n      this._mappedTextureSwitched = {};\n      this._setupSubOutputTextures();\n    }\n    this.buildSignature(arguments);\n    this.built = true;\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  setupReturnTypes(functionBuilder) {\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n\n    if (this.subKernels && this.subKernels.length > 0) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const subKernel = this.subKernels[i];\n        if (!subKernel.returnType) {\n          subKernel.returnType = functionBuilder.getSubKernelResultType(i);\n        }\n      }\n    }\n  }\n\n  run() {\n    const { kernelArguments, texSize, forceUploadKernelConstants, context: gl } = this;\n\n    gl.useProgram(this.program);\n    gl.scissor(0, 0, texSize[0], texSize[1]);\n    if (this.dynamicOutput) {\n      this.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\n      this.setUniform2iv('uTexSize', texSize);\n    }\n\n    this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n    for (let i = 0; i < forceUploadKernelConstants.length; i++) {\n      const constant = forceUploadKernelConstants[i];\n      constant.updateValue(this.constants[constant.name]);\n      if (this.switchingKernels) return;\n    }\n    for (let i = 0; i < kernelArguments.length; i++) {\n      kernelArguments[i].updateValue(arguments[i]);\n      if (this.switchingKernels) return;\n    }\n\n    if (this.plugins) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.onBeforeRun) {\n          plugin.onBeforeRun(this);\n        }\n      }\n    }\n\n    if (this.graphical) {\n      if (this.pipeline) {\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        if (this.immutable) {\n          this._replaceOutputTexture();\n        }\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        return this.immutable ? this.texture.clone() : this.texture;\n      }\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n      return;\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    if (this.immutable) {\n      this._replaceOutputTexture();\n    }\n\n    if (this.subKernels !== null) {\n      if (this.immutable) {\n        this._replaceSubOutputTextures();\n      }\n      this.drawBuffers();\n    }\n\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  drawBuffers() {\n    this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap);\n  }\n\n  getInternalFormat() {\n    return this.context.RGBA;\n  }\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n\n  _replaceOutputTexture() {\n    if (this.texture.beforeMutate() || this._textureSwitched) {\n      const gl = this.context;\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      this._textureSwitched = false;\n    }\n  }\n\n  _setupOutputTexture() {\n    const gl = this.context;\n    const texSize = this.texSize;\n    if (this.texture) {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    const texture = this.createTexture();\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _replaceSubOutputTextures() {\n    const gl = this.context;\n    for (let i = 0; i < this.mappedTextures.length; i++) {\n      const mappedTexture = this.mappedTextures[i];\n      if (mappedTexture.beforeMutate() || this._mappedTextureSwitched[i]) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, mappedTexture.texture, 0);\n        this._mappedTextureSwitched[i] = false;\n      }\n    }\n  }\n\n  _setupSubOutputTextures() {\n    const gl = this.context;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);\n      }\n      return;\n    }\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      if (this.precision === 'single') {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  setUniform1f(name, value) {\n    if (this.uniform1fCache.hasOwnProperty(name)) {\n      const cache = this.uniform1fCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1fCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1f(loc, value);\n  }\n\n  setUniform1i(name, value) {\n    if (this.uniform1iCache.hasOwnProperty(name)) {\n      const cache = this.uniform1iCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1iCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1i(loc, value);\n  }\n\n  setUniform2f(name, value1, value2) {\n    if (this.uniform2fCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fCache[name];\n      if (\n        value1 === cache[0] &&\n        value2 === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fCache[name] = [value1, value2];\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2f(loc, value1, value2);\n  }\n\n  setUniform2fv(name, value) {\n    if (this.uniform2fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2fv(loc, value);\n  }\n\n  setUniform2iv(name, value) {\n    if (this.uniform2ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform2ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2iv(loc, value);\n  }\n\n  setUniform3fv(name, value) {\n    if (this.uniform3fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform3fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3fv(loc, value);\n  }\n\n  setUniform3iv(name, value) {\n    if (this.uniform3ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform3ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3iv(loc, value);\n  }\n\n  setUniform4fv(name, value) {\n    if (this.uniform4fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform4fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4fv(loc, value);\n  }\n\n  setUniform4iv(name, value) {\n    if (this.uniform4ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform4ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4iv(loc, value);\n  }\n\n  getUniformLocation(name) {\n    if (this.programUniformLocationCache.hasOwnProperty(name)) {\n      return this.programUniformLocationCache[name];\n    }\n    return this.programUniformLocationCache[name] = this.context.getUniformLocation(this.program, name);\n  }\n\n  _getFragShaderArtifactMap(args) {\n    return {\n      HEADER: this._getHeaderString(),\n      LOOP_MAX: this._getLoopMaxString(),\n      PLUGINS: this._getPluginsString(),\n      CONSTANTS: this._getConstantsString(),\n      DECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\n      ENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\n      DIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),\n      INJECTED_NATIVE: this._getInjectedNative(),\n      MAIN_CONSTANTS: this._getMainConstantsString(),\n      MAIN_ARGUMENTS: this._getMainArgumentsString(args),\n      KERNEL: this.getKernelString(),\n      MAIN_RESULT: this.getMainResultString(),\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getVertShaderArtifactMap(args) {\n    return {\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getHeaderString() {\n    return (\n      this.subKernels !== null ?\n      '#extension GL_EXT_draw_buffers : require\\n' :\n      ''\n    );\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${parseInt(this.loopMaxIterations)};\\n` :\n      ' 1000;\\n'\n    );\n  }\n\n  _getPluginsString() {\n    if (!this.plugins) return '\\n';\n    return this.plugins.map(plugin => plugin.source && this.source.match(plugin.functionMatch) ? plugin.source : '').join('\\n');\n  }\n\n  _getConstantsString() {\n    const result = [];\n    const { threadDim, texSize } = this;\n    if (this.dynamicOutput) {\n      result.push(\n        'uniform ivec3 uOutputDim',\n        'uniform ivec2 uTexSize'\n      );\n    } else {\n      result.push(\n        `ivec3 uOutputDim = ivec3(${threadDim[0]}, ${threadDim[1]}, ${threadDim[2]})`,\n        `ivec2 uTexSize = ivec2(${texSize[0]}, ${texSize[1]})`\n      );\n    }\n    return utils.linesToString(result);\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    if (subKernels === null || subKernels.length < 1) {\n      return 'varying vec2 vTexCoord;\\n';\n    } else {\n      return 'out vec2 vTexCoord;\\n';\n    }\n  }\n\n  _getDecode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getEncode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getDivideWithIntegerCheckString() {\n    return this.fixIntegerDivisionAccuracy ?\n      `float divWithIntCheck(float x, float y) {\n  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\n    return float(int(x) / int(y));\n  }\n  return x / y;\n}\n\nfloat integerCorrectionModulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -(number - (divisor * floor(divWithIntCheck(number, divisor))));\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return number - (divisor * floor(divWithIntCheck(number, divisor)));\n}` :\n      '';\n  }\n\n  _getMainArgumentsString(args) {\n    const results = [];\n    const { argumentNames } = this;\n    for (let i = 0; i < argumentNames.length; i++) {\n      results.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return results.join('');\n  }\n\n  _getInjectedNative() {\n    return this.injectedNative || '';\n  }\n\n  _getMainConstantsString() {\n    const result = [];\n    const { constants } = this;\n    if (constants) {\n      let i = 0;\n      for (const name in constants) {\n        if (!this.constants.hasOwnProperty(name)) continue;\n        result.push(this.kernelConstants[i++].getSource(this.constants[name]));\n      }\n    }\n    return result.join('');\n  }\n\n  getRawValueFramebuffer(width, height) {\n    if (!this.rawValueFramebuffers[width]) {\n      this.rawValueFramebuffers[width] = {};\n    }\n    if (!this.rawValueFramebuffers[width][height]) {\n      const framebuffer = this.context.createFramebuffer();\n      framebuffer.width = width;\n      framebuffer.height = height;\n      this.rawValueFramebuffers[width][height] = framebuffer;\n    }\n    return this.rawValueFramebuffers[width][height];\n  }\n\n  getKernelResultDeclaration() {\n    switch (this.returnType) {\n      case 'Array(2)':\n        return 'vec2 kernelResult';\n      case 'Array(3)':\n        return 'vec3 kernelResult';\n      case 'Array(4)':\n        return 'vec4 kernelResult';\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Number':\n      case 'Integer':\n        return 'float kernelResult';\n      default:\n        if (this.graphical) {\n          return 'float kernelResult';\n        } else {\n          throw new Error(`unrecognized output type \"${ this.returnType }\"`);\n        }\n    }\n  }\n  getKernelString() {\n    const result = [this.getKernelResultDeclaration()];\n    const { subKernels } = this;\n    if (subKernels !== null) {\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n      }\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragColor = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultMemoryOptimizedFloats() {\n    const result = [\n      '  index *= 4',\n    ];\n\n    switch (this.returnType) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        const channels = ['r', 'g', 'b', 'a'];\n        for (let i = 0; i < channels.length; i++) {\n          const channel = channels[i];\n          this.getMainResultKernelMemoryOptimizedFloats(result, channel);\n          this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\n          if (i + 1 < channels.length) {\n            result.push('  index += 1');\n          }\n        }\n        break;\n      default:\n        throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`);\n    }\n\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0].${channel} = kernelResult`\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = float(subKernelResult_${this.subKernels[i].name})`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = subKernelResult_${this.subKernels[i].name}`\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n      '  gl_FragData[0][2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n        `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    switch (this.returnType) {\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          const subKernel = this.subKernels[i];\n          if (subKernel.returnType === 'Integer') {\n            result.push(\n              `  gl_FragData[${i + 1}] = float(subKernelResult_${this.subKernels[i].name})`\n            );\n          } else {\n            result.push(\n              `  gl_FragData[${i + 1}] = subKernelResult_${this.subKernels[i].name}`\n            );\n          }\n        }\n        break;\n      case 'Array(2)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`\n          );\n        }\n        break;\n      case 'Array(3)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`\n          );\n        }\n        break;\n      case 'Array(4)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n            `  gl_FragData[${i + 1}][3] = subKernelResult_${this.subKernels[i].name}[3]`\n          );\n        }\n        break;\n    }\n\n    return result;\n  }\n\n  replaceArtifacts(src, map) {\n    return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z]*[0-9]?)*)__;\\n/g, (match, artifact) => {\n      if (map.hasOwnProperty(artifact)) {\n        return map[artifact];\n      }\n      throw `unhandled artifact ${artifact}`;\n    });\n  }\n\n  getFragmentShader(args) {\n    if (this.compiledFragmentShader !== null) {\n      return this.compiledFragmentShader;\n    }\n    return this.compiledFragmentShader = this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShaderArtifactMap(args));\n  }\n\n  getVertexShader(args) {\n    if (this.compiledVertexShader !== null) {\n      return this.compiledVertexShader;\n    }\n    return this.compiledVertexShader = this.replaceArtifacts(this.constructor.vertexShader, this._getVertShaderArtifactMap(args));\n  }\n\n  toString() {\n    const setupContextString = utils.linesToString([\n      `const gl = context`,\n    ]);\n    return glKernelString(this.constructor, arguments, this, setupContextString);\n  }\n\n  destroy(removeCanvasReferences) {\n    if (!this.context) return;\n    if (this.buffer) {\n      this.context.deleteBuffer(this.buffer);\n    }\n    if (this.framebuffer) {\n      this.context.deleteFramebuffer(this.framebuffer);\n    }\n    for (const width in this.rawValueFramebuffers) {\n      for (const height in this.rawValueFramebuffers[width]) {\n        this.context.deleteFramebuffer(this.rawValueFramebuffers[width][height]);\n        delete this.rawValueFramebuffers[width][height];\n      }\n      delete this.rawValueFramebuffers[width];\n    }\n    if (this.vertShader) {\n      this.context.deleteShader(this.vertShader);\n    }\n    if (this.fragShader) {\n      this.context.deleteShader(this.fragShader);\n    }\n    if (this.program) {\n      this.context.deleteProgram(this.program);\n    }\n    if (this.texture) {\n      this.texture.delete();\n      const textureCacheIndex = this.textureCache.indexOf(this.texture.texture);\n      if (textureCacheIndex > -1) {\n        this.textureCache.splice(textureCacheIndex, 1);\n      }\n      this.texture = null;\n    }\n    if (this.mappedTextures && this.mappedTextures.length) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        const mappedTexture = this.mappedTextures[i];\n        mappedTexture.delete();\n        const textureCacheIndex = this.textureCache.indexOf(mappedTexture.texture);\n        if (textureCacheIndex > -1) {\n          this.textureCache.splice(textureCacheIndex, 1);\n        }\n      }\n      this.mappedTextures = null;\n    }\n    if (this.kernelArguments) {\n      for (let i = 0; i < this.kernelArguments.length; i++) {\n        this.kernelArguments[i].destroy();\n      }\n    }\n    if (this.kernelConstants) {\n      for (let i = 0; i < this.kernelConstants.length; i++) {\n        this.kernelConstants[i].destroy();\n      }\n    }\n    while (this.textureCache.length > 0) {\n      const texture = this.textureCache.pop();\n      this.context.deleteTexture(texture);\n    }\n    if (removeCanvasReferences) {\n      const idx = canvases.indexOf(this.canvas);\n      if (idx >= 0) {\n        canvases[idx] = null;\n        maxTexSizes[idx] = null;\n      }\n    }\n    this.destroyExtensions();\n    delete this.context;\n    delete this.canvas;\n    if (!this.gpu) return;\n    const i = this.gpu.kernels.indexOf(this);\n    if (i === -1) return;\n    this.gpu.kernels.splice(i, 1);\n  }\n\n  destroyExtensions() {\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('WEBGL_lose_context');\n    if (extension) {\n      extension.loseContext();\n    }\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGLFunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGLKernel\n};\n},{\"../../plugins/math-random-uniformly-distributed\":112,\"../../utils\":114,\"../function-builder\":9,\"../gl/kernel\":13,\"../gl/kernel-string\":12,\"./fragment-shader\":37,\"./function-node\":38,\"./kernel-value-maps\":39,\"./vertex-shader\":71}],71:[function(require,module,exports){\nconst vertexShader = `__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nattribute vec2 aPos;\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],72:[function(require,module,exports){\nconst fragmentShader = `#version 300 es\n__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n__SAMPLER_2D_ARRAY_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nin vec2 vTexCoord;\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat expm1(float x) {\n  return pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x/y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  return texel[channel] * 255.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  index = index / 4;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return texel[channel];\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, st / vec2(texSize));\n}\n\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, vec3(st / vec2(texSize), z));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n\n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],73:[function(require,module,exports){\nconst { utils } = require('../../utils');\nconst { WebGLFunctionNode } = require('../web-gl/function-node');\n\nclass WebGL2FunctionNode extends WebGLFunctionNode {\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    const type = this.getType(idtNode);\n\n    const name = utils.sanitizeName(idtNode.name);\n    if (idtNode.name === 'Infinity') {\n      retArr.push('intBitsToFloat(2139095039)');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(name) > -1) {\n        retArr.push(`bool(user_${name})`);\n      } else {\n        retArr.push(`user_${name}`);\n      }\n    } else {\n      retArr.push(`user_${name}`);\n    }\n\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  WebGL2FunctionNode\n};\n},{\"../../utils\":114,\"../web-gl/function-node\":38}],74:[function(require,module,exports){\nconst { WebGL2KernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGL2KernelValueFloat } = require('./kernel-value/float');\nconst { WebGL2KernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGL2KernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGL2KernelValueHTMLImageArray } = require('./kernel-value/html-image-array');\nconst { WebGL2KernelValueDynamicHTMLImageArray } = require('./kernel-value/dynamic-html-image-array');\n\nconst { WebGL2KernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGL2KernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGL2KernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGL2KernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGL2KernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGL2KernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGL2KernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGL2KernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGL2KernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGL2KernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGL2KernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGL2KernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGL2KernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGL2KernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGL2KernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGL2KernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGL2KernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGL2KernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGL2KernelValueArray2 } = require('./kernel-value/array2');\nconst { WebGL2KernelValueArray3 } = require('./kernel-value/array3');\nconst { WebGL2KernelValueArray4 } = require('./kernel-value/array4');\n\nconst { WebGL2KernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGL2KernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicUnsignedArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGL2KernelValueDynamicHTMLImage,\n      'ImageData': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueUnsignedArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueUnsignedInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueHTMLImage,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'ImageBitmap': WebGL2KernelValueHTMLImage,\n      'ImageData': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicSingleArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Input': WebGL2KernelValueDynamicSingleInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGL2KernelValueDynamicHTMLImage,\n      'ImageData': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueSingleArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueSingleArray3DI,\n      'Input': WebGL2KernelValueSingleInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueHTMLImage,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'ImageBitmap': WebGL2KernelValueHTMLImage,\n      'ImageData': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  kernelValueMaps,\n  lookupKernelValueType\n};\n},{\"./kernel-value/array2\":75,\"./kernel-value/array3\":76,\"./kernel-value/array4\":77,\"./kernel-value/boolean\":78,\"./kernel-value/dynamic-html-image\":80,\"./kernel-value/dynamic-html-image-array\":79,\"./kernel-value/dynamic-html-video\":81,\"./kernel-value/dynamic-memory-optimized-number-texture\":82,\"./kernel-value/dynamic-number-texture\":83,\"./kernel-value/dynamic-single-array\":84,\"./kernel-value/dynamic-single-array1d-i\":85,\"./kernel-value/dynamic-single-array2d-i\":86,\"./kernel-value/dynamic-single-array3d-i\":87,\"./kernel-value/dynamic-single-input\":88,\"./kernel-value/dynamic-unsigned-array\":89,\"./kernel-value/dynamic-unsigned-input\":90,\"./kernel-value/float\":91,\"./kernel-value/html-image\":93,\"./kernel-value/html-image-array\":92,\"./kernel-value/html-video\":94,\"./kernel-value/integer\":95,\"./kernel-value/memory-optimized-number-texture\":96,\"./kernel-value/number-texture\":97,\"./kernel-value/single-array\":98,\"./kernel-value/single-array1d-i\":99,\"./kernel-value/single-array2d-i\":100,\"./kernel-value/single-array3d-i\":101,\"./kernel-value/single-input\":102,\"./kernel-value/unsigned-array\":103,\"./kernel-value/unsigned-input\":104}],75:[function(require,module,exports){\nconst { WebGLKernelValueArray2 } = require('../../web-gl/kernel-value/array2');\n\nclass WebGL2KernelValueArray2 extends WebGLKernelValueArray2 {}\n\nmodule.exports = {\n  WebGL2KernelValueArray2\n};\n},{\"../../web-gl/kernel-value/array2\":41}],76:[function(require,module,exports){\nconst { WebGLKernelValueArray3 } = require('../../web-gl/kernel-value/array3');\n\nclass WebGL2KernelValueArray3 extends WebGLKernelValueArray3 {}\n\nmodule.exports = {\n  WebGL2KernelValueArray3\n};\n},{\"../../web-gl/kernel-value/array3\":42}],77:[function(require,module,exports){\nconst { WebGLKernelValueArray4 } = require('../../web-gl/kernel-value/array4');\n\nclass WebGL2KernelValueArray4 extends WebGLKernelValueArray4 {}\n\nmodule.exports = {\n  WebGL2KernelValueArray4\n};\n},{\"../../web-gl/kernel-value/array4\":43}],78:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('../../web-gl/kernel-value/boolean');\n\nclass WebGL2KernelValueBoolean extends WebGLKernelValueBoolean {}\n\nmodule.exports = {\n  WebGL2KernelValueBoolean\n};\n},{\"../../web-gl/kernel-value/boolean\":44}],79:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImageArray } = require('./html-image-array');\n\nclass WebGL2KernelValueDynamicHTMLImageArray extends WebGL2KernelValueHTMLImageArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { width, height } = images[0];\n    this.checkSize(width, height);\n    this.dimensions = [width, height, images.length];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(images);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImageArray\n};\n},{\"../../../utils\":114,\"./html-image-array\":92}],80:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicHTMLImage } = require('../../web-gl/kernel-value/dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLImage extends WebGLKernelValueDynamicHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-html-image\":45}],81:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLVideo extends WebGL2KernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLVideo\n};\n},{\"../../../utils\":114,\"./dynamic-html-image\":80}],82:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/dynamic-memory-optimized-number-texture');\n\nclass WebGL2KernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueDynamicMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-memory-optimized-number-texture\":47}],83:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicNumberTexture } = require('../../web-gl/kernel-value/dynamic-number-texture');\n\nclass WebGL2KernelValueDynamicNumberTexture extends WebGLKernelValueDynamicNumberTexture {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-number-texture\":48}],84:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray } = require('../../web-gl2/kernel-value/single-array');\n\nclass WebGL2KernelValueDynamicSingleArray extends WebGL2KernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array\":98}],85:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray1DI } = require('../../web-gl2/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueDynamicSingleArray1DI extends WebGL2KernelValueSingleArray1DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array1d-i\":99}],86:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray2DI } = require('../../web-gl2/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueDynamicSingleArray2DI extends WebGL2KernelValueSingleArray2DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array2d-i\":100}],87:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray3DI } = require('../../web-gl2/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueDynamicSingleArray3DI extends WebGL2KernelValueSingleArray3DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array3d-i\":101}],88:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleInput } = require('../../web-gl2/kernel-value/single-input');\n\nclass WebGL2KernelValueDynamicSingleInput extends WebGL2KernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleInput\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-input\":102}],89:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('../../web-gl/kernel-value/dynamic-unsigned-array');\n\nclass WebGL2KernelValueDynamicUnsignedArray extends WebGLKernelValueDynamicUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-unsigned-array\":54}],90:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('../../web-gl/kernel-value/dynamic-unsigned-input');\n\nclass WebGL2KernelValueDynamicUnsignedInput extends WebGLKernelValueDynamicUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-unsigned-input\":55}],91:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueFloat } = require('../../web-gl/kernel-value/float');\n\nclass WebGL2KernelValueFloat extends WebGLKernelValueFloat {}\n\nmodule.exports = {\n  WebGL2KernelValueFloat\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/float\":56}],92:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('../../web-gl/kernel-value/array');\n\nclass WebGL2KernelValueHTMLImageArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.checkSize(value[0].width, value[0].height);\n    this.dimensions = [value[0].width, value[0].height, value.length];\n    this.textureSize = [value[0].width, value[0].height];\n  }\n  defineTexture() {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage3D(\n      gl.TEXTURE_2D_ARRAY,\n      0,\n      gl.RGBA,\n      images[0].width,\n      images[0].height,\n      images.length,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      null\n    );\n    for (let i = 0; i < images.length; i++) {\n      const xOffset = 0;\n      const yOffset = 0;\n      const imageDepth = 1;\n      gl.texSubImage3D(\n        gl.TEXTURE_2D_ARRAY,\n        0,\n        xOffset,\n        yOffset,\n        i,\n        images[i].width,\n        images[i].height,\n        imageDepth,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.uploadValue = images[i]\n      );\n    }\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImageArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/array\":40}],93:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('../../web-gl/kernel-value/html-image');\n\nclass WebGL2KernelValueHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImage\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/html-image\":57}],94:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImage } = require('./html-image');\n\nclass WebGL2KernelValueHTMLVideo extends WebGL2KernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLVideo\n};\n},{\"../../../utils\":114,\"./html-image\":93}],95:[function(require,module,exports){\nconst { WebGLKernelValueInteger } = require('../../web-gl/kernel-value/integer');\n\nclass WebGL2KernelValueInteger extends WebGLKernelValueInteger {\n  getSource(value) {\n    const variablePrecision = this.getVariablePrecisionString();\n    if (this.origin === 'constants') {\n      return `const ${ variablePrecision } int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform ${ variablePrecision } int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueInteger\n};\n},{\"../../web-gl/kernel-value/integer\":60}],96:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/memory-optimized-number-texture');\n\nclass WebGL2KernelValueMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/memory-optimized-number-texture\":61}],97:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('../../web-gl/kernel-value/number-texture');\n\nclass WebGL2KernelValueNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/number-texture\":62}],98:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('../../web-gl/kernel-value/single-array');\n\nclass WebGL2KernelValueSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array\":63}],99:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('../../web-gl/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray1DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array1d-i\":64}],100:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('../../web-gl/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array2d-i\":65}],101:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('../../web-gl/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array3d-i\":66}],102:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('../../web-gl/kernel-value/single-input');\n\nclass WebGL2KernelValueSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-input\":67}],103:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('../../web-gl/kernel-value/unsigned-array');\n\nclass WebGL2KernelValueUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/unsigned-array\":68}],104:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('../../web-gl/kernel-value/unsigned-input');\n\nclass WebGL2KernelValueUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/unsigned-input\":69}],105:[function(require,module,exports){\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { WebGL2FunctionNode } = require('./function-node');\nconst { FunctionBuilder } = require('../function-builder');\nconst { utils } = require('../../utils');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\n\nlet features = null;\n\nclass WebGL2Kernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl2');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      EXT_color_buffer_float: testContext.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGL2RenderingContext !== 'undefined') {\n      return context instanceof WebGL2RenderingContext;\n    }\n    return false;\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isSpeedTacticSupported: this.getIsSpeedTacticSupported(),\n      kernelMap: true,\n      isTextureFloat: true,\n      isDrawBuffers: true,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static getIsTextureFloat() {\n    return true;\n  }\n\n  static getChannelCount() {\n    return testContext.getParameter(testContext.MAX_DRAW_BUFFERS);\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl2', settings);\n  }\n\n  initExtensions() {\n    this.extensions = {\n      EXT_color_buffer_float: this.context.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n    if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Float texture outputs are not supported');\n    } else if (!this.graphical && this.precision === null) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'single') {\n        console.warn('Cannot use graphical mode and single precision at the same time');\n        this.precision = 'unsigned';\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGL2FunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  drawBuffers() {\n    this.context.drawBuffers(this.drawBuffersMap);\n  }\n\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.R32F:\n        return gl.RED;\n      case gl.RG32F:\n        return gl.RG;\n      case gl.RGBA32F:\n        return gl.RGBA;\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n  getInternalFormat() {\n    const { context: gl } = this;\n\n    if (this.precision === 'single') {\n      if (this.pipeline) {\n        switch (this.returnType) {\n          case 'Number':\n          case 'Float':\n          case 'Integer':\n            if (this.optimizeFloatMemory) {\n              return gl.RGBA32F;\n            } else {\n              return gl.R32F;\n            }\n            case 'Array(2)':\n              return gl.RG32F;\n            case 'Array(3)': \n            case 'Array(4)':\n              return gl.RGBA32F;\n            default:\n              throw new Error('Unhandled return type');\n        }\n      }\n      return gl.RGBA32F;\n    }\n    return gl.RGBA;\n  }\n\n  _setupOutputTexture() {\n    const gl = this.context;\n    if (this.texture) {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    const texture = gl.createTexture();\n    const texSize = this.texSize;\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _setupSubOutputTextures() {\n    const gl = this.context;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);\n      }\n      return;\n    }\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      const format = this.getInternalFormat();\n      if (this.precision === 'single') {\n        gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  _getHeaderString() {\n    return '';\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    if (subKernels === null || subKernels.length < 1) {\n      return `in ${ variablePrecision } vec2 vTexCoord;\\n`;\n    } else {\n      return `out ${ variablePrecision } vec2 vTexCoord;\\n`;\n    }\n  }\n\n  _getMainArgumentsString(args) {\n    const result = [];\n    const argumentNames = this.argumentNames;\n    for (let i = 0; i < argumentNames.length; i++) {\n      result.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return result.join('');\n  }\n\n  getKernelString() {\n    const result = [this.getKernelResultDeclaration()];\n    const subKernels = this.subKernels;\n    if (subKernels !== null) {\n      result.push(\n        'layout(location = 0) out vec4 data0'\n      );\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n      }\n    } else {\n      result.push(\n        'out vec4 data0'\n      );\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0 = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0.${channel} = kernelResult`\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}.${channel} = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  data${i + 1}.${channel} = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}[0] = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  data${i + 1}[0] = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n      '  data0[2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\n        `  data${i + 1}[2] = subKernelResult_${subKernel.name}[2]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  data${i + 1} = subKernelResult_${this.subKernels[i].name}`\n      );\n    }\n    return result;\n  }\n\n  destroyExtensions() {\n    this.extensions.EXT_color_buffer_float = null;\n    this.extensions.OES_texture_float_linear = null;\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGL2FunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGL2Kernel\n};\n},{\"../../utils\":114,\"../function-builder\":9,\"../web-gl/kernel\":70,\"./fragment-shader\":72,\"./function-node\":73,\"./kernel-value-maps\":74,\"./vertex-shader\":106}],106:[function(require,module,exports){\nconst vertexShader = `#version 300 es\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nin vec2 aPos;\nin vec2 aTexCoord;\n\nout vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],107:[function(require,module,exports){\nconst lib = require('./index');\nconst GPU = lib.GPU;\nfor (const p in lib) {\n  if (!lib.hasOwnProperty(p)) continue;\n  if (p === 'GPU') continue; \n  GPU[p] = lib[p];\n}\n\nif (typeof window !== 'undefined') {\n  bindTo(window);\n}\nif (typeof self !== 'undefined') {\n  bindTo(self);\n}\n\nfunction bindTo(target) {\n  if (target.GPU) return;\n  Object.defineProperty(target, 'GPU', {\n    get() {\n      return GPU;\n    }\n  });\n}\n\nmodule.exports = lib;\n},{\"./index\":109}],108:[function(require,module,exports){\nconst { gpuMock } = require('gpu-mock.js');\nconst { utils } = require('./utils');\nconst { Kernel } = require('./backend/kernel');\nconst { CPUKernel } = require('./backend/cpu/kernel');\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelRunShortcut } = require('./kernel-run-shortcut');\n\n\nconst kernelOrder = [HeadlessGLKernel, WebGL2Kernel, WebGLKernel];\n\nconst kernelTypes = ['gpu', 'cpu'];\n\nconst internalKernels = {\n  'headlessgl': HeadlessGLKernel,\n  'webgl2': WebGL2Kernel,\n  'webgl': WebGLKernel,\n};\n\nlet validate = true;\n\nclass GPU {\n  static disableValidation() {\n    validate = false;\n  }\n\n  static enableValidation() {\n    validate = true;\n  }\n\n  static get isGPUSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported);\n  }\n\n  static get isKernelMapSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.kernelMap);\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return (typeof Worker !== 'undefined' && typeof OffscreenCanvas !== 'undefined') || typeof importScripts !== 'undefined';\n  }\n\n  static get isWebGLSupported() {\n    return WebGLKernel.isSupported;\n  }\n\n  static get isWebGL2Supported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isHeadlessGLSupported() {\n    return HeadlessGLKernel.isSupported;\n  }\n\n  static get isCanvasSupported() {\n    return typeof HTMLCanvasElement !== 'undefined';\n  }\n\n  static get isGPUHTMLImageArraySupported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isSinglePrecisionSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.isFloatRead && Kernel.features.isTextureFloat);\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.canvas = settings.canvas || null;\n    this.context = settings.context || null;\n    this.mode = settings.mode;\n    this.Kernel = null;\n    this.kernels = [];\n    this.functions = [];\n    this.nativeFunctions = [];\n    this.injectedNative = null;\n    if (this.mode === 'dev') return;\n    this.chooseKernel();\n    if (settings.functions) {\n      for (let i = 0; i < settings.functions.length; i++) {\n        this.addFunction(settings.functions[i]);\n      }\n    }\n\n    if (settings.nativeFunctions) {\n      for (const p in settings.nativeFunctions) {\n        if (!settings.nativeFunctions.hasOwnProperty(p)) continue;\n        const s = settings.nativeFunctions[p];\n        const { name, source } = s;\n        this.addNativeFunction(name, source, s);\n      }\n    }\n  }\n\n  chooseKernel() {\n    if (this.Kernel) return;\n\n    let Kernel = null;\n\n    if (this.context) {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        const ExternalKernel = kernelOrder[i];\n        if (ExternalKernel.isContextMatch(this.context)) {\n          if (!ExternalKernel.isSupported) {\n            throw new Error(`Kernel type ${ExternalKernel.name} not supported`);\n          }\n          Kernel = ExternalKernel;\n          break;\n        }\n      }\n      if (Kernel === null) {\n        throw new Error('unknown Context');\n      }\n    } else if (this.mode) {\n      if (this.mode in internalKernels) {\n        if (!validate || internalKernels[this.mode].isSupported) {\n          Kernel = internalKernels[this.mode];\n        }\n      } else if (this.mode === 'gpu') {\n        for (let i = 0; i < kernelOrder.length; i++) {\n          if (kernelOrder[i].isSupported) {\n            Kernel = kernelOrder[i];\n            break;\n          }\n        }\n      } else if (this.mode === 'cpu') {\n        Kernel = CPUKernel;\n      }\n      if (!Kernel) {\n        throw new Error(`A requested mode of \"${this.mode}\" and is not supported`);\n      }\n    } else {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        if (kernelOrder[i].isSupported) {\n          Kernel = kernelOrder[i];\n          break;\n        }\n      }\n      if (!Kernel) {\n        Kernel = CPUKernel;\n      }\n    }\n\n    if (!this.mode) {\n      this.mode = Kernel.mode;\n    }\n    this.Kernel = Kernel;\n  }\n\n  createKernel(source, settings) {\n    if (typeof source === 'undefined') {\n      throw new Error('Missing source parameter');\n    }\n    if (typeof source !== 'object' && !utils.isFunction(source) && typeof source !== 'string') {\n      throw new Error('source parameter not a function');\n    }\n\n    const kernels = this.kernels;\n    if (this.mode === 'dev') {\n      const devKernel = gpuMock(source, upgradeDeprecatedCreateKernelSettings(settings));\n      kernels.push(devKernel);\n      return devKernel;\n    }\n\n    source = typeof source === 'function' ? source.toString() : source;\n    const switchableKernels = {};\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings) || {};\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    function onRequestFallback(args) {\n      console.warn('Falling back to CPU');\n      const fallbackKernel = new CPUKernel(source, {\n        argumentTypes: kernelRun.argumentTypes,\n        constantTypes: kernelRun.constantTypes,\n        graphical: kernelRun.graphical,\n        loopMaxIterations: kernelRun.loopMaxIterations,\n        constants: kernelRun.constants,\n        dynamicOutput: kernelRun.dynamicOutput,\n        dynamicArgument: kernelRun.dynamicArguments,\n        output: kernelRun.output,\n        precision: kernelRun.precision,\n        pipeline: kernelRun.pipeline,\n        immutable: kernelRun.immutable,\n        optimizeFloatMemory: kernelRun.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: kernelRun.fixIntegerDivisionAccuracy,\n        functions: kernelRun.functions,\n        nativeFunctions: kernelRun.nativeFunctions,\n        injectedNative: kernelRun.injectedNative,\n        subKernels: kernelRun.subKernels,\n        strictIntegers: kernelRun.strictIntegers,\n        debug: kernelRun.debug,\n      });\n      fallbackKernel.build.apply(fallbackKernel, args);\n      const result = fallbackKernel.run.apply(fallbackKernel, args);\n      kernelRun.replaceKernel(fallbackKernel);\n      return result;\n    }\n\n    function onRequestSwitchKernel(reasons, args, _kernel) {\n      if (_kernel.debug) {\n        console.warn('Switching kernels');\n      }\n      let newOutput = null;\n      if (_kernel.signature && !switchableKernels[_kernel.signature]) {\n        switchableKernels[_kernel.signature] = _kernel;\n      }\n      if (_kernel.dynamicOutput) {\n        for (let i = reasons.length - 1; i >= 0; i--) {\n          const reason = reasons[i];\n          if (reason.type === 'outputPrecisionMismatch') {\n            newOutput = reason.needed;\n          }\n        }\n      }\n\n      const Constructor = _kernel.constructor;\n      const argumentTypes = Constructor.getArgumentTypes(_kernel, args);\n      const signature = Constructor.getSignature(_kernel, argumentTypes);\n      const existingKernel = switchableKernels[signature];\n      if (existingKernel) {\n        existingKernel.onActivate(_kernel);\n        return existingKernel;\n      }\n\n      const newKernel = switchableKernels[signature] = new Constructor(source, {\n        argumentTypes,\n        constantTypes: _kernel.constantTypes,\n        graphical: _kernel.graphical,\n        loopMaxIterations: _kernel.loopMaxIterations,\n        constants: _kernel.constants,\n        dynamicOutput: _kernel.dynamicOutput,\n        dynamicArgument: _kernel.dynamicArguments,\n        context: _kernel.context,\n        canvas: _kernel.canvas,\n        output: newOutput || _kernel.output,\n        precision: _kernel.precision,\n        pipeline: _kernel.pipeline,\n        immutable: _kernel.immutable,\n        optimizeFloatMemory: _kernel.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: _kernel.fixIntegerDivisionAccuracy,\n        functions: _kernel.functions,\n        nativeFunctions: _kernel.nativeFunctions,\n        injectedNative: _kernel.injectedNative,\n        subKernels: _kernel.subKernels,\n        strictIntegers: _kernel.strictIntegers,\n        debug: _kernel.debug,\n        gpu: _kernel.gpu,\n        validate,\n        returnType: _kernel.returnType,\n        tactic: _kernel.tactic,\n        onRequestFallback,\n        onRequestSwitchKernel,\n        texture: _kernel.texture,\n        mappedTextures: _kernel.mappedTextures,\n        drawBuffersMap: _kernel.drawBuffersMap,\n      });\n      newKernel.build.apply(newKernel, args);\n      kernelRun.replaceKernel(newKernel);\n      kernels.push(newKernel);\n      return newKernel;\n    }\n    const mergedSettings = Object.assign({\n      context: this.context,\n      canvas: this.canvas,\n      functions: this.functions,\n      nativeFunctions: this.nativeFunctions,\n      injectedNative: this.injectedNative,\n      gpu: this,\n      validate,\n      onRequestFallback,\n      onRequestSwitchKernel\n    }, settingsCopy);\n\n    const kernel = new this.Kernel(source, mergedSettings);\n    const kernelRun = kernelRunShortcut(kernel);\n\n    if (!this.canvas) {\n      this.canvas = kernel.canvas;\n    }\n\n    if (!this.context) {\n      this.context = kernel.context;\n    }\n\n    kernels.push(kernel);\n\n    return kernelRun;\n  }\n\n  createKernelMap() {\n    let fn;\n    let settings;\n    const argument2Type = typeof arguments[arguments.length - 2];\n    if (argument2Type === 'function' || argument2Type === 'string') {\n      fn = arguments[arguments.length - 2];\n      settings = arguments[arguments.length - 1];\n    } else {\n      fn = arguments[arguments.length - 1];\n    }\n\n    if (this.mode !== 'dev') {\n      if (!this.Kernel.isSupported || !this.Kernel.features.kernelMap) {\n        if (this.mode && kernelTypes.indexOf(this.mode) < 0) {\n          throw new Error(`kernelMap not supported on ${this.Kernel.name}`);\n        }\n      }\n    }\n\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings);\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    if (Array.isArray(arguments[0])) {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let i = 0; i < functions.length; i++) {\n        const source = functions[i].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name,\n          source,\n          property: i,\n        });\n      }\n    } else {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let p in functions) {\n        if (!functions.hasOwnProperty(p)) continue;\n        const source = functions[p].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name: name || p,\n          source,\n          property: p,\n        });\n      }\n    }\n    return this.createKernel(fn, settingsCopy);\n  }\n\n  combineKernels() {\n    const firstKernel = arguments[0];\n    const combinedKernel = arguments[arguments.length - 1];\n    if (firstKernel.kernel.constructor.mode === 'cpu') return combinedKernel;\n    const canvas = arguments[0].canvas;\n    const context = arguments[0].context;\n    const max = arguments.length - 1;\n    for (let i = 0; i < max; i++) {\n      arguments[i]\n        .setCanvas(canvas)\n        .setContext(context)\n        .setPipeline(true);\n    }\n\n    return function() {\n      const texture = combinedKernel.apply(this, arguments);\n      if (texture.toArray) {\n        return texture.toArray();\n      }\n      return texture;\n    };\n  }\n\n  setFunctions(functions) {\n    this.functions = functions;\n    return this;\n  }\n\n  setNativeFunctions(nativeFunctions) {\n    this.nativeFunctions = nativeFunctions;\n    return this;\n  }\n\n  addFunction(source, settings) {\n    this.functions.push({ source, settings });\n    return this;\n  }\n\n  addNativeFunction(name, source, settings) {\n    if (this.kernels.length > 0) {\n      throw new Error('Cannot call \"addNativeFunction\" after \"createKernels\" has been called.');\n    }\n    this.nativeFunctions.push(Object.assign({ name, source }, settings));\n    return this;\n  }\n\n  injectNative(source) {\n    this.injectedNative = source;\n    return this;\n  }\n\n  destroy() {\n    return new Promise((resolve, reject) => {\n      if (!this.kernels) {\n        resolve();\n      }\n      setTimeout(() => {\n        try {\n          for (let i = 0; i < this.kernels.length; i++) {\n            this.kernels[i].destroy(true); \n          }\n          let firstKernel = this.kernels[0];\n          if (firstKernel) {\n            if (firstKernel.kernel) {\n              firstKernel = firstKernel.kernel;\n            }\n            if (firstKernel.constructor.destroyContext) {\n              firstKernel.constructor.destroyContext(this.context);\n            }\n          }\n        } catch (e) {\n          reject(e);\n        }\n        resolve();\n      }, 0);\n    });\n  }\n}\n\n\nfunction upgradeDeprecatedCreateKernelSettings(settings) {\n  if (!settings) {\n    return {};\n  }\n  const upgradedSettings = Object.assign({}, settings);\n\n  if (settings.hasOwnProperty('floatOutput')) {\n    utils.warnDeprecated('setting', 'floatOutput', 'precision');\n    upgradedSettings.precision = settings.floatOutput ? 'single' : 'unsigned';\n  }\n  if (settings.hasOwnProperty('outputToTexture')) {\n    utils.warnDeprecated('setting', 'outputToTexture', 'pipeline');\n    upgradedSettings.pipeline = Boolean(settings.outputToTexture);\n  }\n  if (settings.hasOwnProperty('outputImmutable')) {\n    utils.warnDeprecated('setting', 'outputImmutable', 'immutable');\n    upgradedSettings.immutable = Boolean(settings.outputImmutable);\n  }\n  if (settings.hasOwnProperty('floatTextures')) {\n    utils.warnDeprecated('setting', 'floatTextures', 'optimizeFloatMemory');\n    upgradedSettings.optimizeFloatMemory = Boolean(settings.floatTextures);\n  }\n  return upgradedSettings;\n}\n\nmodule.exports = {\n  GPU,\n  kernelOrder,\n  kernelTypes\n};\n},{\"./backend/cpu/kernel\":8,\"./backend/headless-gl/kernel\":34,\"./backend/kernel\":36,\"./backend/web-gl/kernel\":70,\"./backend/web-gl2/kernel\":105,\"./kernel-run-shortcut\":111,\"./utils\":114,\"gpu-mock.js\":4}],109:[function(require,module,exports){\nconst { GPU } = require('./gpu');\nconst { alias } = require('./alias');\nconst { utils } = require('./utils');\nconst { Input, input } = require('./input');\nconst { Texture } = require('./texture');\nconst { FunctionBuilder } = require('./backend/function-builder');\nconst { FunctionNode } = require('./backend/function-node');\nconst { CPUFunctionNode } = require('./backend/cpu/function-node');\nconst { CPUKernel } = require('./backend/cpu/kernel');\n\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\n\nconst { WebGLFunctionNode } = require('./backend/web-gl/function-node');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelValueMaps: webGLKernelValueMaps } = require('./backend/web-gl/kernel-value-maps');\n\nconst { WebGL2FunctionNode } = require('./backend/web-gl2/function-node');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { kernelValueMaps: webGL2KernelValueMaps } = require('./backend/web-gl2/kernel-value-maps');\n\nconst { GLKernel } = require('./backend/gl/kernel');\n\nconst { Kernel } = require('./backend/kernel');\n\nconst { FunctionTracer } = require('./backend/function-tracer');\n\nconst mathRandom = require('./plugins/math-random-uniformly-distributed');\n\nmodule.exports = {\n  alias,\n  CPUFunctionNode,\n  CPUKernel,\n  GPU,\n  FunctionBuilder,\n  FunctionNode,\n  HeadlessGLKernel,\n  Input,\n  input,\n  Texture,\n  utils,\n\n  WebGL2FunctionNode,\n  WebGL2Kernel,\n  webGL2KernelValueMaps,\n\n  WebGLFunctionNode,\n  WebGLKernel,\n  webGLKernelValueMaps,\n\n  GLKernel,\n  Kernel,\n  FunctionTracer,\n\n  plugins: {\n    mathRandom\n  }\n};\n},{\"./alias\":5,\"./backend/cpu/function-node\":6,\"./backend/cpu/kernel\":8,\"./backend/function-builder\":9,\"./backend/function-node\":10,\"./backend/function-tracer\":11,\"./backend/gl/kernel\":13,\"./backend/headless-gl/kernel\":34,\"./backend/kernel\":36,\"./backend/web-gl/function-node\":38,\"./backend/web-gl/kernel\":70,\"./backend/web-gl/kernel-value-maps\":39,\"./backend/web-gl2/function-node\":73,\"./backend/web-gl2/kernel\":105,\"./backend/web-gl2/kernel-value-maps\":74,\"./gpu\":108,\"./input\":110,\"./plugins/math-random-uniformly-distributed\":112,\"./texture\":113,\"./utils\":114}],110:[function(require,module,exports){\nclass Input {\n  constructor(value, size) {\n    this.value = value;\n    if (Array.isArray(size)) {\n      this.size = size;\n    } else {\n      this.size = new Int32Array(3);\n      if (size.z) {\n        this.size = new Int32Array([size.x, size.y, size.z]);\n      } else if (size.y) {\n        this.size = new Int32Array([size.x, size.y]);\n      } else {\n        this.size = new Int32Array([size.x]);\n      }\n    }\n\n    const [w, h, d] = this.size;\n    if (d) {\n      if (this.value.length !== (w * h * d)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} * ${d} = ${(h * w * d)}`);\n      }\n    } else if (h) {\n      if (this.value.length !== (w * h)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} = ${(h * w)}`);\n      }\n    } else {\n      if (this.value.length !== w) {\n        throw new Error(`Input size ${this.value.length} does not match ${w}`);\n      }\n    }\n\n  }\n\n  toArray() {\n    const { utils } = require('./utils');\n    const [w, h, d] = this.size;\n    if (d) {\n      return utils.erectMemoryOptimized3DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h, d);\n    } else if (h) {\n      return utils.erectMemoryOptimized2DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h);\n    } else {\n      return this.value;\n    }\n  }\n}\n\nfunction input(value, size) {\n  return new Input(value, size);\n}\n\nmodule.exports = {\n  Input,\n  input\n};\n},{\"./utils\":114}],111:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction kernelRunShortcut(kernel) {\n  let run = function() {\n    kernel.build.apply(kernel, arguments);\n    run = function() {\n      let result = kernel.run.apply(kernel, arguments);\n      if (kernel.switchingKernels) {\n        const reasons = kernel.resetSwitchingKernels();\n        const newKernel = kernel.onRequestSwitchKernel(reasons, arguments, kernel);\n        shortcut.kernel = kernel = newKernel;\n        result = newKernel.run.apply(newKernel, arguments);\n      }\n      if (kernel.renderKernels) {\n        return kernel.renderKernels();\n      } else if (kernel.renderOutput) {\n        return kernel.renderOutput();\n      } else {\n        return result;\n      }\n    };\n    return run.apply(kernel, arguments);\n  };\n  const shortcut = function() {\n    return run.apply(kernel, arguments);\n  };\n  shortcut.exec = function() {\n    return new Promise((accept, reject) => {\n      try {\n        accept(run.apply(this, arguments));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  shortcut.replaceKernel = function(replacementKernel) {\n    kernel = replacementKernel;\n    bindKernelToShortcut(kernel, shortcut);\n  };\n\n  bindKernelToShortcut(kernel, shortcut);\n  return shortcut;\n}\n\nfunction bindKernelToShortcut(kernel, shortcut) {\n  if (shortcut.kernel) {\n    shortcut.kernel = kernel;\n    return;\n  }\n  const properties = utils.allPropertiesOf(kernel);\n  for (let i = 0; i < properties.length; i++) {\n    const property = properties[i];\n    if (property[0] === '_' && property[1] === '_') continue;\n    if (typeof kernel[property] === 'function') {\n      if (property.substring(0, 3) === 'add' || property.substring(0, 3) === 'set') {\n        shortcut[property] = function() {\n          shortcut.kernel[property].apply(shortcut.kernel, arguments);\n          return shortcut;\n        };\n      } else {\n        shortcut[property] = function() {\n          return shortcut.kernel[property].apply(shortcut.kernel, arguments);\n        };\n      }\n    } else {\n      shortcut.__defineGetter__(property, () => shortcut.kernel[property]);\n      shortcut.__defineSetter__(property, (value) => {\n        shortcut.kernel[property] = value;\n      });\n    }\n  }\n  shortcut.kernel = kernel;\n}\nmodule.exports = {\n  kernelRunShortcut\n};\n},{\"./utils\":114}],112:[function(require,module,exports){\nconst source = `// https://www.shadertoy.com/view/4t2SDh\n//note: uniformly distributed, normalized rand, [0,1]\nhighp float randomSeedShift = 1.0;\nhighp float slide = 1.0;\nuniform highp float randomSeed1;\nuniform highp float randomSeed2;\n\nhighp float nrand(highp vec2 n) {\n  highp float result = fract(sin(dot((n.xy + 1.0) * vec2(randomSeed1 * slide, randomSeed2 * randomSeedShift), vec2(12.9898, 78.233))) * 43758.5453);\n  randomSeedShift = result;\n  if (randomSeedShift > 0.5) {\n    slide += 0.00009; \n  } else {\n    slide += 0.0009;\n  }\n  return result;\n}`;\n\nconst name = 'math-random-uniformly-distributed';\n\nconst functionMatch = `Math.random()`;\n\nconst functionReplace = `nrand(vTexCoord)`;\n\nconst functionReturnType = 'Number';\nconst onBeforeRun = (kernel) => {\n  kernel.setUniform1f('randomSeed1', Math.random());\n  kernel.setUniform1f('randomSeed2', Math.random());\n};\n\nconst plugin = {\n  name,\n  onBeforeRun,\n  functionMatch,\n  functionReplace,\n  functionReturnType,\n  source\n};\n\nmodule.exports = plugin;\n},{}],113:[function(require,module,exports){\nclass Texture {\n  constructor(settings) {\n    const {\n      texture,\n      size,\n      dimensions,\n      output,\n      context,\n      type = 'NumberTexture',\n      kernel,\n      internalFormat,\n      textureFormat\n    } = settings;\n    if (!output) throw new Error('settings property \"output\" required.');\n    if (!context) throw new Error('settings property \"context\" required.');\n    if (!texture) throw new Error('settings property \"texture\" required.');\n    if (!kernel) throw new Error('settings property \"kernel\" required.');\n    this.texture = texture;\n    if (texture._refs) {\n      texture._refs++;\n    } else {\n      texture._refs = 1;\n    }\n    this.size = size;\n    this.dimensions = dimensions;\n    this.output = output;\n    this.context = context;\n    this.kernel = kernel;\n    this.type = type;\n    this._deleted = false;\n    this.internalFormat = internalFormat;\n    this.textureFormat = textureFormat;\n  }\n\n  toArray() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  clone() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  delete() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  clear() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n}\n\nmodule.exports = {\n  Texture\n};\n},{}],114:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { Input } = require('./input');\nconst { Texture } = require('./texture');\n\nconst FUNCTION_NAME = /function ([^(]*)/;\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nconst ARGUMENT_NAMES = /([^\\s,]+)/g;\n\nconst utils = {\n  systemEndianness() {\n    return _systemEndianness;\n  },\n  getSystemEndianness() {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) return 'LE';\n    if (c[0] === 0xde) return 'BE';\n    throw new Error('unknown endianness');\n  },\n\n  isFunction(funcObj) {\n    return typeof(funcObj) === 'function';\n  },\n\n  isFunctionString(fn) {\n    if (typeof fn === 'string') {\n      return (fn\n        .slice(0, 'function'.length)\n        .toLowerCase() === 'function');\n    }\n    return false;\n  },\n\n  getFunctionNameFromString(funcStr) {\n    const result = FUNCTION_NAME.exec(funcStr);\n    if (!result || result.length === 0) return null;\n    return result[1].trim();\n  },\n\n  getFunctionBodyFromString(funcStr) {\n    return funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\n  },\n\n  getArgumentNamesFromString(fn) {\n    const fnStr = fn.replace(STRIP_COMMENTS, '');\n    let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n    if (result === null) {\n      result = [];\n    }\n    return result;\n  },\n\n  clone(obj) {\n    if (obj === null || typeof obj !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\n\n    const temp = obj.constructor(); \n\n    for (let key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        obj.isActiveClone = null;\n        temp[key] = utils.clone(obj[key]);\n        delete obj.isActiveClone;\n      }\n    }\n\n    return temp;\n  },\n\n  isArray(array) {\n    return !isNaN(array.length);\n  },\n\n  getVariableType(value, strictIntegers) {\n    if (utils.isArray(value)) {\n      if (value.length > 0 && value[0].nodeName === 'IMG') {\n        return 'HTMLImageArray';\n      }\n      return 'Array';\n    }\n\n    switch (value.constructor) {\n      case Boolean:\n        return 'Boolean';\n      case Number:\n        if (strictIntegers && Number.isInteger(value)) {\n          return 'Integer';\n        }\n        return 'Float';\n      case Texture:\n        return value.type;\n      case Input:\n        return 'Input';\n    }\n    if ('nodeName' in value) {\n      switch (value.nodeName) {\n        case 'IMG':\n          return 'HTMLImage';\n        case 'CANVAS':\n          return 'HTMLImage';\n        case 'VIDEO':\n          return 'HTMLVideo';\n      }\n    } else if (value.hasOwnProperty('type')) {\n      return value.type;\n    } else if (typeof OffscreenCanvas !== 'undefined' && value instanceof OffscreenCanvas) {\n      return 'OffscreenCanvas';\n    } else if (typeof ImageBitmap !== 'undefined' && value instanceof ImageBitmap) {\n      return 'ImageBitmap';\n    } else if (typeof ImageData !== 'undefined' && value instanceof ImageData) {\n      return 'ImageData';\n    }\n    return 'Unknown';\n  },\n\n  getKernelTextureSize(settings, dimensions) {\n    let [w, h, d] = dimensions;\n    let texelCount = (w || 1) * (h || 1) * (d || 1);\n\n    if (settings.optimizeFloatMemory && settings.precision === 'single') {\n      w = texelCount = Math.ceil(texelCount / 4);\n    }\n    if (h > 1 && w * h === texelCount) {\n      return new Int32Array([w, h]);\n    }\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  closestSquareDimensions(length) {\n    const sqrt = Math.sqrt(length);\n    let high = Math.ceil(sqrt);\n    let low = Math.floor(sqrt);\n    while (high * low < length) {\n      high--;\n      low = Math.ceil(length / high);\n    }\n    return new Int32Array([low, Math.ceil(length / low)]);\n  },\n\n  getMemoryOptimizedFloatTextureSize(dimensions, bitRatio) {\n    const totalArea = utils.roundTo((dimensions[0] || 1) * (dimensions[1] || 1) * (dimensions[2] || 1) * (dimensions[3] || 1), 4);\n    const texelCount = totalArea / bitRatio;\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  getMemoryOptimizedPackedTextureSize(dimensions, bitRatio) {\n    const [w, h, d] = dimensions;\n    const totalArea = utils.roundTo((w || 1) * (h || 1) * (d || 1), 4);\n    const texelCount = totalArea / (4 / bitRatio);\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  roundTo(n, d) {\n    return Math.floor((n + d - 1) / d) * d;\n  },\n  getDimensions(x, pad) {\n    let ret;\n    if (utils.isArray(x)) {\n      const dim = [];\n      let temp = x;\n      while (utils.isArray(temp)) {\n        dim.push(temp.length);\n        temp = temp[0];\n      }\n      ret = dim.reverse();\n    } else if (x instanceof Texture) {\n      ret = x.output;\n    } else if (x instanceof Input) {\n      ret = x.size;\n    } else {\n      throw new Error(`Unknown dimensions of ${x}`);\n    }\n\n    if (pad) {\n      ret = Array.from(ret);\n      while (ret.length < 3) {\n        ret.push(1);\n      }\n    }\n\n    return new Int32Array(ret);\n  },\n\n  flatten2dArrayTo(array, target) {\n    let offset = 0;\n    for (let y = 0; y < array.length; y++) {\n      target.set(array[y], offset);\n      offset += array[y].length;\n    }\n  },\n\n  flatten3dArrayTo(array, target) {\n    let offset = 0;\n    for (let z = 0; z < array.length; z++) {\n      for (let y = 0; y < array[z].length; y++) {\n        target.set(array[z][y], offset);\n        offset += array[z][y].length;\n      }\n    }\n  },\n\n  flatten4dArrayTo(array, target) {\n    let offset = 0;\n    for (let l = 0; l < array.length; l++) {\n      for (let z = 0; z < array[l].length; z++) {\n        for (let y = 0; y < array[l][z].length; y++) {\n          target.set(array[l][z][y], offset);\n          offset += array[l][z][y].length;\n        }\n      }\n    }\n  },\n\n  flattenTo(array, target) {\n    if (utils.isArray(array[0])) {\n      if (utils.isArray(array[0][0])) {\n        if (utils.isArray(array[0][0][0])) {\n          utils.flatten4dArrayTo(array, target);\n        } else {\n          utils.flatten3dArrayTo(array, target);\n        }\n      } else {\n        utils.flatten2dArrayTo(array, target);\n      }\n    } else {\n      target.set(array);\n    }\n  },\n\n  splitArray(array, part) {\n    const result = [];\n    for (let i = 0; i < array.length; i += part) {\n      result.push(new array.constructor(array.buffer, i * 4 + array.byteOffset, part));\n    }\n    return result;\n  },\n\n  getAstString(source, ast) {\n    const lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\n    const start = ast.loc.start;\n    const end = ast.loc.end;\n    const result = [];\n    if (start.line === end.line) {\n      result.push(lines[start.line - 1].substring(start.column, end.column));\n    } else {\n      result.push(lines[start.line - 1].slice(start.column));\n      for (let i = start.line; i < end.line; i++) {\n        result.push(lines[i]);\n      }\n      result.push(lines[end.line - 1].slice(0, end.column));\n    }\n    return result.join('\\n');\n  },\n\n  allPropertiesOf(obj) {\n    const props = [];\n\n    do {\n      props.push.apply(props, Object.getOwnPropertyNames(obj));\n    } while (obj = Object.getPrototypeOf(obj));\n\n    return props;\n  },\n\n  linesToString(lines) {\n    if (lines.length > 0) {\n      return lines.join(';\\n') + ';\\n';\n    } else {\n      return '\\n';\n    }\n  },\n  warnDeprecated(type, oldName, newName) {\n    if (newName) {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been replaced with \"${ newName }\". Fixing, but please upgrade as it will soon be removed.`);\n    } else {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been removed. Fixing, but please upgrade as it will soon be removed.`);\n    }\n  },\n  flipPixels: (pixels, width, height) => {\n    const halfHeight = height / 2 | 0; \n    const bytesPerRow = width * 4;\n    const temp = new Uint8ClampedArray(width * 4);\n    const result = pixels.slice(0);\n    for (let y = 0; y < halfHeight; ++y) {\n      const topOffset = y * bytesPerRow;\n      const bottomOffset = (height - y - 1) * bytesPerRow;\n\n      temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n      result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n      result.set(temp, bottomOffset);\n    }\n    return result;\n  },\n  erectPackedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erect2DPackedFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xStart = y * width;\n      const xEnd = xStart + width;\n      yResults[y] = array.subarray(xStart, xEnd);\n    }\n    return yResults;\n  },\n  erect3DPackedFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xStart = (z * height * width) + y * width;\n        const xEnd = xStart + width;\n        yResults[y] = array.subarray(xStart, xEnd);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectMemoryOptimizedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erectMemoryOptimized2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const offset = y * width;\n      yResults[y] = array.subarray(offset, offset + width);\n    }\n    return yResults;\n  },\n  erectMemoryOptimized3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const offset = (z * height * width) + (y * width);\n        yResults[y] = array.subarray(offset, offset + width);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectFloat: (array, width) => {\n    const xResults = new Float32Array(width);\n    let i = 0;\n    for (let x = 0; x < width; x++) {\n      xResults[x] = array[i];\n      i += 4;\n    }\n    return xResults;\n  },\n  erect2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Float32Array(width);\n      for (let x = 0; x < width; x++) {\n        xResults[x] = array[i];\n        i += 4;\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    let i = 0;\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Float32Array(width);\n        for (let x = 0; x < width; x++) {\n          xResults[x] = array[i];\n          i += 4;\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray2: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 2);\n    }\n    return xResults;\n  },\n  erect2DArray2: (array, width, height) => {\n    const yResults = new Array(height);\n    const XResultsMax = width * 4;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * XResultsMax;\n      let i = 0;\n      for (let x = 0; x < XResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 2);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray2: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 2);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray3: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 3);\n    }\n    return xResults;\n  },\n  erect2DArray3: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 3);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray3: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 3);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray4: (array, width) => {\n    const xResults = new Array(array);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 4);\n    }\n    return xResults;\n  },\n  erect2DArray4: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 4);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray4: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 4);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n\n  flattenFunctionToString: (source, settings) => {\n    const { findDependency, thisLookup, doNotDefine } = settings;\n    let flattened = settings.flattened;\n    if (!flattened) {\n      flattened = settings.flattened = {};\n    }\n    const ast = acorn.parse(source);\n    const functionDependencies = [];\n    let indent = 0;\n\n    function flatten(ast) {\n      if (Array.isArray(ast)) {\n        const results = [];\n        for (let i = 0; i < ast.length; i++) {\n          results.push(flatten(ast[i]));\n        }\n        return results.join('');\n      }\n      switch (ast.type) {\n        case 'Program':\n          return flatten(ast.body) + (ast.body[0].type === 'VariableDeclaration' ? ';' : '');\n        case 'FunctionDeclaration':\n          return `function ${ast.id.name}(${ast.params.map(flatten).join(', ')}) ${ flatten(ast.body) }`;\n        case 'BlockStatement': {\n          const result = [];\n          indent += 2;\n          for (let i = 0; i < ast.body.length; i++) {\n            const flat = flatten(ast.body[i]);\n            if (flat) {\n              result.push(' '.repeat(indent) + flat, ';\\n');\n            }\n          }\n          indent -= 2;\n          return `{\\n${result.join('')}}`;\n        }\n        case 'VariableDeclaration':\n          const declarations = utils.normalizeDeclarations(ast)\n            .map(flatten)\n            .filter(r => r !== null);\n          if (declarations.length < 1) {\n            return '';\n          } else {\n            return `${ast.kind} ${declarations.join(',')}`;\n          }\n          case 'VariableDeclarator':\n            if (ast.init.object && ast.init.object.type === 'ThisExpression') {\n              const lookup = thisLookup(ast.init.property.name, true);\n              if (lookup) {\n                return `${ast.id.name} = ${flatten(ast.init)}`;\n              } else {\n                return null;\n              }\n            } else {\n              return `${ast.id.name} = ${flatten(ast.init)}`;\n            }\n            case 'CallExpression': {\n              if (ast.callee.property.name === 'subarray') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.name === 'gl' || ast.callee.object.name === 'context') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.type === 'ThisExpression') {\n                functionDependencies.push(findDependency('this', ast.callee.property.name));\n                return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else if (ast.callee.object.name) {\n                const foundSource = findDependency(ast.callee.object.name, ast.callee.property.name);\n                if (foundSource === null) {\n                  return `${ast.callee.object.name}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                } else {\n                  functionDependencies.push(foundSource);\n                  return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                }\n              } else if (ast.callee.object.type === 'MemberExpression') {\n                return `${flatten(ast.callee.object)}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else {\n                throw new Error('unknown ast.callee');\n              }\n            }\n            case 'ReturnStatement':\n              return `return ${flatten(ast.argument)}`;\n            case 'BinaryExpression':\n              return `(${flatten(ast.left)}${ast.operator}${flatten(ast.right)})`;\n            case 'UnaryExpression':\n              if (ast.prefix) {\n                return `${ast.operator} ${flatten(ast.argument)}`;\n              } else {\n                return `${flatten(ast.argument)} ${ast.operator}`;\n              }\n              case 'ExpressionStatement':\n                return `${flatten(ast.expression)}`;\n              case 'SequenceExpression':\n                return `(${flatten(ast.expressions)})`;\n              case 'ArrowFunctionExpression':\n                return `(${ast.params.map(flatten).join(', ')}) => ${flatten(ast.body)}`;\n              case 'Literal':\n                return ast.raw;\n              case 'Identifier':\n                return ast.name;\n              case 'MemberExpression':\n                if (ast.object.type === 'ThisExpression') {\n                  return thisLookup(ast.property.name);\n                }\n                if (ast.computed) {\n                  return `${flatten(ast.object)}[${flatten(ast.property)}]`;\n                }\n                return flatten(ast.object) + '.' + flatten(ast.property);\n              case 'ThisExpression':\n                return 'this';\n              case 'NewExpression':\n                return `new ${flatten(ast.callee)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              case 'ForStatement':\n                return `for (${flatten(ast.init)};${flatten(ast.test)};${flatten(ast.update)}) ${flatten(ast.body)}`;\n              case 'AssignmentExpression':\n                return `${flatten(ast.left)}${ast.operator}${flatten(ast.right)}`;\n              case 'UpdateExpression':\n                return `${flatten(ast.argument)}${ast.operator}`;\n              case 'IfStatement':\n                return `if (${flatten(ast.test)}) ${flatten(ast.consequent)}`;\n              case 'ThrowStatement':\n                return `throw ${flatten(ast.argument)}`;\n              case 'ObjectPattern':\n                return ast.properties.map(flatten).join(', ');\n              case 'ArrayPattern':\n                return ast.elements.map(flatten).join(', ');\n              case 'DebuggerStatement':\n                return 'debugger;';\n              case 'ConditionalExpression':\n                return `${flatten(ast.test)}?${flatten(ast.consequent)}:${flatten(ast.alternate)}`;\n              case 'Property':\n                if (ast.kind === 'init') {\n                  return flatten(ast.key);\n                }\n      }\n      throw new Error(`unhandled ast.type of ${ ast.type }`);\n    }\n    const result = flatten(ast);\n    if (functionDependencies.length > 0) {\n      const flattenedFunctionDependencies = [];\n      for (let i = 0; i < functionDependencies.length; i++) {\n        const functionDependency = functionDependencies[i];\n        if (!flattened[functionDependency]) {\n          flattened[functionDependency] = true;\n        }\n        functionDependency ? flattenedFunctionDependencies.push(utils.flattenFunctionToString(functionDependency, settings) + '\\n') : '';\n      }\n      return flattenedFunctionDependencies.join('') + result;\n    }\n    return result;\n  },\n\n  normalizeDeclarations: (ast) => {\n    if (ast.type !== 'VariableDeclaration') throw new Error('Ast is not of type \"VariableDeclaration\"');\n    const normalizedDeclarations = [];\n    for (let declarationIndex = 0; declarationIndex < ast.declarations.length; declarationIndex++) {\n      const declaration = ast.declarations[declarationIndex];\n      if (declaration.id && declaration.id.type === 'ObjectPattern' && declaration.id.properties) {\n        const { properties } = declaration.id;\n        for (let propertyIndex = 0; propertyIndex < properties.length; propertyIndex++) {\n          const property = properties[propertyIndex];\n          if (property.value.type === 'ObjectPattern' && property.value.properties) {\n            for (let subPropertyIndex = 0; subPropertyIndex < property.value.properties.length; subPropertyIndex++) {\n              const subProperty = property.value.properties[subPropertyIndex];\n              if (subProperty.type === 'Property') {\n                normalizedDeclarations.push({\n                  type: 'VariableDeclarator',\n                  id: {\n                    type: 'Identifier',\n                    name: subProperty.key.name\n                  },\n                  init: {\n                    type: 'MemberExpression',\n                    object: {\n                      type: 'MemberExpression',\n                      object: declaration.init,\n                      property: {\n                        type: 'Identifier',\n                        name: property.key.name\n                      },\n                      computed: false\n                    },\n                    property: {\n                      type: 'Identifier',\n                      name: subProperty.key.name\n                    },\n                    computed: false\n                  }\n                });\n              } else {\n                throw new Error('unexpected state');\n              }\n            }\n          } else if (property.value.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: property.value && property.value.name ? property.value.name : property.key.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Identifier',\n                  name: property.key.name\n                },\n                computed: false\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else if (declaration.id && declaration.id.type === 'ArrayPattern' && declaration.id.elements) {\n        const { elements } = declaration.id;\n        for (let elementIndex = 0; elementIndex < elements.length; elementIndex++) {\n          const element = elements[elementIndex];\n          if (element.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: element.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Literal',\n                  value: elementIndex,\n                  raw: elementIndex.toString(),\n                  start: element.start,\n                  end: element.end\n                },\n                computed: true\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else {\n        normalizedDeclarations.push(declaration);\n      }\n    }\n    return normalizedDeclarations;\n  },\n\n  splitHTMLImageToRGB: (gpu, image) => {\n    const rKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.r * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const gKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.g * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const bKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.b * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const aKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.a * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const result = [\n      rKernel(image),\n      gKernel(image),\n      bKernel(image),\n      aKernel(image),\n    ];\n    result.rKernel = rKernel;\n    result.gKernel = gKernel;\n    result.bKernel = bKernel;\n    result.aKernel = aKernel;\n    result.gpu = gpu;\n    return result;\n  },\n\n  splitRGBAToCanvases: (gpu, rgba, width, height) => {\n    const visualKernelR = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(pixel.r / 255, 0, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelR(rgba);\n\n    const visualKernelG = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, pixel.g / 255, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelG(rgba);\n\n    const visualKernelB = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, 0, pixel.b / 255, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelB(rgba);\n\n    const visualKernelA = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(255, 255, 255, pixel.a / 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelA(rgba);\n    return [\n      visualKernelR.canvas,\n      visualKernelG.canvas,\n      visualKernelB.canvas,\n      visualKernelA.canvas,\n    ];\n  },\n\n  getMinifySafeName: (fn) => {\n    try {\n      const ast = acorn.parse(`const value = ${fn.toString()}`);\n      const { init } = ast.body[0].declarations[0];\n      return init.body.name || init.body.body[0].argument.name;\n    } catch (e) {\n      throw new Error('Unrecognized function type.  Please use `() => yourFunctionVariableHere` or function() { return yourFunctionVariableHere; }');\n    }\n  },\n  sanitizeName: function(name) {\n    if (dollarSign.test(name)) {\n      name = name.replace(dollarSign, 'S_S');\n    }\n    if (doubleUnderscore.test(name)) {\n      name = name.replace(doubleUnderscore, 'U_U');\n    } else if (singleUnderscore.test(name)) {\n      name = name.replace(singleUnderscore, 'u_u');\n    }\n    return name;\n  }\n};\n\nconst dollarSign = /\\$/;\nconst doubleUnderscore = /__/;\nconst singleUnderscore = /_/;\n\nconst _systemEndianness = utils.getSystemEndianness();\n\nmodule.exports = {\n  utils\n};\n},{\"./input\":110,\"./texture\":113,\"acorn\":1}]},{},[107])(107)\n});\n","import { KernelOutput } from 'gpu.js';\n\nexport interface INumberHash {\n  [character: string]: number;\n}\n\nexport interface INumberArray {\n  length: number;\n  buffer?: ArrayBuffer;\n  [index: number]: number;\n}\n\nexport type InputOutputValue = INumberArray | Partial<INumberHash>;\n\nexport interface ITrainingDatum {\n  input: InputOutputValue | InputOutputValue[] | KernelOutput;\n  output: InputOutputValue | InputOutputValue[] | KernelOutput;\n}\n\nexport type FormattableData =\n  | number\n  | ITrainingDatum\n  | InputOutputValue\n  | InputOutputValue[];\n\n/* Functions for turning sparse hashes into arrays and vice versa */\nexport const lookup = {\n  /**\n   * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n   * @param {Object} hashes\n   * @returns {Object}\n   */\n  toTable(hashes: INumberHash[]): INumberHash {\n    const hash = hashes.reduce((memo, hash) => {\n      return Object.assign(memo, hash);\n    }, {});\n\n    return lookup.toHash(hash);\n  },\n\n  /**\n   * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n   */\n  toTable2D(objects2D: INumberHash[][]): INumberHash {\n    const table: INumberHash = {};\n    let valueIndex = 0;\n    for (let i = 0; i < objects2D.length; i++) {\n      const objects = objects2D[i];\n      for (let j = 0; j < objects.length; j++) {\n        const object = objects[j];\n        for (const p in object) {\n          if (object.hasOwnProperty(p) && !table.hasOwnProperty(p)) {\n            table[p] = valueIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  },\n\n  toInputTable2D(\n    data: Array<{ input: Array<{ [key: string]: number }> }>\n  ): INumberHash {\n    const table: INumberHash = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      const input = data[dataIndex].input;\n      for (let i = 0; i < input.length; i++) {\n        const object = input[i];\n        for (const p in object) {\n          if (!object.hasOwnProperty(p)) continue;\n          if (!table.hasOwnProperty(p)) {\n            table[p] = tableIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  },\n\n  toOutputTable2D(\n    data: Array<{ output: Array<{ [key: string]: number }> }>\n  ): INumberHash {\n    const table: INumberHash = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      const output = data[dataIndex].output;\n      for (let i = 0; i < output.length; i++) {\n        const object = output[i];\n        for (const p in object) {\n          if (!object.hasOwnProperty(p)) continue;\n          if (!table.hasOwnProperty(p)) {\n            table[p] = tableIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  },\n\n  /**\n   * performs `{a: 6, b: 7} -> {a: 0, b: 1}`\n   */\n  toHash(hash: INumberHash): INumberHash {\n    const lookup: INumberHash = {};\n    let index = 0;\n    const keys = Object.keys(hash);\n    for (let i = 0; i < keys.length; i++) {\n      lookup[keys[i]] = index++;\n    }\n    return lookup;\n  },\n\n  /**\n   * performs `{a: 0, b: 1}, {a: 6} -> [6, 0]`\n   */\n  toArray(\n    lookup: INumberHash,\n    object: INumberHash,\n    arrayLength: number\n  ): Float32Array {\n    const result = new Float32Array(arrayLength);\n    for (const p in lookup) {\n      if (!lookup.hasOwnProperty(p)) continue;\n      result[lookup[p]] = object.hasOwnProperty(p) ? object[p] : 0;\n    }\n    return result;\n  },\n\n  toArrayShort(lookup: INumberHash, object: INumberHash): Float32Array {\n    const result = [];\n    for (const p in lookup) {\n      if (!lookup.hasOwnProperty(p)) continue;\n      if (!object.hasOwnProperty(p)) break;\n      result[lookup[p]] = object[p];\n    }\n    return Float32Array.from(result);\n  },\n\n  toArrays(\n    lookup: INumberHash,\n    objects: INumberHash[],\n    arrayLength: number\n  ): Float32Array[] {\n    const result = [];\n    for (let i = 0; i < objects.length; i++) {\n      result.push(this.toArray(lookup, objects[i], arrayLength));\n    }\n    return result;\n  },\n\n  /**\n   * performs `{a: 0, b: 1}, [6, 7] -> {a: 6, b: 7}`\n   * @param {Object} lookup\n   * @param {Array} array\n   * @returns {Object}\n   */\n  toObject(lookup: INumberHash, array: number[] | Float32Array): INumberHash {\n    const object: INumberHash = {};\n    for (const p in lookup) {\n      if (!lookup.hasOwnProperty(p)) continue;\n      object[p] = array[lookup[p]];\n    }\n    return object;\n  },\n\n  toObjectPartial(\n    lookup: INumberHash,\n    array: number[] | Float32Array,\n    offset = 0,\n    limit = 0\n  ): INumberHash {\n    const object: INumberHash = {};\n    let i = 0;\n    for (const p in lookup) {\n      if (!lookup.hasOwnProperty(p)) continue;\n      if (offset > 0) {\n        if (i++ < offset) continue;\n      }\n      if (limit > 0) {\n        if (i++ >= limit) continue;\n      }\n      object[p] = array[lookup[p] - offset];\n    }\n    return object;\n  },\n\n  dataShape(data: FormattableData[] | FormattableData): string[] {\n    const shape = [];\n    let lastData;\n    if (data.hasOwnProperty('input')) {\n      shape.push('datum');\n      lastData = (data as ITrainingDatum).input;\n    } else if (Array.isArray(data)) {\n      if (\n        (data as ITrainingDatum[])[0] &&\n        (data as ITrainingDatum[])[0].input\n      ) {\n        shape.push('array', 'datum');\n        lastData = (data as ITrainingDatum[])[0].input;\n      } else if (Array.isArray(data[0])) {\n        shape.push('array');\n        lastData = data[0];\n      } else {\n        lastData = data as\n          | InputOutputValue\n          | InputOutputValue[]\n          | InputOutputValue[][];\n      }\n    } else {\n      lastData = data as\n        | InputOutputValue\n        | InputOutputValue[]\n        | InputOutputValue[][];\n    }\n\n    let p;\n    while (lastData) {\n      p = Object.keys(lastData)[0];\n      if (\n        Array.isArray(lastData) ||\n        typeof (lastData as Float32Array).buffer === 'object'\n      ) {\n        shape.push('array');\n        const possibleNumber:\n          | number\n          | INumberArray = (lastData as INumberArray[])[parseInt(p)];\n        if (typeof possibleNumber === 'number') {\n          shape.push('number');\n          break;\n        } else {\n          lastData = possibleNumber;\n        }\n      } else if (\n        typeof lastData === 'object' &&\n        typeof (lastData as Float32Array).buffer !== 'object'\n      ) {\n        shape.push('object');\n        const possibleNumber: number | INumberHash = (lastData as INumberHash)[\n          p\n        ];\n        if (typeof possibleNumber === 'number') {\n          shape.push('number');\n          break;\n        } else {\n          lastData = possibleNumber;\n        }\n      } else {\n        throw new Error('unhandled signature');\n      }\n    }\n    return shape;\n  },\n\n  addKeys(value: number[] | INumberHash, table: INumberHash): INumberHash {\n    if (Array.isArray(value)) return table;\n    let i = Object.keys(table).length;\n    for (const p in value) {\n      if (!value.hasOwnProperty(p)) continue;\n      if (table.hasOwnProperty(p)) continue;\n      table[p] = i++;\n    }\n    return table;\n  },\n};\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.thaw = exports.Block = exports.Thaw = void 0;\n/**\n * thaw an array of items\n */\nvar Thaw = /** @class */ (function () {\n    function Thaw(items, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var _a = __assign(__assign({}, Thaw.defaultSettings), options), each = _a.each, done = _a.done;\n        this.i = 0;\n        this.isStopped = false;\n        this.items = items;\n        this.options = options;\n        this.tick = function () {\n            if (_this.isStopped)\n                return;\n            _this.timeout = setTimeout(_this.tick, 0);\n            if (Thaw.thawing)\n                return;\n            var item = _this.items[_this.i];\n            if (_this.i >= _this.items.length) {\n                if (done !== null) {\n                    Thaw.thawing = true;\n                    done();\n                    Thaw.thawing = false;\n                }\n                _this.isStopped = true;\n                clearTimeout(_this.timeout);\n                return;\n            }\n            if (each !== null) {\n                Thaw.thawing = true;\n                each(item, _this.i);\n                Thaw.thawing = false;\n            }\n            else if (item !== undefined) {\n                item();\n            }\n            _this.i++;\n        };\n        Thaw.thaws.push(this);\n        if (!options.delay) {\n            this.tick();\n        }\n    }\n    Object.defineProperty(Thaw, \"isThawing\", {\n        /**\n         * returns if Thaw.js is thawing\n         */\n        get: function () {\n            return Thaw.thawing;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Stops all Thaw instances\n     */\n    Thaw.stopAll = function () {\n        for (var i = 0; i < Thaw.thaws.length; i++) {\n            Thaw.thaws[i].stop();\n        }\n    };\n    /**\n     * readies thaw to continue\n     */\n    Thaw.prototype.makeReady = function () {\n        if (this.isStopped) {\n            this.isStopped = false;\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Adds an item to the end of this instance of Thaw and readies Thaw to process it\n     */\n    Thaw.prototype.add = function (item) {\n        this.items.push(item);\n        if (this.makeReady()) {\n            this.tick();\n        }\n        return this;\n    };\n    /**\n     * Inserts an item just after the current item being processed in Thaw and readies Thaw to process it\n     */\n    Thaw.prototype.insert = function (item) {\n        this.items.splice(this.i, 0, item);\n        if (this.makeReady()) {\n            this.tick();\n        }\n        return this;\n    };\n    /**\n     * Adds an Array to the end of this instance of Thaw and readies Thaw to process it\n     */\n    Thaw.prototype.addArray = function (items) {\n        this.items = this.items.concat(items);\n        if (this.makeReady()) {\n            this.tick();\n        }\n        return this;\n    };\n    /**\n     * Inserts an Array just after the current item being processed in Thaw and readies Thaw to process them\n     */\n    Thaw.prototype.insertArray = function (items) {\n        var before = this.items.splice(0, this.i);\n        var after = this.items;\n        this.items = before.concat(items, after);\n        if (this.makeReady()) {\n            this.tick();\n        }\n        return this;\n    };\n    /**\n     * Stops this instance of Thaw\n     */\n    Thaw.prototype.stop = function () {\n        this.isStopped = true;\n        clearTimeout(this.timeout);\n        if (this.options.done) {\n            this.options.done();\n        }\n        return this;\n    };\n    Thaw.thawing = false;\n    Thaw.thaws = [];\n    Thaw.defaultSettings = {\n        each: null,\n        done: null\n    };\n    return Thaw;\n}());\nexports.Thaw = Thaw;\n/**\n * simple thaw\n */\nfunction thaw(items, options) {\n    return new Thaw(items, options);\n}\nexports.thaw = thaw;\nvar Block = /** @class */ (function () {\n    function Block(options, count) {\n        if (count === void 0) { count = 200; }\n        this.index = 0;\n        this.thaws = [];\n        this.count = count;\n        this.options = options;\n    }\n    /**\n     * add an item to the end of items\n     */\n    Block.prototype.add = function (item) {\n        var next = this.next();\n        next.add(item);\n        return this;\n    };\n    /**\n     * add an Array to the end of items\n     */\n    Block.prototype.addArray = function (items) {\n        var next = this.next();\n        next.addArray(items);\n        return this;\n    };\n    /**\n     * insert an item into items @ current position\n     */\n    Block.prototype.insert = function (item) {\n        var next = this.next();\n        next.insert(item);\n        return this;\n    };\n    /**\n     * insert and array into items @ current position\n     */\n    Block.prototype.insertArray = function (items) {\n        var next = this.next();\n        next.insertArray(items);\n        return this;\n    };\n    /**\n     * Stops all thaws in this block\n     */\n    Block.prototype.stop = function () {\n        for (var i = 0; i < this.thaws.length; i++) {\n            this.thaws[i].stop();\n        }\n        return this;\n    };\n    /**\n     * Get next available in block\n     */\n    Block.prototype.next = function () {\n        var thaw;\n        var thaws = this.thaws;\n        if (thaws.length < this.count) {\n            thaw = new Thaw([], this.options);\n            thaws.push(thaw);\n        }\n        else {\n            thaw = thaws[this.index] || null;\n        }\n        this.index++;\n        if (this.index >= this.count) {\n            this.index = 0;\n        }\n        return thaw;\n    };\n    return Block;\n}());\nexports.Block = Block;\nif (typeof window !== 'undefined') {\n    // @ts-ignore\n    window.Thaw = Thaw;\n    // @ts-ignore\n    window.thaw = thaw;\n    // @ts-ignore\n    window.Thaw.Block = Block;\n}\n","export function arraysToFloat32Arrays(arrays: number[][]): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (let i = 0; i < arrays.length; i++) {\n    result.push(Float32Array.from(arrays[i]));\n  }\n  return result;\n}\n\nexport function inputOutputArraysToFloat32Arrays(\n  input: number[][],\n  output: number[][]\n): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (let i = 0; i < input.length; i++) {\n    result.push(Float32Array.from(input[i]));\n  }\n  for (let i = 0; i < output.length; i++) {\n    result.push(Float32Array.from(output[i]));\n  }\n  return result;\n}\n\nexport function arrayToFloat32Arrays(array: number[]): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (let i = 0; i < array.length; i++) {\n    result.push(Float32Array.from([array[i]]));\n  }\n  return result;\n}\n\nexport function inputOutputArrayToFloat32Arrays(\n  input: number[],\n  output: number[]\n): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (let i = 0; i < input.length; i++) {\n    result.push(Float32Array.from([input[i]]));\n  }\n  for (let i = 0; i < output.length; i++) {\n    result.push(Float32Array.from([output[i]]));\n  }\n  return result;\n}\n\nexport function arrayToFloat32Array(array: number[]): Float32Array {\n  return Float32Array.from(array);\n}\n\nexport function objectsToFloat32Arrays(\n  objects: Array<Record<string, number>>,\n  table: Record<string, number>,\n  length: number\n): Float32Array[] {\n  const results: Float32Array[] = [];\n  for (let i = 0; i < objects.length; i++) {\n    const object = objects[i];\n    const result = new Float32Array(length);\n    for (const p in object) {\n      if (object.hasOwnProperty(p)) {\n        result[table[p]] = object[p];\n      }\n    }\n    results.push(result);\n  }\n  return results;\n}\n\nexport function inputOutputObjectsToFloat32Arrays(\n  input: Array<Record<string, number>>,\n  output: Array<Record<string, number>>,\n  inputTable: Record<string, number>,\n  outputTable: Record<string, number>,\n  inputLength: number,\n  outputLength: number\n): Float32Array[] {\n  const results: Float32Array[] = [];\n  for (let i = 0; i < input.length; i++) {\n    const object = input[i];\n    const result = new Float32Array(inputLength);\n    for (const p in object) {\n      if (object.hasOwnProperty(p)) {\n        result[inputTable[p]] = object[p];\n      }\n    }\n    results.push(result);\n  }\n  for (let i = 0; i < output.length; i++) {\n    const object = output[i];\n    const result = new Float32Array(outputLength);\n    for (const p in object) {\n      if (object.hasOwnProperty(p)) {\n        result[outputTable[p]] = object[p];\n      }\n    }\n    results.push(result);\n  }\n  return results;\n}\n\nexport function objectToFloat32Arrays(\n  object: Record<string, number>\n): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (const p in object) {\n    if (!object.hasOwnProperty(p)) continue;\n    result.push(Float32Array.from([object[p]]));\n  }\n  return result;\n}\n\nexport function inputOutputObjectToFloat32Arrays(\n  input: Record<string, number>,\n  output: Record<string, number>\n): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (const p in input) {\n    if (!input.hasOwnProperty(p)) continue;\n    result.push(Float32Array.from([input[p]]));\n  }\n  for (const p in output) {\n    if (!output.hasOwnProperty(p)) continue;\n    result.push(Float32Array.from([output[p]]));\n  }\n  return result;\n}\n\nexport function objectToFloat32Array(\n  object: Record<string, number>,\n  table: Record<string, number>,\n  length: number\n): Float32Array {\n  const result = new Float32Array(length);\n  for (const p in object) {\n    if (object.hasOwnProperty(p)) {\n      result[table[p]] = object[p];\n    }\n  }\n  return result;\n}\n","import { InputOutputValue, INumberHash, ITrainingDatum } from '../lookup';\n\nexport type LookupTableProp = 'input' | 'output';\n\nexport class LookupTable {\n  length: number;\n  prop: LookupTableProp | null = null;\n  table: INumberHash = {};\n  constructor(\n    data: ITrainingDatum[] | InputOutputValue[] | InputOutputValue[][],\n    prop?: LookupTableProp\n  ) {\n    this.length = 0;\n    const table = this.table;\n    if (prop) {\n      this.prop = prop;\n      for (let i = 0; i < data.length; i++) {\n        const datum = (data as ITrainingDatum[])[i];\n        const object = datum[prop] as INumberHash;\n        for (const p in object) {\n          if (!object.hasOwnProperty(p)) continue;\n          if (table.hasOwnProperty(p)) continue;\n          table[p] = this.length++;\n        }\n      }\n    } else if (Array.isArray(data) && Array.isArray(data[0])) {\n      for (let i = 0; i < data.length; i++) {\n        const array = (data as InputOutputValue[][])[i];\n        for (let j = 0; j < array.length; j++) {\n          const object = array[j];\n          for (const p in object) {\n            if (!object.hasOwnProperty(p)) continue;\n            if (table.hasOwnProperty(p)) continue;\n            table[p] = this.length++;\n          }\n        }\n      }\n    } else {\n      for (let i = 0; i < data.length; i++) {\n        const object = (data as INumberHash[])[i];\n        for (const p in object) {\n          if (!object.hasOwnProperty(p)) continue;\n          if (table.hasOwnProperty(p)) continue;\n          table[p] = this.length++;\n        }\n      }\n    }\n  }\n}\n","export function max(\n  values:\n    | Float32Array\n    | {\n        [key: string]: number;\n      }\n): number {\n  if (Array.isArray(values) || values instanceof Float32Array) {\n    return Math.max(...values);\n  } else {\n    return Math.max(...Object.values(values));\n  }\n}\n","export function mse(errors: Float32Array): number {\n  // mean squared error\n  let sum = 0;\n  for (let i = 0; i < errors.length; i++) {\n    sum += errors[i] ** 2;\n  }\n  return sum / errors.length;\n}\n","export function randomWeight(): number {\n  return Math.random() * 0.4 - 0.2;\n}\n","/**\n * Returns a random float between given min and max bounds (inclusive)\n * @param min Minimum value of the ranfom float\n * @param max Maximum value of the random float\n */\nexport function randomFloat(min: number, max: number): number {\n  return Math.random() * (max - min) + min;\n}\n\n/**\n * Complicated math. All you need to know is that it returns a random number.\n * More info: https://en.wikipedia.org/wiki/Normal_distribution\n */\nexport function gaussRandom(): number {\n  if (gaussRandom.returnV) {\n    gaussRandom.returnV = false;\n    return gaussRandom.vVal;\n  }\n  const u = 2 * Math.random() - 1;\n  const v = 2 * Math.random() - 1;\n  const r = u * u + v * v;\n  if (r === 0 || r > 1) {\n    return gaussRandom();\n  }\n  const c = Math.sqrt((-2 * Math.log(r)) / r);\n  gaussRandom.vVal = v * c; // cache this\n  gaussRandom.returnV = true;\n  return u * c;\n}\n\n/**\n * Returns a random integer between given min and max bounds\n * @param min Minimum value of the random integer\n * @param max Maximum value of the random integer\n */\nexport function randomInteger(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\n/**\n * If you know what this is: https://en.wikipedia.org/wiki/Normal_distribution\n * @param mu\n * @param std\n */\nexport function randomN(mu: number, std: number): number {\n  return mu + gaussRandom() * std;\n}\n\ngaussRandom.returnV = false;\ngaussRandom.vVal = 0;\n","import { randomWeight } from './random-weight';\nimport { randomFloat } from './random';\n\n/**\n * Returns an array of given size, full of randomness\n */\nexport function randos(size: number, std: number | null = null): Float32Array {\n  const array: Float32Array = new Float32Array(size);\n  if (std === null) {\n    for (let i = 0; i < size; i++) {\n      array[i] = randomWeight();\n    }\n  } else {\n    for (let i = 0; i < size; i++) {\n      array[i] = randomFloat(-std, std);\n    }\n  }\n  return array;\n}\n\n/**\n * Returns a 2D matrix of given size, full of randomness\n */\nexport function randos2D(\n  width: number,\n  height: number,\n  std?: number | null\n): Float32Array[] {\n  const result: Float32Array[] = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = randos(width, std);\n  }\n  return result;\n}\n\n/**\n * Returns a 3D tensor of given size, full of randomness\n */\nexport function randos3D(\n  width: number,\n  height: number,\n  depth: number,\n  std?: number | null\n): Float32Array[][] {\n  const result: Float32Array[][] = new Array(depth);\n  for (let z = 0; z < depth; z++) {\n    result[z] = randos2D(width, height, std);\n  }\n  return result;\n}\n","/**\n * Returns an array of zeros\n */\nexport function zeros(size: number): Float32Array {\n  return new Float32Array(size);\n}\n","import { Thaw } from 'thaw.js';\nimport { ITrainingStatus } from './feed-forward';\nimport { INumberHash, lookup } from './lookup';\nimport {\n  INeuralNetworkBinaryTestResult,\n  INeuralNetworkState,\n  INeuralNetworkTestResult,\n} from './neural-network-types';\nimport { arrayToFloat32Array } from './utilities/cast';\nimport { LookupTable } from './utilities/lookup-table';\nimport { max } from './utilities/max';\nimport { mse } from './utilities/mse';\nimport { randos } from './utilities/randos';\nimport { zeros } from './utilities/zeros';\n\ntype NeuralNetworkFormatter =\n  | ((v: INumberHash) => Float32Array)\n  | ((v: number[]) => Float32Array);\n\nexport function getTypedArrayFn(\n  value: INeuralNetworkData,\n  table: INumberHash | null\n): null | NeuralNetworkFormatter {\n  if ((value as Float32Array).buffer instanceof ArrayBuffer) {\n    return null;\n  }\n  if (Array.isArray(value)) {\n    return arrayToFloat32Array;\n  }\n  if (!table) throw new Error('table is not Object');\n  const { length } = Object.keys(table);\n  return (v: INumberHash): Float32Array => {\n    const array = new Float32Array(length);\n    for (const p in table) {\n      if (!table.hasOwnProperty(p)) continue;\n      if (typeof v[p] !== 'number') continue;\n      array[table[p]] = v[p] || 0;\n    }\n    return array;\n  };\n}\n\nexport type NeuralNetworkActivation =\n  | 'sigmoid'\n  | 'relu'\n  | 'leaky-relu'\n  | 'tanh';\n\nexport interface IJSONLayer {\n  biases: number[];\n  weights: number[][];\n}\n\nexport interface INeuralNetworkJSON {\n  type: string;\n  sizes: number[];\n  layers: IJSONLayer[];\n  inputLookup: INumberHash | null;\n  inputLookupLength: number;\n  outputLookup: INumberHash | null;\n  outputLookupLength: number;\n  options: INeuralNetworkOptions;\n  trainOpts: INeuralNetworkTrainOptionsJSON;\n}\n\nexport interface INeuralNetworkOptions {\n  inputSize: number;\n  outputSize: number;\n  binaryThresh: number;\n  hiddenLayers?: number[];\n}\n\nexport function defaults(): INeuralNetworkOptions {\n  return {\n    inputSize: 0,\n    outputSize: 0,\n    binaryThresh: 0.5,\n  };\n}\n\nexport interface INeuralNetworkTrainOptionsJSON {\n  activation: NeuralNetworkActivation | string;\n  iterations: number;\n  errorThresh: number;\n  log: boolean;\n  logPeriod: number;\n  leakyReluAlpha: number;\n  learningRate: number;\n  momentum: number;\n  callbackPeriod: number;\n  timeout: number | 'Infinity';\n  praxis?: 'adam';\n  beta1: number;\n  beta2: number;\n  epsilon: number;\n}\n\nexport interface INeuralNetworkPreppedTrainingData<T> {\n  status: ITrainingStatus;\n  preparedData: Array<INeuralNetworkDatumFormatted<T>>;\n  endTime: number;\n}\n\nexport interface INeuralNetworkTrainOptions {\n  activation: NeuralNetworkActivation | string;\n  iterations: number;\n  errorThresh: number;\n  log: boolean | ((status: INeuralNetworkState) => void);\n  logPeriod: number;\n  leakyReluAlpha: number;\n  learningRate: number;\n  momentum: number;\n  callback?: (status: { iterations: number; error: number }) => void;\n  callbackPeriod: number;\n  timeout: number;\n  praxis?: 'adam';\n  beta1: number;\n  beta2: number;\n  epsilon: number;\n}\n\nexport function trainDefaults(): INeuralNetworkTrainOptions {\n  return {\n    activation: 'sigmoid',\n    iterations: 20000, // the maximum times to iterate the training data\n    errorThresh: 0.005, // the acceptable error percentage from training data\n    log: false, // true to use console.log, when a function is supplied it is used\n    logPeriod: 10, // iterations between logging out\n    leakyReluAlpha: 0.01,\n    learningRate: 0.3, // multiply's against the input and the delta then adds to momentum\n    momentum: 0.1, // multiply's against the specified \"change\" then adds to learning rate for change\n    callbackPeriod: 10, // the number of iterations through the training data between callback calls\n    timeout: Infinity, // the max number of milliseconds to train for\n    beta1: 0.9,\n    beta2: 0.999,\n    epsilon: 1e-8,\n  };\n}\n\nexport type INeuralNetworkData = number[] | Float32Array | Partial<INumberHash>;\n\n// TODO: should be replaced by ITrainingDatum\nexport interface INeuralNetworkDatum<InputType, OutputType> {\n  input: InputType;\n  output: OutputType;\n}\n\nexport interface INeuralNetworkDatumFormatted<T> {\n  input: T;\n  output: T;\n}\n\nexport class NeuralNetwork<\n  InputType extends INeuralNetworkData,\n  OutputType extends INeuralNetworkData\n> {\n  options: INeuralNetworkOptions = defaults();\n  trainOpts: INeuralNetworkTrainOptions = trainDefaults();\n  sizes: number[] = [];\n  outputLayer = -1;\n  biases: Float32Array[] = [];\n  weights: Float32Array[][] = []; // weights for bias nodes\n  outputs: Float32Array[] = [];\n  // state for training\n  deltas: Float32Array[] = [];\n  changes: Float32Array[][] = []; // for momentum\n  errors: Float32Array[] = [];\n\n  errorCheckInterval = 1;\n\n  inputLookup: INumberHash | null = null;\n  inputLookupLength = 0;\n  outputLookup: INumberHash | null = null;\n  outputLookupLength = 0;\n\n  _formatInput: NeuralNetworkFormatter | null = null;\n  _formatOutput: NeuralNetworkFormatter | null = null;\n\n  runInput: (input: Float32Array) => Float32Array = (input: Float32Array) => {\n    this.setActivation();\n    return this.runInput(input);\n  };\n\n  calculateDeltas: (output: Float32Array) => void = (\n    output: Float32Array\n  ): void => {\n    this.setActivation();\n    return this.calculateDeltas(output);\n  };\n\n  // adam\n  biasChangesLow: Float32Array[] = [];\n  biasChangesHigh: Float32Array[] = [];\n  changesLow: Float32Array[][] = [];\n  changesHigh: Float32Array[][] = [];\n  iterations = 0;\n\n  constructor(\n    options: Partial<INeuralNetworkOptions & INeuralNetworkTrainOptions> = {}\n  ) {\n    this.options = { ...this.options, ...options };\n    this.updateTrainingOptions(options);\n\n    const { inputSize, hiddenLayers, outputSize } = this.options;\n    if (inputSize && outputSize) {\n      this.sizes = [inputSize].concat(hiddenLayers ?? []).concat([outputSize]);\n    }\n  }\n\n  /**\n   *\n   * Expects this.sizes to have been set\n   */\n  initialize(): void {\n    if (!this.sizes.length) {\n      throw new Error('Sizes must be set before initializing');\n    }\n\n    this.outputLayer = this.sizes.length - 1;\n    this.biases = new Array(this.outputLayer); // weights for bias nodes\n    this.weights = new Array(this.outputLayer);\n    this.outputs = new Array(this.outputLayer);\n\n    // state for training\n    this.deltas = new Array(this.outputLayer);\n    this.changes = new Array(this.outputLayer); // for momentum\n    this.errors = new Array(this.outputLayer);\n\n    for (let layerIndex = 0; layerIndex <= this.outputLayer; layerIndex++) {\n      const size = this.sizes[layerIndex];\n      this.deltas[layerIndex] = zeros(size);\n      this.errors[layerIndex] = zeros(size);\n      this.outputs[layerIndex] = zeros(size);\n\n      if (layerIndex > 0) {\n        this.biases[layerIndex] = randos(size);\n        this.weights[layerIndex] = new Array(size);\n        this.changes[layerIndex] = new Array(size);\n\n        for (let nodeIndex = 0; nodeIndex < size; nodeIndex++) {\n          const prevSize = this.sizes[layerIndex - 1];\n          this.weights[layerIndex][nodeIndex] = randos(prevSize);\n          this.changes[layerIndex][nodeIndex] = zeros(prevSize);\n        }\n      }\n    }\n\n    this.setActivation();\n    if (this.trainOpts.praxis === 'adam') {\n      this._setupAdam();\n    }\n  }\n\n  setActivation(activation?: NeuralNetworkActivation): void {\n    const value = activation ?? this.trainOpts.activation;\n    switch (value) {\n      case 'sigmoid':\n        this.runInput = this._runInputSigmoid;\n        this.calculateDeltas = this._calculateDeltasSigmoid;\n        break;\n      case 'relu':\n        this.runInput = this._runInputRelu;\n        this.calculateDeltas = this._calculateDeltasRelu;\n        break;\n      case 'leaky-relu':\n        this.runInput = this._runInputLeakyRelu;\n        this.calculateDeltas = this._calculateDeltasLeakyRelu;\n        break;\n      case 'tanh':\n        this.runInput = this._runInputTanh;\n        this.calculateDeltas = this._calculateDeltasTanh;\n        break;\n      default:\n        throw new Error(\n          `Unknown activation ${value}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n        );\n    }\n  }\n\n  get isRunnable(): boolean {\n    return this.sizes.length > 0;\n  }\n\n  run(input: Partial<InputType>): OutputType {\n    if (!this.isRunnable) {\n      throw new Error('network not runnable');\n    }\n    let formattedInput: Float32Array;\n    if (this.inputLookup) {\n      formattedInput = lookup.toArray(\n        this.inputLookup,\n        (input as unknown) as INumberHash,\n        this.inputLookupLength\n      );\n    } else {\n      formattedInput = (input as unknown) as Float32Array;\n    }\n    this.validateInput(formattedInput);\n    const output = this.runInput(formattedInput).slice(0);\n    if (this.outputLookup) {\n      return (lookup.toObject(\n        this.outputLookup,\n        output\n      ) as unknown) as OutputType;\n    }\n    return (output as unknown) as OutputType;\n  }\n\n  _runInputSigmoid(input: Float32Array): Float32Array {\n    this.outputs[0] = input; // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeLayer = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeLayer; node++) {\n        const weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // sigmoid\n        activeOutputs[node] = 1 / (1 + Math.exp(-sum));\n      }\n      output = input = activeOutputs;\n    }\n    if (!output) {\n      throw new Error('output was empty');\n    }\n    return output;\n  }\n\n  _runInputRelu(input: Float32Array): Float32Array {\n    this.outputs[0] = input; // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeSize = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeSize; node++) {\n        const weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // relu\n        activeOutputs[node] = sum < 0 ? 0 : sum;\n      }\n      output = input = activeOutputs;\n    }\n    if (!output) {\n      throw new Error('output was empty');\n    }\n    return output;\n  }\n\n  _runInputLeakyRelu(input: Float32Array): Float32Array {\n    this.outputs[0] = input; // set output state of input layer\n    const { leakyReluAlpha } = this.trainOpts;\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeSize = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeSize; node++) {\n        const weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // leaky relu\n        activeOutputs[node] = Math.max(sum, leakyReluAlpha * sum);\n      }\n      output = input = activeOutputs;\n    }\n    if (!output) {\n      throw new Error('output was empty');\n    }\n    return output;\n  }\n\n  _runInputTanh(input: Float32Array): Float32Array {\n    this.outputs[0] = input; // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeSize = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeSize; node++) {\n        const weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // tanh\n        activeOutputs[node] = Math.tanh(sum);\n      }\n      output = input = activeOutputs;\n    }\n    if (!output) {\n      throw new Error('output was empty');\n    }\n    return output;\n  }\n\n  /**\n   *\n   * Verifies network sizes are initialized\n   * If they are not it will initialize them based off the data set.\n   */\n  verifyIsInitialized(\n    preparedData: Array<INeuralNetworkDatumFormatted<Float32Array>>\n  ): void {\n    if (this.sizes.length && this.outputLayer > 0) return;\n\n    this.sizes = [];\n    this.sizes.push(preparedData[0].input.length);\n    if (!this.options.hiddenLayers) {\n      this.sizes.push(\n        Math.max(3, Math.floor(preparedData[0].input.length / 2))\n      );\n    } else {\n      this.options.hiddenLayers.forEach((size) => {\n        this.sizes.push(size);\n      });\n    }\n    this.sizes.push(preparedData[0].output.length);\n\n    this.initialize();\n  }\n\n  updateTrainingOptions(trainOpts: Partial<INeuralNetworkTrainOptions>): void {\n    const merged = { ...this.trainOpts, ...trainOpts };\n    this.validateTrainingOptions(merged);\n    this.trainOpts = merged;\n    this.setLogMethod(this.trainOpts.log);\n  }\n\n  validateTrainingOptions(options: INeuralNetworkTrainOptions): void {\n    const validations: { [fnName: string]: () => boolean } = {\n      activation: () => {\n        return ['sigmoid', 'relu', 'leaky-relu', 'tanh'].includes(\n          options.activation\n        );\n      },\n      iterations: () => {\n        const val = options.iterations;\n        return typeof val === 'number' && val > 0;\n      },\n      errorThresh: () => {\n        const val = options.errorThresh;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      log: () => {\n        const val = options.log;\n        return typeof val === 'function' || typeof val === 'boolean';\n      },\n      logPeriod: () => {\n        const val = options.logPeriod;\n        return typeof val === 'number' && val > 0;\n      },\n      leakyReluAlpha: () => {\n        const val = options.leakyReluAlpha;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      learningRate: () => {\n        const val = options.learningRate;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      momentum: () => {\n        const val = options.momentum;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      callback: () => {\n        const val = options.callback;\n        return typeof val === 'function' || val === undefined;\n      },\n      callbackPeriod: () => {\n        const val = options.callbackPeriod;\n        return typeof val === 'number' && val > 0;\n      },\n      timeout: () => {\n        const val = options.timeout;\n        return typeof val === 'number' && val > 0;\n      },\n      praxis: () => {\n        const val = options.praxis;\n        return !val || val === 'adam';\n      },\n      beta1: () => {\n        const val = options.beta1;\n        return val > 0 && val < 1;\n      },\n      beta2: () => {\n        const val = options.beta2;\n        return val > 0 && val < 1;\n      },\n      epsilon: () => {\n        const val = options.epsilon;\n        return val > 0 && val < 1;\n      },\n    };\n    for (const p in validations) {\n      const v = (options as unknown) as { [v: string]: string };\n      if (!validations[p]()) {\n        throw new Error(\n          `[${p}, ${v[p]}] is out of normal training range, your network will probably not train.`\n        );\n      }\n    }\n  }\n\n  /**\n   *\n   *  Gets JSON of trainOpts object\n   *    NOTE: Activation is stored directly on JSON object and not in the training options\n   */\n  getTrainOptsJSON(): INeuralNetworkTrainOptionsJSON {\n    const {\n      activation,\n      iterations,\n      errorThresh,\n      log,\n      logPeriod,\n      leakyReluAlpha,\n      learningRate,\n      momentum,\n      callbackPeriod,\n      timeout,\n      praxis,\n      beta1,\n      beta2,\n      epsilon,\n    } = this.trainOpts;\n    return {\n      activation,\n      iterations,\n      errorThresh,\n      log:\n        typeof log === 'function'\n          ? true\n          : typeof log === 'boolean'\n          ? log\n          : false,\n      logPeriod,\n      leakyReluAlpha,\n      learningRate,\n      momentum,\n      callbackPeriod,\n      timeout: timeout === Infinity ? 'Infinity' : timeout,\n      praxis,\n      beta1,\n      beta2,\n      epsilon,\n    };\n  }\n\n  setLogMethod(log: boolean | ((state: INeuralNetworkState) => void)): void {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      this.trainOpts.log = this.logTrainingStatus;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  logTrainingStatus(status: INeuralNetworkState): void {\n    console.log(\n      `iterations: ${status.iterations}, training error: ${status.error}`\n    );\n  }\n\n  calculateTrainingError(\n    data: Array<INeuralNetworkDatumFormatted<Float32Array>>\n  ): number {\n    let sum = 0;\n    for (let i = 0; i < data.length; ++i) {\n      sum += this.trainPattern(data[i], true) as number;\n    }\n    return sum / data.length;\n  }\n\n  trainPatterns(data: Array<INeuralNetworkDatumFormatted<Float32Array>>): void {\n    for (let i = 0; i < data.length; ++i) {\n      this.trainPattern(data[i]);\n    }\n  }\n\n  trainingTick(\n    data: Array<INeuralNetworkDatumFormatted<Float32Array>>,\n    status: INeuralNetworkState,\n    endTime: number\n  ): boolean {\n    const {\n      callback,\n      callbackPeriod,\n      errorThresh,\n      iterations,\n      log,\n      logPeriod,\n    } = this.trainOpts;\n\n    if (\n      status.iterations >= iterations ||\n      status.error <= errorThresh ||\n      Date.now() >= endTime\n    ) {\n      return false;\n    }\n\n    status.iterations++;\n\n    if (log && status.iterations % logPeriod === 0) {\n      status.error = this.calculateTrainingError(data);\n      (log as (state: INeuralNetworkState) => void)(status);\n    } else if (status.iterations % this.errorCheckInterval === 0) {\n      status.error = this.calculateTrainingError(data);\n    } else {\n      this.trainPatterns(data);\n    }\n\n    if (callback && status.iterations % callbackPeriod === 0) {\n      callback({\n        iterations: status.iterations,\n        error: status.error,\n      });\n    }\n    return true;\n  }\n\n  prepTraining(\n    data: Array<INeuralNetworkDatum<InputType, OutputType>>,\n    options: Partial<INeuralNetworkTrainOptions> = {}\n  ): INeuralNetworkPreppedTrainingData<Float32Array> {\n    this.updateTrainingOptions(options);\n    const preparedData = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized(preparedData);\n    this.validateData(preparedData);\n    return {\n      preparedData,\n      status,\n      endTime,\n    };\n  }\n\n  train(\n    data: Array<INeuralNetworkDatum<Partial<InputType>, Partial<OutputType>>>,\n    options: Partial<INeuralNetworkTrainOptions> = {}\n  ): INeuralNetworkState {\n    const { preparedData, status, endTime } = this.prepTraining(\n      data as Array<INeuralNetworkDatum<InputType, OutputType>>,\n      options\n    );\n\n    while (true) {\n      if (!this.trainingTick(preparedData, status, endTime)) {\n        break;\n      }\n    }\n    return status;\n  }\n\n  async trainAsync(\n    data: Array<INeuralNetworkDatum<InputType, OutputType>>,\n    options: Partial<INeuralNetworkTrainOptions> = {}\n  ): Promise<ITrainingStatus> {\n    const { preparedData, status, endTime } = this.prepTraining(data, options);\n\n    return await new Promise((resolve, reject) => {\n      try {\n        const thawedTrain: Thaw = new Thaw(\n          new Array(this.trainOpts.iterations),\n          {\n            delay: true,\n            each: () =>\n              this.trainingTick(preparedData, status, endTime) ||\n              thawedTrain.stop(),\n            done: () => resolve(status),\n          }\n        );\n        thawedTrain.tick();\n      } catch (trainError) {\n        reject(trainError);\n      }\n    });\n  }\n\n  trainPattern(\n    value: INeuralNetworkDatumFormatted<Float32Array>,\n    logErrorRate?: boolean\n  ): number | null {\n    // forward propagate\n    this.runInput(value.input);\n\n    // back propagate\n    this.calculateDeltas(value.output);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return mse(this.errors[this.outputLayer]);\n    }\n    return null;\n  }\n\n  _calculateDeltasSigmoid(target: Float32Array): void {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const activeSize = this.sizes[layer];\n      const activeOutput = this.outputs[layer];\n      const activeError = this.errors[layer];\n      const activeDeltas = this.deltas[layer];\n      const nextLayer = this.weights[layer + 1];\n\n      for (let node = 0; node < activeSize; node++) {\n        const output = activeOutput[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          const deltas = this.deltas[layer + 1];\n          for (let k = 0; k < deltas.length; k++) {\n            error += deltas[k] * nextLayer[k][node];\n          }\n        }\n        activeError[node] = error;\n        activeDeltas[node] = error * output * (1 - output);\n      }\n    }\n  }\n\n  _calculateDeltasRelu(target: Float32Array): void {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextWeights = this.weights[layer + 1];\n      const nextDeltas = this.deltas[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = output > 0 ? error : 0;\n      }\n    }\n  }\n\n  _calculateDeltasLeakyRelu(target: Float32Array): void {\n    const alpha = this.trainOpts.leakyReluAlpha;\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextDeltas = this.deltas[layer + 1];\n      const nextWeights = this.weights[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = output > 0 ? error : alpha * error;\n      }\n    }\n  }\n\n  _calculateDeltasTanh(target: Float32Array): void {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextDeltas = this.deltas[layer + 1];\n      const nextWeights = this.weights[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = (1 - output * output) * error;\n      }\n    }\n  }\n\n  /**\n   *\n   * Changes weights of networks\n   */\n  adjustWeights(): void {\n    const { learningRate, momentum } = this.trainOpts;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const incoming = this.outputs[layer - 1];\n      const activeSize = this.sizes[layer];\n      const activeDelta = this.deltas[layer];\n      const activeChanges = this.changes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n\n      for (let node = 0; node < activeSize; node++) {\n        const delta = activeDelta[node];\n\n        for (let k = 0; k < incoming.length; k++) {\n          let change = activeChanges[node][k];\n\n          change = learningRate * delta * incoming[k] + momentum * change;\n\n          activeChanges[node][k] = change;\n          activeWeights[node][k] += change;\n        }\n        activeBiases[node] += learningRate * delta;\n      }\n    }\n  }\n\n  _setupAdam(): void {\n    this.biasChangesLow = [];\n    this.biasChangesHigh = [];\n    this.changesLow = [];\n    this.changesHigh = [];\n    this.iterations = 0;\n\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      const size = this.sizes[layer];\n      if (layer > 0) {\n        this.biasChangesLow[layer] = zeros(size);\n        this.biasChangesHigh[layer] = zeros(size);\n        this.changesLow[layer] = new Array(size);\n        this.changesHigh[layer] = new Array(size);\n\n        for (let node = 0; node < size; node++) {\n          const prevSize = this.sizes[layer - 1];\n          this.changesLow[layer][node] = zeros(prevSize);\n          this.changesHigh[layer][node] = zeros(prevSize);\n        }\n      }\n    }\n\n    this.adjustWeights = this._adjustWeightsAdam;\n  }\n\n  _adjustWeightsAdam(): void {\n    this.iterations++;\n\n    const { iterations } = this;\n    const { beta1, beta2, epsilon, learningRate } = this.trainOpts;\n\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const incoming = this.outputs[layer - 1];\n      const currentSize = this.sizes[layer];\n      const currentDeltas = this.deltas[layer];\n      const currentChangesLow = this.changesLow[layer];\n      const currentChangesHigh = this.changesHigh[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentBiasChangesLow = this.biasChangesLow[layer];\n      const currentBiasChangesHigh = this.biasChangesHigh[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const delta = currentDeltas[node];\n\n        for (let k = 0; k < incoming.length; k++) {\n          const gradient = delta * incoming[k];\n          const changeLow =\n            currentChangesLow[node][k] * beta1 + (1 - beta1) * gradient;\n          const changeHigh =\n            currentChangesHigh[node][k] * beta2 +\n            (1 - beta2) * gradient * gradient;\n\n          const momentumCorrection =\n            changeLow / (1 - Math.pow(beta1, iterations));\n          const gradientCorrection =\n            changeHigh / (1 - Math.pow(beta2, iterations));\n\n          currentChangesLow[node][k] = changeLow;\n          currentChangesHigh[node][k] = changeHigh;\n          currentWeights[node][k] +=\n            (learningRate * momentumCorrection) /\n            (Math.sqrt(gradientCorrection) + epsilon);\n        }\n\n        const biasGradient = currentDeltas[node];\n        const biasChangeLow =\n          currentBiasChangesLow[node] * beta1 + (1 - beta1) * biasGradient;\n        const biasChangeHigh =\n          currentBiasChangesHigh[node] * beta2 +\n          (1 - beta2) * biasGradient * biasGradient;\n\n        const biasMomentumCorrection =\n          currentBiasChangesLow[node] / (1 - Math.pow(beta1, iterations));\n        const biasGradientCorrection =\n          currentBiasChangesHigh[node] / (1 - Math.pow(beta2, iterations));\n\n        currentBiasChangesLow[node] = biasChangeLow;\n        currentBiasChangesHigh[node] = biasChangeHigh;\n        currentBiases[node] +=\n          (learningRate * biasMomentumCorrection) /\n          (Math.sqrt(biasGradientCorrection) + epsilon);\n      }\n    }\n  }\n\n  validateData(data: Array<INeuralNetworkDatumFormatted<Float32Array>>): void {\n    const inputSize = this.sizes[0];\n    const outputSize = this.sizes[this.sizes.length - 1];\n    const { length } = data;\n    for (let i = 0; i < length; i++) {\n      const { input, output } = data[i];\n      if (input.length !== inputSize) {\n        throw new Error(\n          `input at index ${i} length ${input.length} must be ${inputSize}`\n        );\n      }\n      if (data[i].output.length !== outputSize) {\n        throw new Error(\n          `output at index ${i} length ${output.length} must be ${outputSize}`\n        );\n      }\n    }\n  }\n\n  validateInput(formattedInput: Float32Array): void {\n    const inputSize = this.sizes[0];\n    if (formattedInput.length !== inputSize) {\n      throw new Error(\n        `input length ${formattedInput.length} must match options.inputSize of ${inputSize}`\n      );\n    }\n  }\n\n  formatData(\n    data: Array<INeuralNetworkDatum<InputType, OutputType>>\n  ): Array<INeuralNetworkDatumFormatted<Float32Array>> {\n    if (!Array.isArray(data[0].input)) {\n      if (this.inputLookup) {\n        this.inputLookupLength = Object.keys(this.inputLookup).length;\n      } else {\n        const inputLookup = new LookupTable(data, 'input');\n        this.inputLookup = inputLookup.table;\n        this.inputLookupLength = inputLookup.length;\n      }\n    }\n\n    if (!Array.isArray(data[0].output)) {\n      if (this.outputLookup) {\n        this.outputLookupLength = Object.keys(this.outputLookup).length;\n      } else {\n        const lookup = new LookupTable(data, 'output');\n        this.outputLookup = lookup.table;\n        this.outputLookupLength = lookup.length;\n      }\n    }\n\n    if (!this._formatInput) {\n      this._formatInput = getTypedArrayFn(data[0].input, this.inputLookup);\n    }\n\n    if (!this._formatOutput) {\n      this._formatOutput = getTypedArrayFn(data[0].output, this.outputLookup);\n    }\n\n    // turn sparse hash input into arrays with 0s as filler\n    if (this._formatInput && this._formatOutput) {\n      const result: Array<INeuralNetworkDatumFormatted<Float32Array>> = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: (this._formatInput as (v: INumberHash) => Float32Array)(\n            (data[i].input as unknown) as INumberHash\n          ),\n          output: (this._formatOutput as (v: INumberHash) => Float32Array)(\n            (data[i].output as unknown) as INumberHash\n          ),\n        });\n      }\n      return result;\n    }\n    if (this._formatInput) {\n      const result: Array<INeuralNetworkDatumFormatted<Float32Array>> = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: (this._formatInput as (v: INumberHash) => Float32Array)(\n            (data[i].input as unknown) as INumberHash\n          ),\n          output: (data[i].output as unknown) as Float32Array,\n        });\n      }\n      return result;\n    }\n    if (this._formatOutput) {\n      const result: Array<INeuralNetworkDatumFormatted<Float32Array>> = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: (data[i].input as unknown) as Float32Array,\n          output: (this._formatOutput as (v: INumberHash) => Float32Array)(\n            (data[i].output as unknown) as INumberHash\n          ),\n        });\n      }\n      return result;\n    }\n    return (data as unknown) as Array<\n      INeuralNetworkDatumFormatted<Float32Array>\n    >;\n  }\n\n  addFormat(data: INeuralNetworkDatum<InputType, OutputType>): void {\n    if (!Array.isArray(data.input) || typeof data.input[0] !== 'number') {\n      this.inputLookup = lookup.addKeys(\n        (data.input as unknown) as INumberHash,\n        this.inputLookup ?? {}\n      );\n      if (this.inputLookup) {\n        this.inputLookupLength = Object.keys(this.inputLookup).length;\n      }\n    }\n    if (!Array.isArray(data.output) || typeof data.output[0] !== 'number') {\n      this.outputLookup = lookup.addKeys(\n        (data.output as unknown) as INumberHash,\n        this.outputLookup ?? {}\n      );\n      if (this.outputLookup) {\n        this.outputLookupLength = Object.keys(this.outputLookup).length;\n      }\n    }\n  }\n\n  test(\n    data: Array<INeuralNetworkDatum<Partial<InputType>, Partial<OutputType>>>\n  ): INeuralNetworkTestResult | INeuralNetworkBinaryTestResult {\n    const { preparedData } = this.prepTraining(\n      data as Array<INeuralNetworkDatum<InputType, OutputType>>\n    );\n    // for binary classification problems with one output node\n    const isBinary = preparedData[0].output.length === 1;\n    // for classification problems\n    const misclasses = [];\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let errorSum = 0;\n    if (isBinary) {\n      let falsePos = 0;\n      let falseNeg = 0;\n      let truePos = 0;\n      let trueNeg = 0;\n\n      for (let i = 0; i < preparedData.length; i++) {\n        const output = this.runInput(preparedData[i].input);\n        const target = preparedData[i].output;\n        const actual = output[0] > this.options.binaryThresh ? 1 : 0;\n        const expected = target[0];\n\n        if (actual !== expected) {\n          const misclass = preparedData[i];\n          misclasses.push({\n            input: misclass.input,\n            output: misclass.output,\n            actual,\n            expected,\n          });\n        }\n\n        if (actual === 0 && expected === 0) {\n          trueNeg++;\n        } else if (actual === 1 && expected === 1) {\n          truePos++;\n        } else if (actual === 0 && expected === 1) {\n          falseNeg++;\n        } else if (actual === 1 && expected === 0) {\n          falsePos++;\n        }\n\n        errorSum += mse(\n          output.map((value, i) => {\n            return target[i] - value;\n          })\n        );\n      }\n\n      return {\n        error: errorSum / preparedData.length,\n        misclasses,\n        total: preparedData.length,\n        trueNeg,\n        truePos,\n        falseNeg,\n        falsePos,\n        precision: truePos > 0 ? truePos / (truePos + falsePos) : 0,\n        recall: truePos > 0 ? truePos / (truePos + falseNeg) : 0,\n        accuracy: (trueNeg + truePos) / preparedData.length,\n      };\n    }\n\n    for (let i = 0; i < preparedData.length; i++) {\n      const output = this.runInput(preparedData[i].input);\n      const target = preparedData[i].output;\n      const actual = output.indexOf(max(output));\n      const expected = target.indexOf(max(target));\n\n      if (actual !== expected) {\n        const misclass = preparedData[i];\n        misclasses.push({\n          input: misclass.input,\n          output: misclass.output,\n          actual,\n          expected,\n        });\n      }\n\n      errorSum += mse(\n        output.map((value, i) => {\n          return target[i] - value;\n        })\n      );\n    }\n    return {\n      error: errorSum / preparedData.length,\n      misclasses,\n      total: preparedData.length,\n    };\n  }\n\n  toJSON(): INeuralNetworkJSON {\n    if (!this.isRunnable) {\n      this.initialize();\n    }\n    // use Array.from, keeping json small\n    const jsonLayerWeights = this.weights.map((layerWeights) => {\n      return layerWeights.map((layerWeights) => Array.from(layerWeights));\n    });\n    const jsonLayerBiases = this.biases.map((layerBiases) =>\n      Array.from(layerBiases)\n    );\n    const jsonLayers: IJSONLayer[] = [];\n    const outputLength = this.sizes.length - 1;\n    for (let i = 0; i <= outputLength; i++) {\n      jsonLayers.push({\n        weights: jsonLayerWeights[i] ?? [],\n        biases: jsonLayerBiases[i] ?? [],\n      });\n    }\n    return {\n      type: 'NeuralNetwork',\n      sizes: [...this.sizes],\n      layers: jsonLayers,\n      inputLookup: this.inputLookup ? { ...this.inputLookup } : null,\n      inputLookupLength: this.inputLookupLength,\n      outputLookup: this.outputLookup ? { ...this.outputLookup } : null,\n      outputLookupLength: this.outputLookupLength,\n      options: { ...this.options },\n      trainOpts: this.getTrainOptsJSON(),\n    };\n  }\n\n  fromJSON(json: INeuralNetworkJSON): this {\n    this.options = { ...defaults(), ...json.options };\n    if (json.hasOwnProperty('trainOpts')) {\n      const trainOpts = {\n        ...json.trainOpts,\n        timeout:\n          json.trainOpts.timeout === 'Infinity'\n            ? Infinity\n            : json.trainOpts.timeout,\n      };\n      this.updateTrainingOptions(trainOpts);\n    }\n    this.sizes = json.sizes;\n    this.initialize();\n\n    this.inputLookup = json.inputLookup ? { ...json.inputLookup } : null;\n    this.inputLookupLength = json.inputLookupLength;\n    this.outputLookup = json.outputLookup ? { ...json.outputLookup } : null;\n    this.outputLookupLength = json.outputLookupLength;\n\n    const jsonLayers = json.layers;\n    const layerWeights = this.weights.map((layerWeights, layerIndex) => {\n      return jsonLayers[layerIndex].weights.map((layerWeights) =>\n        Float32Array.from(layerWeights)\n      );\n    });\n    const layerBiases = this.biases.map((layerBiases, layerIndex) =>\n      Float32Array.from(jsonLayers[layerIndex].biases)\n    );\n    for (let i = 0; i <= this.outputLayer; i++) {\n      this.weights[i] = layerWeights[i] || [];\n      this.biases[i] = layerBiases[i] || [];\n    }\n    return this;\n  }\n\n  toFunction(\n    cb?: (source: string) => string\n  ): (input: Partial<InputType>) => OutputType {\n    const { activation, leakyReluAlpha } = this.trainOpts;\n    let needsVar = false;\n    const nodeHandle = (layerIndex: number, nodeIndex: number): string => {\n      if (layerIndex === 0) {\n        return `(input[${nodeIndex}]||0)`;\n      }\n\n      const weights: Float32Array = this.weights[layerIndex][nodeIndex];\n      const bias: number = this.biases[layerIndex][nodeIndex];\n      if (!weights) {\n        throw new Error(\n          `weights at layerIndex ${layerIndex} & nodeIndex ${nodeIndex} not found`\n        );\n      }\n      if (!bias) {\n        throw new Error(\n          `bias as layerIndex ${layerIndex} & nodeIndex ${nodeIndex} not found`\n        );\n      }\n      const weightsArray: string[] = [];\n      weights.forEach((weight: number, subNodeIndex: number): void => {\n        if (weight < 0) {\n          weightsArray.push(\n            `${weight}*${nodeHandle(layerIndex - 1, subNodeIndex)}`\n          );\n        } else {\n          weightsArray.push(\n            `+${weight}*${nodeHandle(layerIndex - 1, subNodeIndex)}`\n          );\n        }\n      });\n      const result = `(${bias.toString()}${weightsArray.join('')})`;\n\n      switch (activation) {\n        case 'sigmoid':\n          return `1/(1+1/Math.exp(${result}))`;\n        case 'relu': {\n          needsVar = true;\n          return `((v=${result})<0?0:v)`;\n        }\n        case 'leaky-relu': {\n          needsVar = true;\n          return `Math.max((v=${result}),${leakyReluAlpha}*v)`;\n        }\n        case 'tanh':\n          return `Math.tanh(${result})`;\n        default:\n          throw new Error(\n            `Unknown activation ${activation}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n          );\n      }\n    };\n\n    function checkKeys(keys: string[]): void {\n      if (keys.find((v) => v.includes('\"'))) {\n        throw new Error(`key contains '\"', which is not compatible`);\n      }\n    }\n\n    const layersAsMath: string[] = [];\n    let result: string;\n\n    let inputLookup = '';\n    if (this.inputLookup) {\n      const keys = Object.keys(this.inputLookup);\n      checkKeys(keys);\n      inputLookup = `input = new Float32Array([${Object.keys(this.inputLookup)\n        .map((key) => `input[\"${key}\"]`)\n        .join(',')}]);`;\n    }\n    if (this.sizes.length < 1) throw new Error('No layers');\n    for (\n      let nodeIndex = 0;\n      nodeIndex < this.sizes[this.outputLayer];\n      nodeIndex++\n    ) {\n      layersAsMath.push(nodeHandle(this.outputLayer, nodeIndex));\n    }\n    if (this.outputLookup) {\n      const keys = Object.keys(this.outputLookup);\n      checkKeys(keys);\n      const values = keys\n        .map((key, i) => `\"${key}\":${layersAsMath[i]}`)\n        .join(',');\n      result = `{${values}}`;\n    } else {\n      result = `[${layersAsMath.join(',')}]`;\n    }\n\n    const source = `${inputLookup}${needsVar ? 'var v;' : ''}return ${result};`;\n    // eslint-disable-next-line @typescript-eslint/no-implied-eval,no-new-func\n    return new Function('input', cb ? cb(source) : source) as (\n      input: Partial<InputType>\n    ) => OutputType;\n  }\n}\n","import {\n  GPU,\n  IConstantsThis,\n  IGPUKernelSettings,\n  IKernelMapRunShortcut,\n  IKernelRunShortcut,\n  Input,\n  ISubKernelObject,\n  KernelFunction,\n  KernelOutput,\n  OutputDimensions,\n  Texture,\n  ThreadFunction,\n  ThreadKernelVariable,\n} from 'gpu.js';\n\nlet gpuInstance: GPU | null = null;\n\n/**\n * Sets up the gpu.js instance\n */\nexport function setup(value: GPU): void {\n  gpuInstance = value;\n}\n\n/**\n * Destroys any existing gpu.js instance\n */\nexport function teardown(): void {\n  if (gpuInstance !== null) {\n    gpuInstance.destroy().catch(console.log);\n  }\n  gpuInstance = null;\n}\n\nexport function makeKernel<\n  ArgTypes extends ThreadKernelVariable[] = ThreadKernelVariable[],\n  ConstantsTypes extends IConstantsThis = IConstantsThis\n>(\n  fn: KernelFunction<ArgTypes, ConstantsTypes>,\n  settings: IGPUKernelSettings & { constants?: ConstantsTypes }\n): IKernelRunShortcut {\n  let _gpuInstance: GPU = gpuInstance as GPU;\n  if (_gpuInstance === null) {\n    _gpuInstance = new GPU({ mode: 'gpu' });\n    setup(_gpuInstance);\n  }\n\n  return _gpuInstance\n    .createKernel<ArgTypes, ConstantsTypes>(fn, settings)\n    .setPipeline(true);\n}\n\nexport function makeKernelMap<\n  ArgTypes extends ThreadKernelVariable[],\n  ConstantsTypes extends IConstantsThis\n>(\n  map: ISubKernelObject,\n  fn: ThreadFunction<ArgTypes, ConstantsTypes>,\n  settings: IGPUKernelSettings & { constants?: ConstantsTypes }\n): IKernelMapRunShortcut<ISubKernelObject> {\n  let _gpuInstance: GPU = gpuInstance as GPU;\n  if (_gpuInstance === null) {\n    _gpuInstance = new GPU({ mode: 'gpu' });\n    setup(_gpuInstance);\n  }\n\n  return _gpuInstance\n    .createKernelMap<ArgTypes, ConstantsTypes>(map, fn, settings)\n    .setPipeline(true);\n}\n\n/**\n * Compiles a function into a gpu.js dev mode kernel\n */\n// export function makeDevKernel(\n//   fn: ThreadFunction,\n//   settings: makeKernelSettings\n// ): IKernelRunShortcut {\n//   if ('map' in settings) {\n//     throw new Error('map kernels are not supported by dev kernels');\n//   }\n//   const gpu = new GPU({ mode: 'dev' });\n//   return gpu.createKernel(fn, settings);\n// }\n\nexport function kernelInput(value: number[], size: OutputDimensions): Input {\n  return new Input(value, size);\n}\n\n/**\n * Deletes a gpu.js texture and frees VRAM\n */\nexport function release(possibleTexture: KernelOutput | Input): void {\n  if (possibleTexture instanceof Texture) {\n    possibleTexture.delete();\n  }\n}\n\n/**\n * Cleans ie sets all elements to 0 of a Texture or a js array\n */\nexport function clear(value: KernelOutput): void {\n  if (value instanceof Texture) {\n    value.clear();\n    return;\n  }\n\n  // array\n  if (Array.isArray(value)) {\n    if (typeof value[0] === 'number') {\n      (value as number[]).fill(0);\n    } else if (typeof value[0][0] === 'number') {\n      for (let x = 0; x < value.length; x++) {\n        (value[x] as number[]).fill(0);\n      }\n      return;\n    } else if (typeof value[0][0][0] === 'number') {\n      // cube\n      for (let y = 0; y < value.length; y++) {\n        const row: number[][] = value[y] as number[][];\n        for (let x = 0; x < row.length; x++) {\n          row[x].fill(0);\n        }\n      }\n      return;\n    }\n  }\n\n  if (value instanceof Float32Array) {\n    value.fill(0);\n    return;\n  }\n\n  throw new Error('unhandled value');\n}\n\n/**\n * Clones a value\n */\nexport function clone(value: KernelOutput): KernelOutput {\n  if (value instanceof Texture) {\n    return value.clone();\n  }\n  if (value instanceof Float32Array) {\n    return value.slice(0);\n  }\n  if (Array.isArray(value)) {\n    if (typeof value[0] === 'number') {\n      return value.slice(0);\n    } else if (typeof value[0][0] === 'number') {\n      const matrix = new Array(value.length);\n      for (let x = 0; x < value.length; x++) {\n        matrix[x] = (value[x] as Float32Array).slice(0);\n      }\n      return matrix;\n    } else if (typeof value[0][0][0] === 'number') {\n      const cube = new Array(value.length);\n      for (let y = 0; y < value.length; y++) {\n        const row = value[y] as number[][];\n        const matrix = new Array(row.length);\n        for (let x = 0; x < row.length; x++) {\n          matrix[x] = row[x].slice(0);\n        }\n      }\n      return cube;\n    }\n  }\n  throw new Error('unhandled value');\n}\n","import {\n  alias,\n  GPU,\n  GPUFunction,\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  IMappedKernelResult,\n  KernelOutput,\n  Texture,\n  utils,\n} from 'gpu.js';\nimport { ITrainingStatus } from './feed-forward';\nimport { INumberHash, lookup } from './lookup';\nimport {\n  IJSONLayer,\n  INeuralNetworkData,\n  INeuralNetworkDatum,\n  INeuralNetworkJSON,\n  INeuralNetworkOptions,\n  INeuralNetworkPreppedTrainingData,\n  INeuralNetworkTrainOptions,\n  NeuralNetwork,\n} from './neural-network';\nimport { release } from './utilities/kernel';\n\nexport interface INeuralNetworkGPUDatumFormatted {\n  input: KernelOutput;\n  output: KernelOutput;\n}\n\nexport interface INeuralNetworkGPUPreppedTrainingData\n  extends INeuralNetworkPreppedTrainingData<KernelOutput> {\n  status: ITrainingStatus;\n  endTime: number;\n}\n\ninterface ISizedKernelThis extends IKernelFunctionThis {\n  constants: {\n    size: number;\n  };\n}\n\nfunction weightedSumSigmoid(\n  this: ISizedKernelThis,\n  weights: number[][],\n  biases: number[],\n  inputs: number[]\n): number {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // sigmoid\n  return 1 / (1 + Math.exp(-sum));\n}\n\nfunction weightedSumRelu(\n  this: ISizedKernelThis,\n  weights: number[][],\n  biases: number[],\n  inputs: number[]\n): number {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // relu\n  return sum < 0 ? 0 : sum;\n}\n\nfunction weightedSumLeakyRelu(\n  this: ISizedKernelThis,\n  weights: number[][],\n  biases: number[],\n  inputs: number[]\n): number {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // leaky relu\n  return sum < 0 ? 0 : 0.01 * sum;\n}\n\nfunction weightedSumTanh(\n  this: ISizedKernelThis,\n  weights: number[][],\n  biases: number[],\n  inputs: number[]\n): number {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // tanh\n  return Math.tanh(sum);\n}\n\nfunction calcErrorOutput(output: number, target: number): number {\n  return target - output;\n}\n\nfunction calcDeltasSigmoid(error: number, output: number): number {\n  // sigmoid derivative\n  return error * output * (1 - output);\n}\n\nfunction calcDeltasRelu(error: number, output: number): number {\n  // relu derivative\n  return output > 0 ? error : 0;\n}\n\nfunction calcDeltasLeakyRelu(error: number, output: number): number {\n  // leaky relu derivative\n  return output > 0 ? error : 0.01 * error;\n}\n\nfunction calcDeltasTanh(error: number, output: number): number {\n  // tanh derivative\n  return (1 - output * output) * error;\n}\n\nfunction calcError(\n  x: number,\n  size: number,\n  nextWeights: number[][],\n  nextDeltas: number[]\n): number {\n  let error = 0;\n  for (let k = 0; k < size; k++) {\n    error += nextDeltas[k] * nextWeights[k][x];\n  }\n  return error;\n}\n\ninterface ILearningKernelThis extends IKernelFunctionThis {\n  constants: {\n    momentum: number;\n    learningRate: number;\n  };\n}\n\nfunction calcChanges(\n  learningRate: number,\n  momentum: number,\n  previousChange: number,\n  delta: number,\n  previousOutput: number\n): number {\n  return learningRate * delta * previousOutput + momentum * previousChange;\n}\n\nfunction addWeights(change: number, weight: number): number {\n  return change + weight;\n}\n\nfunction addBiases(\n  this: ILearningKernelThis,\n  biases: number[],\n  deltas: number[]\n): number {\n  return (\n    biases[this.thread.x] + deltas[this.thread.x] * this.constants.learningRate\n  );\n}\n\n// mean squared error, reimplemented for GPU\nfunction mse(this: ISizedKernelThis, errors: number[]): number {\n  let sum = 0;\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += errors[i] ** 2;\n  }\n  return sum / this.constants.size;\n}\n\nexport interface INeuralNetworkGPUOptions extends INeuralNetworkOptions {\n  mode?: 'cpu' | 'gpu';\n}\n\nexport type BackPropagateOutput = (\n  this: IKernelFunctionThis,\n  outputs: KernelOutput,\n  targets: KernelOutput\n) => { result: KernelOutput; error: KernelOutput };\n\nexport type BackPropagateLayer = (\n  this: IKernelFunctionThis,\n  weights: KernelOutput,\n  outputs: KernelOutput,\n  deltas: KernelOutput\n) => { result: KernelOutput; error: KernelOutput };\n\nexport class NeuralNetworkGPU<\n  InputType extends INeuralNetworkData,\n  OutputType extends INeuralNetworkData\n> extends NeuralNetwork<InputType, OutputType> {\n  gpu: GPU;\n\n  texturizeInputData: (value: KernelOutput) => KernelOutput = () => {\n    throw new Error('not yet setup');\n  };\n\n  forwardPropagate: Array<\n    (\n      weights: KernelOutput,\n      biases: KernelOutput,\n      inputs: KernelOutput\n    ) => KernelOutput\n  > = [];\n\n  backwardPropagate: Array<BackPropagateOutput | BackPropagateLayer> = [];\n\n  changesPropagate: Array<\n    ((\n      this: IKernelFunctionThis<{\n        size: number;\n        learningRate: number;\n        momentum: number;\n      }>,\n      previousOutputs: number[],\n      deltas: number[],\n      weights: number[][],\n      previousChanges: number[][]\n    ) => IMappedKernelResult) &\n      IKernelMapRunShortcut<{ weights: number[][]; changes: number[][] }>\n  > = [];\n\n  biasesPropagate: Array<\n    (biases: KernelOutput, deltas: KernelOutput) => KernelOutput\n  > = [];\n\n  getMSE: (error: KernelOutput) => KernelOutput = () => {\n    throw new Error('not yet setup');\n  };\n\n  _addMSE: (sum: KernelOutput, error: KernelOutput) => KernelOutput = () => {\n    throw new Error('not yet setup');\n  };\n\n  _divideMSESum: (length: number, sum: KernelOutput) => KernelOutput = () => {\n    throw new Error('not yet setup');\n  };\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  outputs: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  deltas: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  errors: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  weights: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  changes: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  biases: KernelOutput[] = [];\n\n  constructor(options: Partial<INeuralNetworkGPUOptions> = {}) {\n    super(options);\n    this.errorCheckInterval = 100;\n    this.gpu = new GPU({ mode: options.mode });\n  }\n\n  initialize(): void {\n    super.initialize();\n    this.buildRunInput();\n    this.buildCalculateDeltas();\n    this.buildGetChanges();\n    this.buildChangeBiases();\n    this.buildGetMSE();\n  }\n\n  setActivation(): void {}\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  trainPattern(\n    value: INeuralNetworkGPUDatumFormatted,\n    logErrorRate?: boolean\n  ): KernelOutput | null {\n    // forward propagate\n    this.runInput(value.input);\n\n    // back propagate\n    this.calculateDeltas(value.output);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return this.getMSE(this.errors[this.outputLayer]);\n    }\n    return null;\n  }\n\n  calculateTrainingError(data: INeuralNetworkGPUDatumFormatted[]): number {\n    let sum = new Float32Array([0]) as KernelOutput;\n    for (let i = 0; i < data.length; ++i) {\n      const prevSum = sum;\n      const error = this.trainPattern(data[i], true) as KernelOutput;\n      sum = this._addMSE(sum, error);\n      release(error);\n      release(prevSum);\n    }\n    const result = this._divideMSESum(data.length, sum);\n    release(sum);\n    return (result instanceof Texture\n      ? (result.toArray() as number[])\n      : (result as number[]))[0];\n  }\n\n  adjustWeights(): void {\n    this.getChanges();\n    this.changeBiases();\n  }\n\n  buildRunInput(): void {\n    let weightedSum = null;\n\n    switch (this.trainOpts.activation) {\n      case 'sigmoid':\n        weightedSum = weightedSumSigmoid;\n        break;\n      case 'relu':\n        weightedSum = weightedSumRelu;\n        break;\n      case 'leaky-relu':\n        weightedSum = weightedSumLeakyRelu;\n        break;\n      case 'tanh':\n        weightedSum = weightedSumTanh;\n        break;\n      default:\n        throw new Error(\n          `Unknown activation ${this.trainOpts.activation}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n        );\n    }\n\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.forwardPropagate[layer] = this.gpu.createKernel(weightedSum, {\n        output: [this.sizes[layer]],\n        pipeline: true,\n        constants: {\n          size: this.sizes[layer - 1],\n        },\n        immutable: true,\n      });\n    }\n\n    this.texturizeInputData = this.gpu.createKernel(\n      function (value: number[]): number {\n        return value[this.thread.x];\n      },\n      {\n        output: [this.sizes[1]],\n        pipeline: true,\n        immutable: true,\n      }\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  runInput = (input: KernelOutput): KernelOutput => {\n    let output;\n    this.outputs[0] = input;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      release(this.outputs[layer]);\n      this.outputs[layer] = this.forwardPropagate[layer](\n        this.weights[layer],\n        this.biases[layer],\n        input\n      );\n      output = input = this.outputs[layer];\n    }\n    return output;\n  };\n\n  buildCalculateDeltas(): void {\n    let calcDeltas: GPUFunction<[number, number]>;\n    switch (this.trainOpts.activation) {\n      case 'sigmoid':\n        calcDeltas = calcDeltasSigmoid;\n        break;\n      case 'relu':\n        calcDeltas = calcDeltasRelu;\n        break;\n      case 'leaky-relu':\n        calcDeltas = calcDeltasLeakyRelu;\n        break;\n      case 'tanh':\n        calcDeltas = calcDeltasTanh;\n        break;\n      default:\n        throw new Error(\n          `Unknown activation ${this.trainOpts.activation}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n        );\n    }\n\n    calcDeltas = alias(\n      utils.getMinifySafeName(() => calcDeltas),\n      calcDeltas\n    );\n    this.gpu.addFunction(calcDeltas);\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      if (layer === this.outputLayer) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        this.backwardPropagate[this.outputLayer] = this.gpu.createKernelMap(\n          {\n            error: calcErrorOutput,\n          },\n          function (\n            this: IKernelFunctionThis,\n            outputs: number[],\n            targets: number[]\n          ): number {\n            const output = outputs[this.thread.x];\n            const target = targets[this.thread.x];\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-expect-error\n            return calcDeltas(calcErrorOutput(output, target), output);\n          },\n          {\n            output: [this.sizes[this.outputLayer]],\n            pipeline: true,\n            immutable: true,\n          }\n        );\n      } else {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        this.backwardPropagate[layer] = this.gpu.createKernelMap(\n          {\n            error: calcError,\n          },\n          function (\n            this: ISizedKernelThis,\n            nextWeights: number[][],\n            outputs: number[],\n            nextDeltas: number[]\n          ): number {\n            const output = outputs[this.thread.x];\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-expect-error\n            return calcDeltas(\n              calcError(\n                this.thread.x,\n                this.constants.size,\n                nextWeights,\n                nextDeltas\n              ),\n              output\n            );\n          },\n          {\n            output: [this.sizes[layer]],\n            pipeline: true,\n            constants: {\n              size: this.sizes[layer + 1],\n            },\n            immutable: true,\n          }\n        );\n      }\n    }\n  }\n\n  calculateDeltas = (target: KernelOutput): void => {\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      release(this.deltas[layer]);\n      release(this.errors[layer]);\n\n      let output;\n      if (layer === this.outputLayer) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        output = this.backwardPropagate[layer](this.outputs[layer], target);\n      } else {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        output = this.backwardPropagate[layer](\n          this.weights[layer + 1],\n          this.outputs[layer],\n          this.deltas[layer + 1]\n        );\n      }\n      this.deltas[layer] = output.result;\n      this.errors[layer] = output.error;\n    }\n  };\n\n  buildGetChanges(): void {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      this.changesPropagate[layer] = this.gpu.createKernelMap(\n        {\n          weights: addWeights,\n          changes: calcChanges,\n        },\n        function (\n          this: IKernelFunctionThis<{\n            size: number;\n            learningRate: number;\n            momentum: number;\n          }>,\n          previousOutputs: number[],\n          deltas: number[],\n          weights: number[][],\n          previousChanges: number[][]\n        ) {\n          const change = calcChanges(\n            this.constants.learningRate,\n            this.constants.momentum,\n            previousChanges[this.thread.y][this.thread.x],\n            deltas[this.thread.y],\n            previousOutputs[this.thread.x]\n          );\n          return addWeights(change, weights[this.thread.y][this.thread.x]);\n        },\n        {\n          output: [this.sizes[layer - 1], this.sizes[layer]],\n          pipeline: true,\n          constants: {\n            size: this.sizes[layer - 1],\n            learningRate: this.trainOpts.learningRate,\n            momentum: this.trainOpts.momentum,\n          },\n          immutable: true,\n        }\n      );\n    }\n  }\n\n  getChanges(): void {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const weights = this.weights[layer];\n      const changes = this.changes[layer];\n      const output = this.changesPropagate[layer](\n        this.outputs[layer - 1],\n        this.deltas[layer],\n        weights,\n        changes\n      );\n      release(weights);\n      release(changes);\n      this.weights[layer] = output.weights;\n      this.changes[layer] = output.changes;\n      release(output.result);\n    }\n  }\n\n  buildChangeBiases(): void {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.biasesPropagate[layer] = this.gpu.createKernel(addBiases, {\n        output: [this.sizes[layer]],\n        pipeline: true,\n        constants: {\n          learningRate: this.trainOpts.learningRate,\n        },\n        immutable: true,\n      });\n    }\n  }\n\n  changeBiases(): void {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const biases = this.biases[layer];\n      this.biases[layer] = this.biasesPropagate[layer](\n        biases,\n        this.deltas[layer]\n      );\n      release(biases);\n    }\n  }\n\n  buildGetMSE(): void {\n    this.getMSE = this.gpu.createKernel(mse, {\n      output: [1],\n      constants: {\n        size: this.sizes[this.outputLayer],\n      },\n      pipeline: true,\n      immutable: true,\n    });\n    this._addMSE = this.gpu.createKernel(\n      function (value1: number[], value2: number[]): number {\n        return value1[0] + value2[0];\n      },\n      {\n        output: [1],\n        pipeline: true,\n        immutable: true,\n      }\n    );\n    this._divideMSESum = this.gpu.createKernel(\n      function (length: number, mseSum: number[]): number {\n        const value = mseSum[0];\n        if (value > 0) {\n          return value / length;\n        }\n        return 0;\n      },\n      {\n        output: [1],\n      }\n    );\n  }\n\n  run(input: InputType): OutputType {\n    if (!this.isRunnable) {\n      throw new Error('network not runnable');\n    }\n    let formattedInput: Float32Array;\n    if (this.inputLookup) {\n      formattedInput = lookup.toArray(\n        this.inputLookup,\n        (input as unknown) as INumberHash,\n        this.inputLookupLength\n      );\n    } else {\n      formattedInput = (input as unknown) as Float32Array;\n    }\n    this.validateInput(formattedInput);\n    const outputTextures = this.runInput(formattedInput);\n    const output =\n      outputTextures instanceof Texture\n        ? outputTextures.toArray()\n        : outputTextures;\n\n    if (this.outputLookup) {\n      return (lookup.toObject(\n        this.outputLookup,\n        output as Float32Array\n      ) as unknown) as OutputType;\n    }\n\n    return (output as unknown) as OutputType;\n  }\n\n  // @ts-expect-error the underlying network works as normal, but we are working on the GPU\n  prepTraining(\n    data: Array<INeuralNetworkDatum<InputType, OutputType>>,\n    options: Partial<INeuralNetworkTrainOptions> = {}\n  ): INeuralNetworkGPUPreppedTrainingData {\n    this.updateTrainingOptions(options);\n    const preparedData = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized(preparedData);\n\n    const texturizeOutputData = this.gpu.createKernel(\n      function (value: number[]): number {\n        return value[this.thread.x];\n      },\n      {\n        output: [preparedData[0].output.length],\n        pipeline: true,\n        immutable: true,\n      }\n    );\n    return {\n      preparedData: preparedData.map((set) => ({\n        input: this.texturizeInputData(set.input),\n        output: texturizeOutputData(set.output),\n      })),\n      status,\n      endTime,\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  toFunction(): (input: InputType) => OutputType {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    );\n  }\n\n  toJSON(): INeuralNetworkJSON {\n    if (this.sizes === null) {\n      this.initialize();\n    }\n    // use Array.from, keeping json small\n    const jsonLayerWeights = this.weights.map((layerWeights) => {\n      return (layerWeights instanceof Texture\n        ? (layerWeights.toArray() as Float32Array[])\n        : (layerWeights as Float32Array[])\n      ).map((layerWeights) => Array.from(layerWeights));\n    });\n    const jsonLayerBiases = this.biases.map((layerBiases) =>\n      Array.from(\n        layerBiases instanceof Texture\n          ? (layerBiases.toArray() as Float32Array)\n          : (layerBiases as Float32Array)\n      )\n    );\n    const jsonLayers: IJSONLayer[] = [];\n    for (let i = 0; i <= this.outputLayer; i++) {\n      jsonLayers.push({\n        weights: jsonLayerWeights[i] ?? [],\n        biases: jsonLayerBiases[i] ?? [],\n      });\n    }\n    return {\n      type: 'NeuralNetworkGPU',\n      sizes: [...this.sizes],\n      layers: jsonLayers,\n      inputLookup: this.inputLookup ? { ...this.inputLookup } : null,\n      inputLookupLength: this.inputLookupLength,\n      outputLookup: this.outputLookup ? { ...this.outputLookup } : null,\n      outputLookupLength: this.outputLookupLength,\n      options: { ...this.options },\n      trainOpts: this.getTrainOptsJSON(),\n    };\n  }\n}\n","export class UntrainedNeuralNetworkError<\n  T extends { constructor: { name: string } }\n> extends Error {\n  constructor(neuralNetwork: T) {\n    super(\n      `Cannot run a ${neuralNetwork.constructor.name} before it is trained.`\n    );\n  }\n}\n","import { KernelOutput, Texture, TextureArrayOutput } from 'gpu.js';\nimport {\n  IJSONLayer,\n  INeuralNetworkData,\n  INeuralNetworkDatum,\n  INeuralNetworkTrainOptions,\n} from './neural-network';\nimport {\n  INeuralNetworkGPUOptions,\n  NeuralNetworkGPU,\n} from './neural-network-gpu';\nimport { INeuralNetworkState } from './neural-network-types';\nimport { UntrainedNeuralNetworkError } from './errors/untrained-neural-network-error';\n\nexport interface IAEOptions {\n  binaryThresh: number;\n  decodedSize: number;\n  hiddenLayers: number[];\n}\n\n/**\n * An autoencoder learns to compress input data down to relevant features and reconstruct input data from its compressed representation.\n */\nexport class AE<\n  DecodedData extends INeuralNetworkData,\n  EncodedData extends INeuralNetworkData\n> {\n  private decoder?: NeuralNetworkGPU<EncodedData, DecodedData>;\n  private readonly denoiser: NeuralNetworkGPU<DecodedData, DecodedData>;\n\n  constructor(options?: Partial<IAEOptions>) {\n    // Create default options for the autoencoder.\n    options ??= {};\n\n    // Create default options for the autoencoder's denoiser subnet.\n    const denoiserOptions: Partial<INeuralNetworkGPUOptions> = {};\n\n    // Inherit the binary threshold of the parent autoencoder.\n    denoiserOptions.binaryThresh = options.binaryThresh;\n    // Inherit the hidden layers of the parent autoencoder.\n    denoiserOptions.hiddenLayers = options.hiddenLayers;\n\n    // Define the denoiser subnet's input and output sizes.\n    if (options.decodedSize)\n      denoiserOptions.inputSize = denoiserOptions.outputSize =\n        options.decodedSize;\n\n    // Create the denoiser subnet of the autoencoder.\n    this.denoiser = new NeuralNetworkGPU<DecodedData, DecodedData>(options);\n  }\n\n  /**\n   * Denoise input data, removing any anomalies from the data.\n   * @param {DecodedData} input\n   * @returns {DecodedData}\n   */\n  denoise(input: DecodedData): DecodedData {\n    // Run the input through the generic denoiser.\n    // This isn't the best denoiser implementation, but it's efficient.\n    // Efficiency is important here because training should focus on\n    // optimizing for feature extraction as quickly as possible rather than\n    // denoising and anomaly detection; there are other specialized topologies\n    // better suited for these tasks anyways, many of which can be implemented\n    // by using an autoencoder.\n    return this.denoiser.run(input);\n  }\n\n  /**\n   * Decode `EncodedData` into an approximation of its original form.\n   *\n   * @param {EncodedData} input\n   * @returns {DecodedData}\n   */\n  decode(input: EncodedData): DecodedData {\n    // If the decoder has not been trained yet, throw an error.\n    if (!this.decoder) throw new UntrainedNeuralNetworkError(this);\n\n    // Decode the encoded input.\n    return this.decoder.run(input);\n  }\n\n  /**\n   * Encode data to extract features, reduce dimensionality, etc.\n   *\n   * @param {DecodedData} input\n   * @returns {EncodedData}\n   */\n  encode(input: DecodedData): EncodedData {\n    // If the decoder has not been trained yet, throw an error.\n    if (!this.denoiser) throw new UntrainedNeuralNetworkError(this);\n\n    // Process the input.\n    this.denoiser.run(input);\n\n    // Get the auto-encoded input.\n    let encodedInput: TextureArrayOutput = this\n      .encodedLayer as TextureArrayOutput;\n\n    // If the encoded input is a `Texture`, convert it into an `Array`.\n    if (encodedInput instanceof Texture) encodedInput = encodedInput.toArray();\n    else encodedInput = encodedInput.slice(0);\n\n    // Return the encoded input.\n    return encodedInput as EncodedData;\n  }\n\n  /**\n   * Test whether or not a data sample likely contains anomalies.\n   * If anomalies are likely present in the sample, returns `true`.\n   * Otherwise, returns `false`.\n   *\n   * @param {DecodedData} input\n   * @returns {boolean}\n   */\n  likelyIncludesAnomalies(input: DecodedData, anomalyThreshold = 0.2): boolean {\n    // Create the anomaly vector.\n    const anomalies: number[] = [];\n\n    // Attempt to denoise the input.\n    const denoised = this.denoise(input);\n\n    // Calculate the anomaly vector.\n    for (let i = 0; i < (input.length ?? 0); i++) {\n      anomalies[i] = Math.abs(\n        (input as number[])[i] - (denoised as number[])[i]\n      );\n    }\n\n    // Calculate the sum of all anomalies within the vector.\n    const sum = anomalies.reduce(\n      (previousValue, value) => previousValue + value\n    );\n\n    // Calculate the mean anomaly.\n    const mean = sum / (input as number[]).length;\n\n    // Return whether or not the mean anomaly rate is greater than the anomaly threshold.\n    return mean > anomalyThreshold;\n  }\n\n  /**\n   * Train the auto encoder.\n   *\n   * @param {DecodedData[]} data\n   * @param {Partial<INeuralNetworkTrainOptions>} options\n   * @returns {INeuralNetworkState}\n   */\n  train(\n    data: DecodedData[],\n    options?: Partial<INeuralNetworkTrainOptions>\n  ): INeuralNetworkState {\n    const preprocessedData: Array<INeuralNetworkDatum<\n      Partial<DecodedData>,\n      Partial<DecodedData>\n    >> = [];\n\n    for (const datum of data) {\n      preprocessedData.push({ input: datum, output: datum });\n    }\n\n    const results = this.denoiser.train(preprocessedData, options);\n\n    this.decoder = this.createDecoder();\n\n    return results;\n  }\n\n  /**\n   * Create a new decoder from the trained denoiser.\n   *\n   * @returns {NeuralNetworkGPU<EncodedData, DecodedData>}\n   */\n  private createDecoder() {\n    const json = this.denoiser.toJSON();\n\n    const layers: IJSONLayer[] = [];\n    const sizes: number[] = [];\n\n    for (let i = this.encodedLayerIndex; i < this.denoiser.sizes.length; i++) {\n      layers.push(json.layers[i]);\n      sizes.push(json.sizes[i]);\n    }\n\n    json.layers = layers;\n    json.sizes = sizes;\n\n    json.options.inputSize = json.sizes[0];\n\n    const decoder = new NeuralNetworkGPU().fromJSON(json);\n\n    return (decoder as unknown) as NeuralNetworkGPU<EncodedData, DecodedData>;\n  }\n\n  /**\n   * Get the layer containing the encoded representation.\n   */\n  private get encodedLayer(): KernelOutput {\n    return this.denoiser.outputs[this.encodedLayerIndex];\n  }\n\n  /**\n   * Get the offset of the encoded layer.\n   */\n  private get encodedLayerIndex(): number {\n    return Math.round(this.denoiser.outputs.length * 0.5) - 1;\n  }\n}\n\nexport default AE;\n","import {\n  INeuralNetworkBinaryTestResult,\n  INeuralNetworkState,\n  INeuralNetworkTestResult,\n} from './neural-network-types';\n\nexport type InitClassifier<\n  TrainOptsType,\n  JsonType,\n  DatumType\n> = () => IClassifier<TrainOptsType, JsonType, DatumType>;\n\nexport interface IClassifier<TrainOptsType, JsonType, DatumType> {\n  trainOpts: TrainOptsType;\n  toJSON: () => JsonType;\n  fromJSON: (json: JsonType) => this;\n  train: (\n    data: DatumType[],\n    options?: Partial<TrainOptsType>\n  ) => INeuralNetworkState;\n  test: (\n    data: DatumType[]\n  ) => INeuralNetworkTestResult | INeuralNetworkBinaryTestResult;\n  initialize: () => void;\n}\n\nexport type ICrossValidateJSON<JsonType> =\n  | ICrossValidateStats<JsonType>\n  | ICrossValidateBinaryStats<JsonType>;\n\nexport interface ICrossValidateStatsAverages {\n  trainTime: number;\n  testTime: number;\n  iterations: number;\n  error: number;\n}\n\nexport interface ICrossValidateStats<JsonType> {\n  avgs: ICrossValidateStatsAverages;\n  stats: ICrossValidateStatsResultStats;\n  sets: Array<ICrossValidationTestPartitionResults<JsonType>>;\n}\n\nexport interface ICrossValidateBinaryStats<NetworkType> {\n  avgs: ICrossValidateStatsAverages;\n  stats: ICrossValidateStatsResultBinaryStats;\n  sets: Array<ICrossValidationTestPartitionBinaryResults<NetworkType>>;\n}\n\nexport interface ICrossValidateStatsResultStats {\n  total: number;\n  testSize: number;\n  trainSize: number;\n}\n\nexport interface ICrossValidateStatsResultBinaryStats\n  extends ICrossValidateStatsResultStats {\n  total: number;\n  truePos: number;\n  trueNeg: number;\n  falsePos: number;\n  falseNeg: number;\n  precision: number;\n  recall: number;\n  accuracy: number;\n}\n\nexport interface ICrossValidationTestPartitionResults<JsonType>\n  extends INeuralNetworkTestResult {\n  trainTime: number;\n  testTime: number;\n  iterations: number;\n  network: JsonType;\n  total: number;\n}\n\nexport type ICrossValidationTestPartitionBinaryResults<\n  JsonType\n> = INeuralNetworkBinaryTestResult &\n  ICrossValidationTestPartitionResults<JsonType>;\n\nexport default class CrossValidate<\n  InitClassifierType extends InitClassifier<\n    ReturnType<InitClassifierType>['trainOpts'],\n    ReturnType<ReturnType<InitClassifierType>['toJSON']>,\n    Parameters<ReturnType<InitClassifierType>['train']>[0][0]\n  >\n> {\n  initClassifier: InitClassifierType;\n  json: ICrossValidateJSON<\n    ReturnType<ReturnType<InitClassifierType>['toJSON']>\n  > = {\n    avgs: {\n      error: 0,\n      iterations: 0,\n      testTime: 0,\n      trainTime: 0,\n    },\n    stats: {\n      total: 0,\n      testSize: 0,\n      trainSize: 0,\n    },\n    sets: [],\n  };\n\n  constructor(initClassifier: InitClassifierType) {\n    this.initClassifier = initClassifier;\n  }\n\n  testPartition(\n    trainOpts: Parameters<ReturnType<InitClassifierType>['train']>[1],\n    trainSet: Parameters<ReturnType<InitClassifierType>['train']>[0],\n    testSet: Parameters<ReturnType<InitClassifierType>['train']>[0]\n  ):\n    | ICrossValidationTestPartitionResults<\n        ReturnType<ReturnType<InitClassifierType>['toJSON']>\n      >\n    | ICrossValidationTestPartitionBinaryResults<\n        ReturnType<ReturnType<InitClassifierType>['toJSON']>\n      > {\n    const classifier = this.initClassifier();\n    const beginTrain = Date.now();\n    const trainingStats = classifier.train(trainSet, trainOpts);\n    const beginTest = Date.now();\n    const testStats:\n      | INeuralNetworkTestResult\n      | INeuralNetworkBinaryTestResult = classifier.test(testSet);\n    const endTest = Date.now();\n    return {\n      ...testStats,\n      trainTime: beginTest - beginTrain,\n      testTime: endTest - beginTest,\n      iterations: trainingStats.iterations,\n      error: trainingStats.error,\n      total: testStats.total,\n      network: (classifier as {\n        toJSON: () => ReturnType<ReturnType<InitClassifierType>['toJSON']>;\n      }).toJSON(),\n    };\n  }\n\n  /**\n   * Randomize array element order in-place.\n   * Using Durstenfeld shuffle algorithm.\n   * source: http://stackoverflow.com/a/12646864/1324039\n   */\n  shuffleArray<K>(array: K[]): K[] {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n\n  static isBinaryStats = (\n    stats: ICrossValidateStatsResultStats | ICrossValidateStatsResultBinaryStats\n  ): stats is ICrossValidateStatsResultBinaryStats => {\n    return (\n      (stats as ICrossValidateStatsResultBinaryStats).accuracy !== undefined\n    );\n  };\n\n  static isBinaryResults = <JsonType>(\n    stats: ICrossValidateStats<JsonType> | ICrossValidateBinaryStats<JsonType>\n  ): stats is ICrossValidateBinaryStats<JsonType> =>\n    (stats as ICrossValidateBinaryStats<JsonType>).stats.accuracy !== undefined;\n\n  static isBinaryPartitionResults = <JsonType>(\n    stats:\n      | ICrossValidationTestPartitionResults<JsonType>\n      | ICrossValidationTestPartitionBinaryResults<JsonType>\n  ): stats is ICrossValidationTestPartitionBinaryResults<JsonType> =>\n    (stats as ICrossValidationTestPartitionBinaryResults<JsonType>).accuracy !==\n    undefined;\n\n  train(\n    data: Array<Parameters<ReturnType<InitClassifierType>['train']>[0][0]>,\n    trainOpts: Partial<\n      Parameters<ReturnType<InitClassifierType>['train']>[1]\n    > = {},\n    k = 4\n  ): ICrossValidateStats<ReturnType<InitClassifierType>['toJSON']> {\n    if (data.length < k) {\n      throw new Error(\n        `Training set size is too small for ${data.length} k folds of ${k}`\n      );\n    }\n    this.shuffleArray<unknown>(data);\n    const size = data.length / k;\n\n    const avgs: ICrossValidateStatsAverages = {\n      trainTime: 0,\n      testTime: 0,\n      iterations: 0,\n      error: 0,\n    };\n\n    const stats:\n      | ICrossValidateStatsResultStats\n      | ICrossValidateStatsResultBinaryStats = {\n      total: 0,\n      testSize: 0,\n      trainSize: 0,\n    };\n\n    const binaryStats: ICrossValidateStatsResultBinaryStats = {\n      total: 0,\n      testSize: 0,\n      trainSize: 0,\n      truePos: 0,\n      trueNeg: 0,\n      falsePos: 0,\n      falseNeg: 0,\n      precision: 0,\n      recall: 0,\n      accuracy: 0,\n    };\n\n    const results = [];\n    let isBinary = null;\n\n    for (let i = 0; i < k; i++) {\n      const dclone = data.slice(0);\n      const testSet = dclone.splice(i * size, size);\n      const trainSet = dclone;\n      const result = this.testPartition(trainOpts, trainSet, testSet);\n\n      if (isBinary === null) {\n        isBinary =\n          result.hasOwnProperty('falseNeg') &&\n          result.hasOwnProperty('falsePos') &&\n          result.hasOwnProperty('trueNeg') &&\n          result.hasOwnProperty('truePos');\n        if (isBinary) {\n          Object.assign(stats, binaryStats);\n        }\n      }\n\n      avgs.iterations += result.iterations;\n      avgs.testTime += result.testTime;\n      avgs.trainTime += result.trainTime;\n      avgs.error += result.error;\n      stats.total += result.total;\n      if (\n        CrossValidate.isBinaryStats(stats) &&\n        CrossValidate.isBinaryPartitionResults(result)\n      ) {\n        stats.accuracy += result.accuracy;\n        stats.falseNeg += result.falseNeg;\n        stats.falsePos += result.falsePos;\n        stats.precision += result.precision;\n        stats.recall += result.recall;\n        stats.trueNeg += result.trueNeg;\n        stats.truePos += result.truePos;\n      }\n\n      results.push(result);\n    }\n    avgs.error /= k;\n    avgs.iterations /= k;\n    avgs.testTime /= k;\n    avgs.trainTime /= k;\n\n    if (CrossValidate.isBinaryStats(stats)) {\n      stats.precision = stats.truePos / (stats.truePos + stats.falsePos);\n      stats.recall = stats.truePos / (stats.truePos + stats.falseNeg);\n      stats.accuracy = (stats.trueNeg + stats.truePos) / stats.total;\n    }\n\n    stats.testSize = size;\n    stats.trainSize = data.length - size;\n\n    this.json = {\n      avgs: avgs,\n      stats: stats,\n      sets: results,\n    };\n    return this.json as ICrossValidateStats<\n      ReturnType<InitClassifierType>['toJSON']\n    >;\n  }\n\n  toNeuralNetwork(): ReturnType<InitClassifierType> {\n    return this.fromJSON(this.json);\n  }\n\n  toJSON(): ICrossValidateJSON<\n    ReturnType<ReturnType<InitClassifierType>['toJSON']>\n  > | null {\n    return this.json;\n  }\n\n  fromJSON(\n    crossValidateJson: ICrossValidateJSON<\n      ReturnType<ReturnType<InitClassifierType>['toJSON']>\n    >\n  ): ReturnType<InitClassifierType> {\n    const winningJSON:\n      | ICrossValidationTestPartitionResults<\n          ReturnType<ReturnType<InitClassifierType>['toJSON']>\n        >\n      | ICrossValidationTestPartitionBinaryResults<\n          ReturnType<ReturnType<InitClassifierType>['toJSON']>\n        > = (crossValidateJson as ICrossValidateStats<\n      ReturnType<ReturnType<InitClassifierType>['toJSON']>\n    >).sets.reduce((prev, cur) => (prev.error < cur.error ? prev : cur));\n    return (this.initClassifier() as ReturnType<InitClassifierType>).fromJSON(\n      winningJSON.network\n    );\n  }\n}\n","import { IKernelRunShortcut, IKernelFunctionThis } from 'gpu.js';\nimport { makeKernel } from '../utilities/kernel';\n\ninterface mse2dThis extends IKernelFunctionThis {\n  constants: { height: number; width: number; length: number };\n}\n\n/**\n * 2D Mean Squared Error\n */\nexport function mse2d(\n  this: mse2dThis,\n  errors: Array<[number, number]>\n): number {\n  let sum = 0;\n  for (let y = 0; y < this.constants.height; y++) {\n    for (let x = 0; x < this.constants.width; x++) {\n      sum += errors[y][x] ** 2;\n    }\n  }\n  return sum / this.constants.length;\n}\n\nexport class MeanSquaredError {\n  /** Calculate the mean squared error given an array of errors */\n  calculate: IKernelRunShortcut;\n  /** Returns the sum of absolute values of previuous error and previous layer errors */\n  addAbsolute: IKernelRunShortcut;\n  /** Adds two erros */\n  add: IKernelRunShortcut;\n  /** Returns the ratio of sum of errors and length (ie the average) */\n  divide: IKernelRunShortcut;\n\n  constructor({ width, height }: { width: number; height: number }) {\n    this.calculate = makeKernel(mse2d, {\n      output: [1],\n      constants: {\n        width,\n        height,\n        length: width * height,\n      },\n      immutable: true,\n    });\n\n    this.addAbsolute = makeKernel(\n      function (prevError: number[], prevLayerErrors: number[][]) {\n        return prevError[0] + Math.abs(prevLayerErrors[0][0]);\n      },\n      {\n        output: [1],\n        immutable: true,\n      }\n    );\n\n    this.add = makeKernel(\n      function (value1: number[], value2: number[]) {\n        return value1[0] + value2[0];\n      },\n      {\n        output: [1],\n        immutable: true,\n      }\n    );\n\n    this.divide = makeKernel(\n      function (length: number, mseSum: number[]) {\n        const value = mseSum[0];\n        if (value > 0) {\n          return value / length;\n        }\n        return 0;\n      },\n      {\n        output: [1],\n        immutable: true,\n      }\n    );\n  }\n}\n","import {\n  IKernelRunShortcut,\n  Input,\n  Kernel,\n  KernelOutput,\n  Texture,\n  TextureArrayOutput,\n} from 'gpu.js';\nimport { IPraxis, IPraxisSettings } from '../praxis/base-praxis';\nimport { clear } from '../utilities/kernel';\n\nexport interface ILayerJSON {\n  width?: number;\n  height?: number;\n  depth?: number;\n  weights?: number[] | number[][] | number[][][] | null;\n  type: string;\n  inputLayerIndex?: number;\n  inputLayer1Index?: number;\n  inputLayer2Index?: number;\n  praxisOpts?: Partial<IPraxisSettings> | null;\n}\n\nexport interface ILayer {\n  width: number;\n  height: number;\n  depth: number;\n  weights: KernelOutput | Input;\n  deltas: KernelOutput;\n  praxis: IPraxis | null;\n  errors?: KernelOutput | null;\n  setupKernels: (training?: boolean) => void;\n  predictKernel: IKernelRunShortcut | null;\n  compareKernel: IKernelRunShortcut | null;\n  settings: Partial<ILayerSettings>;\n  reuseKernels: (layer: ILayer) => void;\n  predict: (inputs?: KernelOutput) => void;\n  compare: (targetValues?: KernelOutput) => void;\n  learn: ((learningRate?: number) => void) | ((learningRate: number) => void);\n  toJSON: () => Partial<ILayerJSON>;\n  inputLayer?: ILayer;\n  inputLayer1?: ILayer;\n  inputLayer2?: ILayer;\n  index?: number;\n  id?: string;\n}\n\nexport interface ILayerSettings {\n  width?: number | null;\n  height?: number | null;\n  depth?: number | null;\n  weights?: KernelOutput | null;\n  deltas?: KernelOutput | null;\n  id?: string;\n  praxis?: IPraxis | null;\n  praxisOpts?: Partial<IPraxisSettings> | null;\n  initPraxis?:\n    | ((layerTemplate: ILayer, settings?: IPraxisSettings) => IPraxis)\n    | null;\n  cleanupDeltas?: boolean;\n}\n\nexport const baseLayerDefaultSettings: ILayerSettings = {\n  width: 1,\n  height: 1,\n  depth: null,\n  weights: null,\n  deltas: null,\n  praxis: null,\n  praxisOpts: null,\n  cleanupDeltas: true,\n};\n\nexport type BaseLayerType = new (settings?: Partial<ILayerSettings>) => ILayer;\n\nexport class BaseLayer implements ILayer {\n  praxis: IPraxis | null = null;\n  predictKernel: IKernelRunShortcut | null = null;\n  compareKernel: IKernelRunShortcut | null = null;\n  settings: Partial<ILayerSettings>;\n\n  get width(): number {\n    return this.settings.width ?? 0;\n  }\n\n  get height(): number {\n    return this.settings.height ?? 0;\n  }\n\n  get depth(): number {\n    return this.settings.depth ?? 0;\n  }\n\n  get weights(): KernelOutput | Input {\n    return this.settings.weights as KernelOutput;\n  }\n\n  set weights(weights: KernelOutput | Input) {\n    this.settings.weights = weights as KernelOutput;\n    if (this.settings.cleanupDeltas && this.deltas) {\n      clear(this.deltas);\n    }\n  }\n\n  get deltas(): KernelOutput {\n    return this.settings.deltas as KernelOutput;\n  }\n\n  set deltas(deltas: KernelOutput) {\n    this.settings.deltas = deltas;\n  }\n\n  get id(): string {\n    return this.settings.id ?? '';\n  }\n\n  set id(title: string) {\n    this.settings.id = title;\n  }\n\n  constructor(settings?: Partial<ILayerSettings>) {\n    if (settings) {\n      this.settings = { ...baseLayerDefaultSettings, ...settings };\n    } else {\n      this.settings = { ...baseLayerDefaultSettings };\n    }\n    this.setupPraxis();\n  }\n\n  setupPraxis(): void {\n    const { initPraxis, praxis, praxisOpts } = this.settings;\n    if (!this.praxis) {\n      if (initPraxis) {\n        if (praxisOpts) {\n          this.praxis = initPraxis(this, praxisOpts);\n        } else {\n          this.praxis = initPraxis(this);\n        }\n      } else if (praxis) {\n        this.praxis = praxis;\n      }\n    }\n  }\n\n  /*\n  get weights() {\n    return this._weights;\n  }\n\n  set weights(value) {\n    if (value) {\n      if (value.dimensions) {\n        if (value.dimensions[0] !== this.width) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value width`);\n        }\n        if (value.dimensions[1] !== this.height) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value height`);\n        }\n      } else {\n        if (value[0].length !== this.width) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value width`);\n        }\n        if (value.length !== this.height) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value height`);\n        }\n      }\n    }\n    this._weights = value;\n  }\n\n  get deltas() {\n    return this._deltas;\n  }\n\n  set deltas(value) {\n    if (value) {\n      if (value.dimensions) {\n        if (value.dimensions[0] !== this.width) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value width`);\n        }\n        if (value.dimensions[1] !== this.height) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value height`);\n        }\n      } else {\n        if (value[0].length !== this.width) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value width`);\n        }\n        if (value.length !== this.height) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value height`);\n        }\n      }\n    }\n    this._deltas = value;\n  } */\n\n  validate(): void {\n    if (Number.isNaN(this.height)) {\n      throw new Error(`${this.constructor.name} layer height is not a number`);\n    }\n    if (Number.isNaN(this.width)) {\n      throw new Error(`${this.constructor.name} layer width is not a number`);\n    }\n    if (this.height < 1) {\n      throw new Error(`${this.constructor.name} layer height is less than 1`);\n    }\n    if (this.width < 1) {\n      throw new Error(`${this.constructor.name} layer width is less than 1`);\n    }\n  }\n\n  setupKernels(isTraining?: boolean): void {}\n\n  reuseKernels(layer: ILayer): void {\n    if (layer.width !== this.width) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${layer.width} is not ${this.width}`\n      );\n    }\n    if (layer.height !== this.height) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${layer.height} is not ${this.height}`\n      );\n    }\n    if (layer.hasOwnProperty('predictKernel') && layer.predictKernel !== null) {\n      if (!(layer.predictKernel as Kernel).immutable) {\n        throw new Error(\n          `${layer.constructor.name}.predictKernel is not reusable, set kernel.immutable = true`\n        );\n      }\n      this.predictKernel = layer.predictKernel;\n    }\n    if (layer.hasOwnProperty('compareKernel') && layer.compareKernel !== null) {\n      if (!(layer.compareKernel as Kernel).immutable) {\n        throw new Error(\n          `${layer.constructor.name}.compareKernel is not reusable, set kernel.immutable = true`\n        );\n      }\n      this.compareKernel = layer.compareKernel;\n    }\n    this.praxis = layer.praxis;\n  }\n\n  predict(inputs?: KernelOutput): void {}\n\n  compare(targetValues?: KernelOutput): void {}\n\n  learn(learningRate?: number): void {}\n\n  toArray(): TextureArrayOutput {\n    return Array.isArray(this.weights)\n      ? this.weights\n      : (this.weights as Texture).toArray();\n  }\n\n  toJSON(): Partial<ILayerJSON> {\n    return BaseLayer.toJSON(this);\n  }\n\n  static toJSON(layer: ILayer): Partial<ILayerJSON> {\n    const { weights } = layer;\n    return {\n      width: layer.width,\n      height: layer.height,\n      depth: layer.depth,\n      weights: toUntypedArray(\n        (weights && weights instanceof Texture\n          ? weights.toArray()\n          : weights) as\n          | Float32Array\n          | Float32Array[]\n          | Float32Array[][]\n          | number[]\n          | number[][]\n          | number[][][]\n          | null\n      ),\n      type: layer.constructor.name,\n      praxisOpts: layer.praxis ? layer.praxis.toJSON() : null,\n    };\n  }\n}\n\nfunction toUntypedArray(\n  weights:\n    | Float32Array\n    | Float32Array[]\n    | Float32Array[][]\n    | number[]\n    | number[][]\n    | number[][][]\n    | null\n): number[][][] | number[][] | number[] | null {\n  if (weights === null) return null;\n  if (Array.isArray(weights)) {\n    if (typeof weights[0] === 'number') {\n      return weights as number[];\n    } else if (Array.isArray(weights[0]) && typeof weights[0][0] === 'number') {\n      return weights as number[][];\n    } else if (\n      Array.isArray(weights[0][0]) &&\n      typeof weights[0][0][0] === 'number'\n    ) {\n      return weights as number[][][];\n    } else if (weights[0] instanceof Float32Array) {\n      const matrix = weights as Float32Array[];\n      return matrix.map((row: Float32Array) => {\n        return Array.from(row);\n      });\n    } else if (weights[0][0] instanceof Float32Array) {\n      const cube = weights as Float32Array[][];\n      return cube.map((matrix: Float32Array[]): number[][] => {\n        return matrix.map((row: Float32Array): number[] => {\n          return Array.from(row);\n        });\n      });\n    }\n  } else if (weights) {\n    return Array.from(weights);\n  }\n  throw new Error('unexpected value');\n}\n","import { zeros } from './zeros';\n\n/**\n * Returns a 2D tensor(matrix) of zeros\n */\nexport function zeros2D(width: number, height: number): Float32Array[] {\n  const result: Float32Array[] = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = zeros(width);\n  }\n  return result;\n}\n","import { zeros2D } from './zeros-2d';\n\n/**\n * Returns a 3D tensor of arrays\n */\nexport function zeros3D(\n  width: number,\n  height: number,\n  depth: number\n): Float32Array[][] {\n  const result: Float32Array[][] = new Array(depth);\n  for (let z = 0; z < depth; z++) {\n    result[z] = zeros2D(width, height);\n  }\n  return result;\n}\n","import { BaseLayer, ILayerSettings, ILayer } from './base-layer';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { zeros3D } from '../utilities/zeros-3d';\n\nexport type ActivationType = new (\n  inputLayer: ILayer,\n  settings: Partial<ILayerSettings>\n) => ILayer;\n\nexport class Activation extends BaseLayer {\n  inputLayer: ILayer;\n\n  get width(): number {\n    return this.inputLayer.width;\n  }\n\n  get height(): number {\n    return this.inputLayer.height;\n  }\n\n  get depth(): number {\n    return this.inputLayer.depth;\n  }\n\n  constructor(inputLayer: ILayer, settings?: Partial<ILayerSettings>) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    const { width, height, depth } = this;\n    this.predictKernel = null;\n    this.compareKernel = null;\n    this.validate();\n    if (depth > 0) {\n      this.weights = zeros3D(width, height, depth);\n      this.deltas = zeros3D(width, height, depth);\n    } else if (height > 0) {\n      this.weights = zeros2D(width, height);\n      this.deltas = zeros2D(width, height);\n    }\n    this.setupPraxis();\n  }\n}\n","import { KernelOutput } from 'gpu.js';\nimport { BaseLayer, ILayer, ILayerSettings } from './base-layer';\n\nexport interface IFilterSettings extends ILayerSettings {\n  filterCount: number;\n  filterWidth: number;\n  filterHeight: number;\n  filters?: KernelOutput;\n  filterDeltas?: KernelOutput;\n}\n\nexport type FilterType = new (\n  settings: Partial<IFilterSettings>,\n  inputLayer: ILayer\n) => ILayer;\n\nexport class Filter extends BaseLayer {\n  get width(): number {\n    return this.inputLayer.width;\n  }\n\n  get height(): number {\n    return this.inputLayer.height;\n  }\n\n  get depth(): number {\n    return this.inputLayer.depth;\n  }\n\n  get filterCount(): number {\n    return this.settings.filterCount as number;\n  }\n\n  get filterWidth(): number {\n    return this.settings.filterWidth as number;\n  }\n\n  get filterHeight(): number {\n    return this.settings.filterHeight as number;\n  }\n\n  get filters(): KernelOutput {\n    return this.settings.filters;\n  }\n\n  set filters(filters: KernelOutput) {\n    this.settings.filters = filters;\n  }\n\n  get filterDeltas(): KernelOutput {\n    return this.settings.filterDeltas;\n  }\n\n  set filterDeltas(filterDeltas: KernelOutput) {\n    this.settings.filterDeltas = filterDeltas;\n  }\n\n  settings: Partial<IFilterSettings>;\n  inputLayer: ILayer;\n  constructor(settings: Partial<IFilterSettings>, inputLayer: ILayer) {\n    super();\n    this.settings = settings;\n    this.inputLayer = inputLayer;\n  }\n}\n","import { BaseLayer, ILayer, ILayerJSON, ILayerSettings } from './base-layer';\nimport { IKernelRunShortcut, Input, KernelOutput } from 'gpu.js';\nimport { IPraxis } from '../praxis/base-praxis';\n\nexport type InternalType = new (settings: Partial<ILayerSettings>) => ILayer;\n\nexport abstract class Internal implements ILayer {\n  abstract settings: ILayerSettings;\n  abstract predict(inputs?: KernelOutput): void;\n  abstract compare(targetValues?: KernelOutput): void;\n  abstract learn(learningRate?: number): void;\n  abstract setupKernels(training?: boolean): void;\n  predictKernel: IKernelRunShortcut | null = null;\n  compareKernel: IKernelRunShortcut | null = null;\n  praxis: IPraxis | null = null;\n\n  get width(): number {\n    return this.settings.width as number;\n  }\n\n  get height(): number {\n    return this.settings.height as number;\n  }\n\n  get depth(): number {\n    return this.settings.depth as number;\n  }\n\n  get weights(): KernelOutput | Input {\n    return this.settings.weights as KernelOutput;\n  }\n\n  set weights(weights: KernelOutput | Input) {\n    this.settings.weights = weights as KernelOutput;\n  }\n\n  get deltas(): KernelOutput {\n    return this.settings.deltas as KernelOutput;\n  }\n\n  set deltas(deltas: KernelOutput) {\n    this.settings.deltas = deltas;\n  }\n\n  toJSON(): Partial<ILayerJSON> {\n    return BaseLayer.toJSON(this);\n  }\n\n  abstract reuseKernels(layer: ILayer): void;\n}\n","import { BaseLayer, ILayer, ILayerSettings } from './base-layer';\n\nexport type ModifierType = new (\n  inputLayer: ILayer,\n  settings?: Partial<ILayerSettings>\n) => ILayer;\n\nexport class Modifier extends BaseLayer {\n  inputLayer: ILayer;\n  constructor(inputLayer: ILayer, settings?: Partial<ILayerSettings>) {\n    super({\n      ...settings,\n      width: inputLayer.width,\n      height: inputLayer.height,\n      depth: inputLayer.depth,\n    });\n    this.inputLayer = inputLayer;\n  }\n\n  validate(): void {\n    super.validate();\n\n    if (this.width !== this.inputLayer.width) {\n      throw new Error(\n        `width of ${this.width} does not match inputLayer.width of ${this.inputLayer.width}`\n      );\n    }\n\n    if (this.height !== this.inputLayer.height) {\n      throw new Error(\n        `height of ${this.height} does not match inputLayer.height of ${this.inputLayer.height}`\n      );\n    }\n\n    if (this.depth !== (this.inputLayer.depth ?? 0)) {\n      throw new Error(\n        `depth of ${this.depth} does not match inputLayer.depth of ${this.inputLayer.depth}`\n      );\n    }\n  }\n}\n","import { BaseLayer, ILayerSettings, ILayer } from './base-layer';\nimport { zeros2D } from '../utilities/zeros-2d';\n\nexport type OperatorType = new (\n  inputLayer1: ILayer,\n  inputLayer2: ILayer,\n  settings?: Partial<ILayerSettings>\n) => ILayer;\n\nexport abstract class Operator extends BaseLayer {\n  inputLayer1: ILayer;\n  inputLayer2: ILayer;\n  constructor(\n    inputLayer1: ILayer,\n    inputLayer2: ILayer,\n    settings?: Partial<ILayerSettings>\n  ) {\n    super(settings);\n    this.inputLayer1 = inputLayer1;\n    this.inputLayer2 = inputLayer2;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n    this.setupPraxis();\n  }\n}\n","import { IKernelFunctionThis, IKernelRunShortcut, KernelOutput } from 'gpu.js';\n\nimport { makeKernel, release, clone } from '../utilities/kernel';\nimport { zeros } from '../utilities/zeros';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { BaseLayer, ILayer, ILayerSettings } from './base-layer';\n\nexport function compare1D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  targetValues: number[]\n): number {\n  return weights[this.thread.y][this.thread.x] - targetValues[this.thread.x];\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  targetValues: number[][]\n): number {\n  return (\n    weights[this.thread.y][this.thread.x] -\n    targetValues[this.thread.y][this.thread.x]\n  );\n}\n\nexport type TargetType = new (\n  settings: Partial<ILayerSettings>,\n  inputLayer: ILayer\n) => ILayer;\n\nexport class Target extends BaseLayer {\n  errors: KernelOutput;\n  inputLayer: ILayer;\n  constructor(settings: Partial<ILayerSettings>, inputLayer: ILayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n    if (this.depth) {\n      throw new Error('Target layer not implemented for depth');\n    } else if (this.height) {\n      this.weights = zeros2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n      this.errors = zeros2D(this.width, this.height);\n    } else {\n      this.weights = zeros(this.width);\n      this.deltas = zeros(this.width);\n      this.errors = zeros(this.width);\n    }\n  }\n\n  setupKernels(): void {\n    if (this.width === 1) {\n      this.compareKernel = makeKernel(compare1D, {\n        output: [this.width, this.height],\n        immutable: true,\n      });\n    } else {\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    // TODO: should we clone here?\n    // NOTE: this looks like it shouldn't be, but the weights are immutable, and this is where they are reused.\n    release(this.weights);\n    this.weights = clone(this.inputLayer.weights as KernelOutput);\n  }\n\n  compare(targetValues: KernelOutput): void {\n    // this is where weights attach to deltas\n    // deltas will be zero on learn, so save it in error for comparing to mse later\n    release(this.deltas);\n    release(this.errors);\n    release(this.inputLayer.deltas);\n    this.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      targetValues\n    );\n    this.inputLayer.deltas = clone(this.deltas);\n    this.errors = clone(this.deltas);\n  }\n\n  setupPraxis(): void {}\n}\n\nexport function target(settings: ILayerSettings, inputLayer: ILayer): Target {\n  return new Target(settings, inputLayer);\n}\n","import { release } from '../utilities/kernel';\nimport { BaseLayer, ILayer, ILayerSettings } from './base-layer';\nexport { Activation } from './activation';\nexport { Filter } from './filter';\nexport { Internal } from './internal';\nexport { Modifier } from './modifier';\nexport { Operator } from './operator';\nexport { Target } from './target';\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class InternalModel {}\n\nexport type EntryPointType = new (settings: Partial<ILayerSettings>) => ILayer;\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class EntryPoint extends BaseLayer {}\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class Model extends BaseLayer {\n  learn(learningRate?: number): void {\n    // TODO: do we need to release here?\n    const { weights: oldWeights } = this;\n    if (!this.praxis) throw new Error('this.praxis not defined');\n    this.weights = this.praxis.run(this, learningRate as number);\n    release(oldWeights);\n  }\n}\n","import { ILayer } from '../layer';\nimport { IKernelRunShortcut, KernelOutput } from 'gpu.js';\n\nexport interface ILayerTemplate {\n  width: number;\n  height: number;\n  depth: number;\n}\n\nexport interface IPraxisJSON {\n  width: number;\n  height: number;\n  depth: number;\n}\n\nexport interface IPraxisSettings {\n  width?: number;\n  height?: number;\n  depth?: number;\n  kernel?: IKernelRunShortcut | null;\n}\n\nexport interface IPraxis {\n  layerTemplate: ILayerTemplate | null;\n  kernel: IKernelRunShortcut | null;\n  settings: Partial<IPraxisSettings>;\n  setupKernels: () => void;\n  width: number;\n  height: number;\n  depth: number;\n  run:\n    | ((layer: ILayer, learningRate: number) => KernelOutput)\n    | ((layer: ILayer, learningRate?: number) => KernelOutput);\n  toJSON: () => Partial<IPraxisSettings>;\n}\n\nexport abstract class BasePraxis implements IPraxis {\n  layerTemplate: ILayerTemplate;\n  kernel: IKernelRunShortcut | null;\n  settings: Partial<IPraxisSettings>;\n\n  get width(): number {\n    return this.layerTemplate.width;\n  }\n\n  get height(): number {\n    return this.layerTemplate.height;\n  }\n\n  get depth(): number {\n    return this.layerTemplate.depth;\n  }\n\n  constructor(\n    layerTemplate: ILayerTemplate,\n    settings: Partial<IPraxisSettings> = {}\n  ) {\n    this.layerTemplate = layerTemplate;\n    this.settings = { ...settings };\n    this.kernel = null;\n  }\n\n  setupKernels(): void {}\n\n  reuseKernels(praxis: IPraxis): void {\n    if (praxis.width !== this.width) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${praxis.width} is not ${this.width}`\n      );\n    }\n    if (praxis.height !== this.height) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${praxis.height} is not ${this.height}`\n      );\n    }\n    if (praxis.hasOwnProperty('kernel')) {\n      this.kernel = praxis.kernel;\n    }\n  }\n\n  abstract run(layer: ILayer, learningRate?: number): KernelOutput;\n\n  toJSON(): Partial<IPraxisSettings> {\n    return { ...this.settings };\n  }\n}\n","import { makeKernel } from '../utilities/kernel';\nimport { BasePraxis, IPraxisSettings } from './base-praxis';\nimport { ILayer } from '../layer/base-layer';\nimport { IKernelFunctionThis, IKernelRunShortcut, KernelOutput } from 'gpu.js';\n\nexport interface IUpdateThis extends IKernelFunctionThis {\n  constants: {\n    learningRate: number;\n  };\n}\n\nexport function update(\n  this: IUpdateThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  return (\n    weights[this.thread.y][this.thread.x] +\n    this.constants.learningRate * deltas[this.thread.y][this.thread.x]\n  );\n}\n\nexport interface IArthurDeviationBiasesSettings extends IPraxisSettings {\n  learningRate?: number;\n}\n\nexport const defaultSettings = {\n  learningRate: 0.3,\n};\n\nexport class ArthurDeviationBiases extends BasePraxis {\n  settings: IArthurDeviationBiasesSettings;\n  kernel: IKernelRunShortcut | null;\n  constructor(layer: ILayer, settings?: IArthurDeviationBiasesSettings) {\n    super(layer);\n    this.settings = { ...defaultSettings, ...settings };\n    this.kernel = null;\n  }\n\n  run(layer: ILayer): KernelOutput {\n    return (this.kernel as IKernelRunShortcut)(layer.weights, layer.deltas);\n  }\n\n  setupKernels(): void {\n    this.kernel = makeKernel(update, {\n      output: [this.width, this.height],\n      constants: {\n        learningRate: this.settings.learningRate ?? 0.01,\n      },\n    });\n  }\n}\n\nexport function arthurDeviationBiases(\n  layer: ILayer,\n  settings?: Partial<IArthurDeviationBiasesSettings>\n): ArthurDeviationBiases {\n  return new ArthurDeviationBiases(layer, settings);\n}\n","import { makeKernelMap } from '../utilities/kernel';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { BasePraxis, IPraxisSettings } from './base-praxis';\nimport { ILayer } from '../layer/base-layer';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  ISubKernelObject,\n  ISubKernelsResults,\n  KernelOutput,\n} from 'gpu.js';\n\nexport function updateChange(value: number): number {\n  return value;\n}\n\nexport interface IUpdateConstants extends IConstantsThis {\n  learningRate: number;\n  momentum: number;\n}\n\nexport function update(\n  this: IKernelFunctionThis<IUpdateConstants>,\n  changes: number[][],\n  weights: number[][],\n  incomingWeights: number[][],\n  inputDeltas: number[][]\n): number {\n  const lastChange: number = changes[this.thread.y][this.thread.x];\n  const inputDelta: number = inputDeltas[this.thread.y][0];\n  const weight: number = weights[this.thread.y][this.thread.x];\n  const incoming: number = incomingWeights[this.thread.x][0];\n\n  const change =\n    this.constants.learningRate * inputDelta * incoming +\n    this.constants.momentum * lastChange;\n  updateChange(change);\n  return weight + change;\n}\n\nexport interface IArthurDeviationWeightsSettings extends IPraxisSettings {\n  learningRate?: number;\n  momentum?: number;\n  weightsLayer?: ILayer | null;\n  incomingLayer?: ILayer | null;\n  deltaLayer?: ILayer | null;\n}\n\nexport interface IKernelMapResults extends ISubKernelsResults {\n  changes: KernelOutput;\n}\n\nexport const defaultSettings: IArthurDeviationWeightsSettings = {\n  learningRate: 0.3,\n  momentum: 0.1,\n  weightsLayer: null,\n  incomingLayer: null,\n  deltaLayer: null,\n};\n\nexport class ArthurDeviationWeights extends BasePraxis {\n  changes: KernelOutput;\n  kernelMap: IKernelMapRunShortcut<ISubKernelObject> | null = null;\n  settings: IArthurDeviationWeightsSettings;\n  get learningRate(): number {\n    return this.settings.learningRate as number;\n  }\n\n  get momentum(): number {\n    return this.settings.momentum as number;\n  }\n\n  get weightsLayer(): ILayer {\n    return this.settings.weightsLayer as ILayer;\n  }\n\n  set weightsLayer(layer: ILayer) {\n    this.settings.weightsLayer = layer;\n  }\n\n  get deltaLayer(): ILayer {\n    return this.settings.deltaLayer as ILayer;\n  }\n\n  set deltaLayer(layer: ILayer) {\n    this.settings.deltaLayer = layer;\n  }\n\n  get incomingLayer(): ILayer {\n    return this.settings.incomingLayer as ILayer;\n  }\n\n  set incomingLayer(layer: ILayer) {\n    this.settings.incomingLayer = layer;\n  }\n\n  constructor(layer: ILayer, settings?: IArthurDeviationWeightsSettings) {\n    super(layer);\n    this.settings = { ...defaultSettings, ...settings };\n    this.changes = zeros2D(layer.width, layer.height);\n  }\n\n  run(): KernelOutput {\n    const output = (this.kernelMap as IKernelMapRunShortcut<IKernelMapResults>)(\n      this.changes,\n      this.weightsLayer.weights,\n      this.incomingLayer.weights,\n      this.deltaLayer.deltas\n    );\n    this.changes = output.changes;\n    return output.result;\n  }\n\n  setupKernels(): void {\n    this.kernelMap = makeKernelMap<Parameters<typeof update>, IUpdateConstants>(\n      {\n        changes: updateChange,\n      },\n      update,\n      {\n        output: [this.width, this.height],\n        constants: {\n          learningRate: this.learningRate,\n          momentum: this.momentum,\n        },\n      }\n    );\n  }\n}\n\nexport function arthurDeviationWeights(\n  layer: ILayer,\n  settings?: Partial<IArthurDeviationWeightsSettings>\n): ArthurDeviationWeights {\n  return new ArthurDeviationWeights(layer, settings);\n}\n","import { BasePraxis, ILayerTemplate, IPraxisSettings } from './base-praxis';\n\nimport { makeKernelMap, release } from '../utilities/kernel';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  ISubKernelObject,\n  KernelOutput,\n} from 'gpu.js';\nimport { ILayer } from '../layer';\n\nexport function getMomentum(\n  delta: number,\n  decay: number,\n  previousMomentum: number\n): number {\n  return previousMomentum * decay + (1 - decay) * delta * delta;\n}\n\nexport function clipByValue(value: number, max: number, min: number): number {\n  if (value > max) {\n    return max;\n  }\n  if (value < min) {\n    return min;\n  }\n  return value;\n}\n\ninterface IUpdate extends IConstantsThis {\n  clipValue: number;\n  decayRate: number;\n  smoothEps: number;\n  regularizationStrength: number;\n}\n/**\n * @description Momentum Root Mean Square Propagation Function\n */\nexport function update(\n  this: IKernelFunctionThis<IUpdate>,\n  weights: number[][],\n  deltas: number[][],\n  previousMomenta: number[][]\n): number {\n  const delta = deltas[this.thread.y][this.thread.x];\n  const clippedDelta = clipByValue(\n    delta,\n    this.constants.clipValue,\n    -this.constants.clipValue\n  );\n  const weight = weights[this.thread.y][this.thread.x];\n  const previousMomentum = previousMomenta[this.thread.y][this.thread.x];\n  const momentum = getMomentum(\n    delta,\n    this.constants.decayRate,\n    previousMomentum\n  );\n  return (\n    weight +\n    (-this.constants.learningRate * clippedDelta) /\n      Math.sqrt(momentum + this.constants.smoothEps) -\n    this.constants.regularizationStrength * weight\n  );\n}\n\nexport function isClippedByValue(\n  value: number,\n  max: number,\n  min: number\n): number {\n  if (value > max) {\n    return 1;\n  }\n  if (value < min) {\n    return 1;\n  }\n  return 0;\n}\n\nexport interface IMomentumRootMeanSquaredPropagationSettings\n  extends IPraxisSettings {\n  decayRate?: number;\n  regularizationStrength?: number;\n  learningRate?: number;\n  smoothEps: number;\n  clipValue: number;\n}\n\nexport const defaults: IMomentumRootMeanSquaredPropagationSettings = {\n  decayRate: 0.999,\n  regularizationStrength: 0.000001,\n  learningRate: 0.01,\n  smoothEps: 1e-8,\n  clipValue: 5,\n};\n\nexport class MomentumRootMeanSquaredPropagation extends BasePraxis {\n  momenta: KernelOutput;\n  kernelMap: IKernelMapRunShortcut<ISubKernelObject> | null = null;\n  settings: Partial<IMomentumRootMeanSquaredPropagationSettings>;\n\n  get clipValue(): number {\n    return this.settings.clipValue as number;\n  }\n\n  get decayRate(): number {\n    return this.settings.decayRate as number;\n  }\n\n  get learningRate(): number {\n    return this.settings.learningRate as number;\n  }\n\n  get regularizationStrength(): number {\n    return this.settings.regularizationStrength as number;\n  }\n\n  get smoothEps(): number {\n    return this.settings.smoothEps as number;\n  }\n\n  constructor(\n    layerTemplate: ILayerTemplate,\n    settings: Partial<IMomentumRootMeanSquaredPropagationSettings> = {}\n  ) {\n    super(layerTemplate);\n    this.settings = { ...defaults, ...settings };\n    this.momenta = zeros2D(layerTemplate.width, layerTemplate.height);\n  }\n\n  run(layer: ILayer): KernelOutput {\n    const { momenta, result } = (this.kernelMap as IKernelMapRunShortcut<\n      ISubKernelObject\n    >)(layer.weights, layer.deltas, this.momenta);\n    release(this.momenta);\n    this.momenta = momenta;\n    return result;\n  }\n\n  setupKernels(): void {\n    this.kernelMap = makeKernelMap(\n      {\n        momenta: getMomentum,\n      },\n      update,\n      {\n        output: [this.width, this.height],\n        constants: {\n          clipValue: this.clipValue,\n          decayRate: this.decayRate,\n          learningRate: this.learningRate,\n          regularizationStrength: this.regularizationStrength,\n          smoothEps: this.smoothEps,\n        },\n        functions: [clipByValue],\n        immutable: true,\n      }\n    );\n  }\n}\n\nexport function momentumRootMeanSquaredPropagation(\n  layer: ILayer,\n  settings: Partial<IMomentumRootMeanSquaredPropagationSettings>\n): MomentumRootMeanSquaredPropagation {\n  return new MomentumRootMeanSquaredPropagation(layer, settings);\n}\n\n/**\n * @description Mathematician friendly name of MomentumRootMeanSquaredPropagation class. For those that are not mere mortals\n */\nexport const MRmsProp = MomentumRootMeanSquaredPropagation;\nexport const mRmsProp = momentumRootMeanSquaredPropagation;\n","import { ILayer } from '../layer/base-layer';\n\nexport function traverseLayersFrom(\n  layer: ILayer,\n  cb: (layer: ILayer) => void\n): void {\n  if (layer.hasOwnProperty('inputLayer')) {\n    traverseLayersFrom(\n      (layer as ILayer & { inputLayer: ILayer }).inputLayer,\n      cb\n    );\n  } else {\n    if (layer.hasOwnProperty('inputLayer1')) {\n      traverseLayersFrom(\n        (layer as ILayer & { inputLayer1: ILayer }).inputLayer1,\n        cb\n      );\n    }\n    if (layer.hasOwnProperty('inputLayer2')) {\n      traverseLayersFrom(\n        (layer as ILayer & { inputLayer2: ILayer }).inputLayer2,\n        cb\n      );\n    }\n  }\n  cb(layer);\n}\n","import { ILayer } from '../layer/base-layer';\nimport { traverseLayersFrom } from './traverse-layers-from';\n\nexport function flattenLayers(layers: ILayer[]): ILayer[] {\n  const result = layers.slice(0);\n  for (let i = 0; i < result.length; i++) {\n    let offset = 0;\n    traverseLayersFrom(result[i], (layer: ILayer) => {\n      if (!result.includes(layer)) {\n        result.splice(i + offset, 0, layer);\n        offset++;\n      }\n    });\n  }\n  return result;\n}\n","import { ILayer } from '../layer/base-layer';\n\nexport function checkSameSize(layer1: ILayer, layer2: ILayer): void {\n  if (layer1.width !== layer2.width) {\n    throw new Error(\n      `Layer width mismatch of ${layer1.width} and ${layer2.width}`\n    );\n  }\n\n  if (layer1.height !== layer2.height) {\n    throw new Error(\n      `Layer height mismatch of ${layer1.height} and ${layer2.height}`\n    );\n  }\n}\n","import { makeKernel, release, clone } from '../utilities/kernel';\nimport { checkSameSize } from '../utilities/layer-size';\nimport { Operator } from './operator';\nimport { IKernelFunctionThis, IKernelRunShortcut, Texture } from 'gpu.js';\nimport { ILayerSettings, ILayer } from './base-layer';\n\nexport function predict(\n  this: IKernelFunctionThis,\n  inputWeights1: number[][],\n  inputWeights2: number[][]\n): number {\n  return (\n    inputWeights1[this.thread.y][this.thread.x] +\n    inputWeights2[this.thread.y][this.thread.x]\n  );\n}\n\nexport class Add extends Operator {\n  get width(): number {\n    return this.inputLayer1.width;\n  }\n\n  get height(): number {\n    return this.inputLayer1.height;\n  }\n\n  get depth(): number {\n    return this.inputLayer1.depth;\n  }\n\n  validate(): void {\n    super.validate();\n    checkSameSize(this.inputLayer1, this.inputLayer2);\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      immutable: true,\n    });\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    ) as Texture;\n  }\n\n  compare(): void {\n    // TODO: Do we need release and clone here?\n    release(this.inputLayer1.deltas);\n    release(this.inputLayer2.deltas);\n    this.inputLayer1.deltas = clone(this.deltas);\n    this.inputLayer2.deltas = clone(this.deltas);\n  }\n}\n\nexport function add(\n  inputLayer1: ILayer,\n  inputLayer2: ILayer,\n  settings?: ILayerSettings\n): Add {\n  return new Add(inputLayer1, inputLayer2, settings);\n}\n","import { randos2D } from '../utilities/randos';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { baseLayerDefaultSettings, ILayer, ILayerSettings } from './base-layer';\nimport { Model } from './types';\n\nexport interface IRandomSettings extends ILayerSettings {\n  std?: number | null;\n}\n\nexport const defaults: IRandomSettings = {\n  ...baseLayerDefaultSettings,\n  std: null,\n};\n\nexport class Random extends Model implements ILayer {\n  settings: IRandomSettings;\n  constructor(settings: Partial<IRandomSettings>) {\n    super();\n    this.settings = { ...defaults, ...settings };\n    this.setupPraxis();\n    this.validate();\n\n    if (!this.weights) {\n      this.weights = randos2D(this.width, this.height, settings.std);\n    }\n    if (!this.deltas) {\n      this.deltas = zeros2D(this.width, this.height);\n    }\n  }\n\n  predict(): void {}\n\n  compare(): void {}\n}\n\nexport function random(settings: IRandomSettings): Random {\n  return new Random(settings);\n}\n","import { makeKernel, release } from '../utilities/kernel';\nimport { Operator } from './operator';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelRunShortcut,\n  Texture,\n} from 'gpu.js';\nimport { ILayer, ILayerJSON, ILayerSettings } from './base-layer';\n\nexport interface IMultiplyConstants extends IConstantsThis {\n  size: number;\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IMultiplyConstants>,\n  weights1: number[][],\n  weights2: number[][]\n): number {\n  let sum = 0;\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += weights1[this.thread.y][i] * weights2[i][this.thread.x];\n  }\n  return sum;\n}\n\nexport function compareFromX(\n  this: IKernelFunctionThis<IMultiplyConstants>,\n  deltas: number[][],\n  inputDeltas: number[][],\n  inputWeights: number[][]\n): number {\n  let sum = inputDeltas[this.thread.y][this.thread.x];\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[this.thread.y][i] * inputWeights[this.thread.x][i];\n  }\n  return sum;\n}\n\nexport function compareFromY(\n  this: IKernelFunctionThis<IMultiplyConstants>,\n  deltas: number[][],\n  inputDeltas: number[][],\n  inputWeights: number[][]\n): number {\n  let sum = inputDeltas[this.thread.y][this.thread.x];\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[i][this.thread.x] * inputWeights[i][this.thread.y];\n  }\n  return sum;\n}\n\nexport class Multiply extends Operator {\n  compareKernel1: IKernelRunShortcut | null = null;\n  compareKernel2: IKernelRunShortcut | null = null;\n\n  get width(): number {\n    return this.inputLayer2.width;\n  }\n\n  set width(width: number) {\n    throw new Error('Cannot set width on Multiply');\n  }\n\n  get height(): number {\n    return this.inputLayer1.height;\n  }\n\n  set height(height: number) {\n    throw new Error('Cannot set height on Multiply');\n  }\n\n  get depth(): number {\n    return this.inputLayer1.depth;\n  }\n\n  set depth(depth: number) {\n    throw new Error('Cannot set depth on Multiply');\n  }\n\n  validate(): void {\n    super.validate();\n    if (this.inputLayer1.width !== this.inputLayer2.height) {\n      throw new Error(\n        `Layer width mismatch of ${this.inputLayer1.width} and ${this.inputLayer2.height}`\n      );\n    }\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      constants: {\n        size: this.inputLayer2.height,\n      },\n      immutable: true,\n    });\n    this.compareKernel1 = makeKernel(compareFromX, {\n      output: [this.inputLayer1.width, this.inputLayer1.height],\n      constants: {\n        size: this.inputLayer2.width,\n      },\n      immutable: true,\n    });\n    this.compareKernel2 = makeKernel(compareFromY, {\n      output: [this.inputLayer2.width, this.inputLayer2.height],\n      constants: {\n        size: this.inputLayer1.height,\n      },\n      immutable: true,\n    });\n  }\n\n  reuseKernels(layer: ILayer): void {\n    super.reuseKernels(layer);\n    this.compareKernel1 = (layer as Multiply).compareKernel1;\n    this.compareKernel2 = (layer as Multiply).compareKernel2;\n  }\n\n  predict(): void {\n    release(this.weights);\n    if (!this.predictKernel) throw new Error('this.predictKernel is not set');\n    this.weights = this.predictKernel(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    ) as Texture;\n  }\n\n  compare(): void {\n    if (!this.compareKernel1) throw new Error('this.compareKernel1 not set');\n    if (!this.compareKernel2) throw new Error('this.compareKernel2 not set');\n\n    const inputLayer1Deltas = this.inputLayer1.deltas;\n    const inputLayer2Deltas = this.inputLayer2.deltas;\n\n    const newDeltas1 = this.compareKernel1(\n      this.deltas,\n      this.inputLayer1.deltas,\n      this.inputLayer2.weights\n    );\n    const newDeltas2 = this.compareKernel2(\n      this.deltas,\n      this.inputLayer2.deltas,\n      this.inputLayer1.weights\n    );\n\n    this.inputLayer2.deltas = newDeltas2 as Texture;\n    this.inputLayer1.deltas = newDeltas1 as Texture;\n\n    release(inputLayer1Deltas);\n    release(inputLayer2Deltas);\n  }\n\n  setupPraxis(): void {}\n\n  toJSON(): Partial<ILayerJSON> {\n    return {\n      ...super.toJSON(),\n      width: this.width,\n      height: this.height,\n    };\n  }\n}\n\nexport function multiply(\n  inputLayer1: ILayer,\n  inputLayer2: ILayer,\n  settings?: ILayerSettings\n): Multiply {\n  return new Multiply(inputLayer1, inputLayer2, settings);\n}\n","import { ILayer, ILayerSettings } from './base-layer';\nimport { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\n\nimport { Activation } from './types';\nimport { makeKernel, release } from '../utilities/kernel';\nimport { activate, measure } from '../activation/sigmoid';\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  inputs: number[][]\n): number {\n  return 1 / (1 + Math.exp(-inputs[this.thread.y][this.thread.x]));\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][]\n): number {\n  return (\n    1 / (1 + Math.exp(-inputs[this.thread.z][this.thread.y][this.thread.x]))\n  );\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  const weight = weights[this.thread.y][this.thread.x];\n  const delta = deltas[this.thread.y][this.thread.x];\n  return weight * (1 - weight) * delta;\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  weights: number[][][],\n  deltas: number[][][]\n): number {\n  const weight = weights[this.thread.z][this.thread.y][this.thread.x];\n  const delta = deltas[this.thread.z][this.thread.y][this.thread.x];\n  return weight * (1 - weight) * delta;\n}\n\nexport class Sigmoid extends Activation {\n  setupKernels(): void {\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [this.width, this.height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n  }\n\n  compare(): void {\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      this.deltas\n    );\n  }\n\n  learn(learningRate?: number): void {}\n}\n\nexport function sigmoid(\n  inputLayer: ILayer,\n  settings?: ILayerSettings\n): Sigmoid {\n  return new Sigmoid(inputLayer, settings);\n}\n","import {\n  ArthurDeviationWeights,\n  arthurDeviationWeights,\n  IArthurDeviationWeightsSettings,\n} from '../praxis/arthur-deviation-weights';\nimport {\n  arthurDeviationBiases,\n  IArthurDeviationBiasesSettings,\n} from '../praxis/arthur-deviation-biases';\nimport { ILayer } from './base-layer';\nimport { add } from './add';\nimport { IRandomSettings, random } from './random';\nimport { multiply } from './multiply';\nimport { Sigmoid, sigmoid } from './sigmoid';\nimport { IPraxis } from '../praxis/base-praxis';\n\nexport interface IArthurFeedForwardPraxisSettings\n  extends IArthurDeviationBiasesSettings,\n    IArthurDeviationWeightsSettings {}\n\nexport interface IArthurFeedForwardSettings extends IRandomSettings {\n  initPraxis?: (\n    layerTemplate: ILayer,\n    settings?: IArthurFeedForwardPraxisSettings | null\n  ) => IPraxis;\n}\n\nexport function arthurFeedForward(\n  settings: IArthurFeedForwardPraxisSettings,\n  inputLayer: ILayer\n): Sigmoid {\n  const { height } = settings;\n  function initWeightsPraxis(\n    layerTemplate: ILayer,\n    settings?: IArthurDeviationWeightsSettings\n  ): IPraxis {\n    const praxis = arthurDeviationWeights(layerTemplate, settings);\n    praxis.setupKernels();\n    return praxis;\n  }\n  function initBiasesPraxis(\n    layerTemplate: ILayer,\n    settings?: IArthurDeviationBiasesSettings\n  ): IPraxis {\n    const praxis = arthurDeviationBiases(layerTemplate, settings);\n    praxis.setupKernels();\n    return praxis;\n  }\n  const weightsLayer = random({\n    id: 'weights',\n    height,\n    width: inputLayer.height,\n    initPraxis: initWeightsPraxis,\n  });\n\n  const biasesLayer = random({\n    id: 'biases',\n    height,\n    initPraxis: initBiasesPraxis,\n  });\n\n  const multiplyLayer = multiply(weightsLayer, inputLayer);\n  const addLayer = add(multiplyLayer, biasesLayer);\n  const sigmoidLayer = sigmoid(addLayer);\n\n  const weightsPraxis = weightsLayer.praxis as ArthurDeviationWeights;\n  weightsPraxis.weightsLayer = weightsLayer;\n  weightsPraxis.incomingLayer = inputLayer;\n  weightsPraxis.deltaLayer = sigmoidLayer;\n  return sigmoidLayer;\n}\n","import { IConvolutionSettingsBase } from '../layer/convolution';\n\nexport interface IStride {\n  strideX: number;\n  strideY: number;\n}\n\nexport function getStride(\n  settings: IConvolutionSettingsBase,\n  defaults: IConvolutionSettingsBase\n): IStride {\n  if (typeof settings.stride === 'number') {\n    return { strideX: settings.stride, strideY: settings.stride };\n  } else {\n    let strideX: number = defaults.stride as number;\n    let strideY: number = defaults.stride as number;\n    if (typeof settings.strideX === 'number') {\n      strideX = settings.strideX;\n    }\n    if (typeof settings.strideY === 'number') {\n      strideY = settings.strideY;\n    }\n    return { strideX, strideY };\n  }\n}\n\nexport interface IPadding {\n  paddingX: number;\n  paddingY: number;\n}\n\nexport function getPadding(\n  settings: IConvolutionSettingsBase,\n  defaults: IConvolutionSettingsBase\n): IPadding {\n  if (typeof settings.padding === 'number') {\n    return { paddingX: settings.padding, paddingY: settings.padding };\n  } else {\n    let paddingX: number = defaults.padding as number;\n    let paddingY: number = defaults.padding as number;\n    if (typeof settings.paddingX === 'number') {\n      paddingX = settings.paddingX;\n    }\n    if (typeof settings.paddingY === 'number') {\n      paddingY = settings.paddingY;\n    }\n    return { paddingX, paddingY };\n  }\n}\n","/**\n * Returns an array of a given size with each element filled with a single value\n */\nexport function values(size: number, value: number): Float32Array {\n  return new Float32Array(size).fill(value);\n}\n","import { makeKernel, release, clone } from '../utilities/kernel';\nimport { getStride, getPadding } from '../utilities/layer-setup';\nimport { Filter } from './filter';\nimport { randos, randos3D } from '../utilities/randos';\nimport { zeros3D } from '../utilities/zeros-3d';\nimport { values } from '../utilities/values';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelRunShortcut,\n  KernelOutput,\n} from 'gpu.js';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { IPraxis } from '../praxis/base-praxis';\n\nexport interface IConvolutionConstantsBase extends IConstantsThis {\n  paddingX: number;\n  paddingY: number;\n  strideX: number;\n  strideY: number;\n  filterWidth: number;\n  filterHeight: number;\n}\n\nexport interface IPredictConstants extends IConvolutionConstantsBase {\n  inputWidth: number;\n  inputHeight: number;\n  inputDepth: number;\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IPredictConstants>,\n  inputs: number[][][],\n  filters: number[][][],\n  biases: number[]\n): number {\n  const startFilterX =\n    this.constants.paddingX - this.thread.x * this.constants.strideX;\n  const startInputX =\n    this.thread.x * this.constants.strideX - this.constants.paddingX;\n  const endFilterX = Math.min(\n    this.constants.filterWidth,\n    startFilterX + this.constants.inputWidth\n  );\n\n  const startFilterY =\n    this.constants.paddingY - this.thread.y * this.constants.strideY;\n  const startInputY =\n    this.thread.y * this.constants.strideY - this.constants.paddingY;\n  const endFilterY = Math.min(\n    this.constants.filterHeight,\n    startFilterY + this.constants.inputHeight\n  );\n\n  let sum = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (\n      let filterY = Math.max(0, startFilterY),\n        inputY = Math.max(0, startInputY);\n      filterY < endFilterY;\n      filterY++, inputY++\n    ) {\n      for (\n        let filterX = Math.max(0, startFilterX),\n          inputX = Math.max(0, startInputX);\n        filterX < endFilterX;\n        filterX++, inputX++\n      ) {\n        sum += filters[z][filterY][filterX] * inputs[z][inputY][inputX];\n      }\n    }\n  }\n  return sum + biases[this.thread.z];\n}\n\nexport interface ICompareFilterDeltasConstants\n  extends IConvolutionConstantsBase {\n  deltaWidth: number;\n  deltaHeight: number;\n  inputWidth: number;\n  inputHeight: number;\n  deltaZ: number;\n}\n\nexport function compareFilterDeltas(\n  this: IKernelFunctionThis<ICompareFilterDeltasConstants>,\n  filterDeltas: number[][][],\n  inputs: number[][][],\n  deltas: number[][][]\n): number {\n  const startDeltaX = Math.max(\n    0,\n    Math.ceil(\n      (this.constants.paddingX - this.thread.x) / this.constants.strideX\n    )\n  );\n  const startInputX =\n    startDeltaX * this.constants.strideX +\n    this.thread.x -\n    this.constants.paddingX;\n  const endDeltaX = Math.min(\n    this.constants.deltaWidth,\n    Math.floor(\n      (this.constants.inputWidth -\n        1 -\n        this.thread.x +\n        this.constants.paddingX) /\n        this.constants.strideX\n    ) + 1\n  );\n\n  const startDeltaY = Math.max(\n    0,\n    Math.ceil(\n      (this.constants.paddingY - this.thread.y) / this.constants.strideY\n    )\n  );\n  const startInputY =\n    startDeltaY * this.constants.strideY +\n    this.thread.y -\n    this.constants.paddingY;\n  const endDeltaY = Math.min(\n    this.constants.deltaHeight,\n    Math.floor(\n      (this.constants.inputHeight -\n        1 -\n        this.thread.y +\n        this.constants.paddingY) /\n        this.constants.strideY\n    ) + 1\n  );\n\n  let sum = filterDeltas[this.thread.z][this.thread.y][this.thread.x];\n  for (\n    let deltaY = startDeltaY, inputY = startInputY;\n    deltaY < endDeltaY;\n    deltaY++, inputY += this.constants.strideY\n  ) {\n    for (\n      let deltaX = startDeltaX, inputX = startInputX;\n      deltaX < endDeltaX;\n      deltaX++, inputX += this.constants.strideX\n    ) {\n      sum +=\n        inputs[this.thread.z][inputY][inputX] *\n        deltas[this.constants.deltaZ][deltaY][deltaX];\n    }\n  }\n  return sum;\n}\n\nexport interface ICompareInputDeltasConstants\n  extends IConvolutionConstantsBase {\n  deltaHeight: number;\n  deltaWidth: number;\n  deltaZ: number;\n}\n\nexport function compareInputDeltas(\n  this: IKernelFunctionThis<ICompareInputDeltasConstants>,\n  inputDeltas: number[][][],\n  filters: number[][][],\n  deltas: number[][][]\n): number {\n  const x = this.thread.x + this.constants.paddingX;\n  const startDeltaX =\n    x < this.constants.filterWidth\n      ? 0\n      : Math.floor(\n          (x - this.constants.filterWidth + this.constants.strideX) /\n            this.constants.strideX\n        );\n  const startFilterX = x - startDeltaX * this.constants.strideX;\n  const endDeltaX = Math.min(\n    startDeltaX + Math.floor(startFilterX / this.constants.strideX) + 1,\n    this.constants.deltaWidth\n  );\n\n  const y = this.thread.y + this.constants.paddingY;\n  const startDeltaY =\n    y < this.constants.filterHeight\n      ? 0\n      : Math.floor(\n          (y - this.constants.filterHeight + this.constants.strideY) /\n            this.constants.strideY\n        );\n  const startFilterY = y - startDeltaY * this.constants.strideY;\n  const endDeltaY = Math.min(\n    startDeltaY + Math.floor(startFilterY / this.constants.strideY) + 1,\n    this.constants.deltaHeight\n  );\n\n  let sum = inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n  let deltaY = startDeltaY;\n  for (\n    let filterY = startFilterY;\n    deltaY < endDeltaY;\n    filterY -= this.constants.strideY, deltaY++\n  ) {\n    let deltaX = startDeltaX;\n    for (\n      let filterX = startFilterX;\n      deltaX < endDeltaX;\n      filterX -= this.constants.strideX, deltaX++\n    ) {\n      sum +=\n        filters[this.thread.z][filterY][filterX] *\n        deltas[this.constants.deltaZ][deltaY][deltaX];\n    }\n  }\n  return sum;\n}\n\nexport interface ICompareBiasesConstants extends IConstantsThis {\n  deltaHeight: number;\n  deltaWidth: number;\n}\n\nexport function compareBiases(\n  this: IKernelFunctionThis<ICompareBiasesConstants>,\n  biasDeltas: number[][][],\n  deltas: number[][][]\n): number {\n  let sum = 0;\n  for (let y = 0; y < this.constants.deltaHeight; y++) {\n    for (let x = 0; x < this.constants.deltaWidth; x++) {\n      sum += deltas[this.thread.z][y][x];\n    }\n  }\n  return biasDeltas[this.thread.z][this.thread.y][this.thread.x] + sum;\n}\n\nexport interface IConvolutionSettingsBase {\n  stride?: number;\n  strideX?: number;\n  strideY?: number;\n  padding?: number;\n  paddingX?: number;\n  paddingY?: number;\n  filterCount?: number;\n  filterWidth?: number;\n  filterHeight?: number;\n}\n\nexport interface IConvolutionSettings\n  extends ILayerSettings,\n    IConvolutionSettingsBase {\n  bias?: number;\n  biases?: KernelOutput;\n  biasDeltas?: KernelOutput;\n  filters?: KernelOutput;\n  filterDeltas?: KernelOutput;\n}\n\nexport const defaults: IConvolutionSettings = {\n  stride: 0,\n  padding: 0,\n  bias: 0.1,\n  filterCount: 1,\n  filterWidth: 0,\n  filterHeight: 0,\n};\n\nexport class Convolution extends Filter {\n  settings: Partial<IConvolutionSettings>;\n\n  get strideX(): number {\n    return this.settings.strideX as number;\n  }\n\n  get strideY(): number {\n    return this.settings.strideY as number;\n  }\n\n  get paddingX(): number {\n    return this.settings.paddingX as number;\n  }\n\n  get paddingY(): number {\n    return this.settings.paddingX as number;\n  }\n\n  get width(): number {\n    return Math.floor(\n      (this.inputLayer.width + this.paddingX * 2 - this.filterWidth) /\n        this.strideX +\n        1\n    );\n  }\n\n  get height(): number {\n    return Math.floor(\n      (this.inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    );\n  }\n\n  get bias(): number {\n    return this.settings.bias as number;\n  }\n\n  get depth(): number {\n    return this.filterCount;\n  }\n\n  get biases(): KernelOutput {\n    return this.settings.biases;\n  }\n\n  set biases(biases: KernelOutput) {\n    this.settings.biases = biases;\n  }\n\n  get biasDeltas(): KernelOutput {\n    return this.settings.biasDeltas;\n  }\n\n  set biasDeltas(weights: KernelOutput) {\n    this.settings.biasDeltas = weights;\n  }\n\n  get filters(): KernelOutput {\n    return this.settings.filters;\n  }\n\n  set filters(filters: KernelOutput) {\n    this.settings.filters = filters;\n  }\n\n  get filterDeltas(): KernelOutput {\n    return this.settings.filterDeltas;\n  }\n\n  set filterDeltas(filterDeltas: KernelOutput) {\n    this.settings.filterDeltas = filterDeltas;\n  }\n\n  constructor(settings: IConvolutionSettings, inputLayer: ILayer) {\n    super(settings, inputLayer);\n    this.settings = {\n      ...defaults,\n      ...settings,\n      ...getPadding(settings, defaults),\n      ...getStride(settings, defaults),\n    };\n\n    this.weights =\n      settings.weights ?? randos3D(this.width, this.height, this.depth);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n\n    this.biases = values(this.depth, this.bias);\n    this.biasDeltas = settings.biasDeltas ?? randos(this.depth);\n\n    this.filters =\n      settings.filters ??\n      randos3D(this.filterWidth, this.filterHeight, this.filterCount);\n    this.filterDeltas = zeros3D(\n      this.filterWidth,\n      this.filterHeight,\n      this.filterCount\n    );\n    this.validate();\n  }\n\n  compareFilterDeltasKernel: IKernelRunShortcut | null = null;\n  compareInputDeltasKernel: IKernelRunShortcut | null = null;\n  compareBiasesKernel: IKernelRunShortcut | null = null;\n  setupKernels(): void {\n    this.predictKernel = makeKernel<\n      Parameters<typeof predict>,\n      IPredictConstants\n    >(predict, {\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n      immutable: true,\n    });\n\n    this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n      constants: {\n        deltaWidth: this.width,\n        deltaHeight: this.height,\n        deltaZ: this.depth,\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n      immutable: true,\n    });\n\n    this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n      constants: {\n        deltaWidth: this.width,\n        deltaHeight: this.height,\n        deltaZ: this.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n        filterCount: this.filterCount,\n      },\n      output: [\n        this.inputLayer.width,\n        this.inputLayer.height,\n        this.inputLayer.depth,\n      ],\n      immutable: true,\n    });\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [1, 1, this.depth],\n      constants: {\n        deltaWidth: this.width,\n        deltaHeight: this.height,\n      },\n      immutable: true,\n    });\n  }\n\n  predict(): void {\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    );\n  }\n\n  compare(): void {\n    const { filterDeltas, biasDeltas } = this;\n    this.filterDeltas = (this.compareFilterDeltasKernel as IKernelRunShortcut)(\n      filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    );\n    release(filterDeltas);\n    this.biasDeltas = (this.compareBiasesKernel as IKernelRunShortcut)(\n      biasDeltas,\n      this.deltas\n    );\n    release(biasDeltas);\n    release(this.deltas);\n    this.deltas = (this.compareInputDeltasKernel as IKernelRunShortcut)(\n      this.filters,\n      this.inputLayer.deltas\n    );\n\n    release(this.inputLayer.deltas);\n    // TODO: do we need to clone here?\n    this.inputLayer.deltas = clone(this.deltas);\n  }\n\n  learn(learningRate: number): void {\n    // TODO: handle filters\n    // TODO: do we need to release here?\n    const { weights: oldWeights } = this;\n    this.weights = (this.praxis as IPraxis).run(this, learningRate);\n    release(oldWeights);\n  }\n}\n\nexport function convolution(\n  settings: IConvolutionSettings,\n  inputLayer: ILayer\n): Convolution {\n  return new Convolution(settings, inputLayer);\n}\n","import { Filter, IFilterSettings } from './filter';\nimport { makeKernel, makeKernelMap, release } from '../utilities/kernel';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  IKernelRunShortcut,\n  ISubKernelObject,\n  KernelOutput,\n} from 'gpu.js';\nimport { ILayer, ILayerSettings, baseLayerDefaultSettings } from './base-layer';\n\nexport function setDropout(dropout: number): number {\n  return dropout;\n}\n\nexport interface IDropoutConstants extends IConstantsThis {\n  probability: number;\n}\n\nexport function trainingPredict(\n  this: IKernelFunctionThis<IDropoutConstants>,\n  inputs: number[][]\n): number {\n  if (setDropout(Math.random()) < this.constants.probability) {\n    return 0;\n  }\n  return inputs[this.thread.y][this.thread.x];\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IDropoutConstants>,\n  inputs: number[][]\n): number {\n  return inputs[this.thread.y][this.thread.x] * this.constants.probability;\n}\n\nexport function compare(\n  this: IKernelFunctionThis,\n  dropouts: number[][],\n  deltas: number[][]\n): number {\n  if (dropouts[this.thread.y][this.thread.x] === 0) {\n    return 0;\n  }\n  return deltas[this.thread.y][this.thread.x];\n}\n\nexport interface IDropoutSettings extends ILayerSettings {\n  probability: number;\n}\n\nexport const dropoutDefaults: IDropoutSettings = {\n  ...baseLayerDefaultSettings,\n  probability: 0.5,\n};\n\nexport class Dropout extends Filter {\n  dropouts: KernelOutput | null;\n  predictKernelMap: IKernelMapRunShortcut<ISubKernelObject> | null = null;\n  settings: Partial<IDropoutSettings>;\n  constructor(\n    inputLayer: ILayer,\n    settings?: Partial<IDropoutSettings> & Partial<IFilterSettings>\n  ) {\n    super(settings as Partial<IFilterSettings>, inputLayer);\n    this.settings = { ...dropoutDefaults, ...settings };\n    this.dropouts = null;\n    this.validate();\n  }\n\n  setupKernels(isTraining?: boolean): void {\n    const output = [this.width, this.height];\n\n    if (isTraining) {\n      this.predictKernelMap = makeKernelMap<\n        Parameters<typeof trainingPredict>,\n        IDropoutConstants\n      >({ dropouts: setDropout }, trainingPredict, {\n        output,\n        immutable: true,\n      });\n      this.compareKernel = makeKernel(compare, { output, immutable: true });\n    } else {\n      this.predictKernelMap = makeKernelMap<\n        Parameters<typeof predict>,\n        IDropoutConstants\n      >({}, predict, { output, immutable: true });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    if (this.dropouts) {\n      release(this.dropouts);\n    }\n    const { result, dropouts } = (this\n      .predictKernelMap as IKernelMapRunShortcut<ISubKernelObject>)(\n      this.inputLayer.weights\n    );\n    this.weights = result;\n    this.dropouts = dropouts;\n  }\n\n  compare(): void {\n    release(this.deltas);\n    this.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.dropouts as KernelOutput,\n      this.inputLayer.deltas\n    );\n  }\n}\n\nexport function dropout(\n  inputLayer: ILayer,\n  settings?: Partial<IDropoutSettings>\n): Dropout {\n  return new Dropout(inputLayer, settings);\n}\n","import { random } from './random';\nimport { add } from './add';\nimport { multiply } from './multiply';\nimport { sigmoid } from './sigmoid';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function feedForward(settings: ILayerSettings, input: ILayer): ILayer {\n  const { height, praxisOpts = null } = settings;\n  const weights = random({\n    id: 'weights',\n    height,\n    width: input.height,\n    praxisOpts,\n  });\n  const biases = random({ id: 'biases', height, praxisOpts });\n  return sigmoid(\n    add(multiply(weights, input, { praxisOpts }), biases, { praxisOpts }),\n    { praxisOpts }\n  );\n}\n","import {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelRunShortcut,\n  KernelOutput,\n} from 'gpu.js';\nimport { Filter, IFilterSettings } from './filter';\nimport { makeKernel, release } from '../utilities/kernel';\nimport { values } from '../utilities/values';\nimport { randos2D, randos3D } from '../utilities/randos';\nimport { zeros } from '../utilities/zeros';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { zeros3D } from '../utilities/zeros-3d';\nimport { ILayer } from './base-layer';\n\nexport interface IPredictConstants extends IConstantsThis {\n  inputWidth: number;\n  inputHeight: number;\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IPredictConstants>,\n  inputs: number[][],\n  filters: number[][],\n  biases: number[]\n): number {\n  let output = 0;\n  let i = 0;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      output += inputs[y][x] * filters[this.thread.x][i];\n      i++;\n    }\n  }\n  return output + biases[this.thread.x];\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis<IPredictConstants>,\n  inputs: number[][][],\n  filters: number[][],\n  biases: number[]\n): number {\n  let output = 0;\n  let i = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        output += inputs[z][y][x] * filters[this.thread.x][i];\n        i++;\n      }\n    }\n  }\n  return output + biases[this.thread.x];\n}\n\nexport interface ICompareInputDeltasConstants extends IConstantsThis {\n  filterCount: number;\n}\n\nexport function compareInputDeltas(\n  this: IKernelFunctionThis<ICompareInputDeltasConstants>,\n  inputDeltas: number[][],\n  deltas: number[][],\n  filters: number[][]\n): number {\n  let sum = 0;\n  const filterX = this.thread.x + this.thread.y * this.output.x;\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY];\n  }\n  return sum + inputDeltas[this.thread.y][this.thread.x];\n}\n\nexport function compareInputDeltas3D(\n  this: IKernelFunctionThis<ICompareInputDeltasConstants>,\n  inputDeltas: number[][][],\n  deltas: number[][],\n  filters: number[][]\n): number {\n  let sum = 0;\n  const filterX = this.thread.x + this.thread.y * this.output.x;\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY];\n  }\n  return sum + inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n}\n\nexport function compareBiases(\n  this: IKernelFunctionThis,\n  biases: number[],\n  deltas: number[][]\n): number {\n  return biases[this.thread.x] + deltas[this.thread.y][this.thread.x];\n}\n\nexport interface ICompareFiltersDeltas extends IConstantsThis {\n  deltaX: number;\n  deltaY: number;\n  inputWidth: number;\n  inputHeight: number;\n}\n\nexport function compareFilterDeltas(\n  this: IKernelFunctionThis<ICompareFiltersDeltas>,\n  filterDeltas: number[][],\n  inputWeights: number[][],\n  deltas: number[][]\n): number {\n  return (\n    filterDeltas[this.thread.y][this.thread.x] +\n    inputWeights[this.thread.y][this.thread.x] *\n      deltas[this.constants.deltaY][this.constants.deltaX]\n  );\n}\n\nexport function compareFilterDeltas3D(\n  this: IKernelFunctionThis<ICompareFiltersDeltas>,\n  filterDeltas: number[][],\n  inputWeights: number[][][],\n  deltas: number[][]\n): number {\n  const inputZ = Math.floor(\n    this.thread.x / (this.constants.inputWidth * this.constants.inputHeight)\n  );\n  const inputY = Math.floor(\n    (this.thread.x -\n      inputZ * this.constants.inputWidth * this.constants.inputHeight) /\n      this.constants.inputWidth\n  );\n  const inputX =\n    this.thread.x -\n    this.constants.inputWidth * (inputY + this.constants.inputHeight * inputZ);\n  return (\n    filterDeltas[this.thread.y][this.thread.x] +\n    inputWeights[inputZ][inputY][inputX] * deltas[0][this.thread.y]\n  );\n}\n\nexport interface IFullyConnectedDefaultSettings\n  extends Partial<IFilterSettings> {\n  bias?: number;\n  biases?: KernelOutput;\n  biasDeltas?: KernelOutput;\n}\n\nexport const defaults: IFullyConnectedDefaultSettings = {\n  bias: 0.1,\n};\n\nexport class FullyConnected extends Filter {\n  get bias(): number {\n    return this.settings.bias as number;\n  }\n\n  get biases(): KernelOutput {\n    return this.settings.biases;\n  }\n\n  set biases(biases: KernelOutput) {\n    this.settings.biases = biases;\n  }\n\n  get biasDeltas(): KernelOutput {\n    return this.settings.biases;\n  }\n\n  set biasDeltas(biasDeltas: KernelOutput) {\n    this.settings.biasDeltas = biasDeltas;\n  }\n\n  settings: Partial<IFullyConnectedDefaultSettings>;\n  compareFilterDeltasKernel: IKernelRunShortcut | null = null;\n  compareInputDeltasKernel: IKernelRunShortcut | null = null;\n  compareBiasesKernel: IKernelRunShortcut | null = null;\n  constructor(\n    settings: Partial<IFullyConnectedDefaultSettings>,\n    inputLayer: ILayer\n  ) {\n    super(settings, inputLayer);\n    this.settings = { ...settings };\n    this.validate();\n\n    const connectionCount =\n      inputLayer.width * inputLayer.height * inputLayer.depth;\n\n    this.biases = values(this.height, this.bias);\n    this.biasDeltas = zeros(this.height);\n\n    this.filters = randos2D(connectionCount, this.height);\n    this.filterDeltas = zeros2D(connectionCount, this.height);\n\n    if (this.depth > 0) {\n      this.weights = randos3D(this.width, this.height, this.depth);\n      this.deltas = zeros3D(this.width, this.height, this.depth);\n    } else if (this.height > 0) {\n      this.weights = randos2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n    }\n  }\n\n  validate(): void {\n    super.validate();\n    if (this.depth > 0) throw new Error('depth not supported');\n  }\n\n  setupKernels(): void {\n    const { inputLayer } = this;\n    const connectionCount =\n      inputLayer.width * inputLayer.height * inputLayer.depth;\n    if (inputLayer.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n          inputDepth: inputLayer.depth,\n        },\n      });\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas3D, {\n        output: [connectionCount, this.height],\n        constants: {\n          deltaX: 0,\n          deltaY: 0,\n          inputWidth: inputLayer.width,\n          inputHeight: inputLayer.height,\n        },\n        immutable: true,\n      });\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas3D, {\n        output: [inputLayer.width, inputLayer.height, inputLayer.depth],\n        constants: {\n          filterCount: this.height,\n        },\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n        },\n      });\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n        output: [connectionCount, this.height],\n        constants: {\n          deltaX: 0,\n          deltaY: 0,\n          inputWidth: inputLayer.width,\n          inputHeight: inputLayer.height,\n        },\n      });\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n        output: [inputLayer.width, inputLayer.height],\n        constants: {\n          filterCount: this.height,\n        },\n      });\n    }\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict(): void {\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    );\n  }\n\n  compare(): void {\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = (this\n      .compareInputDeltasKernel as IKernelRunShortcut)(\n      inputLayerDeltas,\n      this.deltas,\n      this.filters\n    );\n    release(inputLayerDeltas);\n\n    const { biasDeltas, filterDeltas } = this;\n    // TODO: handle biasDeltas learn\n    this.biasDeltas = (this.compareBiasesKernel as IKernelRunShortcut)(\n      this.biases,\n      this.deltas\n    );\n\n    // TODO: handle filterDeltas learn\n    this.filterDeltas = (this.compareFilterDeltasKernel as IKernelRunShortcut)(\n      filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    );\n    release(biasDeltas);\n    release(filterDeltas);\n  }\n}\n\nexport function fullyConnected(\n  settings: IFullyConnectedDefaultSettings,\n  inputLayer: ILayer\n): FullyConnected {\n  return new FullyConnected(settings, inputLayer);\n}\n","import { makeKernel } from '../utilities/kernel';\nimport { Modifier } from './types';\nimport { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function predict(\n  this: IKernelFunctionThis,\n  weights: number[][]\n): number {\n  return -weights[this.thread.y][this.thread.x];\n}\n\nexport class Negative extends Modifier {\n  constructor(inputLayer: ILayer, settings?: ILayerSettings) {\n    super(inputLayer, settings);\n    this.validate();\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict(): void {\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n  }\n}\n\nexport function negative(\n  inputLayer: ILayer,\n  settings?: ILayerSettings\n): Negative {\n  return new Negative(inputLayer, settings);\n}\n","import { makeKernel, release } from '../utilities/kernel';\nimport { Operator } from './operator';\nimport { checkSameSize } from '../utilities/layer-size';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\n\nexport function predict(\n  this: IKernelFunctionThis,\n  inputLayerWeights1: number[][],\n  inputLayerWeights2: number[][]\n): number {\n  return (\n    inputLayerWeights1[this.thread.y][this.thread.x] *\n    inputLayerWeights2[this.thread.y][this.thread.x]\n  );\n}\n\nexport function compare(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  return (\n    weights[this.thread.y][this.thread.x] * deltas[this.thread.y][this.thread.x]\n  );\n}\n\nexport class MultiplyElement extends Operator {\n  get width(): number {\n    return this.inputLayer1.width;\n  }\n\n  get height(): number {\n    return this.inputLayer1.height;\n  }\n\n  get depth(): number {\n    return this.inputLayer1.depth;\n  }\n\n  validate(): void {\n    super.validate();\n    checkSameSize(this.inputLayer1, this.inputLayer2);\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      immutable: true,\n    });\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n      immutable: true,\n    });\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    );\n  }\n\n  compare(): void {\n    release(this.inputLayer1.deltas);\n    release(this.inputLayer2.deltas);\n    this.inputLayer1.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.inputLayer2.weights,\n      this.deltas\n    );\n    this.inputLayer2.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.inputLayer1.weights,\n      this.deltas\n    );\n  }\n}\n\nexport function multiplyElement(\n  inputLayer1: ILayer,\n  inputLayer2: ILayer,\n  settings?: ILayerSettings\n): MultiplyElement {\n  return new MultiplyElement(inputLayer1, inputLayer2, settings);\n}\n","export function ones(size: number): Float32Array {\n  return new Float32Array(size).fill(1);\n}\n\nexport function ones2D(width: number, height: number): Float32Array[] {\n  const result = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = ones(width);\n  }\n  return result;\n}\n","import { ILayerSettings } from './base-layer';\n\nimport { ones2D } from '../utilities/ones';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { Model } from './types';\n\nexport class Ones extends Model {\n  constructor(settings: ILayerSettings) {\n    super(settings);\n    this.validate();\n    this.weights = ones2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n}\n\nexport function ones(settings: ILayerSettings): Ones {\n  return new Ones(settings);\n}\n","import { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\n\nimport { Activation } from './activation';\nimport { activate, measure } from '../activation/tanh';\nimport { release, makeKernel } from '../utilities/kernel';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  inputs: number[][]\n): number {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][]\n): number {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  errors: number[][]\n): number {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    errors[this.thread.y][this.thread.x]\n  );\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  weights: number[][][],\n  errors: number[][][]\n): number {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    errors[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nexport class Tanh extends Activation {\n  setupKernels(): void {\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [this.width, this.height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n  }\n\n  compare(): void {\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      this.deltas\n    );\n  }\n}\n\nexport function tanh(inputLayer: ILayer, settings?: ILayerSettings): Tanh {\n  return new Tanh(inputLayer, settings);\n}\n","import { zeros2D } from '../utilities/zeros-2d';\nimport { Model } from './types';\nimport { ILayerSettings } from './base-layer';\n\nexport class Zeros extends Model {\n  constructor(settings: ILayerSettings) {\n    super(settings);\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  predict(): void {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  // learn(): void {}\n}\n\nexport function zeros(settings: ILayerSettings): Zeros {\n  return new Zeros(settings);\n}\n","import { add } from './add';\nimport { negative } from './negative';\nimport { multiply } from './multiply';\nimport { multiplyElement } from './multiply-element';\nimport { ones } from './ones';\nimport { sigmoid } from './sigmoid';\nimport { random } from './random';\nimport { tanh } from './tanh';\nimport { zeros } from './zeros';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { RecurrentInput } from './recurrent-input';\n\nexport function gru(\n  settings: ILayerSettings,\n  recurrentInput: RecurrentInput,\n  input: ILayer\n): ILayer {\n  const { height } = settings;\n  const updateGateWeights = random({ height, width: input.height });\n  const updateGatePeepholes = random({ width: height, height });\n  const updateGateBias = zeros({ height });\n  const updateGate = sigmoid(\n    add(\n      add(\n        multiply(updateGateWeights, input),\n        multiply(updateGatePeepholes, recurrentInput)\n      ),\n      updateGateBias\n    )\n  );\n\n  const resetGateWeights = random({ height, width: input.height });\n  const resetGatePeepholes = random({ width: height, height });\n  const resetGateBias = zeros({ height });\n  const resetGate = sigmoid(\n    add(\n      add(\n        multiply(resetGateWeights, input),\n        multiply(resetGatePeepholes, recurrentInput)\n      ),\n      resetGateBias\n    )\n  );\n\n  const cellWeights = random({ height, width: input.height });\n  const cellPeepholes = random({ width: height, height });\n  const cellBias = zeros({ height });\n  const cell = tanh(\n    add(\n      add(\n        multiply(cellWeights, input),\n        multiply(cellPeepholes, multiplyElement(resetGate, recurrentInput))\n      ),\n      cellBias\n    )\n  );\n\n  // compute hidden state as gated, saturated cell activations\n  // negate updateGate\n  return add(\n    multiplyElement(\n      add(\n        ones({ width: updateGate.width, height: updateGate.height }),\n        negative(updateGate)\n      ),\n      cell\n    ),\n    multiplyElement(recurrentInput, updateGate)\n  );\n}\n","import { IKernelFunctionThis, IKernelRunShortcut, KernelOutput } from 'gpu.js';\nimport { EntryPoint } from './types';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { makeKernel, release, kernelInput, clone } from '../utilities/kernel';\n\nexport const defaults: ILayerSettings = {\n  weights: null,\n};\n\nexport class Input extends EntryPoint {\n  reshapeInput: IKernelRunShortcut | null = null;\n  constructor(settings: ILayerSettings) {\n    super({ ...defaults, ...settings });\n    this.validate();\n    this.reshapeInput = null;\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  setupKernels(): void {\n    if (this.width === 1) {\n      this.predict = this.predict1D;\n      this.reshapeInput = makeKernel(\n        function (this: IKernelFunctionThis, value: number[]) {\n          return value[this.thread.y];\n        },\n        {\n          output: [1, this.height],\n          immutable: true,\n        }\n      );\n    }\n  }\n\n  reuseKernels(layer: ILayer): void {\n    // super.reuseKernels(layer);\n    this.reshapeInput = (layer as Input).reshapeInput;\n  }\n\n  predict(inputs: KernelOutput): void {\n    if (\n      (Array.isArray(inputs) || inputs instanceof Float32Array) &&\n      typeof inputs[0] === 'number' &&\n      inputs.length === this.height * this.width\n    ) {\n      release(this.weights);\n      this.weights = kernelInput(inputs as number[], [this.width, this.height]);\n    } else if (\n      Array.isArray(inputs) &&\n      inputs.length === this.height &&\n      (Array.isArray(inputs[0]) || inputs[0] instanceof Float32Array) &&\n      inputs[0].length === this.width\n    ) {\n      this.weights = clone(inputs);\n    } else {\n      throw new Error('Inputs are not of sized correctly');\n    }\n  }\n\n  predict1D(inputs: KernelOutput): void {\n    if (this.weights) release(this.weights);\n    if (this.reshapeInput) {\n      this.weights = this.reshapeInput(inputs);\n    } else {\n      this.weights = inputs;\n    }\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(): void {}\n}\n\nexport function input(settings: ILayerSettings): Input {\n  return new Input(settings);\n}\n","import { Activation } from './types';\nimport { makeKernel, release } from '../utilities/kernel';\nimport { activate, measure } from '../activation/leaky-relu';\nimport { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  inputs: number[][]\n): number {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][]\n): number {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  );\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  weights: number[][][],\n  deltas: number[][][]\n): number {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    deltas[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nexport class LeakyRelu extends Activation {\n  setupKernels(): void {\n    const { width, height, depth } = this.inputLayer;\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n  }\n\n  compare(): void {\n    const { deltas } = this;\n    this.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      deltas\n    );\n    release(deltas);\n  }\n}\n\nexport function leakyRelu(\n  inputLayer: ILayer,\n  settings: ILayerSettings\n): LeakyRelu {\n  return new LeakyRelu(inputLayer, settings);\n}\n","import { add } from './add';\nimport { multiply } from './multiply';\nimport { multiplyElement } from './multiply-element';\nimport { random } from './random';\nimport { sigmoid } from './sigmoid';\nimport { tanh } from './tanh';\nimport { zeros } from './zeros';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { IRecurrentInput } from './recurrent-input';\n\nexport function lstmCell(\n  settings: ILayerSettings,\n  input: ILayer,\n  recurrentInput: IRecurrentInput\n): ILayer {\n  const { height } = settings;\n\n  if (typeof height !== 'number') {\n    throw new Error('no settings.height given');\n  }\n  if (recurrentInput.setDimensions) {\n    recurrentInput.setDimensions(1, height);\n  }\n\n  const inputGateWeights = random({\n    width: input.height,\n    height,\n    std: 0.08,\n    id: 'inputGateWeights',\n  });\n  const inputGatePeepholes = random({\n    width: height,\n    height,\n    std: 0.08,\n    id: 'inputGatePeepholes',\n  });\n  const inputGateBias = zeros({ width: 1, height, id: 'inputGateBias' });\n  const inputGate = sigmoid(\n    add(\n      add(\n        multiply(inputGateWeights, input),\n        multiply(inputGatePeepholes, recurrentInput)\n      ),\n      inputGateBias\n    ),\n    { id: 'inputGate' }\n  );\n\n  const forgetGateWeights = random({\n    width: input.height,\n    height,\n    std: 0.08,\n    id: 'forgetGateWeights',\n  });\n  const forgetGatePeepholes = random({\n    width: height,\n    height,\n    std: 0.08,\n    id: 'forgetGatePeepholes',\n  });\n  const forgetGateBias = zeros({ width: 1, height, id: 'forgetGateBias' });\n  const forgetGate = sigmoid(\n    add(\n      add(\n        multiply(forgetGateWeights, input),\n        multiply(forgetGatePeepholes, recurrentInput)\n      ),\n      forgetGateBias\n    ),\n    { id: 'forgetGate' }\n  );\n\n  const outputGateWeights = random({\n    width: input.height,\n    height,\n    std: 0.08,\n    id: 'outputGateWeights',\n  });\n  const outputGatePeepholes = random({\n    width: height,\n    height,\n    std: 0.08,\n    id: 'outputGatePeepholes',\n  });\n  const outputGateBias = zeros({ width: 1, height, id: 'outputGateBias' });\n  const outputGate = sigmoid(\n    add(\n      add(\n        multiply(outputGateWeights, input),\n        multiply(outputGatePeepholes, recurrentInput)\n      ),\n      outputGateBias\n    ),\n    { id: 'outputGate' }\n  );\n\n  const memoryWeights = random({\n    width: input.height,\n    height,\n    std: 0.08,\n    id: 'memoryWeights',\n  });\n  const memoryPeepholes = random({\n    width: height,\n    height,\n    std: 0.08,\n    id: 'memoryPeepholes',\n  });\n  const memoryBias = zeros({ width: 1, height, id: 'memoryBias' });\n  const memory = tanh(\n    add(\n      add(\n        multiply(memoryWeights, input),\n        multiply(memoryPeepholes, recurrentInput)\n      ),\n      memoryBias\n    ),\n    { id: 'memory' }\n  );\n\n  // compute new cell activation\n  const retainCell = multiplyElement(forgetGate, recurrentInput, {\n    id: 'retainCell',\n  }); // what do we keep from cell\n  const writeCell = multiplyElement(inputGate, memory, { id: 'writeCell' }); // what do we write to cell\n  const cell = add(retainCell, writeCell, { id: 'cell' }); // new cell contents\n\n  // compute hidden state as gated, saturated cell activations\n  return multiplyElement(outputGate, tanh(cell), { id: 'activations' });\n}\n","import { add } from './add';\nimport { multiply } from './multiply';\nimport { random } from './random';\nimport { target } from './target';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function output(settings: ILayerSettings, inputLayer: ILayer): ILayer {\n  const { height } = settings;\n  const outputGate = random({\n    height,\n    width: inputLayer.height,\n    id: 'outputGate',\n    std: 0.08,\n  });\n  const output = random({ height, id: 'output', std: 0.08 });\n  const outputGateConnector = multiply(outputGate, inputLayer, {\n    id: 'outputGateConnected',\n  });\n  return target(\n    { id: 'target', ...settings },\n    add(outputGateConnector, output)\n  );\n}\n","import { Filter } from './filter';\nimport { makeKernel, makeKernelMap, release } from '../utilities/kernel';\nimport { getPadding, getStride } from '../utilities/layer-setup';\nimport { zeros3D } from '../utilities/zeros-3d';\nimport { randos3D } from '../utilities/randos';\nimport {\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  IKernelRunShortcut,\n  ISubKernelObject,\n  KernelOutput,\n} from 'gpu.js';\nimport {\n  IConvolutionSettingsBase,\n  IConvolutionConstantsBase,\n} from './convolution';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function setSwitchY(value: number): number {\n  return value;\n}\n\nexport function setSwitchX(value: number): number {\n  return value;\n}\n\nexport interface IPredictConstants extends IConvolutionConstantsBase {\n  inputWidth: number;\n  inputHeight: number;\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IPredictConstants>,\n  inputs: number[][][]\n): number {\n  // Ends are exclusive, that is if end=4, the last item is 3\n  const unclippedStartInputX =\n    this.thread.x * this.constants.strideX - this.constants.paddingX;\n  const unclippedStartInputY =\n    this.thread.y * this.constants.strideY - this.constants.paddingY;\n  const unclippedEndInputX = unclippedStartInputX + this.constants.filterWidth;\n  const unclippedEndInputY = unclippedStartInputY + this.constants.filterHeight;\n  const startInputX = Math.max(unclippedStartInputX, 0);\n  const startInputY = Math.max(unclippedStartInputY, 0);\n  const endInputX = Math.min(unclippedEndInputX, this.constants.inputWidth);\n  const endInputY = Math.min(unclippedEndInputY, this.constants.inputHeight);\n\n  let largestValue = inputs[this.thread.z][startInputY][startInputX];\n  let largestX = startInputX;\n  let largestY = startInputY;\n\n  for (let y = startInputY; y < endInputY; y++) {\n    for (let x = startInputX; x < endInputX; x++) {\n      const input = inputs[this.thread.z][y][x];\n      if (input > largestValue) {\n        largestValue = input;\n        largestY = y;\n        largestX = x;\n      }\n    }\n  }\n  setSwitchY(largestY);\n  setSwitchX(largestX);\n  return largestValue;\n}\n\nexport interface ICompareConstants extends IConvolutionConstantsBase {\n  inputWidth: number;\n  inputHeight: number;\n\n  outputWidth: number;\n  outputHeight: number;\n}\n\nexport function compare(\n  this: IKernelFunctionThis<ICompareConstants>,\n  deltas: number[][],\n  switchX: number[][],\n  switchY: number[][]\n): number {\n  const xCenter = this.thread.x + 0.5;\n  const yCenter = this.thread.y + 0.5;\n  const invStrideX = 1 / this.constants.strideX;\n  const invStrideY = 1 / this.constants.strideY;\n\n  const startSourceX = Math.max(\n    0,\n    Math.ceil(\n      (xCenter - this.constants.filterWidth + this.constants.paddingX) *\n        invStrideX\n    )\n  );\n  const startSourceY = Math.max(\n    0,\n    Math.ceil(\n      (yCenter - this.constants.filterHeight + this.constants.paddingY) *\n        invStrideY\n    )\n  );\n  const endSourceX = Math.min(\n    Math.ceil((xCenter + this.constants.paddingX) * invStrideX),\n    this.constants.outputWidth\n  );\n  const endSourceY = Math.min(\n    Math.ceil((yCenter + this.constants.paddingY) * invStrideY),\n    this.constants.outputHeight\n  );\n\n  let result = 0;\n  for (let backY = startSourceY; backY < endSourceY; backY++) {\n    for (let backX = startSourceX; backX < endSourceX; backX++) {\n      const switchXValue = switchX[backY][backX];\n      const switchYValue = switchY[backY][backX];\n      if (\n        Math.abs(switchXValue - this.thread.x) < 0.1 &&\n        Math.abs(switchYValue - this.thread.y) < 0.1\n      ) {\n        result += deltas[backY][backX];\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis<ICompareConstants>,\n  deltas: number[][][],\n  switchY: number[][][],\n  switchX: number[][][]\n): number {\n  const xCenter = this.thread.x + 0.5;\n  const yCenter = this.thread.y + 0.5;\n\n  const invStrideX = 1 / this.constants.strideX;\n  const invStrideY = 1 / this.constants.strideY;\n\n  const startSourceX = Math.max(\n    0,\n    Math.ceil(\n      (xCenter - this.constants.filterWidth + this.constants.paddingX) *\n        invStrideX\n    )\n  );\n  const startSourceY = Math.max(\n    0,\n    Math.ceil(\n      (yCenter - this.constants.filterHeight + this.constants.paddingY) *\n        invStrideY\n    )\n  );\n  const endSourceX = Math.min(\n    Math.ceil((xCenter + this.constants.paddingX) * invStrideX),\n    this.constants.inputWidth\n  );\n  const endSourceY = Math.min(\n    Math.ceil((yCenter + this.constants.paddingY) * invStrideY),\n    this.constants.inputHeight\n  );\n\n  let result = 0;\n\n  for (let backY = startSourceY; backY < endSourceY; backY++) {\n    for (let backX = startSourceX; backX < endSourceX; backX++) {\n      const switchXValue = switchX[this.thread.z][backY][backX];\n      const switchYValue = switchY[this.thread.z][backY][backX];\n      if (\n        Math.abs(switchXValue - this.thread.x) < 0.1 &&\n        Math.abs(switchYValue - this.thread.y) < 0.1\n      ) {\n        result += deltas[this.thread.z][backY][backX];\n      }\n    }\n  }\n\n  return result;\n}\n\nexport interface IPoolSettings\n  extends ILayerSettings,\n    IConvolutionSettingsBase {\n  switchX?: KernelOutput;\n  switchY?: KernelOutput;\n}\n\nexport const defaults: IPoolSettings = {\n  padding: 0,\n  stride: 0,\n  filterWidth: 0,\n  filterHeight: 0,\n  filterCount: 0,\n};\n\nexport class Pool extends Filter {\n  settings: Partial<IPoolSettings>;\n\n  get strideX(): number {\n    return this.settings.strideX as number;\n  }\n\n  get strideY(): number {\n    return this.settings.strideY as number;\n  }\n\n  get paddingX(): number {\n    return this.settings.paddingX as number;\n  }\n\n  get paddingY(): number {\n    return this.settings.paddingY as number;\n  }\n\n  get width(): number {\n    // Using floor prefers to pad less (or use negative padding) on the right\n    // using ceil prefers to pad more\n    return Math.ceil(\n      (this.inputLayer.width + this.paddingX * 2 - this.filterWidth) /\n        this.strideX +\n        1\n    );\n  }\n\n  get height(): number {\n    // Using floor prefers to pad less (or use negative padding) on the bottom\n    // using ceil prefers to pad more\n    return Math.floor(\n      (this.inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    );\n  }\n\n  get depth(): number {\n    return this.settings.filterCount as number;\n  }\n\n  get filterCount(): number {\n    // TODO: handle 1 depth?\n    return this.settings.filterCount as number;\n  }\n\n  get switchX(): KernelOutput {\n    return this.settings.switchX;\n  }\n\n  set switchX(switchX: KernelOutput) {\n    this.settings.switchX = switchX;\n  }\n\n  get switchY(): KernelOutput {\n    return this.settings.switchY;\n  }\n\n  set switchY(switchY: KernelOutput) {\n    this.settings.switchY = switchY;\n  }\n\n  predictKernelMap: IKernelMapRunShortcut<ISubKernelObject> | null = null;\n  constructor(settings: IPoolSettings, inputLayer: ILayer) {\n    super(settings, inputLayer);\n    this.settings = {\n      ...settings,\n      ...getStride(settings, defaults),\n      ...getPadding(settings, defaults),\n    };\n\n    this.weights = randos3D(this.width, this.height, this.depth);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n    this.validate();\n  }\n\n  setupKernels(): void {\n    this.predictKernelMap = makeKernelMap(\n      {\n        switchX: setSwitchX,\n        switchY: setSwitchY,\n      },\n      predict,\n      {\n        output: [this.width, this.height, this.depth],\n        constants: {\n          inputWidth: this.inputLayer.width,\n          inputHeight: this.inputLayer.height,\n          paddingX: this.paddingX,\n          paddingY: this.paddingY,\n          filterHeight: this.filterHeight,\n          filterWidth: this.filterWidth,\n          strideX: this.strideX,\n          strideY: this.strideY,\n        },\n      }\n    );\n\n    this.compareKernel = makeKernel(compare, {\n      output: [\n        this.inputLayer.width,\n        this.inputLayer.height,\n        this.inputLayer.depth,\n      ],\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        outputWidth: this.width,\n        outputHeight: this.height,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        strideX: this.strideX,\n        strideY: this.strideY,\n      },\n    });\n  }\n\n  predict(): void {\n    const { result: weights, switchX, switchY } = (this\n      .predictKernelMap as IKernelMapRunShortcut<ISubKernelObject>)(\n      this.inputLayer.weights\n    );\n    this.switchX = switchX;\n    this.switchY = switchY;\n    this.weights = weights;\n  }\n\n  compare(): void {\n    // debugger;\n    // const depth = this.inputLayer.deltas.length;\n    // const height = this.inputLayer.deltas[0].length;\n    // const width = this.inputLayer.deltas[0][0].length;\n    // const type = typeof this.inputLayer.deltas[0][0][0];\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.deltas,\n      this.switchX,\n      this.switchY\n    );\n    release(inputLayerDeltas);\n    // debugger;\n    // if (depth !== this.inputLayer.deltas.length) debugger;\n    // if (height !== this.inputLayer.deltas[0].length) debugger;\n    // if (width !== this.inputLayer.deltas[0][0].length) debugger;\n    // if (type !== typeof this.inputLayer.deltas[0][0][0]) debugger;\n  }\n}\n\nexport function pool(settings: IPoolSettings, inputLayer: ILayer): Pool {\n  return new Pool(settings, inputLayer);\n}\n","import { KernelOutput } from 'gpu.js';\nimport { IPraxis } from '../praxis/base-praxis';\nimport { release } from '../utilities/kernel';\nimport { BaseLayer, ILayer } from './base-layer';\nimport { Internal } from './internal';\n\nexport interface IRecurrentInput extends ILayer {\n  setDimensions?: (width: number, height: number) => void;\n}\n\nexport class RecurrentInput extends Internal implements IRecurrentInput {\n  recurrentInput: ILayer;\n  praxis: IPraxis | null = null;\n  predictKernel = null;\n  compareKernel = null;\n  settings = {};\n  constructor(recurrentInput: ILayer) {\n    super();\n    this.recurrentInput = recurrentInput;\n    this.validate();\n  }\n\n  get width(): number {\n    return this.recurrentInput.width;\n  }\n\n  get height(): number {\n    return this.recurrentInput.height;\n  }\n\n  get depth(): number {\n    return this.recurrentInput.depth;\n  }\n\n  get deltas(): KernelOutput {\n    return this.recurrentInput.deltas;\n  }\n\n  set deltas(deltas: KernelOutput) {\n    const recurrentInputDeltas = this.recurrentInput.deltas;\n    this.recurrentInput.deltas = deltas;\n    release(recurrentInputDeltas);\n  }\n\n  get weights(): KernelOutput {\n    return this.recurrentInput.weights as KernelOutput;\n  }\n\n  set weights(weights: KernelOutput) {\n    const recurrentInputWeights = this.recurrentInput.weights;\n    this.recurrentInput.weights = weights;\n    release(recurrentInputWeights);\n  }\n\n  validate(): void {\n    BaseLayer.prototype.validate.call(this);\n    if (this.width !== this.recurrentInput.width) {\n      throw new Error(\n        `${this.constructor.name} layer width ${this.width} and ${this.recurrentInput.constructor.name} width (${this.recurrentInput.width}) are not same`\n      );\n    }\n\n    if (this.height !== this.recurrentInput.height) {\n      throw new Error(\n        `${this.constructor.name} layer height ${this.height} and ${this.recurrentInput.constructor.name} width (${this.recurrentInput.height}) are not same`\n      );\n    }\n  }\n\n  setDimensions(width: number, height: number): void {\n    this.recurrentInput.width = width;\n    this.recurrentInput.height = height;\n  }\n\n  predict(): void {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(): void {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n\n  setupKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n","import { IPraxis } from '../praxis/base-praxis';\nimport { release } from '../utilities/kernel';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { ILayerSettings } from './base-layer';\nimport { Internal } from './internal';\nimport { IRecurrentInput } from './recurrent-input';\n\nexport class RecurrentZeros extends Internal implements IRecurrentInput {\n  praxis: IPraxis | null = null;\n  settings: Partial<ILayerSettings> = {};\n  predictKernel = null;\n  compareKernel = null;\n\n  constructor(settings?: Partial<ILayerSettings>) {\n    super();\n    if (settings) {\n      this.settings = { ...settings };\n    }\n  }\n\n  setDimensions(width: number, height: number): void {\n    this.praxis = null;\n    this.settings = {\n      ...this.settings,\n      width,\n      height,\n      weights: zeros2D(width, height),\n      deltas: zeros2D(width, height),\n    };\n  }\n\n  setupKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n\n  predict(): void {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(learningRate: number): void {\n    const { weights: oldWeights } = this;\n    this.weights = (this.praxis as IPraxis).run(this, learningRate);\n    // this.deltas = deltas;\n    release(oldWeights);\n  }\n\n  // validate(): void {\n  //   throw new Error(`${this.constructor.name}-validate is not yet implemented`);\n  // }\n\n  // reset(): void {\n  //   throw new Error(`${this.constructor.name}-reset is not yet implemented`);\n  // }\n}\n\nexport function recurrentZeros(): RecurrentZeros {\n  return new RecurrentZeros();\n}\n","import { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\n\nimport { Activation } from './types';\nimport { makeKernel, release } from '../utilities/kernel';\nimport { activate, measure } from '../activation/relu';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  inputs: number[][]\n): number {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  );\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][]\n): number {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  weights: number[][][],\n  deltas: number[][][]\n): number {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    deltas[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nexport class Relu extends Activation {\n  setupKernels(): void {\n    const { width, height, depth } = this.inputLayer;\n    if (depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n  }\n\n  compare(): void {\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      this.deltas\n    );\n  }\n}\n\nexport function relu(inputLayer: ILayer, settings?: ILayerSettings): Relu {\n  return new Relu(inputLayer, settings);\n}\n","import { add } from './add';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { multiply } from './multiply';\nimport { random } from './random';\nimport { relu } from './relu';\nimport { zeros } from './zeros';\nimport { IRecurrentInput } from './recurrent-input';\n\nexport function rnnCell(\n  settings: ILayerSettings,\n  input: ILayer,\n  recurrentInput: IRecurrentInput\n): ILayer {\n  const { height } = settings;\n\n  if (typeof height !== 'number') throw new Error('height not set');\n  if (recurrentInput.setDimensions) {\n    recurrentInput.setDimensions(1, height);\n  }\n\n  // wxh\n  const weight = random({\n    id: 'weight',\n    height,\n    width: input.height,\n    std: 0.08,\n  });\n  // whh\n  const transition = random({\n    id: 'transition',\n    height,\n    width: height,\n    std: 0.08,\n  });\n  // bhh\n  const bias = zeros({ id: 'bias', height });\n\n  return relu(\n    add(\n      add(multiply(weight, input), multiply(transition, recurrentInput)),\n      bias\n    )\n  );\n}\n","import { IKernelFunctionThis, KernelOutput } from 'gpu.js';\n\nimport { BaseLayer, ILayer, ILayerSettings } from './base-layer';\nimport { clone, release } from '../utilities/kernel';\n\nexport class Regression extends BaseLayer {\n  inputLayer: ILayer;\n  constructor(settings: ILayerSettings, inputLayer: ILayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = clone(this.inputLayer.weights as KernelOutput);\n  }\n\n  learn(): void {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\n// TODO: Connect up\nexport function learn(\n  this: IKernelFunctionThis,\n  inputs: number[],\n  targets: number[]\n): number {\n  return inputs[this.thread.x] - targets[this.thread.x];\n}\n\n// TODO: handle `loss += 0.5*dy*dy;` total and sum in learn\nexport function regression(\n  settings: ILayerSettings,\n  inputLayer: ILayer\n): Regression {\n  return new Regression(settings, inputLayer);\n}\n","import {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelRunShortcut,\n  KernelOutput,\n  Texture,\n} from 'gpu.js';\n\nimport { makeKernel, release, clone } from '../utilities/kernel';\nimport { randos, randos2D, randos3D } from '../utilities/randos';\nimport { zeros } from '../utilities/zeros';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { zeros3D } from '../utilities/zeros-3d';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { Modifier } from './modifier';\n\ninterface ISoftMaxConstants extends IConstantsThis {\n  inputWidth: number;\n}\n\nexport function getMaxValue(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[]\n): number {\n  let maxInput = -Infinity;\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    const input = inputs[x];\n    if (input > maxInput) {\n      maxInput = input;\n    }\n  }\n  return maxInput;\n}\n\nexport function getMaxValue2D(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[][]\n): number {\n  let maxInput = -Infinity;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      const input = inputs[y][x];\n      if (input > maxInput) {\n        maxInput = input;\n      }\n    }\n  }\n  return maxInput;\n}\n\nexport function getMaxValue3D(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[][][]\n): number {\n  let maxInput = -Infinity;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        const input = inputs[z][y][x];\n        if (input > maxInput) {\n          maxInput = input;\n        }\n      }\n    }\n  }\n  return maxInput;\n}\n\nexport function getSum(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[]\n): number {\n  let sum = 0;\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    sum += inputs[x];\n  }\n  return sum;\n}\n\nexport function getSum2D(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[][]\n): number {\n  let sum = 0;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      sum += inputs[y][x];\n    }\n  }\n  return sum;\n}\n\nexport function getSum3D(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[][][]\n): number {\n  let sum = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        sum += inputs[z][y][x];\n      }\n    }\n  }\n  return sum;\n}\n\nexport function getExponentials(\n  this: IKernelFunctionThis,\n  inputs: number[],\n  maxInput: number[]\n): number {\n  return Math.exp(inputs[this.thread.x] - maxInput[0]);\n}\n\nexport function getExponentials2D(\n  this: IKernelFunctionThis,\n  inputs: number[][],\n  maxInput: number[]\n): number {\n  return Math.exp(inputs[this.thread.y][this.thread.x] - maxInput[0]);\n}\n\nexport function getExponentials3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][],\n  maxInput: number[]\n): number {\n  return Math.exp(\n    inputs[this.thread.z][this.thread.y][this.thread.x] - maxInput[0]\n  );\n}\n\nexport function predict(\n  this: IKernelFunctionThis,\n  exponentials: number[],\n  exponentialsSum: number[]\n): number {\n  return exponentials[this.thread.x] / exponentialsSum[0];\n}\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  exponentials: number[][],\n  exponentialsSum: number[]\n): number {\n  return exponentials[this.thread.y][this.thread.x] / exponentialsSum[0];\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  exponentials: number[][][],\n  exponentialsSum: number[]\n): number {\n  return (\n    exponentials[this.thread.z][this.thread.y][this.thread.x] /\n    exponentialsSum[0]\n  );\n}\n\nexport function compare(\n  this: IKernelFunctionThis,\n  target: number,\n  exponentials: number[]\n): number {\n  let indicator = 0;\n  if (this.thread.x === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.x]);\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  target: number,\n  exponentials: number[][]\n): number {\n  let indicator = 0;\n  const index = this.thread.x + this.thread.y * this.output.x;\n  if (index === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.y][this.thread.x]);\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  target: number,\n  exponentials: number[][][]\n): number {\n  let indicator = 0;\n  const index =\n    this.thread.x +\n    this.thread.y * this.output.x +\n    this.thread.z * this.output.x * this.output.y;\n  if (index === target) {\n    indicator = 1;\n  }\n  return -(\n    indicator - exponentials[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nexport function loss(): number {\n  return -Math.log(0);\n}\n\n// TODO: handle: `return -Math.log(this.es[y]);` in learn\n\nexport class SoftMax extends Modifier {\n  getExponentialsKernel: IKernelRunShortcut | null;\n  getMaxValueKernel: IKernelRunShortcut | null;\n  getSumKernel: IKernelRunShortcut | null;\n  errors: KernelOutput | null = null;\n  constructor(inputLayer: ILayer, settings?: ILayerSettings) {\n    super(inputLayer, settings);\n    this.getExponentialsKernel = null;\n    this.getMaxValueKernel = null;\n    this.getSumKernel = null;\n    this.validate();\n\n    if (this.depth > 0) {\n      this.weights = randos3D(this.width, this.height, this.depth);\n      this.deltas = zeros3D(this.width, this.height, this.depth);\n    } else if (this.height > 0) {\n      this.weights = randos2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n    } else {\n      this.weights = randos(this.width);\n      this.deltas = zeros(this.width);\n    }\n  }\n\n  setupKernels(): void {\n    const { width, height, depth } = this;\n    if (depth > 0) {\n      this.getExponentialsKernel = makeKernel(getExponentials3D, {\n        output: [width, height, depth],\n      });\n      this.getMaxValueKernel = makeKernel(getMaxValue3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      });\n      this.getSumKernel = makeKernel(getSum3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      });\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n      });\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        immutable: true,\n      });\n    } else {\n      this.getExponentialsKernel = makeKernel(getExponentials, {\n        output: [width, height],\n      });\n      this.getMaxValueKernel = makeKernel(getMaxValue2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      });\n      this.getSumKernel = makeKernel(getSum2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      });\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n      });\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    const maxValue = (this.getMaxValueKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n    const exponentials = (this.getExponentialsKernel as IKernelRunShortcut)(\n      this.inputLayer.weights,\n      maxValue\n    );\n    const exponentialsSum = (this.getSumKernel as IKernelRunShortcut)(\n      exponentials\n    );\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      exponentials,\n      exponentialsSum\n    );\n  }\n\n  compare(targetValues: KernelOutput): void {\n    const { deltas, errors } = this;\n    this.errors = (this.compareKernel as IKernelRunShortcut)(\n      (targetValues as number[])[0],\n      deltas\n    );\n    this.deltas = clone(this.errors);\n    release(deltas);\n    release(errors as Texture);\n\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = clone(this.deltas);\n    release(inputLayerDeltas);\n  }\n}\n\nexport function softMax(\n  inputLayer: ILayer,\n  settings?: ILayerSettings\n): SoftMax {\n  return new SoftMax(inputLayer, settings);\n}\n","import { KernelOutput } from 'gpu.js';\n\nimport { BaseLayer, ILayer, ILayerSettings } from './base-layer';\nimport { clone, release } from '../utilities/kernel';\n\nexport class SVM extends BaseLayer {\n  inputLayer: ILayer;\n  constructor(inputLayer: ILayer, settings: ILayerSettings) {\n    super(settings);\n    this.inputLayer = inputLayer;\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = clone(this.inputLayer.weights as KernelOutput);\n    this.validate();\n  }\n\n  learn(): void {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\n// function learn(target) {\n//   if (y === i) {\n//     continue;\n//   }\n//   const ydiff = -yscore + x.w[i] + margin;\n//   if (ydiff > 0) {\n//     // violating dimension, apply loss\n//     x.dw[i] += 1;\n//     x.dw[y] -= 1;\n//     loss += ydiff;\n//   }\n// }\n\nexport function svm(inputLayer: ILayer, settings: ILayerSettings): SVM {\n  return new SVM(inputLayer, settings);\n}\n","import { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\nimport { makeKernel } from '../utilities/kernel';\nimport { ILayer } from './base-layer';\nimport { Modifier } from './types';\n\nexport function predict(this: IKernelFunctionThis, value: number[][]): number {\n  return value[this.thread.x][this.thread.y];\n}\n\nconst compare = predict;\n\nexport class Transpose extends Modifier {\n  get width(): number {\n    return this.inputLayer.height;\n  }\n\n  get height(): number {\n    return this.inputLayer.width;\n  }\n\n  constructor(inputLayer: ILayer) {\n    super(inputLayer);\n    this.validate();\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.height, this.width],\n    });\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict(): void {\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n  }\n\n  compare(): void {\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.deltas\n    );\n  }\n}\n\nexport function transpose(inputLayer: ILayer): Transpose {\n  return new Transpose(inputLayer);\n}\n","import {\n  Activation,\n  EntryPoint,\n  Filter,\n  Internal,\n  InternalModel,\n  Model,\n  Modifier,\n  Operator,\n  Target,\n} from './types';\n\nexport { Add, add } from './add';\nexport { arthurFeedForward } from './arthur-feed-forward';\nexport {\n  BaseLayer,\n  ILayer,\n  ILayerSettings,\n  ILayerJSON,\n  baseLayerDefaultSettings,\n} from './base-layer';\nexport { Convolution, convolution } from './convolution';\nexport { Dropout, dropout } from './dropout';\nexport { feedForward } from './feed-forward';\nexport { FullyConnected, fullyConnected } from './fully-connected';\nexport { gru } from './gru';\nexport { Input, input } from './input';\nexport { LeakyRelu, leakyRelu } from './leaky-relu';\nexport { lstmCell } from './lstm-cell';\nexport { Multiply, multiply } from './multiply';\nexport { MultiplyElement, multiplyElement } from './multiply-element';\nexport { Negative, negative } from './negative';\nexport { Ones, ones } from './ones';\nexport { output } from './output';\nexport { Pool, pool } from './pool';\nexport { Random, random } from './random';\nexport { RecurrentInput, IRecurrentInput } from './recurrent-input';\nexport { RecurrentZeros } from './recurrent-zeros';\nexport { rnnCell } from './rnn-cell';\nexport { Regression, regression } from './regression';\nexport { Relu, relu } from './relu';\nexport { Sigmoid, sigmoid } from './sigmoid';\nexport { SoftMax, softMax } from './soft-max';\nexport { SVM, svm } from './svm';\nexport { Tanh, tanh } from './tanh';\nexport { Target, target } from './target';\nexport { Transpose, transpose } from './transpose';\nexport { Zeros, zeros } from './zeros';\n\nexport const layerTypes = {\n  Activation,\n  Internal,\n  InternalModel,\n  EntryPoint,\n  Filter,\n  Model,\n  Modifier,\n  Operator,\n  Target,\n};\n","import * as layer from '../layer';\nimport { layerTypes, ILayerJSON, ILayer, Target } from '../layer';\nimport { ActivationType } from '../layer/activation';\nimport { FilterType } from '../layer/filter';\nimport { InternalType } from '../layer/internal';\nimport { ModifierType } from '../layer/modifier';\nimport { OperatorType } from '../layer/operator';\nimport { BaseLayerType } from '../layer/base-layer';\nimport { TargetType } from '../layer/target';\n\nconst layerNameTypes = Object.keys(layer);\n\nexport function layerFromJSON(\n  jsonLayer: ILayerJSON,\n  inputLayer1?: ILayer,\n  inputLayer2?: ILayer\n): ILayer | null {\n  if (\n    !layerNameTypes.find((layerNameType) => layerNameType === jsonLayer.type)\n  ) {\n    return null;\n  }\n  const Layer = ((layer as unknown) as {\n    [layerType: string]:\n      | TargetType\n      | ActivationType\n      | FilterType\n      | InternalType\n      | ModifierType\n      | OperatorType;\n  })[jsonLayer.type];\n  if (Layer.prototype instanceof layerTypes.Filter) {\n    if (!inputLayer1) throw new Error('inputLayer missing');\n    return new (Layer as FilterType)(jsonLayer, inputLayer1);\n  } else if (\n    Layer.prototype instanceof layerTypes.Activation ||\n    Layer.prototype instanceof layerTypes.Modifier\n  ) {\n    if (!inputLayer1) throw new Error('inputLayer missing');\n    return new (Layer as ActivationType)(inputLayer1, jsonLayer);\n  } else if (Layer.prototype instanceof layerTypes.Internal) {\n    return new (Layer as InternalType)(jsonLayer);\n  } else if (Layer.prototype instanceof layerTypes.Operator) {\n    if (!inputLayer1) throw new Error('inputLayer1 missing');\n    if (!inputLayer2) throw new Error('inputLayer2 missing');\n    return new (Layer as OperatorType)(inputLayer1, inputLayer2, jsonLayer);\n  } else if (\n    Layer.prototype instanceof layerTypes.InternalModel ||\n    Layer.prototype instanceof layerTypes.EntryPoint ||\n    Layer.prototype instanceof layerTypes.Model\n  ) {\n    return new (Layer as BaseLayerType)(jsonLayer);\n  } else if (Layer === Target) {\n    if (!inputLayer1) throw new Error('inputLayer missing');\n    return new (Layer as TargetType)(jsonLayer, inputLayer1);\n  }\n  return null;\n}\n","import { IKernelFunctionThis, KernelOutput, Texture } from 'gpu.js';\nimport { MeanSquaredError } from './estimator/mean-squared-error';\nimport { ILayer, ILayerJSON } from './layer';\nimport { Model } from './layer/types';\nimport { InputOutputValue, INumberArray, INumberHash, lookup } from './lookup';\nimport * as praxis from './praxis';\nimport { IPraxis, IPraxisSettings } from './praxis/base-praxis';\nimport { flattenLayers } from './utilities/flatten-layers';\nimport { makeKernel, release } from './utilities/kernel';\nimport { layerFromJSON } from './utilities/layer-from-json';\nimport { LookupTable } from './utilities/lookup-table';\nimport { Thaw } from 'thaw.js';\n\nexport interface IFeedForwardTrainingData<\n  InputType extends InputOutputValue | KernelOutput = number[] | Float32Array,\n  OutputType extends InputOutputValue | KernelOutput = number[] | Float32Array\n> {\n  input: InputType;\n  output: OutputType;\n}\n\nexport interface IFeedForwardNormalizedTrainingData {\n  input: Float32Array;\n  output: Float32Array;\n}\n\nexport interface IFeedForwardGPUTrainingData {\n  input: KernelOutput;\n  output: KernelOutput;\n}\n\nexport interface ITrainingStatus {\n  iterations: number;\n  error: number;\n}\n\nexport type Log = (status: string) => void;\nexport type FeedForwardCallback = (status: ITrainingStatus) => void;\n\nexport interface IFeedForwardTrainingOptions {\n  iterations?: number;\n  errorThresh?: number;\n  log?: boolean | Log;\n  logPeriod?: number;\n  learningRate?: number;\n  callback?: FeedForwardCallback;\n  callbackPeriod?: number;\n  errorCheckInterval?: number;\n  timeout?: number;\n}\n\nexport interface IFeedForwardOptions {\n  learningRate?: number;\n  binaryThresh?: number;\n  hiddenLayers?: Array<(inputLayer: ILayer, layerIndex: number) => ILayer>;\n  inputLayer?: () => ILayer;\n  outputLayer?: (inputLayer: ILayer, index: number) => ILayer;\n  praxisOpts?: Partial<IPraxisSettings>;\n  initPraxis?: (\n    layerTemplate: ILayer,\n    settings: Partial<IPraxisSettings>\n  ) => IPraxis;\n  praxis?: IPraxis;\n\n  // JSON\n  layers?: ILayer[];\n  inputLayerIndex?: number;\n  outputLayerIndex?: number;\n  sizes?: number[];\n}\n\nexport interface IFeedForwardPreppedTrainingData {\n  status: ITrainingStatus;\n  preparedData: IFeedForwardGPUTrainingData[];\n  endTime: number;\n}\n\nexport const defaults: IFeedForwardOptions = {\n  learningRate: 0.3,\n  binaryThresh: 0.5,\n  initPraxis: (\n    layerTemplate: ILayer,\n    settings: Partial<IPraxisSettings>\n  ): IPraxis =>\n    praxis.momentumRootMeanSquaredPropagation(\n      layerTemplate,\n      layerTemplate.settings.praxisOpts ?? settings\n    ),\n};\n\nexport const trainDefaults: IFeedForwardTrainingOptions = {\n  iterations: 20000,\n  errorThresh: 0.005,\n  log: false,\n  logPeriod: 10,\n  learningRate: 0.3,\n  callbackPeriod: 10,\n  errorCheckInterval: 100,\n  timeout: Infinity,\n};\n\nexport interface IFeedForwardJSON {\n  type: string;\n  sizes: number[];\n  layers: ILayerJSON[];\n  inputLayerIndex: number;\n  outputLayerIndex: number;\n}\n\nexport class FeedForward<\n  InputType extends InputOutputValue | KernelOutput = number[] | Float32Array,\n  OutputType extends InputOutputValue | KernelOutput = number[] | Float32Array\n> {\n  static _validateTrainingOptions(\n    options: Partial<IFeedForwardTrainingOptions>\n  ): void {\n    const {\n      iterations,\n      errorThresh,\n      log,\n      logPeriod,\n      learningRate,\n      callback,\n      callbackPeriod,\n      timeout,\n    } = options;\n    interface IValidation {\n      [optionName: string]: () => boolean;\n    }\n    const validations: IValidation = {\n      iterations: () => typeof iterations === 'number' && iterations > 0,\n      errorThresh: () =>\n        typeof errorThresh === 'number' && errorThresh > 0 && errorThresh < 1,\n      log: () => typeof log === 'function' || typeof log === 'boolean',\n      logPeriod: () => typeof logPeriod === 'number' && logPeriod > 0,\n      learningRate: () =>\n        typeof learningRate === 'number' &&\n        learningRate > 0 &&\n        learningRate < 1,\n      callback: () => typeof callback === 'function' || callback === null,\n      callbackPeriod: () =>\n        typeof callbackPeriod === 'number' && callbackPeriod > 0,\n      timeout: () => typeof timeout === 'number' && timeout > 0,\n    };\n    Object.keys(trainDefaults).forEach((key: string): void => {\n      if (validations.hasOwnProperty(key) && !validations[key]()) {\n        const val = options[key as keyof IFeedForwardTrainingOptions];\n        throw new Error(\n          `[${key}, ${(\n            val ?? 'undefined'\n          ).toString()}] is out of normal training range, your network will probably not train.`\n        );\n      }\n    });\n  }\n\n  /**\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   */\n  _setLogMethod(log: Log | undefined | boolean): void {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      // eslint-disable-next-line\n      this.trainOpts.log = console.log;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  _updateTrainingOptions(opts: Partial<IFeedForwardTrainingOptions>): void {\n    this.trainOpts = { ...trainDefaults, ...this.trainOpts, ...opts };\n    FeedForward._validateTrainingOptions(this.trainOpts);\n    this._setLogMethod(opts.log ?? this.trainOpts.log);\n    const { callback, callbackPeriod, errorCheckInterval } = this.trainOpts;\n    if (callback && callbackPeriod !== errorCheckInterval) {\n      console.warn(\n        `options.callbackPeriod with value of ${(\n          callbackPeriod ?? 'undefined'\n        ).toString()} does not match options.errorCheckInterval with value of ${(\n          errorCheckInterval ?? 'undefined'\n        ).toString()}, if logging error, it will repeat.  These values may need to match`\n      );\n    }\n  }\n\n  trainOpts: Partial<IFeedForwardTrainingOptions> = {};\n  options: IFeedForwardOptions;\n  layers: ILayer[] | null = null;\n  _inputLayer: ILayer | null = null;\n  _hiddenLayers: ILayer[] | null = null;\n  _outputLayer: ILayer | null = null;\n  _model: ILayer[] | null = null;\n  meanSquaredError: MeanSquaredError | null = null;\n  inputLookup: INumberHash | null = null;\n  inputLookupLength: number | null = null;\n  outputLookup: INumberHash | null = null;\n  outputLookupLength: number | null = null;\n  constructor(options: IFeedForwardOptions = {}) {\n    this.options = { ...defaults, ...options };\n    this._updateTrainingOptions({\n      ...trainDefaults,\n      ...options,\n    });\n  }\n\n  _connectOptionsLayers(): ILayer[] {\n    const { inputLayerIndex, outputLayerIndex, layers } = this.options;\n    if (!layers) throw new Error('this.options.layers in unexpected state');\n    if (typeof inputLayerIndex !== 'number')\n      throw new Error('inputLayerIndex not a number');\n    if (typeof outputLayerIndex !== 'number')\n      throw new Error('inputLayerIndex not a number');\n    const inputLayer = layers[inputLayerIndex];\n    if (!inputLayer) {\n      throw new Error('inputLayer not found in this.options.layers');\n    }\n    const outputLayer = layers[outputLayerIndex];\n    if (!outputLayer) {\n      throw new Error('outputLayer not found in this.options.layers');\n    }\n    this._inputLayer = inputLayer;\n    this._hiddenLayers = layers.slice(\n      inputLayerIndex,\n      outputLayerIndex - inputLayerIndex\n    );\n    this._outputLayer = outputLayer;\n    return layers;\n  }\n\n  _connectNewLayers(): ILayer[] {\n    const { inputLayer, outputLayer } = this.options;\n    if (!inputLayer) throw new Error('inputLayer not defined');\n    const layers: ILayer[] = [];\n    this._inputLayer = inputLayer();\n    const hiddenLayers = this._connectHiddenLayers(this._inputLayer);\n\n    if (!outputLayer) throw new Error('outputLayer not defined');\n    this._outputLayer = outputLayer(\n      hiddenLayers[hiddenLayers.length - 1],\n      hiddenLayers.length\n    );\n    layers.push(this._inputLayer);\n    layers.push(...hiddenLayers);\n    layers.push(this._outputLayer);\n    return flattenLayers(layers);\n  }\n\n  _connectHiddenLayers(previousLayer: ILayer): ILayer[] {\n    this._hiddenLayers = [];\n    const result: ILayer[] = [];\n    const { hiddenLayers } = this.options;\n\n    if (!hiddenLayers) throw new Error('hiddenLayers not defined');\n\n    for (let i = 0; i < hiddenLayers.length; i++) {\n      const hiddenLayer = hiddenLayers[i](previousLayer, i);\n      result.push(hiddenLayer);\n      this._hiddenLayers.push(hiddenLayer);\n      previousLayer = hiddenLayer;\n    }\n\n    return result;\n  }\n\n  initialize(): void {\n    this.layers = this.options.layers\n      ? this._connectOptionsLayers()\n      : this._connectNewLayers();\n    this.initializeLayers(this.layers);\n    this._model = this.layers.filter((l) => l instanceof Model);\n  }\n\n  initializeLayers(layers: ILayer[]): void {\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n      // TODO: optimize for when training or just running\n      layer.setupKernels(true);\n      if (\n        layer instanceof Model &&\n        layer.praxis === null &&\n        typeof this.options.initPraxis === 'function'\n      ) {\n        layer.praxis = this.options.initPraxis(\n          layer,\n          layer.settings.praxisOpts ?? this.options.praxisOpts ?? {}\n        );\n        layer.praxis.setupKernels();\n      }\n    }\n\n    const lastLayer = layers[layers.length - 1];\n    this.meanSquaredError = new MeanSquaredError({\n      width: lastLayer.width,\n      height: lastLayer.height,\n    });\n  }\n\n  run(input: InputType): OutputType {\n    let typeSafeInput: INumberArray | KernelOutput;\n    if (Array.isArray(input) || (input as Float32Array).buffer) {\n      typeSafeInput = input as INumberArray;\n    } else {\n      if (this.inputLookup) {\n        typeSafeInput = lookup.toArray(\n          this.inputLookup,\n          input as INumberHash,\n          this.inputLookupLength as number\n        );\n      } else {\n        throw new Error('input is incompatible with net');\n      }\n    }\n\n    let output = this.runInput(typeSafeInput as KernelOutput);\n    if (output instanceof Texture) {\n      output = output.toArray();\n    }\n\n    if (this.outputLookup) {\n      return lookup.toObject(\n        this.outputLookup,\n        output as number[]\n      ) as OutputType;\n    }\n    return output as OutputType;\n  }\n\n  runInput(input: KernelOutput): KernelOutput {\n    if (!this.layers) throw new Error('not initialized');\n    this.layers[0].predict(input);\n    for (let i = 1; i < this.layers.length; i++) {\n      this.layers[i].predict();\n    }\n    return this.layers[this.layers.length - 1].weights as KernelOutput;\n  }\n\n  train(\n    data: Array<IFeedForwardTrainingData<InputType, OutputType>>,\n    options: Partial<IFeedForwardTrainingOptions> = {}\n  ): ITrainingStatus {\n    const { preparedData, status, endTime } = this._prepTraining(data, options);\n    let continueTicking = true;\n    const calculateError = (): number =>\n      this._calculateTrainingError(preparedData);\n    const trainPatterns = (): void => this._trainPatterns(preparedData);\n    while (continueTicking) {\n      continueTicking = this._trainingTick(\n        status,\n        endTime,\n        calculateError,\n        trainPatterns\n      );\n    }\n    return status;\n  }\n\n  async trainAsync(\n    data: Array<IFeedForwardTrainingData<InputType, OutputType>>,\n    options: Partial<IFeedForwardTrainingOptions> = {}\n  ): Promise<ITrainingStatus> {\n    const { preparedData, status, endTime } = this._prepTraining(data, options);\n\n    return await new Promise((resolve, reject) => {\n      try {\n        const calculateError = (): number =>\n          this._calculateTrainingError(preparedData);\n        const trainPatterns = (): void => this._trainPatterns(preparedData);\n        const thawedTrain: Thaw = new Thaw(\n          new Array(this.trainOpts.iterations),\n          {\n            delay: true,\n            each: () =>\n              this._trainingTick(\n                status,\n                endTime,\n                calculateError,\n                trainPatterns\n              ) || thawedTrain.stop(),\n            done: () => resolve(status),\n          }\n        );\n        thawedTrain.tick();\n      } catch (trainError) {\n        reject(trainError);\n      }\n    });\n  }\n\n  _trainingTick(\n    status: ITrainingStatus,\n    endTime: number,\n    calculateError: () => number,\n    trainPatterns: () => void\n  ): boolean {\n    const { trainOpts } = this;\n    if (\n      status.iterations >= (trainOpts.iterations as number) ||\n      status.error <= (trainOpts.errorThresh as number) ||\n      Date.now() >= endTime\n    ) {\n      return false;\n    }\n\n    if (\n      typeof trainOpts.log === 'function' &&\n      status.iterations % (trainOpts.logPeriod as number) === 0\n    ) {\n      status.error = calculateError();\n      trainOpts.log(\n        `iterations: ${status.iterations}, training error: ${status.error}`\n      );\n    } else if (\n      status.iterations % (trainOpts.errorCheckInterval as number) ===\n      0\n    ) {\n      status.error = calculateError();\n    } else {\n      trainPatterns();\n    }\n\n    if (\n      trainOpts.callback &&\n      status.iterations % (trainOpts.callbackPeriod as number) === 0\n    ) {\n      trainOpts.callback(Object.assign(status));\n    }\n\n    status.iterations++;\n    return true;\n  }\n\n  _prepTraining(\n    data: Array<IFeedForwardTrainingData<InputType, OutputType>>,\n    options: Partial<IFeedForwardTrainingOptions>\n  ): IFeedForwardPreppedTrainingData {\n    this._updateTrainingOptions(options);\n\n    const formattedData = this.formatData(data);\n    const endTime = this.trainOpts.timeout\n      ? Date.now() + this.trainOpts.timeout\n      : 0;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized();\n\n    return {\n      preparedData: this.transferData(formattedData),\n      status,\n      endTime,\n    };\n  }\n\n  verifyIsInitialized(): void {\n    if (!this._model) {\n      this.initialize();\n    }\n  }\n\n  _calculateTrainingError(preparedData: IFeedForwardGPUTrainingData[]): number {\n    let sum: Float32Array | KernelOutput = new Float32Array([0]);\n    const meanSquaredError = this.meanSquaredError as MeanSquaredError;\n    for (let i = 0; i < preparedData.length; ++i) {\n      const prevSum = sum;\n      const error = this._trainPattern(\n        preparedData[i].input,\n        preparedData[i].output,\n        true\n      ) as number;\n      sum = meanSquaredError.add(sum, error);\n      release(error);\n      release(prevSum);\n    }\n    const result = meanSquaredError.divide(preparedData.length, sum);\n    release(sum);\n    if (result instanceof Texture) {\n      const resultArray: number[] = result.toArray() as number[];\n      release(result);\n      return resultArray[0];\n    }\n    return (result as number[])[0];\n  }\n\n  /**\n   * @param data\n   * @private\n   */\n  _trainPatterns(data: IFeedForwardGPUTrainingData[]): void {\n    for (let i = 0; i < data.length; ++i) {\n      this._trainPattern(data[i].input, data[i].output, false);\n    }\n  }\n\n  _trainPattern(\n    input: KernelOutput,\n    target: KernelOutput,\n    logErrorRate: boolean\n  ): KernelOutput | null {\n    // forward propagate\n    this.runInput(input);\n\n    // back propagate\n    this._calculateDeltas(target);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      if (!this._outputLayer?.errors) {\n        throw new Error('outputLayer.errors not defined');\n      }\n      return (this.meanSquaredError as MeanSquaredError).calculate(\n        this._outputLayer.errors\n      );\n    }\n    return null;\n  }\n\n  _calculateDeltas(target: KernelOutput): void {\n    const layers = this.layers as ILayer[];\n    for (let i = layers.length - 1; i > -1; i--) {\n      layers[i].compare(target);\n    }\n  }\n\n  /**\n   *\n   */\n  adjustWeights(): void {\n    const _model = this._model as ILayer[];\n    for (let i = 0; i < _model.length; i++) {\n      _model[i].learn(this.trainOpts.learningRate as number);\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  formatData(\n    data:\n      | Array<IFeedForwardTrainingData<InputType, OutputType>>\n      | IFeedForwardTrainingData<InputType, OutputType>\n  ): IFeedForwardNormalizedTrainingData[] {\n    if (!Array.isArray(data)) {\n      // turn stream datum into array\n      const tmp = [];\n      tmp.push(data);\n      data = tmp;\n    }\n\n    // turn sparse hash input into arrays with 0s as filler\n    const inputDatumCheck = data[0].input;\n    let formattedData: Array<Partial<IFeedForwardNormalizedTrainingData>>;\n    if (\n      Array.isArray(data) &&\n      !Array.isArray(inputDatumCheck) &&\n      !(inputDatumCheck instanceof Float32Array)\n    ) {\n      if (!this.inputLookup) {\n        const lookupTable = new LookupTable(data, 'input');\n        this.inputLookup = lookupTable.table;\n        this.inputLookupLength = lookupTable.length;\n      }\n      formattedData = data.map((datumParam): Partial<\n        IFeedForwardNormalizedTrainingData\n      > => {\n        const array = lookup.toArray(\n          this.inputLookup as INumberHash,\n          datumParam.input as INumberHash,\n          this.inputLookupLength as number\n        );\n        return { input: array };\n      }, this);\n    } else {\n      formattedData = data as typeof formattedData;\n    }\n\n    const outputDatumCheck = data[0].output;\n    if (\n      !Array.isArray(outputDatumCheck) &&\n      !(outputDatumCheck instanceof Float32Array)\n    ) {\n      if (!this.outputLookup) {\n        const lookupTable = new LookupTable(data, 'output');\n        this.outputLookup = lookupTable.table;\n        this.outputLookupLength = lookupTable.length;\n      }\n      formattedData = data.map(\n        (datumParam, index): IFeedForwardNormalizedTrainingData => {\n          const array = lookup.toArray(\n            this.outputLookup as INumberHash,\n            datumParam.output as INumberHash,\n            this.inputLookupLength as number\n          );\n          return {\n            input: formattedData[index].input as Float32Array,\n            output: array,\n          };\n        },\n        this\n      );\n    }\n    return formattedData as IFeedForwardNormalizedTrainingData[];\n  }\n\n  transferData(\n    formattedData: IFeedForwardNormalizedTrainingData[]\n  ): IFeedForwardGPUTrainingData[] {\n    const transferredData = new Array(formattedData.length);\n    const transferInput = makeKernel(\n      function (value: number[]): number {\n        return value[this.thread.x];\n      },\n      {\n        output: [formattedData[0].input.length],\n        immutable: true,\n      }\n    );\n    const transferOutput = makeKernel(\n      function (this: IKernelFunctionThis, value: number[]): number {\n        return value[this.thread.x];\n      },\n      {\n        output: [formattedData[0].output.length],\n        immutable: true,\n      }\n    );\n\n    for (let i = 0; i < formattedData.length; i++) {\n      const formattedDatum = formattedData[i];\n      transferredData[i] = {\n        input: transferInput(formattedDatum.input),\n        output: transferOutput(formattedDatum.output),\n      };\n    }\n    return transferredData;\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test(): void {\n    throw new Error(`${this.constructor.name}-test is not yet implemented`);\n  }\n\n  /**\n   *\n   */\n  toJSON(): IFeedForwardJSON {\n    if (!this.layers) {\n      this.initialize();\n    }\n    if (\n      !this._model ||\n      !this.layers ||\n      !this._inputLayer ||\n      !this._hiddenLayers ||\n      !this._outputLayer\n    ) {\n      throw new Error('network is not initialized');\n    }\n    const jsonLayers = [];\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n      const jsonLayer = layer.toJSON();\n      if (layer.hasOwnProperty('inputLayer')) {\n        jsonLayer.inputLayerIndex = this.layers.indexOf(\n          layer.inputLayer as ILayer\n        );\n      } else if (\n        layer.hasOwnProperty('inputLayer1') &&\n        layer.hasOwnProperty('inputLayer2')\n      ) {\n        jsonLayer.inputLayer1Index = this.layers.indexOf(\n          layer.inputLayer1 as ILayer\n        );\n        jsonLayer.inputLayer2Index = this.layers.indexOf(\n          layer.inputLayer2 as ILayer\n        );\n      }\n      jsonLayers.push(jsonLayer);\n    }\n\n    return {\n      type: this.constructor.name,\n      sizes:\n        this.options.sizes ??\n        [this._inputLayer.height]\n          .concat(this._hiddenLayers.map((l) => l.height))\n          .concat([this._outputLayer.height]),\n      outputLayerIndex: this.layers.indexOf(this._outputLayer),\n      layers: jsonLayers as ILayerJSON[],\n      inputLayerIndex: this.layers.indexOf(this._inputLayer),\n    };\n  }\n\n  static fromJSON(\n    json: IFeedForwardJSON,\n    getLayer?: (\n      layerJson: ILayerJSON,\n      inputLayer1?: ILayer,\n      inputLayer2?: ILayer\n    ) => ILayer\n  ): FeedForward {\n    const jsonLayers = json.layers;\n    const layers: ILayer[] = [];\n    const inputLayer = getLayer\n      ? layerFromJSON(jsonLayers[0]) ?? getLayer(jsonLayers[0])\n      : layerFromJSON(jsonLayers[0]);\n\n    if (!inputLayer) throw new Error('unable to find layer');\n\n    layers.push(inputLayer);\n\n    for (let i = 1; i < jsonLayers.length; i++) {\n      const jsonLayer = jsonLayers[i];\n      if (\n        typeof jsonLayer.inputLayerIndex === 'undefined' &&\n        typeof jsonLayer.inputLayer1Index === 'undefined' &&\n        typeof jsonLayer.inputLayer2Index === 'undefined'\n      ) {\n        const layer = getLayer\n          ? layerFromJSON(jsonLayer) ?? getLayer(jsonLayer)\n          : layerFromJSON(jsonLayer);\n        if (!layer) throw new Error('unable to find layer');\n        layers.push(layer);\n      } else if (typeof jsonLayer.inputLayerIndex === 'number') {\n        const inputLayer = layers[jsonLayer.inputLayerIndex];\n        if (!inputLayer) {\n          throw new Error('inputLayer1 not found');\n        }\n        const layer = getLayer\n          ? layerFromJSON(jsonLayer, inputLayer) ??\n            getLayer(jsonLayer, inputLayer)\n          : layerFromJSON(jsonLayer, inputLayer);\n        if (!layer) throw new Error('unable to find layer');\n        layers.push(layer);\n      } else {\n        if (typeof jsonLayer.inputLayer1Index !== 'number') {\n          throw new Error(\n            'Cannot create network from provided JSON. inputLayer1Index not defined.'\n          );\n        }\n        if (typeof jsonLayer.inputLayer2Index !== 'number') {\n          throw new Error(\n            'Cannot create network from provided JSON. inputLayer2Index not defined.'\n          );\n        }\n        const inputLayer1 = layers[jsonLayer.inputLayer1Index];\n        const inputLayer2 = layers[jsonLayer.inputLayer2Index];\n\n        if (inputLayer1 === undefined)\n          throw new Error(\n            `Cannot create network from provided JSON. layer of index ${jsonLayer.inputLayer1Index} not found.`\n          );\n        if (inputLayer2 === undefined)\n          throw new Error(\n            `Cannot create network from provided JSON. layer of index ${jsonLayer.inputLayer2Index} not found.`\n          );\n\n        const layer = getLayer\n          ? layerFromJSON(jsonLayer, inputLayer1, inputLayer2) ??\n            getLayer(jsonLayer, inputLayer1, inputLayer2)\n          : layerFromJSON(jsonLayer, inputLayer1, inputLayer2);\n\n        if (!layer) throw new Error('unable to find layer');\n        layers.push(layer);\n      }\n    }\n\n    return new this({ ...json, layers });\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction(): void {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    );\n  }\n}\n","export interface ILikelyNet<InputType, OutputType> {\n  run: (input: InputType) => OutputType;\n}\n\nexport function likely<\n  NetworkType extends ILikelyNet<\n    Parameters<NetworkType['run']>[0],\n    ReturnType<NetworkType['run']>\n  >\n>(\n  input: Parameters<NetworkType['run']>[0],\n  net: NetworkType\n): ReturnType<NetworkType['run']> | null {\n  if (!net) {\n    throw new TypeError(\n      `Required parameter 'net' is of type ${typeof net}. Must be of type 'brain.NeuralNetwork'`\n    );\n  }\n\n  const output = net.run(input);\n  let maxProp = null;\n  let maxValue = -1;\n\n  Object.entries(output as number[]).forEach(([key, value]) => {\n    if (\n      typeof value !== 'undefined' &&\n      typeof value === 'number' &&\n      value > maxValue\n    ) {\n      maxProp = key;\n      maxValue = value;\n    }\n  });\n\n  return maxProp;\n}\n","import { KernelOutput } from 'gpu.js';\n\nimport { Internal } from './internal';\nimport { release } from '../utilities/kernel';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport class RecurrentConnection extends Internal {\n  settings: ILayerSettings = {};\n  layer: ILayer | null = null;\n  setLayer(layer: ILayer): void {\n    this.layer = layer;\n  }\n\n  get width(): number {\n    if (!this.layer) throw new Error('layer not set');\n    return this.layer.width;\n  }\n\n  set width(value: number) {\n    throw new Error(`${this.constructor.name}-width is not yet implemented`);\n  }\n\n  get height(): number {\n    if (!this.layer) throw new Error('layer not set');\n    return this.layer.height;\n  }\n\n  set height(value: number) {\n    throw new Error(`${this.constructor.name}-height is not yet implemented`);\n  }\n\n  get deltas(): KernelOutput {\n    if (!this.layer) throw new Error('layer not set');\n    return this.layer.deltas;\n  }\n\n  set deltas(deltas: KernelOutput) {\n    if (!this.layer) throw new Error('layer not set');\n    release(this.layer.deltas);\n    this.layer.deltas = deltas;\n  }\n\n  get weights(): KernelOutput {\n    if (!this.layer) throw new Error('layer not set');\n    return this.layer.weights as KernelOutput;\n  }\n\n  set weights(weights: KernelOutput) {\n    if (!this.layer) throw new Error('layer not set');\n    release(this.layer.weights);\n    this.layer.weights = weights;\n  }\n\n  predict(): void {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(): void {\n    throw new Error('no longer using');\n  }\n\n  setupKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n","import { RecurrentConnection } from './layer/recurrent-connection';\nimport {\n  IRecurrentInput,\n  RecurrentInput,\n  RecurrentZeros,\n  ILayer,\n  ILayerSettings,\n} from './layer';\nimport {\n  Activation,\n  EntryPoint,\n  EntryPointType,\n  Filter,\n  Internal,\n  InternalModel,\n  Model,\n  Modifier,\n  Operator,\n  Target,\n} from './layer/types';\nimport { flattenLayers } from './utilities/flatten-layers';\nimport {\n  FeedForward,\n  IFeedForwardOptions,\n  IFeedForwardTrainingOptions,\n  ITrainingStatus,\n} from './feed-forward';\nimport { release, clone } from './utilities/kernel';\nimport { KernelOutput, Texture, TextureArrayOutput } from 'gpu.js';\nimport { OperatorType } from './layer/operator';\nimport { ModifierType } from './layer/modifier';\nimport { FilterType } from './layer/filter';\nimport { ActivationType } from './layer/activation';\nimport { TargetType } from './layer/target';\n\nexport interface IRecurrentTrainingOptions\n  extends IFeedForwardTrainingOptions {}\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-expect-error\nexport interface IRecurrentOptions extends IFeedForwardOptions {\n  hiddenLayers: Array<\n    (\n      inputLayer: ILayer,\n      recurrentInput: IRecurrentInput,\n      index: number\n    ) => ILayer\n  >;\n}\n\nexport interface IRecurrentPreppedTrainingData<T> {\n  status: ITrainingStatus;\n  preparedData: T[][];\n  endTime: number;\n}\n\nexport class Recurrent<\n  T extends TextureArrayOutput = TextureArrayOutput\n> extends FeedForward {\n  trainOpts: IRecurrentTrainingOptions = {};\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  options: IRecurrentOptions;\n  _outputConnection: RecurrentConnection | null = null;\n  _layerSets: ILayer[][] = [];\n  _hiddenLayerOutputIndices: number[] = [];\n  _model: ILayer[] | null = null;\n\n  // TODO: use generics in extend\n  constructor(\n    options: Partial<IRecurrentOptions & IRecurrentTrainingOptions> = {}\n  ) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    super(options);\n  }\n\n  _connectLayers(): {\n    inputLayer: ILayer;\n    hiddenLayers: ILayer[];\n    outputLayer: ILayer;\n  } {\n    if (!this.options.inputLayer) {\n      throw new Error('inputLayer not found');\n    }\n    if (!this.options.outputLayer) {\n      throw new Error('outputLayer not found');\n    }\n    const inputLayer = this.options.inputLayer();\n    const hiddenLayers = this._connectHiddenLayers(inputLayer);\n    const outputLayer = this.options.outputLayer(\n      hiddenLayers[hiddenLayers.length - 1],\n      -1\n    );\n    return {\n      inputLayer,\n      hiddenLayers,\n      outputLayer,\n    };\n  }\n\n  _connectLayersDeep(): ILayer[] {\n    const layers: ILayer[] = [];\n    const previousLayers = this._layerSets[this._layerSets.length - 1];\n    let usedHiddenLayerOutputIndex = 0;\n\n    function findInputLayer(inputLayer: ILayer) {\n      const index = previousLayers.indexOf(inputLayer);\n      if (index < 0) throw new Error('unable to find layer');\n      return layers[index];\n    }\n\n    function layerSettings(layer: ILayer): ILayerSettings {\n      return {\n        ...layer.settings,\n        weights: null,\n        deltas: null,\n        praxis: null,\n      };\n    }\n\n    for (let i = 0; i < previousLayers.length; i++) {\n      const previousLayer = previousLayers[i];\n      let layer: ILayer;\n\n      if (previousLayer instanceof Activation) {\n        layer = new (previousLayer.constructor as ActivationType)(\n          findInputLayer(previousLayer.inputLayer),\n          layerSettings(previousLayer)\n        );\n      } else if (previousLayer instanceof EntryPoint) {\n        layer = new (previousLayer.constructor as EntryPointType)(\n          layerSettings(previousLayer)\n        );\n      } else if (previousLayer instanceof Filter) {\n        layer = new (previousLayer.constructor as FilterType)(\n          layerSettings(previousLayer.inputLayer),\n          findInputLayer(previousLayer.inputLayer)\n        );\n      } else if (previousLayer instanceof Internal) {\n        const previousHiddenLayerOutput =\n          previousLayers[\n            this._hiddenLayerOutputIndices[usedHiddenLayerOutputIndex++]\n          ];\n        if (previousLayer instanceof RecurrentConnection) {\n          throw new Error('unfinished');\n        } else if (previousLayer instanceof RecurrentInput) {\n          layer = new RecurrentInput(previousHiddenLayerOutput);\n        } else if (previousLayer instanceof RecurrentZeros) {\n          layer = new RecurrentInput(previousHiddenLayerOutput);\n        } else {\n          throw new Error(\n            `hidden layer ${previousLayer.constructor.name} extends unknown hidden layer`\n          );\n        }\n      } else if (\n        previousLayer instanceof InternalModel ||\n        previousLayer instanceof Model\n      ) {\n        layer = previousLayer;\n      } else if (previousLayer instanceof Modifier) {\n        layer = new (previousLayer.constructor as ModifierType)(\n          findInputLayer(previousLayer.inputLayer),\n          layerSettings(previousLayer.inputLayer)\n        );\n      } else if (previousLayer instanceof Operator) {\n        layer = new (previousLayer.constructor as OperatorType)(\n          findInputLayer(previousLayer.inputLayer1),\n          findInputLayer(previousLayer.inputLayer2),\n          layerSettings(previousLayer)\n        );\n      } else if (previousLayer instanceof Target) {\n        layer = new (previousLayer.constructor as TargetType)(\n          layerSettings(previousLayer),\n          findInputLayer(previousLayer.inputLayer)\n        );\n      } else {\n        throw new Error(\n          `hidden layer ${previousLayer.constructor.name} extends unknown hidden layer`\n        );\n      }\n      layers.push(layer);\n    }\n\n    return layers;\n  }\n\n  _connectHiddenLayers(previousLayer: ILayer): ILayer[] {\n    const hiddenLayers = [];\n\n    if (!this.options.hiddenLayers) throw new Error('hiddenLayers not defined');\n\n    for (let i = 0; i < this.options.hiddenLayers.length; i++) {\n      const recurrentInput = new RecurrentZeros();\n      const hiddenLayer = this.options.hiddenLayers[i](\n        previousLayer,\n        recurrentInput,\n        i\n      );\n      previousLayer = hiddenLayer;\n      hiddenLayers.push(hiddenLayer);\n    }\n\n    return hiddenLayers;\n  }\n\n  initialize(): void {\n    this._outputConnection = new RecurrentConnection();\n    let layerSet: ILayer[];\n    if (this.options.layers) {\n      layerSet = this._connectOptionsLayers();\n    } else {\n      const { inputLayer, hiddenLayers, outputLayer } = this._connectLayers();\n      layerSet = flattenLayers([inputLayer, ...hiddenLayers, outputLayer]);\n      this._hiddenLayerOutputIndices = hiddenLayers.map((l) =>\n        layerSet.indexOf(l)\n      );\n      this._inputLayer = inputLayer;\n      this._hiddenLayers = hiddenLayers;\n      this._outputLayer = outputLayer;\n    }\n    this.layers = layerSet;\n    this._layerSets = [layerSet];\n    this._model = layerSet.filter(\n      (l) => l instanceof Model || l instanceof InternalModel\n    );\n    this.initializeLayers(layerSet);\n  }\n\n  initializeDeep(): void {\n    const layers = this._connectLayersDeep();\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n      layer.setupKernels(true);\n      layer.reuseKernels(this._layerSets[0][i]);\n    }\n    this._layerSets.push(layers);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  run(inputs: T[]): T[] {\n    while (this._layerSets.length <= inputs.length) {\n      this.initializeDeep();\n    }\n    const result = this.runInputs(inputs);\n    if (result instanceof Texture) {\n      return result.toArray() as T[];\n    }\n    return result as T[];\n  }\n\n  runInput(input: KernelOutput): KernelOutput {\n    throw new Error('use .runInputs()');\n  }\n\n  runInputs(inputs: T[]): KernelOutput {\n    while (this._layerSets.length < inputs.length) {\n      this.initializeDeep();\n    }\n    const max = inputs.length - 1; // last output will be compared with last index\n    for (let x = 0; x <= max; x++) {\n      const layerSet = this._layerSets[x];\n      layerSet[0].predict(inputs[x]);\n      for (let i = 1; i < layerSet.length; i++) {\n        layerSet[i].predict();\n      }\n    }\n    const lastLayerUsed = this._layerSets[max];\n    const result = lastLayerUsed[lastLayerUsed.length - 1].weights;\n    this.end();\n    return result as KernelOutput;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  train(\n    data: T[][],\n    options: Partial<IRecurrentTrainingOptions> = {}\n  ): ITrainingStatus {\n    const { preparedData, status, endTime } = this._prepTraining(data, options);\n    let continueTicking = true;\n    const calculateError = (): number =>\n      this._calculateTrainingError(preparedData);\n    const trainPatters = (): void => this._trainPatterns(preparedData);\n    while (continueTicking) {\n      continueTicking = this._trainingTick(\n        status,\n        endTime,\n        calculateError,\n        trainPatters\n      );\n    }\n    return status;\n  }\n\n  end(): void {\n    const x = this._layerSets.length - 1;\n    const lastLayerSet = this._layerSets[x];\n    lastLayerSet[0].predict([new Float32Array([0])]);\n    for (let i = 1; i < lastLayerSet.length; i++) {\n      lastLayerSet[i].predict();\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  transferData(formattedData: T[][]): T[][] {\n    return formattedData;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _prepTraining(\n    data: T[][],\n    options: Partial<IRecurrentTrainingOptions>\n  ): IRecurrentPreppedTrainingData<T> {\n    this._updateTrainingOptions(options);\n    const endTime = this.trainOpts.timeout\n      ? Date.now() + this.trainOpts.timeout\n      : 0;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized();\n\n    return {\n      preparedData: this.transferData(data),\n      status,\n      endTime,\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _calculateTrainingError(data: T[][]): number {\n    if (!this.meanSquaredError) {\n      throw new Error('this.meanSquaredError not setup');\n    }\n    let sum: KernelOutput = new Float32Array(1);\n    for (let i = 0; i < data.length; ++i) {\n      const prevSum = sum;\n      const error = this._trainPattern(data[i], true) as KernelOutput;\n      sum = this.meanSquaredError.add(sum, error);\n      release(error);\n      release(prevSum);\n    }\n    const result = this.meanSquaredError.divide(data.length, sum);\n    release(sum);\n    if (result instanceof Texture) {\n      const resultArray = result.toArray() as number[];\n      return resultArray[0];\n    }\n    return (result as number[])[0];\n  }\n\n  // TODO: more types\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  formatData(data: Float32Array): Float32Array {\n    return data;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _calculateDeltas(target: T[]): void {\n    const lastLayerSet = this._layerSets[this._layerSets.length - 1];\n    // Iterate from the second to last layer backwards, propagating 0's\n    for (let i = lastLayerSet.length - 2; i >= 0; i--) {\n      lastLayerSet[i].compare();\n    }\n\n    for (let x = target.length - 2; x >= 0; x--) {\n      const layerSet = this._layerSets[x];\n      layerSet[layerSet.length - 1].compare(target[x + 1]);\n      for (let i = layerSet.length - 2; i >= 0; i--) {\n        layerSet[i].compare();\n      }\n    }\n  }\n\n  adjustWeights(): void {\n    const _model = this._model as ILayer[];\n    for (let i = 0; i < _model.length; i++) {\n      _model[i].learn(this.options.learningRate ?? 0);\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _trainPatterns(data: T[][]): void {\n    for (let i = 0; i < data.length; ++i) {\n      this._trainPattern(data[i], false);\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _trainPattern(inputs: T[], logErrorRate: boolean): KernelOutput | null {\n    // forward propagate\n    this.runInputs(inputs);\n\n    // back propagate\n    this._calculateDeltas(inputs);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      if (!this.meanSquaredError) {\n        throw new Error('this.meanSquaredError not setup');\n      }\n      let error: KernelOutput = new Float32Array(1);\n      for (let i = 0, max = inputs.length - 2; i <= max; i++) {\n        const layerSet = this._layerSets[i];\n        const lastLayer = layerSet[layerSet.length - 1];\n        const prevError: KernelOutput = error;\n        error = this.meanSquaredError.addAbsolute(\n          prevError,\n          lastLayer.errors as KernelOutput\n        );\n        release(prevError);\n      }\n      return clone(this.meanSquaredError.divide(inputs.length, error));\n    }\n    return null;\n  }\n}\n","import { zeros } from '../../utilities/zeros';\n\nexport interface IMatrixJSON {\n  rows: number;\n  columns: number;\n  weights: number[];\n}\n/**\n * A matrix\n */\nexport class Matrix {\n  rows = 0;\n  columns = 0;\n  weights: Float32Array;\n  deltas: Float32Array;\n\n  constructor(rows?: number, columns?: number) {\n    if (rows) this.rows = rows;\n    if (columns) this.columns = columns;\n\n    this.weights = zeros(this.rows * this.columns);\n    this.deltas = zeros(this.rows * this.columns);\n  }\n\n  getWeight(row: number, col: number): number {\n    // slow but careful accessor function\n    // we want row-major order\n    const ix = this.columns * row + col;\n\n    if (ix < 0 || ix >= this.weights.length) {\n      throw new Error('get accessor is skewed');\n    }\n\n    return this.weights[ix];\n  }\n\n  setWeight(row: number, col: number, v: number): Matrix {\n    // slow but careful accessor function\n    const ix = this.columns * row + col;\n\n    if (ix < 0 || ix >= this.weights.length) {\n      throw new Error('set accessor is skewed');\n    }\n\n    this.weights[ix] = v;\n\n    return this;\n  }\n\n  getDelta(row: number, col: number): number {\n    // slow but careful accessor function\n    // we want row-major order\n    const ix = this.columns * row + col;\n\n    if (ix < 0 || ix >= this.deltas.length) {\n      throw new Error('get accessor is skewed');\n    }\n\n    return this.deltas[ix];\n  }\n\n  setDelta(row: number, col: number, v: number): Matrix {\n    // slow but careful accessor function\n    const ix = this.columns * row + col;\n\n    if (ix < 0 || ix >= this.weights.length) {\n      throw new Error('set accessor is skewed');\n    }\n\n    this.deltas[ix] = v;\n\n    return this;\n  }\n\n  toJSON(): IMatrixJSON {\n    return {\n      rows: this.rows,\n      columns: this.columns,\n      weights: Array.from(this.weights.slice(0)),\n    };\n  }\n\n  static fromJSON(json: IMatrixJSON): Matrix {\n    const matrix = new Matrix(json.rows, json.columns);\n\n    for (let i = 0, max = json.rows * json.columns; i < max; i++) {\n      matrix.weights[i] = json.weights[i]; // copy over weights\n    }\n\n    return matrix;\n  }\n\n  static fromArray(weights: Float32Array[] | number[][]): Matrix {\n    const matrix = new Matrix(weights.length, weights[0].length);\n    matrix.fromArray(weights);\n    return matrix;\n  }\n\n  deltasToArray(): number[][] {\n    return this.toArray('deltas');\n  }\n\n  weightsToArray(): number[][] {\n    return this.toArray('weights');\n  }\n\n  toArray(prop: 'weights' | 'deltas' = 'weights'): number[][] {\n    const result: number[][] = new Array(this.rows);\n    this.iterate({\n      row: (rowIndex): void => {\n        result[rowIndex] = new Array(this.columns);\n      },\n      column: (rowIndex, columnIndex): void => {\n        if (prop === 'weights') {\n          result[rowIndex][columnIndex] = this.getWeight(rowIndex, columnIndex);\n        } else if (prop === 'deltas') {\n          result[rowIndex][columnIndex] = this.getDelta(rowIndex, columnIndex);\n        }\n      },\n    });\n    return result;\n  }\n\n  fromArray(\n    array: number[][] | Float32Array[],\n    prop: 'weights' | 'deltas' = 'weights'\n  ): this {\n    if (array.length !== this.rows) {\n      throw new Error('rows do not match');\n    }\n    if (array[0].length !== this.columns) {\n      throw new Error('columns do not match');\n    }\n    this.iterate({\n      column: (rowIndex, columnIndex): void => {\n        const value = array[rowIndex][columnIndex];\n        if (typeof value !== 'number') {\n          throw new Error('value not number');\n        }\n        if (prop === 'weights') {\n          this.setWeight(rowIndex, columnIndex, value);\n        } else if (prop === 'deltas') {\n          this.setDelta(rowIndex, columnIndex, value);\n        }\n      },\n    });\n    return this;\n  }\n\n  iterate(callbacks: {\n    column?: (rowIndex: number, columnIndex: number) => void;\n    row?: (rowIndex: number) => void;\n  }): this {\n    const rows = this.rows;\n    const columns = this.columns;\n    for (let rowIndex = 0; rowIndex < rows; rowIndex++) {\n      if (callbacks.row) {\n        callbacks.row(rowIndex);\n      }\n      for (let columnIndex = 0; columnIndex < columns; columnIndex++) {\n        if (callbacks.column) {\n          callbacks.column(rowIndex, columnIndex);\n        }\n      }\n    }\n    return this;\n  }\n}\n","import { Matrix } from '.';\nimport { randomFloat } from '../../utilities/random';\n\n/** return Matrix but filled with random numbers from gaussian\n */\nexport class RandomMatrix extends Matrix {\n  std: number;\n\n  constructor(rows: number, columns: number, std: number) {\n    super(rows, columns);\n\n    this.std = std;\n\n    for (let i = 0, max = this.weights.length; i < max; i++) {\n      this.weights[i] = randomFloat(-std, std);\n    }\n  }\n}\n","import { Value, IRNNDatum } from '../recurrent/rnn-data-types';\n\nexport interface IDataFormatter {\n  indexTable: { [value: string]: number };\n  toIndexesInputOutput: (input: Value, output?: Value) => number[];\n  toIndexes: (input: string) => number[];\n  toCharacters: (output: number[]) => string[];\n  characters: Array<string | number>;\n  specialIndexes: number[];\n  toFunctionString: () => string;\n  formatDataIn: (input?: Value, output?: Value) => number[];\n  formatDataOut: (input: number[], output: number[]) => string;\n  format: (data: Array<IRNNDatum | Value>) => number[][];\n  isSetup: boolean;\n  toJSON: () => IDataFormatterJSON;\n}\n\nexport class DataFormatter implements IDataFormatter {\n  indexTable: { [key: string]: number; [key: number]: number } = {};\n  characterTable: { [key: number]: string | number | null } = {};\n  characters: Array<string | number> = [];\n  specialIndexes: number[] = [];\n  isSetup = false;\n\n  constructor(private values?: Array<IRNNDatum | Value>, maxThreshold = 0) {\n    if (values === undefined) return;\n\n    this.setup(values, maxThreshold);\n  }\n\n  setup(values: Array<IRNNDatum | Value>, maxThreshold = 0): void {\n    if (this.isSetup) throw new Error('DataFormatter is already setup');\n    this.values = values;\n    // go over all characters and keep track of all unique ones seen\n    // count up all characters\n\n    this.buildCharactersFromIterable(values);\n    this.buildTables(maxThreshold);\n    if ((values[0] as IRNNDatum).input) {\n      this.addInputOutput();\n    }\n    this.addUnrecognized();\n    this.isSetup = true;\n  }\n\n  buildCharactersFromIterable(values: Array<IRNNDatum | Value>): void {\n    const tempCharactersTable: { [character: string]: boolean } = {};\n    for (\n      let dataFormatterIndex = 0, dataFormatterLength = values.length;\n      dataFormatterIndex < dataFormatterLength;\n      dataFormatterIndex++\n    ) {\n      const characters = values[dataFormatterIndex];\n\n      // if (typeof characters === 'string') {\n      //   const character = characters;\n      //   if (tempCharactersTable.hasOwnProperty(character)) continue;\n      //   tempCharactersTable[character] = true;\n      //   this.characters.push(character);\n      if (characters.hasOwnProperty('length')) {\n        const iteratable = characters as string[] | string;\n        for (\n          let characterIndex = 0, charactersLength = iteratable.length;\n          characterIndex < charactersLength;\n          characterIndex++\n        ) {\n          const character = iteratable[characterIndex];\n          if (tempCharactersTable.hasOwnProperty(character)) continue;\n          tempCharactersTable[character] = true;\n          this.characters.push(character);\n        }\n      } else if (typeof characters === 'number') {\n        if (tempCharactersTable.hasOwnProperty(characters)) continue;\n        tempCharactersTable[characters] = true;\n        this.characters.push(characters);\n      } else if (typeof characters === 'boolean') {\n        const character = characters.toString();\n        if (tempCharactersTable.hasOwnProperty(character)) continue;\n        tempCharactersTable[character] = true;\n        this.characters.push(character);\n      } else if (\n        Array.isArray(characters) &&\n        typeof characters[0] === 'string'\n      ) {\n        for (let i = 0; i < characters.length; i++) {\n          const character = characters[i] as string;\n          if (tempCharactersTable.hasOwnProperty(character)) continue;\n          tempCharactersTable[character] = true;\n          this.characters.push(character);\n        }\n      } else if (\n        Array.isArray(characters) &&\n        (typeof characters[0] === 'number' ||\n          typeof characters[0] === 'boolean')\n      ) {\n        for (let i = 0; i < characters.length; i++) {\n          const character = characters[i].toString();\n          if (tempCharactersTable.hasOwnProperty(dataFormatterIndex)) continue;\n          tempCharactersTable[character] = true;\n          this.characters.push(character);\n        }\n      } else if (\n        characters.hasOwnProperty('input') &&\n        characters.hasOwnProperty('output')\n      ) {\n        const { input, output } = (characters as unknown) as IRNNDatum;\n        if (Array.isArray(input)) {\n          this.addCharacters(input, tempCharactersTable);\n        } else {\n          this.addCharacters(input.toString(), tempCharactersTable);\n        }\n\n        if (Array.isArray(output)) {\n          this.addCharacters(output, tempCharactersTable);\n        } else {\n          this.addCharacters(output.toString(), tempCharactersTable);\n        }\n      } else {\n        throw new Error('Unhandled value');\n      }\n    }\n  }\n\n  addCharacters(\n    characters: string | string[] | boolean[] | number[],\n    charactersTable: { [character: string]: boolean }\n  ): void {\n    for (let i = 0; i < characters.length; i++) {\n      const character = characters[i].toString();\n      if (charactersTable.hasOwnProperty(character)) continue;\n      charactersTable[character] = true;\n      this.characters.push(character);\n    }\n  }\n\n  buildTables(maxThreshold: number): void {\n    // filter by count threshold and create pointers\n    const charactersLength = this.characters.length;\n    for (\n      let characterIndex = 0;\n      characterIndex < charactersLength;\n      characterIndex++\n    ) {\n      const character = this.characters[characterIndex];\n      if (characterIndex >= maxThreshold) {\n        // add character to dataFormatter\n        this.indexTable[character] = characterIndex;\n        this.characterTable[characterIndex] = character;\n      }\n    }\n  }\n\n  toIndexes(value: Value, maxThreshold = 0): number[] {\n    const result = [];\n    const { indexTable } = this;\n\n    switch (typeof value) {\n      case 'number':\n      case 'boolean':\n        value = value.toString();\n    }\n\n    for (let i = 0, max = value.length; i < max; i++) {\n      const character = value[i].toString();\n      let index = indexTable[character];\n      if (index === undefined) {\n        if (indexTable.unrecognized) {\n          index = indexTable.unrecognized;\n        } else {\n          throw new Error(`unrecognized character \"${character}\"`);\n        }\n      }\n      if (index < maxThreshold) continue;\n      result.push(index);\n    }\n    return result;\n  }\n\n  toIndexesInputOutput(\n    input: Value,\n    output?: Value,\n    maxThreshold = 0\n  ): number[] {\n    const result: number[] = this.toIndexesValue(input, maxThreshold, true);\n\n    if (typeof output === 'undefined') return result;\n    return result.concat(this.toIndexesValue(output, maxThreshold, false));\n  }\n\n  toIndexesValue(\n    value: Value,\n    maxThreshold: number,\n    isInput: boolean\n  ): number[] {\n    if (typeof value === 'string') {\n      value = value.split('');\n    } else if (typeof value === 'number' || typeof value === 'boolean') {\n      value = value.toString().split('');\n    } else if (\n      Array.isArray(value) &&\n      (typeof (value as number[])[0] === 'number' ||\n        typeof (value as boolean[])[0] === 'boolean' ||\n        typeof (value as string[])[0] === 'string')\n    ) {\n      value = (value as string[]).map((v) => v.toString());\n    } else {\n      throw new Error('unrecognized value');\n    }\n    if (isInput) {\n      value = value.concat(['stop-input', 'start-output']);\n    }\n    return this.toIndexes(value, maxThreshold);\n  }\n\n  toCharacters(indices: number[], maxThreshold = 0): string[] {\n    const result: string[] = [];\n    const { indexTable, characterTable } = this;\n\n    for (let i = 0, max = indices.length; i < max; i++) {\n      const index = indices[i];\n      if (index < maxThreshold) continue;\n      let character = characterTable[index];\n      if (character === undefined) {\n        if (indexTable.unrecognized) {\n          character = characterTable[indexTable.unrecognized];\n        } else {\n          throw new Error(`unrecognized index \"${index}\"`);\n        }\n      } else if (character !== null) {\n        result.push(character.toString());\n      }\n    }\n\n    return result;\n  }\n\n  toString(indices: number[], maxThreshold: number): string {\n    return this.toCharacters(indices, maxThreshold).join('');\n  }\n\n  addInputOutput(): void {\n    this.addSpecial('stop-input');\n    this.addSpecial('start-output');\n  }\n\n  addUnrecognized(): void {\n    this.addSpecial('unrecognized');\n  }\n\n  static fromAllPrintable(\n    maxThreshold: number,\n    values = ['\\n']\n  ): DataFormatter {\n    for (let i = 32; i <= 126; i++) {\n      values.push(String.fromCharCode(i));\n    }\n    return new DataFormatter(values, maxThreshold);\n  }\n\n  static fromAllPrintableInputOutput(\n    maxThreshold: number,\n    values = ['\\n']\n  ): DataFormatter {\n    const dataFormatter = DataFormatter.fromAllPrintable(maxThreshold, values);\n    dataFormatter.addInputOutput();\n    dataFormatter.addUnrecognized();\n    return dataFormatter;\n  }\n\n  static fromStringInputOutput(\n    string: string,\n    maxThreshold: number\n  ): DataFormatter {\n    const values = Array.from(new Set(string)).join('');\n    const dataFormatter = new DataFormatter(values.split(''), maxThreshold);\n    dataFormatter.addInputOutput();\n    dataFormatter.addUnrecognized();\n    dataFormatter.isSetup = true;\n    return dataFormatter;\n  }\n\n  static fromArrayInputOutput(\n    data: IRNNDatum[],\n    maxThreshold?: number\n  ): DataFormatter {\n    const values: Array<string | string[]> = [];\n\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      values.push(validateAndCast(datum.input), validateAndCast(datum.output));\n    }\n    const flatArray: string[] = Array.isArray(values)\n      ? (values as string[][]).flat()\n      : values;\n    const dataFormatter = new DataFormatter(\n      Array.from(new Set(flatArray)),\n      maxThreshold\n    );\n    dataFormatter.addInputOutput();\n    dataFormatter.addUnrecognized();\n    dataFormatter.isSetup = true;\n    return dataFormatter;\n  }\n\n  static fromString(string: string, maxThreshold = 0): DataFormatter {\n    const values = Array.from(new Set(string)).join('');\n    return new DataFormatter(values.split(''), maxThreshold);\n  }\n\n  toJSON(): IDataFormatterJSON {\n    return {\n      indexTable: this.indexTable,\n      characterTable: this.characterTable,\n      values: this.values as Value[],\n      characters: this.characters,\n      specialIndexes: this.specialIndexes,\n    };\n  }\n\n  /** TODO: Type better, The type of json is not \"string that is a valid JSON\", it is a POJO in the shape of DataFormatter.\n   * this method re-hydrates the the data as an instance of DataFormatter.\n   */\n  static fromJSON(json: IDataFormatterJSON): DataFormatter {\n    const dataFormatter = new DataFormatter();\n    dataFormatter.indexTable = json.indexTable;\n    dataFormatter.characterTable = json.characterTable;\n    dataFormatter.values = json.values;\n    dataFormatter.characters = json.characters;\n    dataFormatter.specialIndexes = json.specialIndexes;\n    dataFormatter.isSetup = true;\n    return dataFormatter;\n  }\n\n  addSpecial(special: string | number, character = null): void {\n    const specialIndex = (this.indexTable[special] = this.characters.length);\n    this.characterTable[specialIndex] = character;\n    this.specialIndexes.push(this.characters.length);\n    this.characters.push(special);\n  }\n\n  toFunctionString(): string {\n    return `\nvar characterTable = ${JSON.stringify(this.characterTable)};\nvar indexTable = ${JSON.stringify(this.indexTable)};\nvar characters = ${JSON.stringify(this.characters)};\nvar dataFormatter = {\n  toIndexes: function ${this.toIndexes.toString()},\n  toIndexesInputOutput: function ${this.toIndexesInputOutput.toString()},\n  toCharacters: function ${this.toCharacters.toString()},\n  toIndexesValue: function ${this.toIndexesValue.toString()},\n};`;\n  }\n\n  formatDataIn(input?: Value, output?: Value): number[] {\n    if (input === undefined) return [];\n    if (Array.isArray(input) && typeof input[0] === 'number') {\n      return input as number[];\n    }\n    if (this.indexTable?.hasOwnProperty('stop-input')) {\n      return this.toIndexesInputOutput(input, output);\n    }\n    return this.toIndexes(input);\n  }\n\n  formatDataOut(input: number[], output: number[]): string {\n    return this.toCharacters(output).join('');\n  }\n\n  format(data: Array<IRNNDatum | Value>): number[][] {\n    if (\n      typeof data[0] === 'number' &&\n      !Array.isArray(data[0]) &&\n      (!data[0].hasOwnProperty('input') || !data[0].hasOwnProperty('output'))\n    ) {\n      return data as number[][];\n    }\n    const result: number[][] = [];\n    if (\n      typeof data[0] === 'string' ||\n      typeof data[0] === 'number' ||\n      Array.isArray(data[0])\n    ) {\n      if (!this.isSetup) {\n        this.setup(data);\n        for (let i = 0; i < data.length; i++) {\n          result.push(this.formatDataIn(validateAndCast(data[i] as Value)));\n        }\n      } else {\n        for (let i = 0, max = data.length; i < max; i++) {\n          result.push(this.formatDataIn(data[i] as Value));\n        }\n      }\n    } else if ((data[0] as IRNNDatum).input && (data[0] as IRNNDatum).output) {\n      if (!this.isSetup) {\n        this.setup(data);\n      }\n      for (let i = 0, max = data.length; i < max; i++) {\n        result.push(\n          this.formatDataIn(\n            validateAndCast((data[i] as IRNNDatum).input),\n            validateAndCast((data[i] as IRNNDatum).output)\n          )\n        );\n      }\n    } else {\n      throw new Error('unrecognized data');\n    }\n    return result;\n  }\n}\n\nfunction validateAndCast(value: Value): string | string[] {\n  if (typeof value === 'string') return value;\n  if (typeof value === 'number') return value.toString();\n  if (typeof value === 'boolean') return value.toString();\n  if (Array.isArray(value) && typeof value[0] === 'string')\n    return value as string[];\n  if (typeof value[0] === 'boolean') {\n    return (value as boolean[]).map((v: boolean) => v.toString());\n  }\n  if (typeof value[0] === 'number') {\n    return (value as number[]).map((v: number) => v.toString());\n  }\n  throw new Error(\n    'unrecognized value, expected string[], string, number[], number, boolean[], or boolean'\n  );\n}\n\nexport interface IDataFormatterJSON {\n  indexTable: { [key: string]: number; [key: number]: number };\n  characterTable: { [key: number]: string | number | null };\n  values: Value[];\n  characters: Array<string | number>;\n  specialIndexes: number[];\n}\n","import { Matrix } from '.';\n\nexport function copy(product: Matrix, left: Matrix): void {\n  product.rows = left.rows;\n  product.columns = left.columns;\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n}\n","import { Matrix } from '.';\n\n/**\n * add {left} and {right} matrix weights into {into}\n */\nexport function add(product: Matrix, left: Matrix, right: Matrix): void {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = left.weights[i] + right.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * adds {from} deltas to {left} and {right} deltas\n */\nexport function addB(product: Matrix, left: Matrix, right: Matrix): void {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = product.deltas[i];\n    right.deltas[i] = product.deltas[i];\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * makes matrix weights and deltas all ones\n */\nexport function allOnes(product: Matrix): void {\n  for (let i = 0; i < product.weights.length; i++) {\n    product.weights[i] = 1;\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\nexport function cloneNegative(product: Matrix, left: Matrix): void {\n  product.rows = left.rows;\n  product.columns = left.columns;\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = -left.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * multiply {left} and {right} matrix weights to {into}\n */\nexport function multiply(product: Matrix, left: Matrix, right: Matrix): void {\n  const leftRows = left.rows;\n  const leftColumns = left.columns;\n  const rightColumns = right.columns;\n\n  // loop over rows of left\n  for (let leftRow = 0; leftRow < leftRows; leftRow++) {\n    const leftRowBase = leftColumns * leftRow;\n    const rightRowBase = rightColumns * leftRow;\n\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // dot product loop\n      let dot = 0;\n\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn;\n        const leftIndex = leftRowBase + leftColumn;\n        const rightIndex = rightColumnBase + rightColumn;\n        dot += left.weights[leftIndex] * right.weights[rightIndex];\n        left.deltas[leftIndex] = 0;\n        right.deltas[rightIndex] = 0;\n      }\n\n      product.weights[rightRowBase + rightColumn] = dot;\n    }\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * multiplies {from} deltas to {left} and {right}\n */\nexport function multiplyB(product: Matrix, left: Matrix, right: Matrix): void {\n  const leftRows = left.rows;\n  const leftColumns = left.columns;\n  const rightColumns = right.columns;\n\n  // loop over rows of left\n  for (let leftRowRoot = 0; leftRowRoot < leftRows; leftRowRoot++) {\n    const leftRowBase = leftColumns * leftRowRoot;\n    const rightRowBase = rightColumns * leftRowRoot;\n\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn;\n        const leftRow = leftRowBase + leftColumn;\n        const rightRow = rightColumnBase + rightColumn;\n        const backPropagateValue = product.deltas[rightRowBase + rightColumn];\n        left.deltas[leftRow] += right.weights[rightRow] * backPropagateValue;\n        right.deltas[rightRow] += left.weights[leftRow] * backPropagateValue;\n      }\n    }\n  }\n}\n","import { Matrix } from '.';\n\nexport function multiplyElement(\n  product: Matrix,\n  left: Matrix,\n  right: Matrix\n): void {\n  const { weights } = left;\n\n  for (let i = 0; i < weights.length; i++) {\n    product.weights[i] = left.weights[i] * right.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * multiplies {left} and {right} weight by {from} deltas into {left} and {right} deltas\n */\nexport function multiplyElementB(\n  product: Matrix,\n  left: Matrix,\n  right: Matrix\n): void {\n  for (let i = 0; i < left.weights.length; i++) {\n    left.deltas[i] = right.weights[i] * product.deltas[i];\n    right.deltas[i] = left.weights[i] * product.deltas[i];\n  }\n}\n","import { Matrix } from '.';\n\n/**\n *\n * relu {m} weights to {into} weights\n */\nexport function relu(product: Matrix, left: Matrix): void {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.max(0, left.weights[i]); // relu\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * adds {from} deltas to {m} deltas when {m} weights are above other a threshold of 0\n */\nexport function reluB(product: Matrix, left: Matrix): void {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = left.weights[i] > 0 ? product.deltas[i] : 0;\n  }\n}\n","import { Matrix } from '.';\n\nexport function rowPluck(\n  product: Matrix,\n  left: Matrix,\n  rowPluckIndex: number\n): void {\n  const { columns } = left;\n  const rowBase = columns * rowPluckIndex;\n\n  for (let column = 0; column < columns; column++) {\n    product.weights[column] = left.weights[rowBase + column];\n    product.deltas[column] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * adds {from} deltas into {m} deltas\n */\nexport function rowPluckB(\n  product: Matrix,\n  left: Matrix,\n  rowIndex: number\n): void {\n  const { columns } = left;\n  const rowBase = columns * rowIndex;\n\n  for (let column = 0; column < columns; column++) {\n    left.deltas[rowBase + column] = product.deltas[column];\n  }\n}\n","import { Matrix } from '.';\n\nexport function sigmoid(product: Matrix, left: Matrix): void {\n  // sigmoid nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = 1 / (1 + Math.exp(-left.weights[i]));\n    product.deltas[i] = 0;\n  }\n}\n\n// function sig(x) {\n//   // helper function for computing sigmoid\n//   return 1 / (1 + Math.exp(-x));\n// }\n","import { Matrix } from '.';\n\nexport function sigmoidB(product: Matrix, left: Matrix): void {\n  for (let i = 0; i < product.deltas.length; i++) {\n    const mwi = product.weights[i];\n    left.deltas[i] = mwi * (1 - mwi) * product.deltas[i];\n  }\n}\n","import { Matrix } from '.';\n\nexport function softmax(matrix: Matrix): Matrix {\n  // probability volume\n  const result = new Matrix(matrix.rows, matrix.columns);\n  let maxVal = -999999;\n\n  for (let i = 0; i < matrix.weights.length; i++) {\n    if (matrix.weights[i] > maxVal) {\n      maxVal = matrix.weights[i];\n    }\n  }\n\n  let s = 0;\n  for (let i = 0; i < matrix.weights.length; i++) {\n    result.weights[i] = Math.exp(matrix.weights[i] - maxVal);\n    s += result.weights[i];\n  }\n\n  for (let i = 0; i < matrix.weights.length; i++) {\n    result.weights[i] /= s;\n  }\n\n  // no backward pass here needed\n  // since we will use the computed probabilities outside\n  // to set gradients directly on m\n  return result;\n}\n","import { Matrix } from '.';\n\nexport function tanh(product: Matrix, left: Matrix): void {\n  // tanh nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.tanh(left.weights[i]);\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\nexport function tanhB(product: Matrix, left: Matrix): void {\n  for (let i = 0; i < product.deltas.length; i++) {\n    // grad for z = tanh(x) is (1 - z^2)\n    const mwi = product.weights[i];\n    left.deltas[i] = (1 - mwi * mwi) * product.deltas[i];\n  }\n}\n","import { Matrix } from '.';\nimport { add } from './add';\nimport { addB } from './add-b';\nimport { allOnes } from './all-ones';\nimport { cloneNegative } from './clone-negative';\nimport { multiply } from './multiply';\nimport { multiplyB } from './multiply-b';\nimport { multiplyElement } from './multiply-element';\nimport { multiplyElementB } from './multiply-element-b';\nimport { relu } from './relu';\nimport { reluB } from './relu-b';\nimport { rowPluck } from './row-pluck';\nimport { rowPluckB } from './row-pluck-b';\nimport { sigmoid } from './sigmoid';\nimport { sigmoidB } from './sigmoid-b';\nimport { softmax } from './softmax';\nimport { tanh } from './tanh';\nimport { tanhB } from './tanh-b';\n\ntype PropagateIndex = (product: Matrix, left: Matrix, index: number) => void;\ntype PropagateProduct = (product: Matrix) => void;\ntype PropagateProductFromLeft = (product: Matrix, left: Matrix) => void;\ntype PropagateProductFromLeftRight = (\n  product: Matrix,\n  left: Matrix,\n  right: Matrix\n) => void;\ntype PropagateFunction =\n  | PropagateIndex\n  | PropagateProduct\n  | PropagateProductFromLeft\n  | PropagateProductFromLeftRight;\n\nexport interface IState {\n  name: string;\n  product: Matrix;\n  left?: Matrix;\n  right?: Matrix;\n  forwardFn: PropagateFunction;\n  backpropagationFn: PropagateFunction;\n}\n\nexport class Equation {\n  states: IState[] = [];\n  inputValue?: Float32Array;\n  inputRow = 0;\n\n  add(left: Matrix, right: Matrix): Matrix {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n\n    const product = new Matrix(left.rows, left.columns);\n\n    this.states.push({\n      name: 'add',\n      product,\n      left,\n      right,\n      forwardFn: add,\n      backpropagationFn: addB,\n    });\n\n    return product;\n  }\n\n  allOnes(rows: number, columns: number): Matrix {\n    const product = new Matrix(rows, columns);\n\n    this.states.push({\n      name: 'allOnes',\n      product,\n      left: product,\n      forwardFn: allOnes,\n      backpropagationFn: () => {},\n    });\n\n    return product;\n  }\n\n  cloneNegative(matrix: Matrix): Matrix {\n    const product = new Matrix(matrix.rows, matrix.columns);\n\n    this.states.push({\n      name: 'cloneNegative',\n      product,\n      left: matrix,\n      forwardFn: cloneNegative,\n      backpropagationFn: () => {},\n    });\n\n    return product;\n  }\n\n  /**\n   * connects two matrices together by subtract\n   */\n  subtract(left: Matrix, right: Matrix): Matrix {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n\n    return this.add(\n      this.add(this.allOnes(left.rows, left.columns), this.cloneNegative(left)),\n      right\n    );\n  }\n\n  /**\n   * connects two matrices together by multiply\n   */\n  multiply(left: Matrix, right: Matrix): Matrix {\n    if (left.columns !== right.rows) {\n      throw new Error('misaligned matrices');\n    }\n\n    const product = new Matrix(left.rows, right.columns);\n\n    this.states.push({\n      name: 'multiply',\n      product,\n      left,\n      right,\n      forwardFn: multiply,\n      backpropagationFn: multiplyB,\n    });\n\n    return product;\n  }\n\n  /**\n   * connects two matrices together by multiplyElement\n   */\n  multiplyElement(left: Matrix, right: Matrix): Matrix {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n\n    const product = new Matrix(left.rows, left.columns);\n\n    this.states.push({\n      name: 'multiplyElement',\n      product,\n      left,\n      right,\n      forwardFn: multiplyElement,\n      backpropagationFn: multiplyElementB,\n    });\n\n    return product;\n  }\n\n  /**\n   * connects a matrix to relu\n   */\n  relu(matrix: Matrix): Matrix {\n    const product = new Matrix(matrix.rows, matrix.columns);\n\n    this.states.push({\n      name: 'relu',\n      product,\n      left: matrix,\n      forwardFn: relu,\n      backpropagationFn: reluB,\n    });\n\n    return product;\n  }\n\n  /**\n   * input a matrix\n   */\n  input(input: Matrix): Matrix {\n    this.states.push({\n      name: 'input',\n      product: input,\n      forwardFn: (product: Matrix) => {\n        if (!this.inputValue) return;\n        if (this.inputValue.length !== product.weights.length) {\n          throw new Error('this.inputValue is of wrong dimensions');\n        }\n        product.weights = input.weights = this.inputValue;\n      },\n      backpropagationFn: () => {},\n    });\n\n    return input;\n  }\n\n  /**\n   * connects a matrix via a row\n   */\n  inputMatrixToRow(matrix: Matrix): Matrix {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    const product = new Matrix(matrix.columns, 1);\n\n    this.states.push({\n      name: 'inputMatrixToRow',\n      product,\n      left: matrix,\n      get right() {\n        return (self.inputRow as unknown) as Matrix;\n      },\n      forwardFn: rowPluck,\n      backpropagationFn: rowPluckB,\n    });\n\n    return product;\n  }\n\n  /**\n   * connects a matrix to sigmoid\n   */\n  sigmoid(matrix: Matrix): Matrix {\n    const product = new Matrix(matrix.rows, matrix.columns);\n\n    this.states.push({\n      name: 'sigmoid',\n      product,\n      left: matrix,\n      forwardFn: sigmoid,\n      backpropagationFn: sigmoidB,\n    });\n\n    return product;\n  }\n\n  /**\n   * connects a matrix to tanh\n   */\n  tanh(matrix: Matrix): Matrix {\n    const product = new Matrix(matrix.rows, matrix.columns);\n\n    this.states.push({\n      name: 'tanh',\n      product,\n      left: matrix,\n      forwardFn: tanh,\n      backpropagationFn: tanhB,\n    });\n\n    return product;\n  }\n\n  /**\n   *\n   * Observe a matrix for debugging\n   */\n  observe(matrix: Matrix): Matrix {\n    this.states.push({\n      name: 'observe',\n      product: new Matrix(),\n      forwardFn: () => {},\n      backpropagationFn: () => {},\n    });\n\n    return matrix;\n  }\n\n  /**\n   * Run index through equations via forward propagation\n   */\n  runIndex(rowIndex = 0): Matrix {\n    this.inputRow = rowIndex;\n    let state = this.states[0];\n\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i];\n\n      if (!state.hasOwnProperty('forwardFn')) continue;\n      (state.forwardFn as PropagateProductFromLeftRight)(\n        state.product,\n        state.left as Matrix,\n        state.right as Matrix\n      );\n    }\n\n    return state.product;\n  }\n\n  /**\n   * Run value through equations via forward propagation\n   */\n  runInput(inputValue: Float32Array): Matrix {\n    this.inputValue = inputValue;\n    let state = this.states[0];\n\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i];\n\n      if (!state.hasOwnProperty('forwardFn')) continue;\n      (state.forwardFn as PropagateProductFromLeftRight)(\n        state.product,\n        state.left as Matrix,\n        state.right as Matrix\n      );\n    }\n\n    return state.product;\n  }\n\n  /**\n   * Run value through equations via back propagation\n   */\n  backpropagate(): Matrix {\n    let i = this.states.length;\n    let state = this.states[0];\n\n    while (i-- > 0) {\n      state = this.states[i];\n\n      if (!state.hasOwnProperty('backpropagationFn')) continue;\n      (state.backpropagationFn as PropagateProductFromLeftRight)(\n        state.product,\n        state.left as Matrix,\n        state.right as Matrix\n      );\n    }\n\n    return state.product;\n  }\n\n  /**\n   * Run index through equations via back propagation\n   */\n  backpropagateIndex(rowIndex = 0): Matrix {\n    this.inputRow = rowIndex;\n\n    let i = this.states.length;\n    let state = this.states[0];\n\n    while (i-- > 0) {\n      state = this.states[i];\n\n      if (!state.hasOwnProperty('backpropagationFn')) continue;\n      (state.backpropagationFn as PropagateProductFromLeftRight)(\n        state.product,\n        state.left as Matrix,\n        state.right as Matrix\n      );\n    }\n\n    return state.product;\n  }\n\n  /**\n   * Predict a target value from equation\n   */\n  predictTarget(input: Float32Array, target: Float32Array): number {\n    let errorSum = 0;\n    const output = this.runInput(input);\n\n    for (let i = 0; i < output.weights.length; i++) {\n      const error = output.weights[i] - target[i];\n      // set gradients into log probabilities\n      errorSum += Math.abs(error);\n      // write gradients into log probabilities\n      output.deltas[i] = error;\n    }\n\n    return errorSum;\n  }\n\n  /**\n   * Predict a target index from equation\n   */\n  predictTargetIndex(input: number, target: number): number {\n    const output = this.runIndex(input);\n    // set gradients into log probabilities\n    const logProbabilities = output; // interpret output as log probabilities\n    const probabilities = softmax(output); // compute the softmax probabilities\n\n    // write gradients into log probabilities\n    logProbabilities.deltas = probabilities.weights.slice(0);\n    logProbabilities.deltas[target] -= 1;\n\n    // accumulate base 2 log prob and do smoothing\n    return -Math.log2(probabilities.weights[target]);\n  }\n}\n","import { Matrix } from '.';\n\nexport function maxI(matrix: Matrix): number {\n  // argmax of array w\n  const { weights } = matrix;\n  let maxv = weights[0];\n  let maxix = 0;\n\n  for (let i = 1; i < weights.length; i++) {\n    const v = weights[i];\n    if (v < maxv) continue;\n\n    maxix = i;\n    maxv = v;\n  }\n\n  return maxix;\n}\n","import { Matrix } from '.';\nimport { randomFloat } from '../../utilities/random';\n\nexport function sampleI(matrix: Matrix): number {\n  // sample argmax from w, assuming w are\n  // probabilities that sum to one\n  const r = randomFloat(0, 1);\n  const w = matrix.weights;\n  let x = 0;\n  let i = 0;\n\n  while (true) {\n    x += w[i];\n\n    if (x > r) {\n      return i;\n    }\n\n    i++;\n  }\n}\n","import { Log } from '../feed-forward';\nimport { INeuralNetworkTrainOptions } from '../neural-network';\nimport {\n  DataFormatter,\n  IDataFormatter,\n  IDataFormatterJSON,\n} from '../utilities/data-formatter';\nimport { randomFloat } from '../utilities/random';\nimport { zeros } from '../utilities/zeros';\nimport { IMatrixJSON, Matrix } from './matrix';\nimport { copy } from './matrix/copy';\nimport { Equation } from './matrix/equation';\nimport { maxI } from './matrix/max-i';\nimport { RandomMatrix } from './matrix/random-matrix';\nimport { sampleI } from './matrix/sample-i';\nimport { softmax } from './matrix/softmax';\nimport { IRNNDatum, Value } from './rnn-data-types';\n\nexport interface IRNNModel {\n  isInitialized: boolean;\n  input: Matrix;\n  hiddenLayers: IRNNHiddenLayerModel[];\n  output: Matrix;\n  equations: Equation[];\n  allMatrices: Matrix[];\n  equationConnections: Matrix[][];\n  outputConnector: RandomMatrix | Matrix;\n}\n\nexport interface IRNNOptions {\n  inputSize: number;\n  inputRange: number;\n  hiddenLayers: number[];\n  outputSize: number;\n  decayRate: number;\n  smoothEps: number;\n  regc: number;\n  clipval: number;\n  maxPredictionLength: number;\n  dataFormatter: IDataFormatter;\n  json?: IRNNJSON;\n}\n\nexport interface IRNNJSONOptions {\n  inputSize: number;\n  inputRange: number;\n  hiddenLayers: number[];\n  outputSize: number;\n  decayRate: number;\n  smoothEps: number;\n  regc: number;\n  clipval: number;\n  maxPredictionLength: number;\n  dataFormatter: IDataFormatterJSON;\n}\n\nexport interface IRNNTrainingOptions {\n  iterations: number;\n  errorThresh: number;\n  log: boolean | ((status: string) => void);\n  logPeriod: number;\n  learningRate: number;\n  callback?: (status: IRNNStatus) => void;\n  callbackPeriod: number;\n  timeout: number;\n}\n\nexport interface IRNNJSONTrainOptions {\n  iterations: number;\n  errorThresh: number;\n  log: boolean | ((status: string) => void);\n  logPeriod: number;\n  learningRate: number;\n  callback?: (status: IRNNStatus) => void;\n  callbackPeriod: number;\n  timeout: number | 'Infinity';\n}\n\nexport const trainDefaults: IRNNTrainingOptions = {\n  iterations: 20000,\n  errorThresh: 0.005,\n  log: false,\n  logPeriod: 10,\n  learningRate: 0.01,\n  callbackPeriod: 10,\n  timeout: Infinity,\n};\n\nexport interface IRNNHiddenLayer {\n  [key: string]: RandomMatrix | Matrix;\n}\n\nexport interface IRNNHiddenLayerModel extends IRNNHiddenLayer {\n  // wxh\n  weight: RandomMatrix;\n  // whh\n  transition: RandomMatrix;\n  // bhh\n  bias: Matrix;\n}\n\nexport const defaults = (): IRNNOptions => {\n  return {\n    inputSize: 20,\n    inputRange: 20,\n    hiddenLayers: [20, 20],\n    outputSize: 20,\n    decayRate: 0.999,\n    smoothEps: 1e-8,\n    regc: 0.000001,\n    clipval: 5,\n    maxPredictionLength: 100,\n    dataFormatter: new DataFormatter(),\n  };\n};\n\nexport interface IRNNStatus {\n  iterations: number;\n  error: number;\n}\n\nexport interface IRNNPreppedTrainingData {\n  status: IRNNStatus;\n  preparedData: number[][];\n  endTime: number;\n}\n\nexport class RNN {\n  options: IRNNOptions = { ...defaults() };\n  trainOpts: IRNNTrainingOptions = { ...trainDefaults };\n  stepCache: { [index: number]: Float32Array } = {};\n  runs = 0;\n  ratioClipped = 0;\n  model: IRNNModel = Object.seal({\n    isInitialized: false,\n    input: new Matrix(0, 0),\n    hiddenLayers: [],\n    output: new Matrix(0, 0),\n    equations: [],\n    allMatrices: [],\n    equationConnections: [],\n    outputConnector: new RandomMatrix(0, 0, 0.08),\n  });\n\n  initialLayerInputs: Matrix[] = [];\n\n  constructor(options: Partial<IRNNOptions & IRNNTrainingOptions> = {}) {\n    this.options = { ...this.options, ...options };\n    this.updateTrainingOptions({\n      ...trainDefaults,\n      // ...options,\n    });\n\n    if (options.json) {\n      this.fromJSON(options.json);\n    }\n  }\n\n  initialize(): void {\n    const { dataFormatter } = this.options;\n    if (dataFormatter?.characters.length) {\n      this.options.inputSize = this.options.inputRange = this.options.outputSize =\n        dataFormatter.characters.length;\n    }\n    this.model = this.mapModel();\n  }\n\n  createHiddenLayers(): IRNNHiddenLayer[] {\n    const { hiddenLayers, inputSize } = this.options;\n    const hiddenLayersModel: IRNNHiddenLayer[] = [];\n    // 0 is end, so add 1 to offset\n    hiddenLayersModel.push(this.getHiddenLayer(hiddenLayers[0], inputSize));\n    let prevSize = hiddenLayers[0];\n\n    for (let d = 1; d < hiddenLayers.length; d++) {\n      // loop over depths\n      const hiddenSize = hiddenLayers[d];\n      hiddenLayersModel.push(this.getHiddenLayer(hiddenSize, prevSize));\n      prevSize = hiddenSize;\n    }\n    return hiddenLayersModel;\n  }\n\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return {\n      // wxh\n      weight: new RandomMatrix(hiddenSize, prevSize, 0.08),\n      // whh\n      transition: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\n      // bhh\n      bias: new Matrix(hiddenSize, 1),\n    };\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    if (!hiddenLayer.weight || !hiddenLayer.transition || !hiddenLayer.bias) {\n      throw new Error('hiddenLayer does not have expected properties');\n    }\n    const relu = equation.relu.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n\n    return relu(\n      add(\n        add(\n          multiply(hiddenLayer.weight, inputMatrix),\n          multiply(hiddenLayer.transition, previousResult)\n        ),\n        hiddenLayer.bias\n      )\n    );\n  }\n\n  createInputMatrix(): RandomMatrix {\n    const { inputRange, inputSize } = this.options;\n    if (inputRange < 1)\n      throw new Error('this.options.inputRange not an expected number');\n    if (inputSize < 1)\n      throw new Error('this.options.inputSize not an expected number');\n\n    // 0 is end, so add 1 to offset\n    return new RandomMatrix(inputRange + 1, inputSize, 0.08);\n  }\n\n  createOutputMatrices(): { outputConnector: RandomMatrix; output: Matrix } {\n    const { outputSize, hiddenLayers } = this.options;\n    const lastHiddenSize = last(hiddenLayers);\n\n    // 0 is end, so add 1 to offset\n    return {\n      // whd\n      outputConnector: new RandomMatrix(outputSize + 1, lastHiddenSize, 0.08),\n      // 0 is end, so add 1 to offset\n      // bd\n      output: new Matrix(outputSize + 1, 1),\n    };\n  }\n\n  bindEquation(): void {\n    const { model } = this;\n    const { hiddenLayers } = this.options;\n    const equation = new Equation();\n    const outputs: Matrix[] = [];\n    const equationConnection =\n      model.equationConnections.length > 0\n        ? last(model.equationConnections)\n        : this.initialLayerInputs;\n    // 0 index\n    let output = this.getEquation(\n      equation,\n      equation.inputMatrixToRow(model.input),\n      equationConnection[0],\n      model.hiddenLayers[0]\n    );\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n      if (!equationConnection[i]) {\n        throw new Error(`Cannot find equation at index ${i}`);\n      }\n      output = this.getEquation(\n        equation,\n        output,\n        equationConnection[i],\n        model.hiddenLayers[i]\n      );\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(\n      equation.multiply(model.outputConnector, output),\n      model.output\n    );\n    model.equations.push(equation);\n  }\n\n  mapModel(): IRNNModel {\n    const allMatrices: Matrix[] = [];\n    this.initialLayerInputs = this.options.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n\n    const input = this.createInputMatrix();\n    allMatrices.push(input);\n\n    const hiddenLayers = this.createHiddenLayers() as IRNNHiddenLayerModel[];\n    if (!hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      const hiddenMatrix: IRNNHiddenLayerModel = hiddenLayers[i];\n      for (const property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    const { output, outputConnector } = this.createOutputMatrices();\n    allMatrices.push(outputConnector);\n    allMatrices.push(output);\n\n    return Object.seal({\n      isInitialized: true,\n      input,\n      hiddenLayers,\n      output,\n      equations: [],\n      allMatrices,\n      equationConnections: [],\n      outputConnector,\n    });\n  }\n\n  trainInput(input: number[]): number {\n    this.runs++;\n    const { model } = this;\n    const max = input.length;\n    let log2ppl = 0;\n    let equation;\n    while (model.equations.length <= input.length + 1) {\n      // last is zero\n      this.bindEquation();\n    }\n    for (\n      let inputIndex = -1, inputMax = input.length;\n      inputIndex < inputMax;\n      inputIndex++\n    ) {\n      // start and end tokens are zeros\n      const equationIndex = inputIndex + 1;\n      equation = model.equations[equationIndex];\n\n      const source = inputIndex === -1 ? 0 : input[inputIndex] + 1; // first step: start with START token\n      const target = inputIndex === max - 1 ? 0 : input[inputIndex + 1] + 1; // last step: end with END token\n      log2ppl += equation.predictTargetIndex(source, target);\n    }\n    return Math.pow(2, log2ppl / (max - 1)) / 100;\n  }\n\n  backpropagate(input: number[]): void {\n    let i = input.length;\n    const { model } = this;\n    const { equations } = model;\n    while (i > 0) {\n      equations[i].backpropagateIndex(input[i - 1] + 1);\n      i--;\n    }\n    equations[0].backpropagateIndex(0);\n  }\n\n  adjustWeights(): void {\n    const { regc, clipval, decayRate, smoothEps } = this.options;\n    const { trainOpts, model, stepCache } = this;\n    const { learningRate } = trainOpts;\n    const { allMatrices } = model;\n    let numClipped = 0;\n    let numTot = 0;\n    for (let matrixIndex = 0; matrixIndex < allMatrices.length; matrixIndex++) {\n      const matrix = allMatrices[matrixIndex];\n      const { weights, deltas } = matrix;\n      if (!(matrixIndex in stepCache)) {\n        stepCache[matrixIndex] = zeros(matrix.rows * matrix.columns);\n      }\n      const cache = stepCache[matrixIndex];\n      for (let i = 0; i < weights.length; i++) {\n        let r = deltas[i];\n        const w = weights[i];\n        // rmsprop adaptive learning rate\n        cache[i] = cache[i] * decayRate + (1 - decayRate) * r * r;\n        // gradient clip\n        if (r > clipval) {\n          r = clipval;\n          numClipped++;\n        } else if (r < -clipval) {\n          r = -clipval;\n          numClipped++;\n        }\n        numTot++;\n        // update (and regularize)\n        weights[i] =\n          w + (-learningRate * r) / Math.sqrt(cache[i] + smoothEps) - regc * w;\n      }\n    }\n    this.ratioClipped = numClipped / numTot;\n  }\n\n  get isRunnable(): boolean {\n    if (this.model && this.model.equations.length === 0) {\n      console.error(`No equations bound, did you run train()?`);\n      return false;\n    }\n\n    return true;\n  }\n\n  checkRunnable(): void {\n    if (!this.isRunnable) {\n      throw new Error('Network not runnable');\n    }\n  }\n\n  run(rawInput: Value = [], isSampleI = false, temperature = 1): string {\n    const maxPredictionLength: number =\n      this.options.maxPredictionLength +\n      (rawInput !== null ? (rawInput as string).length : 0) +\n      (this.options.dataFormatter\n        ? this.options.dataFormatter.specialIndexes.length\n        : 0);\n\n    this.checkRunnable();\n\n    const input: number[] =\n      this.options.dataFormatter && (rawInput as string).length > 0\n        ? this.options.dataFormatter.formatDataIn(rawInput)\n        : (rawInput as number[]);\n    const { model } = this;\n    const output = [];\n    let i = 0;\n    while (true) {\n      const previousIndex =\n        i === 0 ? 0 : i < input.length ? input[i - 1] + 1 : output[i - 1];\n      while (model.equations.length <= i) {\n        this.bindEquation();\n      }\n      const equation = model.equations[i];\n      // sample predicted letter\n      const outputMatrix = equation.runIndex(previousIndex);\n      const logProbabilities = new Matrix(\n        model.output.rows,\n        model.output.columns\n      );\n      copy(logProbabilities, outputMatrix);\n      if (temperature !== 1 && isSampleI) {\n        /**\n         * scale log probabilities by temperature and re-normalize\n         * if temperature is high, logProbabilities will go towards zero\n         * and the softmax outputs will be more diffuse. if temperature is\n         * very low, the softmax outputs will be more peaky\n         */\n        for (let j = 0, max = logProbabilities.weights.length; j < max; j++) {\n          logProbabilities.weights[j] /= temperature;\n        }\n      }\n\n      const probs = softmax(logProbabilities);\n      const nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\n\n      i++;\n      if (nextIndex === 0) {\n        // END token predicted, break out\n        break;\n      }\n      if (i >= maxPredictionLength) {\n        // something is wrong\n        break;\n      }\n\n      output.push(nextIndex);\n    }\n\n    /**\n     * we slice the input length here, not because output contains it, but it will be erroneous as we are sending the\n     * network what is contained in input, so the data is essentially guessed by the network what could be next, till it\n     * locks in on a value.\n     * Kind of like this, values are from input:\n     * 0 -> 4 (or in English: \"beginning on input\" -> \"I have no idea? I'll guess what they want next!\")\n     * 2 -> 2 (oh how interesting, I've narrowed down values...)\n     * 1 -> 9 (oh how interesting, I've now know what the values are...)\n     * then the output looks like: [4, 2, 9,...]\n     * so we then remove the erroneous data to get our true output\n     */\n    return this.options.dataFormatter.formatDataOut(\n      input,\n      output.slice(input.length).map((value) => value - 1)\n    );\n  }\n\n  /**\n   *\n   * Verifies network sizes are initialized\n   * If they are not it will initialize them\n   */\n  verifyIsInitialized(): void {\n    if (!this.model.isInitialized) {\n      this.initialize();\n    }\n  }\n\n  /**\n   *\n   * @param options\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number),\n   *       momentum: (number),\n   *       activation: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  updateTrainingOptions(options: Partial<IRNNTrainingOptions>): void {\n    this.trainOpts = { ...trainDefaults, ...options };\n    this.validateTrainingOptions(this.trainOpts as INeuralNetworkTrainOptions);\n    this.setLogMethod(options.log ?? this.trainOpts.log);\n    // TODO: Remove this?\n    // this.activation = options.activation || this.activation;\n  }\n\n  validateTrainingOptions(options: INeuralNetworkTrainOptions): void {\n    const validations: { [fnName: string]: () => boolean } = {\n      iterations: () => {\n        const val = options.iterations;\n        return typeof val === 'number' && val > 0;\n      },\n      errorThresh: () => {\n        const val = options.errorThresh;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      log: () => {\n        const val = options.log;\n        return typeof val === 'function' || typeof val === 'boolean';\n      },\n      logPeriod: () => {\n        const val = options.logPeriod;\n        return typeof val === 'number' && val > 0;\n      },\n      learningRate: () => {\n        const val = options.learningRate;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      callback: () => {\n        const val = options.callback;\n        return typeof val === 'function' || val === undefined;\n      },\n      callbackPeriod: () => {\n        const val = options.callbackPeriod;\n        return typeof val === 'number' && val > 0;\n      },\n      timeout: () => {\n        const val = options.timeout;\n        return typeof val === 'number' && val > 0;\n      },\n    };\n    for (const p in validations) {\n      const v = (options as unknown) as { [v: string]: string };\n      if (!validations[p]()) {\n        throw new Error(\n          `[${p}, ${v[p]}] is out of normal training range, your network will probably not train.`\n        );\n      }\n    }\n  }\n\n  setLogMethod(log: Log | undefined | boolean): void {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      this.trainOpts.log = console.log;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  protected prepTraining(\n    data: Array<Value | IRNNDatum>,\n    options: Partial<IRNNTrainingOptions>\n  ): IRNNPreppedTrainingData {\n    this.updateTrainingOptions(options);\n    const preparedData = this.options.dataFormatter.format(data);\n    const endTime = Date.now() + (this.trainOpts.timeout ?? 0);\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized();\n\n    return {\n      preparedData,\n      status,\n      endTime,\n    };\n  }\n\n  train(\n    data: Array<Value | IRNNDatum>,\n    trainOpts: Partial<IRNNTrainingOptions> = {}\n  ): IRNNStatus {\n    this.trainOpts = trainOpts = {\n      ...trainDefaults,\n      ...trainOpts,\n    };\n    const {\n      iterations,\n      errorThresh,\n      logPeriod,\n      callback,\n      callbackPeriod,\n    } = this.trainOpts;\n    const log = trainOpts.log === true ? console.log : trainOpts.log;\n    let error = Infinity;\n    let i;\n\n    let inputs: number[][];\n    if (this.options?.dataFormatter) {\n      inputs = this.options.dataFormatter.format(data);\n    } else if (\n      Array.isArray(data) &&\n      Array.isArray(data[0]) &&\n      typeof (data as number[][])[0][0] === 'number'\n    ) {\n      inputs = data as number[][];\n    } else {\n      throw new Error('training not in expected format of number[][]');\n    }\n\n    this.verifyIsInitialized();\n\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < inputs.length; j++) {\n        const err = this.trainPattern(inputs[j], true);\n        sum += err;\n      }\n      error = sum / data.length;\n\n      if (isNaN(error)) {\n        throw new Error(\n          'Network error rate is unexpected NaN, check network configurations and try again. Most probably input format is not correct or training data is not enough. '\n        );\n      }\n      if (log && i % logPeriod === 0) {\n        log(`iterations: ${i}, training error: ${error}`);\n      }\n      if (callback && i % callbackPeriod === 0) {\n        callback({ error, iterations: i });\n      }\n    }\n\n    return {\n      error,\n      iterations: i,\n    };\n  }\n\n  addFormat(data: Value): void {}\n\n  formatData(data: Value[]): number[][] {\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      result.push(this.options.dataFormatter.formatDataIn(data[i]));\n    }\n    return result;\n  }\n\n  toJSON(): IRNNJSON {\n    if (!this.model.isInitialized) {\n      this.initialize();\n    }\n    const { model, options } = this;\n\n    return {\n      type: this.constructor.name,\n      options: { ...options, dataFormatter: options.dataFormatter.toJSON() },\n      trainOpts: {\n        ...this.trainOpts,\n        timeout:\n          this.trainOpts.timeout === Infinity\n            ? 'Infinity'\n            : this.trainOpts.timeout,\n      },\n      input: model.input.toJSON(),\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        const layers: { [index: string]: IMatrixJSON } = {};\n        for (const p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: this.model.outputConnector.toJSON(),\n      output: this.model.output.toJSON(),\n    };\n  }\n\n  fromJSON(json: IRNNJSON): this {\n    const { options } = json;\n    const allMatrices = [];\n    const input = Matrix.fromJSON(json.input);\n    allMatrices.push(input);\n    const hiddenLayers: IRNNHiddenLayerModel[] = [];\n\n    json.hiddenLayers.forEach((hiddenLayer) => {\n      const layers: { [index: string]: Matrix } = {};\n      for (const p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers as IRNNHiddenLayerModel);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    if (options.dataFormatter) {\n      this.options = {\n        ...defaults(),\n        ...options,\n        dataFormatter: DataFormatter.fromJSON(options.dataFormatter),\n      };\n    } else {\n      this.options = {\n        ...defaults(),\n        ...options,\n        dataFormatter: new DataFormatter(),\n      };\n    }\n\n    this.model = Object.seal({\n      isInitialized: true,\n      input,\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    });\n    this.initialLayerInputs = this.options.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n    this.bindEquation();\n    return this;\n  }\n\n  toFunction(cb?: (src: string) => string): RNNFunction {\n    const { model } = this;\n    const { equations } = this.model;\n    const equation = equations[1];\n    const { states } = equation;\n    const jsonString = JSON.stringify(this.toJSON());\n\n    function previousConnectionIndex(m: Matrix): number {\n      const connection = model.equationConnections[0];\n      const { states } = equations[0];\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixOrigin(m: Matrix, stateIndex: number): string {\n      for (let i = 0, max = states.length; i < max; i++) {\n        const state = states[i];\n\n        if (i === stateIndex) {\n          const j = previousConnectionIndex(m);\n          if (j > -1 && (m === state.left || m === state.right)) {\n            return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${m.rows}, ${m.columns})`;\n          }\n          return `new Matrix(${m.rows}, ${m.columns})`;\n        }\n\n        if (m === state.product) return `states[${i}].product`;\n        if (m === state.right) return `states[${i}].right`;\n        if (m === state.left) return `states[${i}].left`;\n      }\n      return '';\n    }\n\n    function matrixToString(m: Matrix, stateIndex: number): string {\n      if (!m || !m.rows || !m.columns) return 'null';\n\n      if (m === model.input) return `json.input`;\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        const hiddenLayer = model.hiddenLayers[i];\n        for (const p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${i}].${p}`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function toInner(fnString: string): string {\n      // crude, but should be sufficient for now\n      // function() { body }\n      const fnParts = fnString.toString().split('{');\n      fnParts.shift();\n      // body }\n      const fnBodyString = fnParts.join('{');\n      const fnBodyParts = fnBodyString.split('}');\n      fnBodyParts.pop();\n      // body\n      return fnBodyParts\n        .join('}')\n        .split('\\n')\n        .join('\\n        ')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName: string): string {\n      return `src/recurrent/matrix/${fnName.replace(/[A-Z]/g, function (value) {\n        return `-${value.toLowerCase()}`;\n      })}.js`;\n    }\n\n    const statesRaw = [];\n    const usedFunctionNames: { [methodName: string]: boolean } = {};\n    const innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      const state = states[i];\n      statesRaw.push(`states[${i}] = {\n      name: '${state.forwardFn.name}',\n      left: ${state.left ? matrixToString(state.left, i) : 'undefined'},\n      right: ${state.right ? matrixToString(state.right, i) : 'undefined'},\n      product: ${matrixToString(state.product, i)}\n    }`);\n\n      const fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        innerFunctionsSwitch.push(\n          `        case '${fnName}': //compiled from ${fileName(fnName)}\n          ${toInner(state.forwardFn.toString())}\n          break;`\n        );\n      }\n    }\n\n    const src = `\n  if (typeof rawInput === 'undefined') rawInput = [];\n  if (typeof isSampleI === 'undefined') isSampleI = false;\n  if (typeof temperature === 'undefined') temperature = 1;\n  var json = ${jsonString};\n  ${\n    this.options.dataFormatter\n      ? `${this.options.dataFormatter.toFunctionString()};\n  Object.assign(dataFormatter, json.options.dataFormatter);`\n      : ''\n  }\n  ${\n    this.options.dataFormatter &&\n    typeof this.options.dataFormatter.formatDataIn === 'function'\n      ? `const formatDataIn = function (input, output) { ${toInner(\n          this.options.dataFormatter.formatDataIn.toString()\n        )} }.bind(dataFormatter);`\n      : ''\n  }\n  ${\n    this.options.dataFormatter !== null &&\n    typeof this.options.dataFormatter.formatDataOut === 'function'\n      ? `const formatDataOut = function formatDataOut(input, output) { ${toInner(\n          this.options.dataFormatter.formatDataOut.toString()\n        )} }.bind(dataFormatter);`\n      : ''\n  }\n  var maxPredictionLength =\n    ${this.options.maxPredictionLength} +\n    rawInput.length +\n    ${\n      this.options.dataFormatter\n        ? this.options.dataFormatter.specialIndexes.length\n        : 0\n    };\n  var input = ${\n    this.options.dataFormatter &&\n    typeof this.options.dataFormatter.formatDataIn === 'function'\n      ? 'formatDataIn(rawInput)'\n      : 'rawInput'\n  };\n  var _i = 0;\n  var output = [];\n  var states = [];\n  var prevStates;\n  while (true) {\n    var previousIndex = (_i === 0\n        ? 0\n        : _i < input.length\n          ? input[_i - 1] + 1\n          : output[_i - 1])\n          ;\n    var rowPluckIndex = previousIndex;\n    prevStates = states;\n    states = [];\n    ${statesRaw.join(';\\n    ')};\n    for (var stateIndex = 0, stateMax = ${\n      statesRaw.length\n    }; stateIndex < stateMax; stateIndex++) {\n      var state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      switch (state.name) {\n${innerFunctionsSwitch.join('\\n')}\n      }\n    }\n\n    var logProbabilities = state.product;\n    if (temperature !== 1 && isSampleI) {\n      for (var q = 0, nq = logProbabilities.weights.length; q < nq; q++) {\n        logProbabilities.weights[q] /= temperature;\n      }\n    }\n\n    var probs = softmax(logProbabilities);\n    var nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\n\n    _i++;\n    if (nextIndex === 0) {\n      break;\n    }\n    if (_i >= maxPredictionLength) {\n      break;\n    }\n\n    output.push(nextIndex);\n  }\n  ${\n    this.options.dataFormatter &&\n    typeof this.options.dataFormatter.formatDataOut === 'function'\n      ? 'return formatDataOut(input, output.slice(input.length).map(function(value) { return value - 1; }))'\n      : 'return output.slice(input.length).map(function(value) { return value - 1; })'\n  };\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${zeros.toString()}\n  ${softmax.toString().replace('_1.Matrix', 'Matrix')}\n  ${randomFloat.toString()}\n  ${sampleI.toString()}\n  ${maxI.toString()}`;\n    // eslint-disable-next-line\n    return new Function(\n      'rawInput',\n      'isSampleI',\n      'temperature',\n      cb ? cb(src) : src\n    ) as RNNFunction;\n  }\n\n  trainPattern(input: number[], logErrorRate?: boolean): number {\n    const error = this.trainInput(input);\n    this.backpropagate(input);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return error;\n    }\n    return 0;\n  }\n}\n\nexport interface IRNNJSON {\n  type: string;\n  options: IRNNJSONOptions;\n  trainOpts: IRNNJSONTrainOptions;\n  input: IMatrixJSON;\n  hiddenLayers: Array<{ [index: string]: IMatrixJSON }>;\n  outputConnector: IMatrixJSON;\n  output: IMatrixJSON;\n}\n\nexport function last<T>(values: T[]): T {\n  return values[values.length - 1];\n}\n\nexport type RNNFunction = (\n  rawInput?: Array<Value | IRNNDatum> | string,\n  isSampleI?: boolean,\n  temperature?: number\n) => string;\n","import { Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { RandomMatrix } from './matrix/random-matrix';\nimport { IRNNHiddenLayer, RNN } from './rnn';\n\nexport interface IGRUHiddenLayer extends IRNNHiddenLayer {\n  updateGateInputMatrix: RandomMatrix;\n  updateGateHiddenMatrix: RandomMatrix;\n  updateGateBias: Matrix;\n  resetGateInputMatrix: RandomMatrix;\n  resetGateHiddenMatrix: RandomMatrix;\n  resetGateBias: Matrix;\n  cellWriteInputMatrix: RandomMatrix;\n  cellWriteHiddenMatrix: RandomMatrix;\n  cellWriteBias: Matrix;\n}\n\nexport class GRU extends RNN {\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return getGRUHiddenLayer(hiddenSize, prevSize);\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    return getGRUEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer as IGRUHiddenLayer\n    );\n  }\n}\n\nexport function getGRUHiddenLayer(\n  hiddenSize: number,\n  prevSize: number\n): IGRUHiddenLayer {\n  return {\n    // update Gate\n    // wzxh\n    updateGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wzhh\n    updateGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bz\n    updateGateBias: new Matrix(hiddenSize, 1),\n    // reset Gate\n    // wrxh\n    resetGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wrhh\n    resetGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // br\n    resetGateBias: new Matrix(hiddenSize, 1),\n    // cell write parameters\n    // wcxh\n    cellWriteInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wchh\n    cellWriteHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n    cellWriteBias: new Matrix(hiddenSize, 1),\n  };\n}\n\nexport function getGRUEquation(\n  equation: Equation,\n  inputMatrix: Matrix,\n  previousResult: Matrix,\n  hiddenLayer: IGRUHiddenLayer\n): Matrix {\n  if (\n    !hiddenLayer.updateGateInputMatrix ||\n    !hiddenLayer.updateGateHiddenMatrix ||\n    !hiddenLayer.updateGateBias ||\n    !hiddenLayer.resetGateInputMatrix ||\n    !hiddenLayer.resetGateHiddenMatrix ||\n    !hiddenLayer.resetGateBias ||\n    !hiddenLayer.cellWriteInputMatrix ||\n    !hiddenLayer.cellWriteHiddenMatrix ||\n    !hiddenLayer.cellWriteBias\n  ) {\n    throw new Error('hiddenLayer does not have expected properties');\n  }\n\n  const sigmoid = equation.sigmoid.bind(equation);\n  const add = equation.add.bind(equation);\n  const multiply = equation.multiply.bind(equation);\n  const multiplyElement = equation.multiplyElement.bind(equation);\n  const tanh = equation.tanh.bind(equation);\n  const allOnes = equation.allOnes.bind(equation);\n  const cloneNegative = equation.cloneNegative.bind(equation);\n\n  // update gate\n  const updateGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.updateGateInputMatrix, inputMatrix),\n        multiply(hiddenLayer.updateGateHiddenMatrix, previousResult)\n      ),\n      hiddenLayer.updateGateBias\n    )\n  );\n\n  // reset gate\n  const resetGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.resetGateInputMatrix, inputMatrix),\n        multiply(hiddenLayer.resetGateHiddenMatrix, previousResult)\n      ),\n      hiddenLayer.resetGateBias\n    )\n  );\n\n  // cell\n  const cell = tanh(\n    add(\n      add(\n        multiply(hiddenLayer.cellWriteInputMatrix, inputMatrix),\n        multiply(\n          hiddenLayer.cellWriteHiddenMatrix,\n          multiplyElement(resetGate, previousResult)\n        )\n      ),\n      hiddenLayer.cellWriteBias\n    )\n  );\n\n  // compute hidden state as gated, saturated cell activations\n  // negate updateGate\n  return add(\n    multiplyElement(\n      add(\n        allOnes(updateGate.rows, updateGate.columns),\n        cloneNegative(updateGate)\n      ),\n      cell\n    ),\n    multiplyElement(previousResult, updateGate)\n  );\n}\n","export class ArrayLookupTable {\n  length = 0;\n  table: { [key: string]: number } = {};\n\n  constructor(\n    data: Array<{\n      input: Array<Record<string, number>>;\n      output: Array<Record<string, number>>;\n    }>,\n    public prop: 'input' | 'output'\n  ) {\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      const ioValue = datum[prop];\n      for (let j = 0; j < ioValue.length; j++) {\n        const value = ioValue[j];\n        for (const p in value) {\n          if (!value.hasOwnProperty(p)) continue;\n          if (this.table.hasOwnProperty(p)) continue;\n          this.table[p] = this.length++;\n        }\n      }\n    }\n  }\n}\n","import {\n  FormattableData,\n  InputOutputValue,\n  INumberArray,\n  INumberHash,\n  ITrainingDatum,\n  lookup,\n} from '../lookup';\nimport { ArrayLookupTable } from '../utilities/array-lookup-table';\nimport {\n  arraysToFloat32Arrays,\n  arrayToFloat32Arrays,\n  inputOutputArraysToFloat32Arrays,\n  inputOutputArrayToFloat32Arrays,\n  inputOutputObjectsToFloat32Arrays,\n  inputOutputObjectToFloat32Arrays,\n  objectToFloat32Array,\n  objectToFloat32Arrays,\n} from '../utilities/cast';\nimport { LookupTable } from '../utilities/lookup-table';\nimport { randomFloat } from '../utilities/random';\nimport { IMatrixJSON, Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { maxI } from './matrix/max-i';\nimport { RandomMatrix } from './matrix/random-matrix';\nimport { sampleI } from './matrix/sample-i';\nimport { softmax } from './matrix/softmax';\nimport {\n  defaults as rnnDefaults,\n  IRNNHiddenLayer,\n  IRNNHiddenLayerModel,\n  IRNNOptions,\n  IRNNStatus,\n  IRNNTrainingOptions,\n  last,\n  RNN,\n  trainDefaults as rnnTrainDefaults,\n} from './rnn';\n\nexport type ValuesOf<\n  T extends InputOutputValue | InputOutputValue[]\n> = T[number];\n\nexport interface IRNNTimeStepOptions extends IRNNTimeStepJSONOptions {\n  inputSize: number;\n  inputRange: number;\n  hiddenLayers: number[];\n  outputSize: number;\n  decayRate: number;\n  smoothEps: number;\n  regc: number;\n  clipval: number;\n  maxPredictionLength: number;\n  json?: IRNNTimeStepJSON;\n}\n\nexport interface IRNNTimeStepJSONOptions {\n  inputSize: number;\n  inputRange: number;\n  hiddenLayers: number[];\n  outputSize: number;\n  decayRate: number;\n  smoothEps: number;\n  regc: number;\n  clipval: number;\n  maxPredictionLength: number;\n}\n\nexport interface IRNNTimeStepJSON {\n  type: string;\n  options: IRNNTimeStepJSONOptions;\n  hiddenLayers: Array<{ [index: string]: IMatrixJSON }>;\n  outputConnector: IMatrixJSON;\n  output: IMatrixJSON;\n  inputLookup: INumberHash | null;\n  inputLookupLength: number;\n  outputLookup: INumberHash | null;\n  outputLookupLength: number;\n}\n\nexport interface IMisclass {\n  value: FormattableData;\n  actual: FormattableData;\n}\n\nexport interface ITestResults {\n  misclasses: IMisclass[];\n  error: number;\n  total: number;\n}\n\nexport interface IRNNTimeStepModel {\n  isInitialized: boolean;\n  hiddenLayers: IRNNHiddenLayer[];\n  output: Matrix;\n  equations: Equation[];\n  allMatrices: Matrix[];\n  equationConnections: Matrix[][];\n  outputConnector: RandomMatrix | Matrix;\n}\n\nexport const defaults = (): IRNNOptions => {\n  return {\n    ...rnnDefaults(),\n    inputSize: 1,\n    hiddenLayers: [20],\n    outputSize: 1,\n    inputRange: 0,\n  };\n};\n\nexport class RNNTimeStep extends RNN {\n  inputLookupLength = 0;\n  inputLookup: INumberHash | null = null;\n  outputLookup: INumberHash | null = null;\n  outputLookupLength = 0;\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  model: IRNNTimeStepModel = Object.seal({\n    isInitialized: false,\n    hiddenLayers: [],\n    output: new Matrix(0, 0),\n    equations: [],\n    allMatrices: [],\n    equationConnections: [],\n    outputConnector: new RandomMatrix(0, 0, 0.08),\n  });\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  options: IRNNTimeStepOptions = defaults();\n  constructor(\n    options: Partial<IRNNTimeStepOptions & IRNNTrainingOptions> = {}\n  ) {\n    super();\n    this.options = { ...this.options, ...options };\n    this.updateTrainingOptions({\n      ...trainDefaults,\n      ...options,\n    });\n\n    if (options.json) {\n      this.fromJSON(options.json);\n    }\n  }\n\n  createInputMatrix(): RandomMatrix {\n    throw new Error('Input Matrices do not exist on RNNTimeStep');\n  }\n\n  createOutputMatrices(): { outputConnector: RandomMatrix; output: Matrix } {\n    const { outputSize } = this.options;\n    const lastHiddenSize = last(this.options.hiddenLayers);\n\n    // whd\n    const outputConnector = new RandomMatrix(outputSize, lastHiddenSize, 0.08);\n    // bd\n    const output = new RandomMatrix(outputSize, 1, 0.08);\n    return { output, outputConnector };\n  }\n\n  bindEquation(): void {\n    const { model, options } = this;\n    const { hiddenLayers, inputSize } = options;\n    const layers = model.hiddenLayers;\n    const equation = new Equation();\n    const outputs = [];\n    const equationConnection =\n      model.equationConnections.length > 0\n        ? model.equationConnections[model.equationConnections.length - 1]\n        : this.initialLayerInputs;\n    // 0 index\n    let output = this.getEquation(\n      equation,\n      equation.input(new Matrix(inputSize, 1)),\n      equationConnection[0],\n      layers[0]\n    );\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n      output = this.getEquation(\n        equation,\n        output,\n        equationConnection[i],\n        layers[i]\n      );\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(\n      equation.multiply(model.outputConnector, output),\n      model.output\n    );\n    model.equations.push(equation);\n  }\n\n  initialize(): void {\n    this.model = this.mapModel();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  mapModel(): IRNNTimeStepModel {\n    const allMatrices: Matrix[] = [];\n    this.initialLayerInputs = this.options.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n\n    const hiddenLayers = this.createHiddenLayers();\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      const hiddenMatrix = hiddenLayers[i];\n      for (const property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    const { outputConnector, output } = this.createOutputMatrices();\n\n    allMatrices.push(outputConnector);\n    allMatrices.push(output);\n    return Object.seal({\n      isInitialized: true,\n      hiddenLayers,\n      output,\n      equations: [],\n      allMatrices,\n      equationConnections: [],\n      outputConnector,\n    });\n  }\n\n  backpropagate(): void {\n    for (let i = this.model.equations.length - 1; i > -1; i--) {\n      this.model.equations[i].backpropagate();\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  run<InputType extends InputOutputValue | InputOutputValue[]>(\n    rawInput: InputType\n  ): ValuesOf<InputType> {\n    const shape = lookup.dataShape(rawInput).join(',');\n    switch (shape) {\n      case 'array,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runArray(rawInput as Float32Array);\n      case 'array,array,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runArrayOfArray(rawInput as Float32Array[]);\n      case 'object,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runObject(rawInput as INumberHash); // Backward compatibility, will be result of `unknown` and need casting.  Better to just use net.runObject() directly\n      case 'array,object,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runArrayOfObject(rawInput as INumberHash[]);\n      default:\n        throw new Error(`Unrecognized data shape ${shape}`);\n    }\n  }\n\n  forecast<InputType extends InputOutputValue | InputOutputValue[]>(\n    rawInput: InputType,\n    count = 1\n  ): InputType {\n    const shape = lookup.dataShape(rawInput).join(',');\n    switch (shape) {\n      case 'array,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.forecastArray(rawInput as Float32Array, count);\n      case 'array,array,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.forecastArrayOfArray(rawInput as Float32Array[], count);\n      case 'object,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runObject(rawInput as INumberHash);\n      case 'array,object,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.forecastArrayOfObject(rawInput as INumberHash[], count);\n      default:\n        throw new Error(`Unrecognized data shape ${shape}`);\n    }\n  }\n\n  forecastArray(input: Float32Array, count = 1): Float32Array {\n    this.checkRunnable();\n    const { model } = this;\n    const { equations } = model;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    if (this.options.inputSize === 1) {\n      for (let i = 0; i < input.length; i++) {\n        lastOutput = equations[equationIndex++].runInput(\n          Float32Array.from([input[i]])\n        );\n      }\n    } else {\n      for (let i = 0; i < input.length; i++) {\n        lastOutput = equations[equationIndex++].runInput(Float32Array.from([]));\n      }\n    }\n    if (!lastOutput) {\n      throw new Error('lastOutput not set');\n    }\n    const result = [lastOutput.weights[0]];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights[0]);\n    }\n    this.end();\n    return Float32Array.from(result);\n  }\n\n  forecastArrayOfArray(input: Float32Array[], count = 1): Float32Array[] {\n    this.checkRunnable();\n    const { model } = this;\n    const { equations } = model;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput(input[i]);\n    }\n    if (!lastOutput) {\n      throw new Error('lastOutput not set');\n    }\n    const result = [Float32Array.from(lastOutput.weights)];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(Float32Array.from(lastOutput.weights.slice(0)));\n    }\n    this.end();\n    return result;\n  }\n\n  forecastArrayOfObject(input: INumberHash[], count = 1): INumberHash[] {\n    if (!this.inputLookup) {\n      throw new Error('this.inputLookup not set');\n    }\n    if (!this.outputLookup) {\n      throw new Error('this.outputLookup not set');\n    }\n    const formattedData = input.map((value) =>\n      lookup.toArray(\n        this.inputLookup as INumberHash,\n        value,\n        this.inputLookupLength\n      )\n    );\n    return this.forecastArrayOfArray(formattedData, count).map((value) =>\n      lookup.toObject(this.outputLookup as INumberHash, value)\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  train(\n    data: FormattableData[],\n    trainOpts: Partial<IRNNTrainingOptions> = {}\n  ): IRNNStatus {\n    this.trainOpts = trainOpts = {\n      ...rnnTrainDefaults,\n      ...trainOpts,\n    };\n    // Don't destructure here because this.setSize() can reset this.options.\n    if (this.options.inputSize === 1 && this.options.outputSize === 1) {\n      this.setSize(data);\n    }\n    this.verifySize();\n\n    const formattedData = this.formatData(data);\n    let error = Infinity;\n    let i;\n\n    this.verifyIsInitialized();\n    const {\n      iterations,\n      errorThresh,\n      logPeriod,\n      callback,\n      callbackPeriod,\n    } = this.trainOpts;\n    const log = trainOpts.log === true ? console.log : trainOpts.log;\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < formattedData.length; j++) {\n        const err = this.trainPattern(formattedData[j], true);\n        sum += err;\n      }\n      error = sum / formattedData.length;\n\n      if (isNaN(error))\n        throw new Error(\n          'Network error rate is unexpected NaN, check network configurations and try again. Most probably input format is not correct or training data is not enough. '\n        );\n      if (log && i % logPeriod === 0) {\n        log(`iterations: ${i}, training error: ${error}`);\n      }\n      if (callback && i % callbackPeriod === 0) {\n        callback({ error, iterations: i });\n      }\n    }\n\n    return {\n      error,\n      iterations: i,\n    };\n  }\n\n  trainArrayOfArray(input: Float32Array[]): number {\n    if (input.length < 2) {\n      throw new Error('input must be an array of 2 or more');\n    }\n    const { equations } = this.model;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  trainPattern(input: Float32Array[], logErrorRate?: boolean): number {\n    const error = this.trainArrayOfArray(input);\n    this.backpropagate();\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return error;\n    }\n    return 0;\n  }\n\n  setSize(data: FormattableData[]): void {\n    let size = 0;\n    const dataShape = lookup.dataShape(data).join(',');\n    switch (dataShape) {\n      case 'array,array,number':\n      case 'array,object,number':\n      case 'array,datum,array,number':\n      case 'array,datum,object,number':\n        size = 1;\n        // probably 1\n        break;\n      case 'array,array,array,number':\n        size = (data as number[][][])[0][0].length;\n        break;\n      case 'array,array,object,number':\n        // inputs and outputs should match\n        size = Object.keys(lookup.toTable2D(data as INumberHash[][])).length;\n        break;\n      case 'array,datum,array,array,number':\n        size = ((data as unknown) as Array<{\n          [key: string]: number[][];\n        }>)[0].input[0].length;\n        break;\n      case 'array,datum,array,object,number':\n        size = Object.keys(\n          lookup.toInputTable2D(\n            data as Array<{ input: Array<{ [key: string]: number }> }>\n          )\n        ).length;\n        break;\n      default:\n        throw new Error('unknown data shape or configuration');\n    }\n    this.options = Object.seal({\n      ...this.options,\n      inputSize: size,\n      outputSize: size,\n    });\n  }\n\n  verifySize(): void {\n    if (this.options.inputSize || this.options.outputSize) {\n      if (this.options.inputSize !== this.options.outputSize) {\n        throw new Error('manually set inputSize and outputSize mismatch');\n      }\n    }\n  }\n\n  runArray(input: Float32Array): number {\n    this.checkRunnable();\n    const { equations } = this.model;\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[i].runInput(new Float32Array([input[i]]));\n    }\n    this.end();\n    return (lastOutput as Matrix).weights[0];\n  }\n\n  runArrayOfArray(input: Float32Array[]): Float32Array {\n    this.checkRunnable();\n    const { model } = this;\n    const { equations } = model;\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      const outputMatrix = equations[i].runInput(input[i]);\n      lastOutput = outputMatrix.weights;\n    }\n    this.end();\n    return lastOutput ?? Float32Array.from([]);\n  }\n\n  runObject(input: INumberHash): INumberHash {\n    if (!this.inputLookup) {\n      throw new Error('this.inputLookup not set');\n    }\n    if (!this.outputLookup) {\n      throw new Error('this.outputLookup not set');\n    }\n    if (!this.outputLookupLength) {\n      throw new Error('this.outputLookupLength not set');\n    }\n    if (this.inputLookup === this.outputLookup) {\n      const inputArray = lookup.toArrayShort(this.inputLookup, input);\n      return lookup.toObjectPartial(\n        this.outputLookup,\n        this.forecastArray(\n          inputArray,\n          this.outputLookupLength - inputArray.length\n        ),\n        inputArray.length\n      );\n    }\n    return lookup.toObject(\n      this.outputLookup,\n      this.forecastArray(\n        lookup.toArray(this.inputLookup, input, this.inputLookupLength),\n        this.outputLookupLength\n      )\n    );\n  }\n\n  runArrayOfObject(input: INumberHash[]): INumberHash {\n    if (this.inputLookup === null) {\n      throw new Error('this.inputLookup not set');\n    }\n    if (this.outputLookup === null) {\n      throw new Error('this.outputLookup not set');\n    }\n    const formattedInput = input.map((value) =>\n      lookup.toArray(\n        this.inputLookup as INumberHash,\n        value,\n        this.inputLookupLength\n      )\n    );\n    return this.forecastArrayOfArray(formattedInput, 1).map((value) =>\n      lookup.toObject(this.outputLookup as INumberHash, value)\n    )[0];\n  }\n\n  runArrayOfObjectOfArray(input: INumberHash[]): INumberHash {\n    if (!this.inputLookup) {\n      throw new Error('this.inputLookup not set');\n    }\n    if (!this.outputLookup) {\n      throw new Error('this.outputLookup not set');\n    }\n    return lookup.toObject(\n      this.outputLookup,\n      this.runArrayOfArray(\n        lookup.toArrays(this.inputLookup, input, this.inputLookupLength)\n      )\n    );\n  }\n\n  end(): void {\n    this.model.equations[this.model.equations.length - 1].runInput(\n      new Float32Array(this.options.outputSize)\n    );\n  }\n\n  requireInputOutputOfOne(): void {\n    if (this.options.inputSize !== 1) {\n      throw new Error('inputSize must be 1 for this data size');\n    }\n    if (this.options.outputSize !== 1) {\n      throw new Error('outputSize must be 1 for this data size');\n    }\n  }\n\n  // Handles data shape of 'array,number'\n  formatArray(data: number[]): Float32Array[][] {\n    const result = [];\n    this.requireInputOutputOfOne();\n    for (let i = 0; i < data.length; i++) {\n      result.push(Float32Array.from([data[i]]));\n    }\n    return [result];\n  }\n\n  // Handles data shape of 'array,array,number'\n  formatArrayOfArray(data: number[][]): Float32Array[][] {\n    const result = [];\n    const { inputSize, outputSize } = this.options;\n    if (inputSize === 1 && outputSize === 1) {\n      for (let i = 0; i < data.length; i++) {\n        result.push(arrayToFloat32Arrays(data[i]));\n      }\n      return result;\n    }\n    if (inputSize !== data[0].length) {\n      throw new Error('inputSize must match data input size');\n    }\n    if (outputSize !== data[0].length) {\n      throw new Error('outputSize must match data output size');\n    }\n    for (let i = 0; i < data.length; i++) {\n      result.push(Float32Array.from(data[i]));\n    }\n    return [result];\n  }\n\n  // Handles data shape of 'array,object,number'\n  formatArrayOfObject(data: INumberHash[]): Float32Array[][] {\n    this.requireInputOutputOfOne();\n    if (!this.inputLookup) {\n      const lookupTable = new LookupTable(data);\n      this.inputLookup = this.outputLookup = lookupTable.table;\n      this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      result.push(objectToFloat32Arrays(data[i]));\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,object,number' when this.options.inputSize > 1\n  formatArrayOfObjectMulti(data: INumberHash[]): Float32Array[][] {\n    if (!this.inputLookup) {\n      const lookupTable = new LookupTable(data);\n      this.inputLookup = this.outputLookup = lookupTable.table;\n      this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      result.push([\n        objectToFloat32Array(data[i], this.inputLookup, this.inputLookupLength),\n      ]);\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,datum,array,number'\n  formatArrayOfDatumOfArray(data: ITrainingDatum[]): Float32Array[][] {\n    const result = [];\n    this.requireInputOutputOfOne();\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      result.push(\n        inputOutputArrayToFloat32Arrays(\n          datum.input as number[],\n          datum.output as number[]\n        )\n      );\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,datum,object,number'\n  formatArrayOfDatumOfObject(data: ITrainingDatum[]): Float32Array[][] {\n    this.requireInputOutputOfOne();\n    if (!this.inputLookup) {\n      const inputLookup = new LookupTable(data, 'input');\n      this.inputLookup = inputLookup.table;\n      this.inputLookupLength = inputLookup.length;\n    }\n    if (!this.outputLookup) {\n      const outputLookup = new LookupTable(data, 'output');\n      this.outputLookup = outputLookup.table;\n      this.outputLookupLength = outputLookup.length;\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      result.push(\n        inputOutputObjectToFloat32Arrays(\n          datum.input as INumberHash,\n          datum.output as INumberHash\n        )\n      );\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,array,array,number'\n  formatArrayOfArrayOfArray(data: number[][][]): Float32Array[][] {\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      result.push(arraysToFloat32Arrays(data[i]));\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,array,object,number'\n  formatArrayOfArrayOfObject(data: INumberHash[][]): Float32Array[][] {\n    if (!this.inputLookup) {\n      const lookupTable = new LookupTable(data);\n      this.inputLookup = this.outputLookup = lookupTable.table;\n      this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      const array = [];\n      for (let j = 0; j < data[i].length; j++) {\n        array.push(\n          objectToFloat32Array(\n            data[i][j],\n            this.inputLookup,\n            this.inputLookupLength\n          )\n        );\n      }\n      result.push(array);\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,datum,array,array,number'\n  formatArrayOfDatumOfArrayOfArray(data: ITrainingDatum[]): Float32Array[][] {\n    const result = [];\n    const { inputSize, outputSize } = this.options;\n    if (inputSize !== (data[0].input as INumberArray[][])[0].length) {\n      throw new Error('inputSize must match data input size');\n    }\n    if (outputSize !== (data[0].output as INumberArray[][])[0].length) {\n      throw new Error('outputSize must match data output size');\n    }\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      result.push(\n        inputOutputArraysToFloat32Arrays(\n          datum.input as number[][],\n          datum.output as number[][]\n        )\n      );\n    }\n    return result;\n  }\n\n  // 'Handles data shape of array,datum,array,object,number'\n  formatArrayOfDatumOfArrayOfObject(\n    data: Array<{\n      input: Array<Record<string, number>>;\n      output: Array<Record<string, number>>;\n    }>\n  ): Float32Array[][] {\n    if (!this.inputLookup) {\n      const inputLookup = new ArrayLookupTable(data, 'input');\n      this.inputLookup = inputLookup.table;\n      this.inputLookupLength = inputLookup.length;\n    }\n    if (!this.outputLookup) {\n      const outputLookup = new ArrayLookupTable(data, 'output');\n      this.outputLookup = outputLookup.table;\n      this.outputLookupLength = outputLookup.length;\n    }\n    if (!this.outputLookupLength) {\n      throw new Error('this.outputLookupLength not set to usable number');\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      result.push(\n        inputOutputObjectsToFloat32Arrays(\n          datum.input,\n          datum.output,\n          this.inputLookup,\n          this.outputLookup,\n          this.inputLookupLength,\n          this.outputLookupLength\n        )\n      );\n    }\n    return result;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  formatData(data: FormattableData[]): Float32Array[][] {\n    const dataShape = lookup.dataShape(data).join(',');\n    switch (dataShape) {\n      case 'array,number':\n        return this.formatArray(data as number[]);\n      case 'array,array,number':\n        return this.formatArrayOfArray(data as number[][]);\n      case 'array,object,number':\n        if (this.options.inputSize === 1) {\n          return this.formatArrayOfObject(data as INumberHash[]);\n        } else {\n          return this.formatArrayOfObjectMulti(data as INumberHash[]);\n        }\n      case 'array,datum,array,number':\n        return this.formatArrayOfDatumOfArray(data as ITrainingDatum[]);\n      case 'array,datum,object,number':\n        return this.formatArrayOfDatumOfObject(data as ITrainingDatum[]);\n      case 'array,array,array,number':\n        return this.formatArrayOfArrayOfArray(data as number[][][]);\n      case 'array,array,object,number':\n        return this.formatArrayOfArrayOfObject(data as INumberHash[][]);\n      case 'array,datum,array,array,number':\n        return this.formatArrayOfDatumOfArrayOfArray(data as ITrainingDatum[]);\n      case 'array,datum,array,object,number':\n        return this.formatArrayOfDatumOfArrayOfObject(\n          data as Array<{\n            input: Array<Record<string, number>>;\n            output: Array<Record<string, number>>;\n          }>\n        );\n      default:\n        throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  test(data: FormattableData[]): ITestResults {\n    // for classification problems\n    const misclasses = [];\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let errorSum = 0;\n    const formattedData = this.formatData(data);\n    for (let i = 0; i < formattedData.length; i++) {\n      const input = formattedData[i];\n      const output = this.run(input.splice(0, input.length - 1));\n      const target = input[input.length - 1];\n      let errors = 0;\n      let errorCount = 0;\n      for (let j = 0; j < output.length; j++) {\n        errorCount++;\n        const error = target[j] - output[j];\n        // mse\n        errors += error * error;\n      }\n      errorSum += errors / errorCount;\n      const errorsAbs = Math.abs(errors);\n      if (errorsAbs > this.trainOpts.errorThresh) {\n        const misclass = (data as number[][][])[i];\n        misclasses.push({\n          value: misclass,\n          actual: output,\n        });\n      }\n    }\n    return {\n      error: errorSum / formattedData.length,\n      misclasses,\n      total: formattedData.length,\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  addFormat(value: FormattableData): void {\n    const dataShape = lookup.dataShape(value).join(',');\n    switch (dataShape) {\n      case 'array,array,number':\n      case 'datum,array,array,number':\n      case 'array,number':\n      case 'datum,array,number':\n        return;\n      case 'datum,object,number': {\n        this.inputLookup = lookup.addKeys(\n          (value as ITrainingDatum).input as INumberHash,\n          this.inputLookup ?? {}\n        );\n        if (this.inputLookup) {\n          this.inputLookupLength = Object.keys(this.inputLookup).length;\n        }\n        this.outputLookup = lookup.addKeys(\n          (value as ITrainingDatum).output as INumberHash,\n          this.outputLookup ?? {}\n        );\n        if (this.outputLookup) {\n          this.outputLookupLength = Object.keys(this.outputLookup).length;\n        }\n        break;\n      }\n      case 'object,number': {\n        this.inputLookup = this.outputLookup = lookup.addKeys(\n          value as INumberHash,\n          this.inputLookup ?? {}\n        );\n        if (this.inputLookup) {\n          this.inputLookupLength = this.outputLookupLength = Object.keys(\n            this.inputLookup\n          ).length;\n        }\n        break;\n      }\n      case 'array,object,number': {\n        const typedValue = value as INumberHash[];\n        for (let i = 0; i < typedValue.length; i++) {\n          this.inputLookup = this.outputLookup = lookup.addKeys(\n            typedValue[i],\n            this.inputLookup ?? {}\n          );\n          if (this.inputLookup) {\n            this.inputLookupLength = this.outputLookupLength = Object.keys(\n              this.inputLookup\n            ).length;\n          }\n        }\n        break;\n      }\n      case 'datum,array,object,number': {\n        const typedValue = value as ITrainingDatum;\n        const typedInput = typedValue.input as INumberHash[];\n        for (let i = 0; i < typedInput.length; i++) {\n          this.inputLookup = lookup.addKeys(\n            typedInput[i],\n            this.inputLookup ?? {}\n          );\n          if (this.inputLookup) {\n            this.inputLookupLength = Object.keys(this.inputLookup).length;\n          }\n        }\n        const typedOutput = typedValue.output as INumberHash[];\n        for (let i = 0; i < typedOutput.length; i++) {\n          this.outputLookup = lookup.addKeys(\n            typedOutput[i],\n            this.outputLookup ?? {}\n          );\n          if (this.outputLookup) {\n            this.outputLookupLength = Object.keys(this.outputLookup).length;\n          }\n        }\n        break;\n      }\n\n      default:\n        throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  toJSON(): IRNNTimeStepJSON {\n    if (!this.model) {\n      this.initialize();\n    }\n    const { model } = this;\n    const options = { ...this.options, ...rnnDefaults };\n\n    return {\n      type: this.constructor.name,\n      options,\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        const layers: { [index: string]: IMatrixJSON } = {};\n        for (const p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: model.outputConnector.toJSON(),\n      output: model.output.toJSON(),\n      inputLookup: this.inputLookup,\n      inputLookupLength: this.inputLookupLength,\n      outputLookup: this.outputLookup,\n      outputLookupLength: this.outputLookupLength,\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  fromJSON(json: IRNNTimeStepJSON): this {\n    const { options } = json;\n    const allMatrices = [];\n    const hiddenLayers: IRNNHiddenLayerModel[] = [];\n\n    // backward compatibility for hiddenSizes\n    json.hiddenLayers.forEach((hiddenLayer) => {\n      const layers: { [index: string]: Matrix } = {};\n      for (const p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers as IRNNHiddenLayerModel);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    this.options = { ...defaults(), ...options };\n    this.inputLookup = json.inputLookup;\n    this.inputLookupLength = json.inputLookupLength;\n    this.outputLookup = json.outputLookup;\n    this.outputLookupLength = json.outputLookupLength;\n\n    this.model = Object.seal({\n      isInitialized: true,\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    });\n    this.initialLayerInputs = options.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n    this.bindEquation();\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  toFunction(cb?: (src: string) => string): RNNTimeStepFunction {\n    const {\n      model,\n      inputLookup,\n      inputLookupLength,\n      outputLookup,\n      outputLookupLength,\n    } = this;\n    const { inputSize } = this.options;\n    const { equations } = model;\n    const equation = equations[1];\n    const { states } = equation;\n    const jsonString = JSON.stringify(this.toJSON());\n\n    function previousConnectionIndex(m: Matrix) {\n      const connection = model.equationConnections[0];\n      const { states } = equations[0];\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixOrigin(m: Matrix, stateIndex: number): string {\n      for (let i = 0, max = states.length; i < max; i++) {\n        const state = states[i];\n\n        if (i === stateIndex) {\n          const j = previousConnectionIndex(m);\n          switch (m) {\n            case state.left:\n              if (j > -1) {\n                return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${m.rows}, ${m.columns})`;\n              }\n            // eslint-disable-next-line no-fallthrough\n            case state.right:\n              if (j > -1) {\n                return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${m.rows}, ${m.columns})`;\n              }\n            // eslint-disable-next-line no-fallthrough\n            case state.product:\n              return `new Matrix(${m.rows}, ${m.columns})`;\n            default:\n              throw Error('unknown state');\n          }\n        }\n\n        if (m === state.product) return `states[${i}].product`;\n        if (m === state.right) return `states[${i}].right`;\n        if (m === state.left) return `states[${i}].left`;\n      }\n      return '';\n    }\n\n    function matrixToString(m: Matrix, stateIndex: number): string {\n      if (!m || !m.rows || !m.columns) return 'null';\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        const hiddenLayer = model.hiddenLayers[i];\n        for (const p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${i}].${p}`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function formatInputData() {\n      if (!inputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupInput(input) {\n            var table = ${JSON.stringify(inputLookup)};\n            var result = [];\n            for (var p in table) {\n              if (!input.hasOwnProperty(p)) break;\n              result.push(Float32Array.from([input[p]]));\n            }\n            return result;\n          }`;\n        }\n        return `function lookupInput(input) {\n          var table = ${JSON.stringify(inputLookup)};\n          var result = [];\n          for (var p in table) {\n            result.push(Float32Array.from([input[p]]));\n          }\n          return result;\n        }`;\n      }\n      return `function lookupInput(rawInputs) {\n        var table = ${JSON.stringify(inputLookup)};\n        var result = [];\n        for (var i = 0; i < rawInputs.length; i++) {\n          var rawInput = rawInputs[i];\n          var input = new Float32Array(${inputLookupLength});\n          for (var p in table) {\n            input[table[p]] = rawInput.hasOwnProperty(p) ? rawInput[p] : 0;\n          }\n          result.push(input);\n        }\n        return result;\n      }`;\n    }\n\n    function formatOutputData() {\n      if (!outputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupOutputPartial(output, input) {\n            var table = ${JSON.stringify(outputLookup)};\n            var offset = input.length;\n            var result = {};\n            var i = 0;\n            for (var p in table) {\n              if (i++ < offset) continue;\n              result[p] = output[table[p] - offset][0];\n            }\n            return result;\n          }`;\n        }\n        return `function lookupOutput(output) {\n          var table = ${JSON.stringify(outputLookup)};\n          var result = {};\n          for (var p in table) {\n            result[p] = output[table[p]][0];\n          }\n          return result;\n        }`;\n      }\n      return `function lookupOutput(output) {\n        var table = ${JSON.stringify(outputLookup)};\n        var result = {};\n        for (var p in table) {\n          result[p] = output[table[p]];\n        }\n        return result;\n      }`;\n    }\n\n    function toInner(fnString: string) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      // crude, but should be sufficient for now\n      // function() { body }\n      const fnParts = fnString.toString().split('{');\n      fnParts.shift();\n      // body }\n      const fnBodyString = fnParts.join('{');\n      const fnBodyParts = fnBodyString.split('}');\n      fnBodyParts.pop();\n      // body\n      return fnBodyParts\n        .join('}')\n        .split('\\n')\n        .join('\\n        ')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName: string) {\n      return `src/recurrent/matrix/${fnName.replace(/[A-Z]/g, function (value) {\n        return `-${value.toLowerCase()}`;\n      })}.js`;\n    }\n\n    const statesRaw = [];\n    const usedFunctionNames: { [methodName: string]: boolean } = {};\n    const innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      const state = states[i];\n      statesRaw.push(`states[${i}] = {\n      name: '${state.forwardFn.name}',\n      left: ${state.left ? matrixToString(state.left, i) : 'undefined'},\n      right: ${state.right ? matrixToString(state.right, i) : 'undefined'},\n      product: ${matrixToString(state.product, i)}\n    }`);\n\n      const fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        if (state.name === 'input') {\n          innerFunctionsSwitch.push(`case '${fnName}':`);\n          innerFunctionsSwitch.push(\n            inputLookup && inputSize === 1\n              ? 'product.weights = _i < input.length ? input[_i]: prevStates[prevStates.length - 1].product.weights;'\n              : inputSize === 1\n              ? 'product.weights = [input[_i]];'\n              : 'product.weights = input[_i];'\n          );\n          innerFunctionsSwitch.push('break;');\n        } else {\n          innerFunctionsSwitch.push(\n            `        case '${fnName}':${\n              fnName !== 'forwardFn'\n                ? ` //compiled from ${fileName(fnName)}`\n                : ''\n            }\n          ${toInner(state.forwardFn.toString())}\n          break;`\n          );\n        }\n      }\n    }\n\n    const forceForecast = inputSize === 1 && this.outputLookup;\n    const src = `\n  var input = ${this.inputLookup ? 'lookupInput(rawInput)' : 'rawInput'};\n  var json = ${jsonString};\n  var output = [];\n  var states = [];\n  var prevStates;\n  var state;\n  var max = ${\n    forceForecast\n      ? inputLookup === outputLookup\n        ? inputLookupLength\n        : `input.length + ${outputLookupLength - 1}`\n      : 'input.length'\n  };\n  for (var _i = 0; _i < max; _i++) {\n    prevStates = states;\n    states = [];\n    ${statesRaw.join(';\\n    ')};\n    for (var stateIndex = 0, stateMax = ${\n      statesRaw.length\n    }; stateIndex < stateMax; stateIndex++) {\n      state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n\n      switch (state.name) {\n${innerFunctionsSwitch.join('\\n')}\n      }\n    }\n    ${\n      inputSize === 1 && inputLookup\n        ? 'if (_i >= input.length - 1) { output.push(state.product.weights); }'\n        : 'output = state.product.weights;'\n    }\n  }\n  ${\n    outputLookup\n      ? outputLookup === inputLookup\n        ? 'return lookupOutputPartial(output, input)'\n        : 'return lookupOutput(output)'\n      : inputSize === 1\n      ? 'return output[0]'\n      : 'return output'\n  };\n  ${formatInputData()}\n  ${formatOutputData()}\n\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = new Float32Array(rows * columns);\n  }\n  ${softmax.toString().replace('_2.default', 'Matrix')}\n  ${randomFloat.toString()}\n  ${sampleI.toString()}\n  ${maxI.toString()}`;\n    // eslint-disable-next-line\n    return new Function('rawInput', cb ? cb(src) : src) as RNNTimeStepFunction;\n  }\n}\n\nexport type RNNTimeStepFunction = <\n  InputType extends InputOutputValue | InputOutputValue[]\n>(\n  rawInput?: InputType,\n  isSampleI?: boolean,\n  temperature?: number\n) => ValuesOf<InputType>;\n\nexport const trainDefaults = { ...rnnTrainDefaults };\n","import { getGRUHiddenLayer, getGRUEquation, IGRUHiddenLayer } from './gru';\nimport { Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { RNNTimeStep } from './rnn-time-step';\nimport { IRNNHiddenLayer } from './rnn';\n\nexport class GRUTimeStep extends RNNTimeStep {\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return getGRUHiddenLayer(hiddenSize, prevSize);\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    return getGRUEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer as IGRUHiddenLayer\n    );\n  }\n}\n","import { Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { RandomMatrix } from './matrix/random-matrix';\nimport { IRNNHiddenLayer, RNN } from './rnn';\n\nexport interface ILSTMHiddenLayer extends IRNNHiddenLayer {\n  inputMatrix: Matrix;\n  inputHidden: Matrix;\n  inputBias: Matrix;\n  forgetMatrix: Matrix;\n  forgetHidden: Matrix;\n  forgetBias: Matrix;\n  outputMatrix: Matrix;\n  outputHidden: Matrix;\n  outputBias: Matrix;\n  cellActivationMatrix: Matrix;\n  cellActivationHidden: Matrix;\n  cellActivationBias: Matrix;\n}\n\nexport class LSTM extends RNN {\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return getHiddenLSTMLayer(hiddenSize, prevSize);\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    return getLSTMEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer as ILSTMHiddenLayer\n    );\n  }\n}\n\nexport function getHiddenLSTMLayer(\n  hiddenSize: number,\n  prevSize: number\n): ILSTMHiddenLayer {\n  return {\n    // gates parameters\n    // wix\n    inputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wih\n    inputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bi\n    inputBias: new Matrix(hiddenSize, 1),\n    // wfx\n    forgetMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wfh\n    forgetHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bf\n    forgetBias: new Matrix(hiddenSize, 1),\n    // wox\n    outputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // woh\n    outputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bo\n    outputBias: new Matrix(hiddenSize, 1),\n    // cell write params\n    // wcx\n    cellActivationMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wch\n    cellActivationHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n    cellActivationBias: new Matrix(hiddenSize, 1),\n  };\n}\n\nexport function getLSTMEquation(\n  equation: Equation,\n  inputMatrix: Matrix,\n  previousResult: Matrix,\n  hiddenLayer: ILSTMHiddenLayer\n): Matrix {\n  if (\n    !hiddenLayer.inputMatrix ||\n    !hiddenLayer.inputHidden ||\n    !hiddenLayer.inputBias ||\n    !hiddenLayer.forgetMatrix ||\n    !hiddenLayer.forgetHidden ||\n    !hiddenLayer.forgetBias ||\n    !hiddenLayer.outputMatrix ||\n    !hiddenLayer.outputHidden ||\n    !hiddenLayer.outputBias ||\n    !hiddenLayer.cellActivationMatrix ||\n    !hiddenLayer.cellActivationHidden ||\n    !hiddenLayer.cellActivationBias\n  ) {\n    throw new Error('hiddenLayer does not have expected properties');\n  }\n\n  const sigmoid = equation.sigmoid.bind(equation);\n  const add = equation.add.bind(equation);\n  const multiply = equation.multiply.bind(equation);\n  const multiplyElement = equation.multiplyElement.bind(equation);\n  const tanh = equation.tanh.bind(equation);\n\n  const inputGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.inputMatrix, inputMatrix),\n        multiply(hiddenLayer.inputHidden, previousResult)\n      ),\n      hiddenLayer.inputBias\n    )\n  );\n\n  const forgetGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.forgetMatrix, inputMatrix),\n        multiply(hiddenLayer.forgetHidden, previousResult)\n      ),\n      hiddenLayer.forgetBias\n    )\n  );\n\n  // output gate\n  const outputGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.outputMatrix, inputMatrix),\n        multiply(hiddenLayer.outputHidden, previousResult)\n      ),\n      hiddenLayer.outputBias\n    )\n  );\n\n  // write operation on cells\n  const cellWrite = tanh(\n    add(\n      add(\n        multiply(hiddenLayer.cellActivationMatrix, inputMatrix),\n        multiply(hiddenLayer.cellActivationHidden, previousResult)\n      ),\n      hiddenLayer.cellActivationBias\n    )\n  );\n\n  // compute new cell activation\n  const retainCell = multiplyElement(forgetGate, previousResult); // what do we keep from cell\n  const writeCell = multiplyElement(inputGate, cellWrite); // what do we write to cell\n  const cell = add(retainCell, writeCell); // new cell contents\n\n  // compute hidden state as gated, saturated cell activations\n  return multiplyElement(outputGate, tanh(cell));\n}\n","import { getHiddenLSTMLayer, getLSTMEquation, ILSTMHiddenLayer } from './lstm';\nimport { Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { RNNTimeStep } from './rnn-time-step';\nimport { IRNNHiddenLayer } from './rnn';\n\nexport class LSTMTimeStep extends RNNTimeStep {\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return getHiddenLSTMLayer(hiddenSize, prevSize);\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    return getLSTMEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer as ILSTMHiddenLayer\n    );\n  }\n}\n","/**\n *\n * @param start\n * @param end\n * @returns {Array}\n */\nexport function range(start: number, end: number): number[] {\n  const result: number[] = [];\n  for (; start < end; start++) {\n    result.push(start);\n  }\n  return result;\n}\n","export function toArray(\n  values: number[] | Float32Array | { [key: string]: number }\n): Float32Array {\n  if (Array.isArray(values)) {\n    return Float32Array.from(values);\n  }\n\n  return Float32Array.from(Object.values(values));\n}\n","import { FeedForward, IFeedForwardJSON } from '../feed-forward';\nimport { recurrentZeros } from '../layer/recurrent-zeros';\nimport { Recurrent } from '../recurrent';\nimport { IRNNJSON, RNN } from '../recurrent/rnn';\nimport {\n  INeuralNetworkData,\n  INeuralNetworkJSON,\n  NeuralNetwork,\n} from '../neural-network';\nimport { GRU } from '../recurrent/gru';\nimport { LSTM } from '../recurrent/lstm';\nimport { NeuralNetworkGPU } from '../neural-network-gpu';\nimport { IRNNTimeStepJSON, RNNTimeStep } from '../recurrent/rnn-time-step';\nimport { LSTMTimeStep } from '../recurrent/lstm-time-step';\nimport { GRUTimeStep } from '../recurrent/gru-time-step';\nimport { ILayer } from '../layer';\n\ninterface LineDrawInfo {\n  className: string;\n  color: string;\n  width: number;\n}\n\ninterface NodeDrawInfo {\n  className: string;\n  color: string;\n}\n\ninterface BaseDrawArgs {\n  pixelX: number;\n  pixelY: number;\n  radius: number;\n  row: number;\n  column: number;\n}\n\ninterface InputDrawArgs extends BaseDrawArgs {\n  line: LineDrawInfo;\n  inputs: NodeDrawInfo & { labels?: string[] | null };\n  fontSize: string;\n  fontClassName: string;\n}\n\nexport function drawInput({\n  pixelX,\n  pixelY,\n  radius,\n  inputs,\n  row,\n  line,\n  fontSize,\n  fontClassName,\n}: InputDrawArgs): string {\n  let svg = `<rect\n              x=\"${pixelX / 2 - radius}\"\n              y=\"${pixelY / 2 + row * pixelY - radius}\"\n              width=\"${2 * radius}\"\n              height=\"${2 * radius}\"\n              stroke=\"black\"\n              stroke-width=\"1\"\n              fill=\"${inputs.color}\"\n              class=\"${inputs.className}\" />\n            <line\n              x1=\"${pixelX / 4}\"\n              y1=\"${pixelY / 2 + row * pixelY}\"\n              x2=\"${pixelX / 2 - radius}\"\n              y2=\"${pixelY / 2 + row * pixelY}\"\n              style=\"stroke:${line.color};stroke-width:${line.width}\"\n              class=\"${line.className}\" />`;\n  if (inputs.labels) {\n    svg += `<text\n              x=\"${pixelX / 8}\"\n              y=\"${pixelY / 2 + row * pixelY - 5}\"\n              fill=\"black\"\n              font-size=\"${fontSize}\"\n              class=\"${fontClassName}\">${inputs.labels[row]}</text>`;\n  }\n  return svg;\n}\n\nexport interface NeuronDrawArgs extends BaseDrawArgs {\n  column: number;\n  hidden: NodeDrawInfo;\n}\n\nexport function drawNeuron({\n  pixelX,\n  pixelY,\n  row,\n  column,\n  radius,\n  hidden,\n}: NeuronDrawArgs): string {\n  return `<circle\n            cx=\"${pixelX / 2 + column * pixelX}\"\n            cy=\"${pixelY / 2 + row * pixelY}\"\n            r=\"${radius}\"\n            stroke=\"black\"\n            stroke-width=\"1\"\n            fill=\"${hidden.color}\"\n            class=\"${hidden.className}\" />`;\n}\n\nexport interface OutputDrawArgs extends BaseDrawArgs {\n  column: number;\n  line: LineDrawInfo;\n  outputs: NodeDrawInfo;\n}\n\nexport function drawOutput({\n  pixelX,\n  pixelY,\n  row,\n  column,\n  line,\n  outputs,\n  radius,\n}: OutputDrawArgs): string {\n  return `<circle\n            cx=\"${pixelX / 2 + column * pixelX}\"\n            cy=\"${pixelY / 2 + row * pixelY}\"\n            r=\"${radius}\"\n            stroke=\"black\"\n            stroke-width=\"1\"\n            fill=\"${outputs.color}\"\n            class=\"${outputs.className}\" />\n          <line\n            x1=\"${pixelX / 2 + column * pixelX + radius}\"\n            y1=\"${pixelY / 2 + row * pixelY}\"\n            x2=\"${pixelX / 2 + column * pixelX + pixelX / 4}\"\n            y2=\"${pixelY / 2 + row * pixelY}\"\n            style=\"stroke:${line.color};stroke-width:${line.width}\"\n            class=\"${line.className}\" />`;\n}\n\nexport interface BackwardConnectionsDrawArgs extends BaseDrawArgs {\n  column: number;\n  lineY: number;\n  previousConnectionIndex: number;\n  line: LineDrawInfo;\n}\n\nexport function drawBackwardConnections({\n  pixelX,\n  pixelY,\n  row,\n  column,\n  radius,\n  lineY,\n  line,\n  previousConnectionIndex,\n}: BackwardConnectionsDrawArgs): string {\n  return `<line\n            x1=\"${pixelX / 2 + (column - 1) * pixelX + radius}\"\n            y1=\"${lineY / 2 + previousConnectionIndex * lineY}\"\n            x2=\"${pixelX / 2 + column * pixelX - radius}\"\n            y2=\"${pixelY / 2 + row * pixelY}\"\n            style=\"stroke:${line.color};stroke-width:${line.width}\"\n            class=\"${line.className}\" />`;\n}\n\nexport interface NeuralNetworkDrawOptions {\n  sizes: number[];\n  height: number;\n  width: number;\n  radius: number;\n  line: LineDrawInfo;\n  inputs: NodeDrawInfo & { labels?: string[] | null };\n  hidden: NodeDrawInfo;\n  outputs: NodeDrawInfo;\n  fontSize: string;\n  fontClassName: string;\n}\n\nexport function neuralNetworkToInnerSVG(\n  options: NeuralNetworkDrawOptions\n): string {\n  const { sizes, height, width } = options;\n  let svg = '';\n  const pixelX = width / sizes.length;\n  for (let column = 0; column < sizes.length; column++) {\n    const size = sizes[column];\n    const pixelY = height / size;\n    for (let row = 0; row < size; row++) {\n      if (column === 0) {\n        svg += drawInput({ pixelX, pixelY, row, column, ...options });\n      } else {\n        if (column === sizes.length - 1) {\n          svg += drawOutput({ pixelX, pixelY, row, column, ...options });\n        } else {\n          svg += drawNeuron({ pixelX, pixelY, row, column, ...options });\n        }\n        const previousSize = sizes[column - 1];\n        const lineY = height / previousSize;\n        for (\n          let previousConnectionIndex = 0;\n          previousConnectionIndex < previousSize;\n          previousConnectionIndex++\n        ) {\n          svg += drawBackwardConnections({\n            pixelX,\n            pixelY,\n            row,\n            column,\n            lineY,\n            previousConnectionIndex,\n            ...options,\n          });\n        }\n      }\n    }\n  }\n  return svg;\n}\n\nexport interface RecurrentConnectionsDrawArgs extends BaseDrawArgs {\n  column: number;\n  recurrentLine: LineDrawInfo;\n}\n\nexport function drawRecurrentConnections({\n  pixelX,\n  pixelY,\n  row,\n  column,\n  radius,\n  recurrentLine,\n}: RecurrentConnectionsDrawArgs): string {\n  const moveX = pixelX / 2 + column * pixelX + radius + 1;\n  const moveY = pixelY / 2 + row * pixelY;\n  const x = moveX - radius * 2 - 2;\n  const y = moveY;\n  const x1 = x + 100;\n  const y1 = y + 50;\n  const x2 = moveX - 100;\n  const y2 = moveY + 50;\n  return `<path\n              d=\"M ${moveX} ${moveY} C ${x1} ${y1}, ${x2} ${y2}, ${x} ${y}\"\n              stroke=\"${recurrentLine.color}\"\n              stroke-width=\"${recurrentLine.width}\"\n              fill=\"transparent\"\n              stroke-linecap=\"round\"\n              marker-end=\"url(#arrow)\"\n              class=\"${recurrentLine.className}\" />`;\n}\n\nexport interface RecurrentNeuralNetworkDrawOptions\n  extends NeuralNetworkDrawOptions {\n  recurrentLine: LineDrawInfo;\n}\n\nexport function rnnToInnerSVG(\n  options: RecurrentNeuralNetworkDrawOptions\n): string {\n  const { width, height, recurrentLine, sizes, radius } = options;\n  const pixelX = width / sizes.length;\n  let svg = `<defs>\n              <marker id=\"arrow\" markerWidth=\"10\" markerHeight=\"10\" refX=\"8\" refY=\"3\" orient=\"auto\" markerUnits=\"strokeWidth\">\n                <path d=\"M0,0 L0,6 L9,3 z\" fill=\"${recurrentLine.color}\" />\n              </marker>\n            </defs>`;\n  svg += neuralNetworkToInnerSVG(options);\n  for (let column = 1; column < sizes.length; column++) {\n    const size = sizes[column];\n    const pixelY = height / size;\n    for (let row = 0; row < size; row++) {\n      svg += drawRecurrentConnections({\n        pixelX,\n        pixelY,\n        row,\n        column,\n        radius,\n        recurrentLine,\n      });\n    }\n  }\n  return svg;\n}\n\nexport function getFeedForwardLayers(network: FeedForward): ISimpleNet {\n  const { options } = network;\n  if (!options) {\n    throw new Error('options not defined');\n  }\n  if (!options.inputLayer) {\n    throw new Error('options.inputLater not defined');\n  }\n  if (!options.hiddenLayers) {\n    throw new Error('options.hiddenLayers not defined');\n  }\n  if (options.hiddenLayers.length < 1) {\n    throw new Error('options.hiddenLayers is empty');\n  }\n  if (!options.outputLayer) {\n    throw new Error('options.outputLayer not defined');\n  }\n  const inputLayer = options.inputLayer();\n  const hiddenLayers = [];\n  hiddenLayers.push(options.hiddenLayers[0](inputLayer, 0));\n  for (let i = 1; i < options.hiddenLayers.length; i++) {\n    hiddenLayers.push(options.hiddenLayers[i](hiddenLayers[i - 1], i));\n  }\n  const outputLayer = options.outputLayer(\n    hiddenLayers[hiddenLayers.length - 1],\n    hiddenLayers.length\n  );\n  return {\n    inputSize: inputLayer.height,\n    hiddenLayers: hiddenLayers.map((hiddenLayer: ILayer) => hiddenLayer.height),\n    outputSize: outputLayer.height,\n  };\n}\n\nexport function getRecurrentLayers(network: Recurrent): ISimpleNet {\n  const hiddenLayers: ILayer[] = [];\n  const { options } = network;\n  if (!options.inputLayer) {\n    throw new Error('inputLayer not defined');\n  }\n  if (!options.outputLayer) {\n    throw new Error('outputLayer not defined');\n  }\n  const inputLayer = options.inputLayer();\n  hiddenLayers.push(options.hiddenLayers[0](inputLayer, recurrentZeros(), 0));\n  for (let i = 1; i < options.hiddenLayers.length; i++) {\n    hiddenLayers.push(\n      options.hiddenLayers[i](hiddenLayers[i - 1], recurrentZeros(), i)\n    );\n  }\n  const outputLayer = options.outputLayer(\n    hiddenLayers[hiddenLayers.length - 1],\n    -1\n  );\n  return {\n    inputSize: inputLayer.height,\n    hiddenLayers: hiddenLayers.map((hiddenLayer: ILayer) => hiddenLayer.height),\n    outputSize: outputLayer.height,\n  };\n}\n\nexport function wrapOuterSVG(\n  svgBody: string,\n  width: number,\n  height: number\n): string {\n  // language=html\n  return `<svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            version=\"1.1\"\n            width=\"${width}\"\n            height=\"${height}\">${svgBody}</svg>`;\n}\n\nexport function getNeuralNetworkJSONSizes(json: INeuralNetworkJSON): number[] {\n  return json.sizes;\n}\n\nexport function getNeuralNetworkSizes<\n  InputType extends INeuralNetworkData,\n  OutputType extends INeuralNetworkData\n>(\n  net:\n    | NeuralNetwork<InputType, OutputType>\n    | NeuralNetworkGPU<InputType, OutputType>\n): number[] {\n  const { options, sizes } = net;\n  const { inputSize, outputSize, hiddenLayers } = options;\n  if (!sizes) {\n    if (typeof inputSize === 'number' && inputSize < 1) {\n      throw new Error('inputSize not set');\n    }\n    if (typeof outputSize === 'number' && outputSize < 1) {\n      throw new Error('outputSize not set');\n    }\n    if (hiddenLayers?.some((v) => v < 1)) {\n      throw new Error('hiddenLayers not set');\n    }\n  }\n  return typeof inputSize === 'number' &&\n    Array.isArray(hiddenLayers) &&\n    typeof outputSize === 'number'\n    ? [inputSize].concat(hiddenLayers).concat([outputSize])\n    : sizes;\n}\n\nexport function getRNNSizes(\n  net: RNN | LSTM | GRU | RNNTimeStep | LSTMTimeStep | GRUTimeStep | IRNNJSON\n): number[] {\n  const { options } = net;\n  const { inputSize, outputSize, hiddenLayers } = options;\n  return [inputSize].concat(hiddenLayers).concat([outputSize]);\n}\n\nexport function defaultOptions(): RecurrentNeuralNetworkDrawOptions {\n  return {\n    line: {\n      width: 0.5,\n      color: 'black',\n      className: 'connection',\n    },\n    recurrentLine: {\n      width: 1,\n      color: 'red',\n      className: 'recurrence',\n    },\n    inputs: {\n      color: 'rgba(0, 128, 0, 0.5)',\n      labels: null,\n      className: 'input',\n    },\n    outputs: {\n      color: 'rgba(100, 149, 237, 0.5)',\n      className: 'output',\n    },\n    hidden: {\n      color: 'rgba(255, 127, 80, 0.5)',\n      className: 'hidden-neuron',\n    },\n    fontSize: '14px',\n    fontClassName: 'label',\n    radius: 8,\n    width: 400,\n    height: 250,\n    sizes: [],\n  };\n}\n\nexport interface ISimpleNet {\n  inputSize: number;\n  hiddenLayers: number[];\n  outputSize: number;\n}\nexport interface ISizes {\n  sizes: number[];\n}\n\nexport function toSVG<\n  T extends\n    | ISimpleNet\n    | ISizes\n    | Recurrent\n    | FeedForward\n    | IFeedForwardJSON\n    | RNNTimeStep\n    | IRNNTimeStepJSON\n    | LSTMTimeStep\n    | GRUTimeStep\n    | RNN\n    | IRNNJSON\n    | GRU\n    | LSTM\n    | NeuralNetwork<InputType, OutputType>\n    | INeuralNetworkJSON\n    | NeuralNetworkGPU<InputType, OutputType>,\n  InputType extends INeuralNetworkData,\n  OutputType extends INeuralNetworkData\n>(\n  net: T,\n  options?:\n    | Partial<RecurrentNeuralNetworkDrawOptions>\n    | Partial<NeuralNetworkDrawOptions>\n): string {\n  const mergedOptions = { ...defaultOptions(), ...options };\n  const { width, height, inputs } = mergedOptions;\n\n  // Get network size array for NeuralNetwork or NeuralNetworkGPU\n  let sizes: number[] = [];\n  if (net instanceof NeuralNetwork || net instanceof NeuralNetworkGPU) {\n    sizes = getNeuralNetworkSizes(net);\n  }\n  // get network size for Recurrent\n  else if (net instanceof Recurrent) {\n    const { inputSize, hiddenLayers, outputSize } = getRecurrentLayers(net);\n    sizes = [inputSize].concat(hiddenLayers).concat([outputSize]);\n  }\n  // get network size for FeedForward\n  else if (net instanceof FeedForward) {\n    const { inputSize, hiddenLayers, outputSize } = getFeedForwardLayers(net);\n    sizes = [inputSize].concat(hiddenLayers).concat([outputSize]);\n  }\n  // handle json, recurrent first\n  else if (\n    net instanceof RNN ||\n    net instanceof LSTM ||\n    net instanceof GRU ||\n    net instanceof RNNTimeStep ||\n    net instanceof LSTMTimeStep ||\n    net instanceof GRUTimeStep\n  ) {\n    return wrapOuterSVG(\n      rnnToInnerSVG({\n        ...mergedOptions,\n        sizes: checkSizes(\n          getRNNSizes(\n            (net as unknown) as\n              | RNN\n              | LSTM\n              | GRU\n              | RNNTimeStep\n              | LSTMTimeStep\n              | GRUTimeStep\n          ),\n          inputs.labels\n        ),\n      }),\n      width,\n      height\n    );\n  }\n  // handle json, NeuralNetwork\n  else if (net.hasOwnProperty('type')) {\n    switch ((net as INeuralNetworkJSON).type) {\n      case 'NeuralNetwork':\n      case 'NeuralNetworkGPU':\n        return wrapOuterSVG(\n          neuralNetworkToInnerSVG({\n            ...mergedOptions,\n            sizes: checkSizes(\n              getNeuralNetworkJSONSizes(net as INeuralNetworkJSON),\n              inputs.labels\n            ),\n          }),\n          width,\n          height\n        );\n      case 'RNN':\n      case 'GRU':\n      case 'LSTM':\n      case 'RNNTimeStep':\n      case 'GRUTimeStep':\n      case 'LSTMTimeStep':\n        return wrapOuterSVG(\n          rnnToInnerSVG({\n            ...mergedOptions,\n            sizes: checkSizes(getRNNSizes(net as IRNNJSON), inputs.labels),\n          }),\n          width,\n          height\n        );\n      default:\n        throw new Error('unrecognized network');\n    }\n  } else if (\n    net.hasOwnProperty('inputSize') &&\n    net.hasOwnProperty('hiddenLayers') &&\n    net.hasOwnProperty('outputSize')\n  ) {\n    const { inputSize, hiddenLayers, outputSize } = net as ISimpleNet;\n    sizes = [inputSize, ...hiddenLayers, outputSize];\n  } else if (net.hasOwnProperty('sizes')) {\n    sizes = (net as ISizes).sizes;\n  } else {\n    throw new Error('unrecognized network');\n  }\n  return wrapOuterSVG(\n    neuralNetworkToInnerSVG({\n      ...mergedOptions,\n      sizes: checkSizes(sizes, inputs.labels),\n    }),\n    width,\n    height\n  );\n}\n\nexport function checkSizes(\n  sizes: number[],\n  labels: string[] | null | undefined\n): number[] {\n  if (!sizes) {\n    throw new Error('sizes not set');\n  }\n  if (sizes.some((size: number) => size < 1)) {\n    throw new Error('sizes not set correctly');\n  }\n  if (labels && labels.length !== sizes[0]) {\n    throw new Error('not enough labels for inputs');\n  }\n  return sizes;\n}\n","import * as activation from './activation';\nimport { AE } from './autoencoder';\nimport CrossValidate from './cross-validate';\nimport { FeedForward } from './feed-forward';\nimport * as layer from './layer';\nimport { layerTypes } from './layer';\nimport { likely } from './likely';\nimport { lookup } from './lookup';\nimport { NeuralNetwork } from './neural-network';\nimport { NeuralNetworkGPU } from './neural-network-gpu';\nimport * as praxis from './praxis';\nimport { Recurrent } from './recurrent';\nimport { GRU } from './recurrent/gru';\nimport { GRUTimeStep } from './recurrent/gru-time-step';\nimport { LSTM } from './recurrent/lstm';\nimport { LSTMTimeStep } from './recurrent/lstm-time-step';\nimport { RNN } from './recurrent/rnn';\nimport { RNNTimeStep } from './recurrent/rnn-time-step';\nimport { DataFormatter } from './utilities/data-formatter';\nimport { max } from './utilities/max';\nimport { mse } from './utilities/mse';\nimport { ones, ones2D } from './utilities/ones';\nimport * as random from './utilities/random';\nimport { randomWeight } from './utilities/random-weight';\nimport { randos } from './utilities/randos';\nimport { range } from './utilities/range';\nimport { toArray } from './utilities/to-array';\nimport { toSVG } from './utilities/to-svg';\nimport { zeros } from './utilities/zeros';\n\nconst recurrent = {\n  RNNTimeStep,\n  LSTMTimeStep,\n  GRUTimeStep,\n  RNN,\n  LSTM,\n  GRU,\n};\n\nconst utilities = {\n  max,\n  mse,\n  ones,\n  ones2D,\n  random,\n  randomWeight,\n  randos,\n  range,\n  toArray,\n  DataFormatter,\n  zeros,\n  toSVG,\n};\n\nexport {\n  activation,\n  AE,\n  CrossValidate,\n  likely,\n  layer,\n  layerTypes,\n  lookup,\n  praxis,\n  FeedForward,\n  NeuralNetwork,\n  NeuralNetworkGPU,\n  Recurrent,\n  recurrent,\n  utilities,\n};\n"],"mappings":";;;;;EAAA;;;;WAIgBA,UAAQC,CAACC,MAAc;IACrC,OAAOC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEF,MAAM,CAAC;EAC5B;EAEA;;;WAGgBG,SAAOC,CAACJ,MAAc,EAAEK,KAAa;IACnD,IAAIL,MAAM,IAAI,CAAC,EAAE;MACf,OAAO,CAAC;;IAEV,OAAOK,KAAK;EACd;;;;;;;EChBA;;;WAGgBC,UAAQP,CAACQ,KAAa;IACpC,OAAO,CAAC,IAAI,CAAC,GAAGN,IAAI,CAACO,GAAG,CAAC,CAACD,KAAK,CAAC,CAAC;EACnC;EAEA;;;WAGgBE,SAAOL,CAACJ,MAAc,EAAEU,KAAa;IACnD,OAAOV,MAAM,IAAI,CAAC,GAAGA,MAAM,CAAC,GAAGU,KAAK;EACtC;;;;;;;ECZA;;;WAGgBC,UAAQZ,CAACC,MAAc;IACrC,OAAOC,IAAI,CAACW,IAAI,CAACZ,MAAM,CAAC;EAC1B;EAEA;;;WAGgBa,SAAOT,CAACJ,MAAc,EAAEU,KAAa;IACnD,OAAO,CAAC,CAAC,GAAGV,MAAM,GAAGA,MAAM,IAAIU,KAAK;EACtC;;;;;;;ECZA;;;;WAIgBX,QAAQA,CAACC,MAAc;IACrC,OAAOA,MAAM,GAAG,CAAC,GAAGA,MAAM,GAAG,IAAI,GAAGA,MAAM;EAC5C;EAEA;;;WAGgBI,OAAOA,CAACJ,MAAc,EAAEU,KAAa;IACnD,OAAOV,MAAM,GAAG,CAAC,GAAGU,KAAK,GAAG,IAAI,GAAGA,KAAK;EAC1C;;;;;;;;;;;;;;;;;;;;;;;;;;;ICbA;;;;;;;;;;;;;;IAaG,CAAC,UAASI,CAAC,EAAC;MAA2D;QAACC,MAAA,CAAAC,OAAc,GAACF,CAAC;MAAE;IAAkO,CAAC,EAAE,YAAU;MAA2B,OAAQ,YAAU;QAAC,SAASG,CAACA,CAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAAC;UAAC,SAASC,CAACA,CAACC,CAAC,EAACR,CAAC,EAAC;YAAC,IAAG,CAACK,CAAC,CAACG,CAAC,CAAC,EAAC;cAAC,IAAG,CAACJ,CAAC,CAACI,CAAC,CAAC,EAAC;gBAAC,IAAIC,CAAC,GAAC,UAAU,IAAE,OAAOC,eAAO,IAAEA,eAAO;gBAAC,IAAG,CAACV,CAAC,IAAES,CAAC,EAAC,OAAOA,CAAC,CAACD,CAAC,EAAC,CAAC,CAAC,CAAC;gBAAC,IAAGG,CAAC,EAAC,OAAOA,CAAC,CAACH,CAAC,EAAC,CAAC,CAAC,CAAC;gBAAC,IAAII,CAAC,GAAC,IAAIC,KAAK,CAAC,sBAAsB,GAACL,CAAC,GAAC,GAAG,CAAC;gBAAC,MAAMI,CAAC,CAACE,IAAI,GAAC,kBAAkB,EAACF,CAAC;cAAA;cAAC,IAAIG,CAAC,GAACV,CAAC,CAACG,CAAC,CAAC,GAAC;gBAACN,OAAO,EAAC;cAAE,CAAC;cAACE,CAAC,CAACI,CAAC,CAAC,CAAC,CAAC,CAAC,CAACQ,IAAI,CAACD,CAAC,CAACb,OAAO,EAAC,UAASC,CAAC,EAAC;gBAAC,IAAIE,CAAC,GAACD,CAAC,CAACI,CAAC,CAAC,CAAC,CAAC,CAAC,CAACL,CAAC,CAAC;gBAAC,OAAOI,CAAC,CAACF,CAAC,IAAEF,CAAC,CAAC;cAAA,CAAC,EAACY,CAAC,EAACA,CAAC,CAACb,OAAO,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC;YAAC;YAAC,OAAOD,CAAC,CAACG,CAAC,CAAC,CAACN,OAAO;UAAA;UAAC,KAAI,IAAIS,CAAC,GAAC,UAAU,IAAE,OAAOD,eAAO,IAAEA,eAAO,EAACF,CAAC,GAAC,CAAC,EAACA,CAAC,GAACF,CAAC,CAACW,MAAM,EAACT,CAAC,EAAE,EAACD,CAAC,CAACD,CAAC,CAACE,CAAC,CAAC,CAAC;UAAC,OAAOD,CAAC;QAAA;QAAC,OAAOJ,CAAC;MAAA,CAAC,EAAG,CAAC;QAAC,CAAC,EAAC,CAAC,UAASe,OAAO,EAACjB,MAAM,EAACC,OAAO,EAAC;UAC71B,WAAUiB,MAAM,EAAEC,OAAO,EAAE;YAC1B,OAAOlB,OAAO,KAAK,QAAQ,IAAI,OAAOD,MAAM,KAAK,WAAW,GAAGmB,OAAO,CAAClB,OAAO,CAAC,IAE9EiB,MAAM,GAAGA,MAAM,IAAIE,IAAI,EAAED,OAAO,CAACD,MAAM,CAACG,KAAK,GAAG,EAAE,CAAC,CAAC;UACvD,CAAC,EAAC,IAAI,EAAE,UAAUpB,OAAO,EAAE;YAGzB,IAAIqB,aAAa,GAAG;cAClB,CAAC,EAAE,qNAAqN;cACxN,CAAC,EAAE,8CAA8C;cACjD,CAAC,EAAE,MAAM;cACTC,MAAM,EAAE,wEAAwE;cAChFC,UAAU,EAAE;YAChB,CAAG;YAGD,IAAIC,oBAAoB,GAAG,6KAA6K;YAExM,IAAIC,QAAQ,GAAG;cACb,CAAC,EAAED,oBAAoB;cACvB,SAAS,EAAEA,oBAAoB,GAAG,gBAAgB;cAClD,CAAC,EAAEA,oBAAoB,GAAG;YAC9B,CAAG;YAED,IAAIE,yBAAyB,GAAG,iBAAiB;YAGjD,IAAIC,4BAA4B,GAAG,urIAAurI;YAC1tI,IAAIC,uBAAuB,GAAG,kiFAAkiF;YAEhkF,IAAIC,uBAAuB,GAAG,IAAIC,MAAM,CAAC,GAAG,GAAGH,4BAA4B,GAAG,GAAG,CAAC;YAClF,IAAII,kBAAkB,GAAG,IAAID,MAAM,CAAC,GAAG,GAAGH,4BAA4B,GAAGC,uBAAuB,GAAG,GAAG,CAAC;YAEvGD,4BAA4B,GAAGC,uBAAuuC,IAAIC,qBAAqB,GAAG,CAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAA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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}