{"ast":null,"code":"const brain = require('brain.js');\n\n// Création d'un réseau de neurones\nconst net = new brain.NeuralNetwork({\n  hiddenLayers: [3]\n});\n\n// Données d'entraînement (à adapter selon vos besoins)\nconst trainingData = [{\n  input: [0, 0],\n  output: [0]\n}, {\n  input: [0, 1],\n  output: [1]\n}, {\n  input: [1, 0],\n  output: [1]\n}, {\n  input: [1, 1],\n  output: [0]\n}];\n\n// Fonction pour entraîner le réseau\nfunction trainNetwork() {\n  console.log('Entraînement du réseau...');\n  const results = net.train(trainingData, {\n    iterations: 20000,\n    errorThresh: 0.005,\n    log: true,\n    logPeriod: 1000\n  });\n  console.log('Entraînement terminé:', results);\n}\n\n// Fonction pour faire une prédiction\nfunction predictWithDebug(input) {\n  console.log(`Prédiction pour l'entrée: [${input}]`);\n  const output = net.run(input);\n  console.log(`Sortie: ${output}`);\n  return output;\n}\n\n// Fonction de débogage\nfunction debugBrainJS() {\n  console.log('Démarrage du débogage Brain.js');\n  trainNetwork();\n  console.log('Test de prédiction:');\n  predictWithDebug([0, 0]);\n  predictWithDebug([1, 1]);\n  console.log('Débogage terminé');\n}\nmodule.exports = {\n  trainNetwork,\n  predictWithDebug,\n  debugBrainJS\n};","map":{"version":3,"names":["brain","require","net","NeuralNetwork","hiddenLayers","trainingData","input","output","trainNetwork","console","log","results","train","iterations","errorThresh","logPeriod","predictWithDebug","run","debugBrainJS","module","exports"],"sources":["C:/Users/sebas/boulangerie-app/frontend/src/brain.js"],"sourcesContent":["const brain = require('brain.js');\r\n\r\n// Création d'un réseau de neurones\r\nconst net = new brain.NeuralNetwork({\r\n  hiddenLayers: [3],\r\n});\r\n\r\n// Données d'entraînement (à adapter selon vos besoins)\r\nconst trainingData = [\r\n  { input: [0, 0], output: [0] },\r\n  { input: [0, 1], output: [1] },\r\n  { input: [1, 0], output: [1] },\r\n  { input: [1, 1], output: [0] },\r\n];\r\n\r\n// Fonction pour entraîner le réseau\r\nfunction trainNetwork() {\r\n  console.log('Entraînement du réseau...');\r\n  const results = net.train(trainingData, {\r\n    iterations: 20000,\r\n    errorThresh: 0.005,\r\n    log: true,\r\n    logPeriod: 1000,\r\n  });\r\n  console.log('Entraînement terminé:', results);\r\n}\r\n\r\n// Fonction pour faire une prédiction\r\nfunction predictWithDebug(input) {\r\n  console.log(`Prédiction pour l'entrée: [${input}]`);\r\n  const output = net.run(input);\r\n  console.log(`Sortie: ${output}`);\r\n  return output;\r\n}\r\n\r\n// Fonction de débogage\r\nfunction debugBrainJS() {\r\n  console.log('Démarrage du débogage Brain.js');\r\n  trainNetwork();\r\n  console.log('Test de prédiction:');\r\n  predictWithDebug([0, 0]);\r\n  predictWithDebug([1, 1]);\r\n  console.log('Débogage terminé');\r\n}\r\n\r\nmodule.exports = {\r\n  trainNetwork,\r\n  predictWithDebug,\r\n  debugBrainJS,\r\n};"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,UAAU,CAAC;;AAEjC;AACA,MAAMC,GAAG,GAAG,IAAIF,KAAK,CAACG,aAAa,CAAC;EAClCC,YAAY,EAAE,CAAC,CAAC;AAClB,CAAC,CAAC;;AAEF;AACA,MAAMC,YAAY,GAAG,CACnB;EAAEC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAAEC,MAAM,EAAE,CAAC,CAAC;AAAE,CAAC,EAC9B;EAAED,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAAEC,MAAM,EAAE,CAAC,CAAC;AAAE,CAAC,EAC9B;EAAED,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAAEC,MAAM,EAAE,CAAC,CAAC;AAAE,CAAC,EAC9B;EAAED,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAAEC,MAAM,EAAE,CAAC,CAAC;AAAE,CAAC,CAC/B;;AAED;AACA,SAASC,YAAYA,CAAA,EAAG;EACtBC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EACxC,MAAMC,OAAO,GAAGT,GAAG,CAACU,KAAK,CAACP,YAAY,EAAE;IACtCQ,UAAU,EAAE,KAAK;IACjBC,WAAW,EAAE,KAAK;IAClBJ,GAAG,EAAE,IAAI;IACTK,SAAS,EAAE;EACb,CAAC,CAAC;EACFN,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,OAAO,CAAC;AAC/C;;AAEA;AACA,SAASK,gBAAgBA,CAACV,KAAK,EAAE;EAC/BG,OAAO,CAACC,GAAG,CAAC,8BAA8BJ,KAAK,GAAG,CAAC;EACnD,MAAMC,MAAM,GAAGL,GAAG,CAACe,GAAG,CAACX,KAAK,CAAC;EAC7BG,OAAO,CAACC,GAAG,CAAC,WAAWH,MAAM,EAAE,CAAC;EAChC,OAAOA,MAAM;AACf;;AAEA;AACA,SAASW,YAAYA,CAAA,EAAG;EACtBT,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;EAC7CF,YAAY,CAAC,CAAC;EACdC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClCM,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACxBA,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACxBP,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;AACjC;AAEAS,MAAM,CAACC,OAAO,GAAG;EACfZ,YAAY;EACZQ,gBAAgB;EAChBE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}